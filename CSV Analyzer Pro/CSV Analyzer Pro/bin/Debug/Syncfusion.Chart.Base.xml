<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Chart.Base</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType">
            <summary>
            Specifies the padding that will be applied when calculating the axis range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType.None">
            <summary>
            No padding will be applied to the Axis range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType.Calculate">
            <summary>
            Padding will be calculated when the axis range is computed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisLocationType">
            <summary>
            Specifies the location type of the axis.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisLocationType.Auto">
            <summary>
            Axis will be placed automatically by control to prevent overlapping with labels.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisLocationType.AntiLabelCut">
            <summary>
            Axis thickness will be calculated and axis will placed automatically by control to prevent 
            labels cutting by sides of control. During this process one coordinate of axis location 
            is preserved (x coordinate for horizontal axis and y for vertical axis).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisLocationType.Set">
            <summary>
            The user will have ability to set axis location manually.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisEdgeLabelsDrawingMode">
            <summary>
            Specifies the drawing mode of the labels.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisEdgeLabelsDrawingMode.Center">
            <summary>
            Labels at the sides of the axis will be positioned at the center of tick label.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisEdgeLabelsDrawingMode.Shift">
            <summary>
            Labels will be aligned with current axis edges.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisEdgeLabelsDrawingMode.ClippingProtection">
            <summary>
            Labels will be positioned in way to prevent clipping.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisTickDrawingOperationMode">
            <summary>
            Specifies the drawing mode of the tick lines.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisTickDrawingOperationMode.IntervalFixed">
            <summary>
            In this mode, the interval always remains unchanged during zooming.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisTickDrawingOperationMode.NumberOfIntervalsFixed">
            <summary>
            In this mode, only number of intervals matters, and it is kept constant 
            during zooming. Also there is always full number of intervals on axis.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisGridDrawingMode">
            <summary>
            Specifies the drawing mode of the grid lines.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGridDrawingMode.Default">
            <summary>
            Grid lines are drawed with equal interval.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGridDrawingMode.GroupingLabelsPositions">
            <summary>
            Grid lines are drawed at grouping labels margins.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisLabelPlacement">
            <summary>
            Specifies the label placement of the axis lines.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisLabelPlacement.OnTicks">
            <summary>
            Labels are placeed on ticks of axis.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisLabelPlacement.BetweenTicks">
            <summary>
            Labels are placeed between ticks of axis..
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartCustomLabelsParameter">
            <summary>
            Specifies the parameter types of <see cref="M:Syncfusion.Windows.Forms.Chart.IChartAxisLabelModel.GetLabelAt(System.Int32)"/> method.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomLabelsParameter.Index">
            <summary>
            The parameter of <see cref="M:Syncfusion.Windows.Forms.Chart.IChartAxisLabelModel.GetLabelAt(System.Int32)"/> method is index of labels.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomLabelsParameter.Position">
            <summary>
            The parameter of <see cref="M:Syncfusion.Windows.Forms.Chart.IChartAxisLabelModel.GetLabelAt(System.Int32)"/> method is position of labels.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisLabel">
            <summary>
            The ChartAxisLabel class holds information about label text, label color, label font and other related information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.m_labelCustomText">
            <summary>
            Store label custom text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.m_labelFont">
            <summary>
            Store label font.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.m_labelColor">
            <summary>
            Store label color.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.m_labelFormat">
            <summary>
            Store label format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.m_labelDateTimeFormat">
            <summary>
            Store label DateTime format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.m_labelValueType">
            <summary>
            Store chart value type.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.m_labelRoundingPlaces">
            <summary>
            Store label rounding precision.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor">
            <summary>
            Overloaded Constructor. Each label along a ChartAxis is held in a ChartAxisLabel.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.String)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="customText">The text that will be displayed as the label for the axis point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.String,System.String)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="customText">The text that will be displayed as the label for the axis point.</param>
            <param name="toolTip">The text that will be displayed as the tooltip for the axis labels.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.String,System.Double)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="customText">The text that will be displayed as the label for the axis point.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.String,System.Double,System.String)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="customText">The text that will be displayed as the label for the axis point.</param>
            <param name="value">The value.</param>
            <param name="toolTip">The text that will be displayed as the tooltip for the axis labels.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.String,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="customText">The text that will be displayed as the label for the axis point.</param>
            <param name="color">The color that is to be used for the label text.</param>
            <param name="font">The font that is to be used for the label text.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.String,System.Drawing.Color,System.Drawing.Font,System.String)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="customText">The text that will be displayed as the label for the axis point.</param>
            <param name="color">The color that is to be used for the label text.</param>
            <param name="font">The font that is to be used for the label text.</param>
            <param name="toolTip">The text that will be displayed as the tooltip for the axis labels.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.String,System.Drawing.Color,System.Drawing.Font,System.Double)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="customText">The text that will be displayed as the label for the axis point.</param>
            <param name="color">The color that is to be used for the label text.</param>
            <param name="font">The font that is to be used for the label text.</param>
            <param name="dvalue">The value represented by the label.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.String,System.Drawing.Color,System.Drawing.Font,System.Double,System.String)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="customText">The text that will be displayed as the label for the axis point.</param>
            <param name="color">The color that is to be used for the label text.</param>
            <param name="font">The font that is to be used for the label text.</param>
            <param name="dvalue">The value represented by the label.</param>
            <param name="toolTip">The text that will be displayed as the tooltip for the axis labels.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.Double,System.String)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="dvalue">The value represented by the label.</param>
            <param name="format">The format that is to be used for formatting the display label.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.Double,System.String,System.String)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="dvalue">The value represented by the label.</param>
            <param name="format">The format that is to be used for formatting the display label.</param>
            <param name="toolTip">The text that will be displayed as the tooltip for the axis labels.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.DateTime,System.String)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="dt">The Date Time value represented by the label.</param>
            <param name="dateTimeFormat">The format that is to be used for formatting the display label.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.DateTime,System.String,System.String)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="dt">The Date Time value represented by the label.</param>
            <param name="toolTip">The text that will be displayed as the tooltip for the axis labels.</param>
            <param name="dateTimeFormat">The format that is to be used for formatting the display label.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.String,System.Drawing.Color,System.Drawing.Font,System.Double,System.String,Syncfusion.Windows.Forms.Chart.ChartValueType)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="customText">The text that will be displayed as the label for the axis point.</param>
            <param name="color">The color that is to be used for the label text.</param>
            <param name="font">The font that is to be used for the label text.</param>
            <param name="dvalue">The value represented by the label.</param>
            <param name="format">The format that is to be used for formatting the display label.</param>
            <param name="valueType">The value type of the axis label.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.String,System.String,System.Drawing.Color,System.Drawing.Font,System.Double,System.String,Syncfusion.Windows.Forms.Chart.ChartValueType)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="customText">The text that will be displayed as the label for the axis point.</param>
            <param name="toolTip">The text that will be displayed as the tooltip for the axis labels.</param>
            <param name="color">The color that is to be used for the label text.</param>
            <param name="font">The font that is to be used for the label text.</param>
            <param name="dvalue">The value represented by the label.</param>
            <param name="format">The format that is to be used for formatting the display label.</param>
            <param name="valueType">The value type of the axis label.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.String,System.Drawing.Color,System.Drawing.Font,System.Double,System.String,System.String,Syncfusion.Windows.Forms.Chart.ChartValueType)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="customText">The text that will be displayed as the label for the axis point.</param>
            <param name="color">The color that is to be used for the label text.</param>
            <param name="font">The font that is to be used for the label text.</param>
            <param name="dvalue">The value represented by the label.</param>
            <param name="format">The format that is to be used for formatting the display label.</param>
            <param name="dateTimeFormat">The date time format that is to be used for formatting the value.</param>
            <param name="valueType">The value type of the axis label.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.String,System.String,System.Drawing.Color,System.Drawing.Font,System.Double,System.String,System.String,Syncfusion.Windows.Forms.Chart.ChartValueType)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="customText">The text that will be displayed as the label for the axis point.</param>
            <param name="toolTip">The text that will be displayed as tooltip for the label.</param>
            <param name="color">The color that is to be used for the label text.</param>
            <param name="font">The font that is to be used for the label text.</param>
            <param name="dvalue">The value represented by the label.</param>
            <param name="format">The format that is to be used for formatting the display label.</param>
            <param name="dateTimeFormat">The date time format that is to be used for formatting the value.</param>
            <param name="valueType">The value type of the axis label.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.String,System.Drawing.Color,System.Drawing.Font,System.DateTime,System.String,System.String,Syncfusion.Windows.Forms.Chart.ChartValueType)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="customText">The text that will be displayed as the label for the axis point.</param>
            <param name="color">The color that is to be used for the label text.</param>
            <param name="font">The font that is to be used for the label text.</param>
            <param name="dateTime">The DateTime value represented by the label.</param>
            <param name="format">The format that is to be used for formatting the display label.</param>
            <param name="dateTimeFormat">The date time format that is to be used for formatting the value.</param>
            <param name="valueType">The value type of the axis label.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.String,System.String,System.Drawing.Color,System.Drawing.Font,System.DateTime,System.String,System.String,Syncfusion.Windows.Forms.Chart.ChartValueType)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="customText">The text that will be displayed as the label for the axis point.</param>
            <param name="toolTip">The text that will be displayed as tooltip for the label.</param>
            <param name="color">The color that is to be used for the label text.</param>
            <param name="font">The font that is to be used for the label text.</param>
            <param name="dateTime">The DateTime value represented by the label.</param>
            <param name="format">The format that is to be used for formatting the display label.</param>
            <param name="dateTimeFormat">The date time format that is to be used for formatting the value.</param>
            <param name="valueType">The value type of the axis label.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.Double,System.String,Syncfusion.Windows.Forms.Chart.ChartValueType)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="dvalue">The value represented by the label.</param>
            <param name="format">The format that is to be used for formatting the display label.</param>
            <param name="valueType">The value type of the axis label.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.#ctor(System.Double,System.String,System.String,Syncfusion.Windows.Forms.Chart.ChartValueType)">
            <summary>
            Constructor. Each label along a ChartAxis is held in the ChartAxisLabel.
            </summary>
            <param name="dvalue">The value represented by the label.</param>
            <param name="format">The format that is to be used for formatting the display label.</param>
            <param name="toolTip">The text that will be displayed as tooltip for the label.</param>
            <param name="valueType">The value type of the axis label.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.InitializeStaticVariables">
            <summary>
            Method to initialize disposed static objects
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.ComputeText">
            <summary>
            Computes the text of label.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Measure(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Measures label by the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g"><see cref="T:System.Drawing.Graphics"/></param>
            <param name="axis">The ChartAxis</param>
            <returns><see cref="T:System.Drawing.SizeF"/></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Measure(System.Drawing.Graphics,System.Single,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Measures label by the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g"><see cref="T:System.Drawing.Graphics"/></param>
            <param name="width">Max width of the text.</param>
            <param name="axis">The ChartAxis</param>
            <returns><see cref="T:System.Drawing.SizeF"/></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Arrange(System.Drawing.PointF)">
            <summary>
            Sets the bounds of label.
            </summary>
            <param name="connectPoint">The connect point.</param>
            <returns>Returns bounds of label</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Arrange(System.Drawing.PointF,System.Single)">
            <summary>
            Sets the bounds of label.
            </summary>
            <param name="connectPoint">Position of label.</param>
            <param name="angle">Rotation of lebel.</param>
            <returns>Returns bounds of label</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Arrange(System.Drawing.PointF,System.Drawing.ContentAlignment)">
            <summary>
            Sets the bounds of label.
            </summary>
            <param name="connectPoint">Position of label.</param>
            <param name="aligment">The alignment.</param>
            <returns>Returns bounds of label</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Arrange(System.Drawing.PointF,System.Drawing.ContentAlignment,System.Single,System.Boolean)">
            <summary>
            Sets the bounds of label.
            </summary>
            <param name="connectPoint">Position of label.</param>
            <param name="aligment">The alignment.</param>
            <param name="angle">Rotation of lebel.</param>
            <param name="m_rotateFromTicks"></param>
            <returns>Returns bounds of label</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Draw(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartArea,System.Drawing.RectangleF)">
            <summary>
            Draws the label to specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g"><see cref="T:System.Drawing.Graphics"/></param>
            <param name="axis">The axis.</param>
            <param name="bounds">Bounds for label</param>
            <param name="chartArea"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Draw(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
            Draws the label to specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g"><see cref="T:System.Drawing.Graphics"/></param>
            <param name="axis">The axis.</param>
            <param name="chartArea"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Dispose">
            <summary>
            Method to dispose labels.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Draw3D(Syncfusion.Windows.Forms.Chart.Graphics3D,Syncfusion.Windows.Forms.Chart.ChartAxis,System.Single,Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
            Generates the 3d geometry of label.
            </summary>
            <param name="g"><see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/></param>
            <param name="axis">The axis.</param>
            <param name="z">Depth of label.</param>
            <param name="chartArea"></param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Chart.Path3D"/></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.CustomText">
            <summary>
            Gets or sets the custom text that is to be used as the label.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.ToolTip">
            <summary>
            Gets or sets the tooltip for the axis label.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.DateTimeFormat">
            <summary>
            Gets or sets the date format that is to be used for formatting the value into the label text.
            See "Date and Time format strings" section in MSDN for more info.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Format">
            <summary>
            Gets or sets the format that is to be used for formatting the double values into the label text.
            See "Numeric Format Strings" section in MSDN for more on the supported formats.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.AxisLabelPlacement">
            <summary>
            Gets or sets a value indicates whether label is located inside or outside of chart area.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.LogBase">
            <summary>
            Gets or sets the log base that is to be used by the label. Default is 2.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.DoubleValue">
            <summary>
            Gets or sets the value that the label represents.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.RoundingPlaces">
            <summary>
            Number of relevant rounding places that is to be used for the label. Default is 2.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Text">
            <summary>
            Gets the formatted text that is to be displayed as the label.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Font">
            <summary>
            Gets or sets the font that is to be used for the label text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Color">
            <summary>
            Gets or sets the color that is to be used for the label text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.ValueType">
            <summary>
            Gets or sets the value type that is to be associated with the axis label. Default is Double.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.Bounds">
            <summary>
            Get's the rendering bounds of this label.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabel.IsAuto">
            <summary>
            Indicates if label wasn't added by user.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisLabelByDoubleValueComparer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelByDoubleValueComparer.#ctor(System.Boolean)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelByDoubleValueComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel">
            <summary>
            The ChartAxisGroupingLabel class holds information about Grouping Label text, Grouping Label color, Grouping Label font and other related information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.#ctor(Syncfusion.Windows.Forms.Chart.DoubleRange)">
            <summary>
            Overloaded Constructor. Each Grouping Label along a ChartAxis is held in a ChartAxisGroupingLabel.
            </summary>
            <param name="range">The range to group labels.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.#ctor(Syncfusion.Windows.Forms.Chart.DoubleRange,System.String)">
            <summary>
            Constructor. Each Grouping Label along a ChartAxis is held in the ChartAxisGroupingLabel.
            </summary>
            <param name="range">The range to group labels.</param>
            <param name="text">The text that will be displayed as the Grouping Label for the axis point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.#ctor(Syncfusion.Windows.Forms.Chart.DoubleRange,System.String,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Constructor. Each Grouping Label along a ChartAxis is held in the ChartAxisGroupingLabel.
            </summary>
            <param name="range">The range to group labels.</param>
            <param name="text">The text that will be displayed as the Grouping Label for the axis point.</param>
            <param name="color">The color that is to be used for the Grouping Label text.</param>
            <param name="font">The font that is to be used for the Grouping Label text.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.#ctor(Syncfusion.Windows.Forms.Chart.DoubleRange,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Constructor. Each Grouping Label along a ChartAxis is held in the ChartAxisGroupingLabel.
            </summary>
            <param name="range">The range to group labels.</param>
            <param name="text">The text that will be displayed as the Grouping Label for the axis point.</param>
            <param name="color">The color that is to be used for the Grouping Label text.</param>
            <param name="borderColor">The border color to render group.</param>
            <param name="font">The font that is to be used for the Grouping Label text.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.#ctor(Syncfusion.Windows.Forms.Chart.DoubleRange,System.String,System.Drawing.Color,System.Drawing.Pen,System.Drawing.Font)">
            <summary>
            Constructor. Each Grouping Label along a ChartAxis is held in the ChartAxisGroupingLabel.
            </summary>
            <param name="range">The range to group labels.</param>
            <param name="text">The text that will be displayed as the Grouping Label for the axis point.</param>
            <param name="color">The color that is to be used for the Grouping Label text.</param>
            <param name="borderPen">Border <see cref="T:System.Drawing.Pen"/> to render group border.</param>
            <param name="font">The font that is to be used for the Grouping Label text.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.Draw(System.Drawing.Graphics,System.Single,System.Single,Syncfusion.Windows.Forms.Chart.ChartAxis,System.Boolean)">
            <summary>
            Render label and calculate its bound rectangle.
            </summary>
            <param name="g"><see cref="T:System.Drawing.Graphics"/> to render label.</param>
            <param name="position">Location of the label.</param>
            <param name="dimention">Dimension of the label.</param>
            <param name="axis">The axis label belong to.</param>
            <param name="measureDraw"></param>
            <returns>Bound rectangle of the label.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.Dispose">
            <summary>
            Method to dispose labels
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.drawline(System.Boolean,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Graphics,System.Drawing.Font,System.Drawing.RectangleF,Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelBorderStyle)">
            <summary>
            Draw the left or right border for the Rendered label.
            </summary>
            <param name="measureDraw">Used to indicate the Measure</param>
            <param name="g"><see cref="T:System.Drawing.Graphics"/> to render label.</param>
            <param name="font">Font style for the label text.</param>
            <param name="textRect">The text of label.</param>
            <param name="axis">The axis label belong to.</param>
            <param name="BorderType">Style of the ChartAxis GroupingLabel Border</param>
            <param name="point1">First point of the line</param>
            <param name="point2">Second point of the line</param>
            <param name="point3">Third point of the line</param>
            <param name="borderRectCenter">Style of the ChartAxis GroupingLabel position</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.Draw(Syncfusion.Windows.Forms.Chart.Graphics3D,System.Single,System.Single,Syncfusion.Windows.Forms.Chart.ChartAxis,System.Boolean)">
            <summary>
            Render label and calculate its bound rectangle.
            </summary>
            <param name="g">Graphics3D to render label.</param>
            <param name="position">Location of the label.</param>
            <param name="dimention">Dimension of the label.</param>
            <param name="axis">The axis label belong to.</param>
            <param name="measureDraw"></param>
            <returns>Bound rectangle of the label.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.GetSize(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Calculate size of the label.
            </summary>
            <param name="g"><see cref="T:System.Drawing.Graphics"/> to calculate size.</param>
            <param name="axis">Axis label belong to.</param>
            <returns>Calculated size.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.Draw(System.Drawing.Graphics,System.Single,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Calculate bounds of the label.
            </summary>
            <param name="g"><see cref="T:System.Drawing.Graphics"/> to calculate bounds.</param>
            <param name="position">Location of the label.</param>
            <param name="axis">Axis label belong to.</param>
            <returns>Boundary rectangle.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.Draw(Syncfusion.Windows.Forms.Chart.Graphics3D,System.Single,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Calculate bounds of the label.
            </summary>
            <param name="g">Graphics3D to calculate bounds.</param>
            <param name="position">Location of the label.</param>
            <param name="axis">Axis label belong to.</param>
            <returns>Boundary rectangle.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.GetRegion(Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Calculates region for given axis.
            </summary>
            <param name="axis">The axis to get region.</param>
            <returns>Region for given axis.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.GetTextFontAndSizes(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartAxis,System.Drawing.SizeF@,System.Drawing.SizeF@,System.Drawing.SizeF@)">
            <summary>
            Calculates string size, text size and label size.
            </summary>
            <param name="g"><see cref="T:System.Drawing.Graphics"/> to calculate values.</param>
            <param name="axis">Axis label belong to.</param>
            <param name="stringSize">String size to calculate.</param>
            <param name="textSize">Text size to calculate.</param>
            <param name="labelSize">Label size to calculate.</param>
            <returns><see cref="T:System.Drawing.Font"/> to calculated label.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.Range">
            <summary>
            Gets or sets the double range that this Grouping Label with cover. If the range in the axis is DateTime, use DateTime.ToOADate to get the double value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.Text">
            <summary>
            Gets or sets the custom text that is to be used as the Grouping Label.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.RegionDescription">
            <summary>
            Gets or sets the the region description text for this region.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.Lines">
            <summary>
            Lets you specify the grouping label text in multiple lines
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.Format">
            <summary>
            Gets or sets <see cref="T:System.Drawing.StringFormat"/> to render label. Default is GenericDefault.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.Font">
            <summary>
            Gets or sets the font that is to be used for the label text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.Color">
            <summary>
            Gets or sets the color that is to be used for the Grouping Label text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.BackColor">
            <summary>
            Gets or sets back color. Default is Transparent.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.BorderPen">
            <summary>
            Gets or sets the color that is to be used for the Grouping Label border/brace etc. Default is Black.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.BorderStyle">
            <summary>
            Gets or sets the Style of border drawing that is to be used for the Grouping Label. Default is Rectangle
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.BorderPadding">
            <summary>
            Gets or sets the Padding of border drawing that is to be used for the Grouping Label. Default is 2.0f.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.MaxTextWidth">
            <summary>
            Gets or sets max text width. Default is 200.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.MaxTextHeightToWidthRatio">
            <summary>
            Gets or sets max text height to width ratio. Default is 2.5
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.RotateAngle">
            <summary>
            Gets or sets labels rotate angle. Default is 0.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.Row">
            <summary>
            Gets or sets row in which to render this grouping label. specify 0 for the 1st row and so on. Default is 0.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.GridDimension">
             <summary>
            Gets or sets grid dimension.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.LabelTextFitMode">
            <summary>
            Gets or sets label fit mode. Default is Shrink.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.LabelTextAlignment">
            <summary>
            Gets or sets label alignment. Default is Center.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.Rect">
             <summary>
            Gets the rectangle in which to draw the label.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.Broadness">
            <summary>
            Gets or sets label broadness(thickness, wideness).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel.Tag">
            <summary>
            Gets or sets tag
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelBorderStyle">
            <summary>
            Enumeration of the different border styles in which the axis grouping label could be drawn.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelBorderStyle.Rectangle">
            <summary>
            A plain rectangle around the grouping label
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelBorderStyle.Brace">
            <summary>
            A brace indicating the range that this grouping label covers
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelBorderStyle.WithoutTopBorder">
            <summary>
            A plain rectangle around the grouping label without top border
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelBorderStyle.WithoutTopAndBottomBorder">
            <summary>
            A plain rectangle around the grouping label without top and bottom border
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelBorderStyle.WithoutBorder">
            <summary>
            A plain rectangle around the grouping label without border
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelBorderStyle.LeftBorder">
            <summary>
             A plain rectangle around the grouping label only with left border
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelBorderStyle.RightBorder">
            <summary>
            A plain rectangle around the grouping label only with right border
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelTextFitMode">
            <summary>
            Specifies the options for rendering the text in the ChartAxisGroupingLabel.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelTextFitMode.None">
            <summary>
            No action will be taken
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelTextFitMode.Wrap">
            <summary>
            The long text will be wrapped if cannot be fit within a single line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelTextFitMode.Shrink">
            <summary>
            The long text will be shrunk to fit the available space.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelTextFitMode.WrapAndShrink">
            CTODO: Find out the exactly how WrapAndShrink works - can't tell the difference between this and Wrap
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelTextAlignment">
            <summary>
            Specifies the alignment options available for rendering the text within a grouping label.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelTextAlignment.Center">
            <summary>
            Centers both vertically and horizontally
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelTextAlignment.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelTextAlignment.Right">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelTextAlignment.Top">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelTextAlignment.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelTextAlignment.TopLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelTextAlignment.TopRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelTextAlignment.BottomLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelTextAlignment.BottomRight">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisLayout">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxisLayout"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.Invalidate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.Validate(Syncfusion.Windows.Forms.Chart.ChartOrientation)">
            <summary>
            Validates this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.Arrange(System.Drawing.RectangleF,Syncfusion.Windows.Forms.Chart.ChartOrientation)">
            <summary>
            Arranges the specified g.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="orientation">The orientation.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.Measure(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Windows.Forms.Chart.ChartOrientation,System.Single@,System.Single@,System.Single@)">
            <summary>
            Measures by specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">The bounds.</param>
            <param name="orientation">The orientation.</param>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <param name="scrolls">The scrolls.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.Axes">
            <summary>
            Gets the axes.
            </summary>
            <value>The axes.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.LayoutMode">
            <summary>
            Gets or sets the layout mode.
            </summary>
            <value>The layout mode.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.Height">
            <summary>
            Gets or sets the layout height in percentage or pixels of chart area.
            </summary>
            <value>The layout height in percentage.</value>
            
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.Spacing">
            <summary>
            Gets or sets the spacing.
            </summary>
            <value>The spacing.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.Owner">
            <summary>
            Gets or sets the chart area.
            </summary>
            <value>The chart area.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.Orientation">
            <summary>
            Gets the orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.AxesCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.AxesCollection.#ctor(Syncfusion.Windows.Forms.Chart.ChartAxisLayout)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.AxesCollection"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.AxesCollection.InsertItem(System.Int32,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.-or-<paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.</exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.AxesCollection.ClearItems">
            <summary>
            Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.AxesCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.-or-<paramref name="index"/> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.</exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.AxesCollection.SetItem(System.Int32,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to replace.</param>
            <param name="item">The new value for the element at the specified index. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.-or-<paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.</exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.AxisLayoutException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.AxisLayoutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxisLayout.AxisLayoutException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisLayoutCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayoutCollection.#ctor(Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxisLayoutCollection"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayoutCollection.ClearItems">
            <summary>
            Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayoutCollection.InsertItem(System.Int32,Syncfusion.Windows.Forms.Chart.ChartAxisLayout)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.-or-<paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.</exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayoutCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.-or-<paramref name="index"/> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.</exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayoutCollection.SetItem(System.Int32,Syncfusion.Windows.Forms.Chart.ChartAxisLayout)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to replace.</param>
            <param name="item">The new value for the element at the specified index. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.-or-<paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.</exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayoutCollection.Invalidate">
            <summary>
            Invalidates this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayoutCollection.Validate(Syncfusion.Windows.Forms.Chart.ChartOrientation)">
            <summary>
            Validates this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayoutCollection.Arrange(System.Drawing.RectangleF,Syncfusion.Windows.Forms.Chart.ChartOrientation)">
            <summary>
            Arranges the specified g.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="orientation">The orientation.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLayoutCollection.Measure(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Windows.Forms.Chart.ChartOrientation,System.Single@,System.Single@,System.Single@)">
            <summary>
            Measures by the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">The bounds.</param>
            <param name="orientation">The orientation.</param>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <param name="scrolls">The scrolls.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLayoutCollection.ChartArea">
            <summary>
            Gets the chart area.
            </summary>
            <value>The chart area.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLayoutCollection.Spacing">
            <summary>
            Gets or sets the spacing.
            </summary>
            <value>The spacing.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisCollection">
            <summary>
            Collection of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis">ChartAxis</see> instances.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBaseList">
            <summary>
            Provides the base class for a strongly typed collection. 
            This class has <see cref="E:Syncfusion.Windows.Forms.Chart.ChartBaseList.Changed"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.#ctor">
            <summary>
            Initializes a new instance of the ChartBaseList class that is empty and has the default initial capacity. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the ChartBaseList class that is empty and has the specified initial capacity. 
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.Clear">
            <summary>
            Removes all items from the ChartBaseList.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.RemoveAt(System.Int32)">
            <summary>
            Removes the ChartBaseList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire ChartBaseList to a compatible one-dimensional Array, starting at the specified index of the target array. 
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ChartBaseList. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the elements in the entire ChartBaseList using the specified comparer
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.IComparer"/> implementation to use when comparing elements.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.ToArray">
            <summary>
            Copies the elements of the ChartBaseList to a new <see cref="T:System.Object"/> array.
            </summary>
            <returns>An <see cref="T:System.Object"/> array containing copies of the elements of the ChartBaseList.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.ToArray(System.Type)">
            <summary>
            Copies the elements of the ChartBaseList to a new array of the specified element type. 
            </summary>
            <param name="type">The element <see cref="T:System.Type"/> of the destination array to create and copy elements to.</param>
            <returns>An array of the specified element type containing copies of the elements of the ChartBaseList.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire ChartBaseList. 
            </summary>
            <returns>An IEnumerator for the entire ChartBaseList.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the ChartBaseList.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to add to the ChartBaseList.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the ChartBaseList at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The <see cref="T:System.Object"/> to insert into the ChartBaseList.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the ChartBaseList.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to remove from the ChartBaseList. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the ChartBaseList.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to locate in the ChartBaseList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the ChartBaseList contains a specific value. 
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to locate in the ChartBaseList.</param>
            <returns>true if the <see cref="T:System.Object"/> is found in the IList; otherwise, false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.Validate(System.Object)">
            <summary>
            Performs additional custom processes when validating a value
            </summary>
            <param name="obj">The object to validate.</param>
            <returns>If is true, value is approved.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.OnChanged(Syncfusion.Windows.Forms.Chart.ChartListChangeArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Chart.ChartBaseList.Changed"/> event.
            </summary>
            <param name="args">Argument.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.NativeInsert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the internal array at the specified index. 
            </summary>
            <param name="index">The zero-based index at which value should be inserted. </param>
            <param name="obj">The <see cref="T:System.Object"/> to insert into the internal array.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.NativeRemoveAt(System.Int32)">
            <summary>
            Removes an the internal array item at the specified index. 
            </summary>
            <param name="index">Index of item.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartBaseList.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseList.FreezeEvent">
            <summary>
            Gets or sets a value indicating whether the <see cref="E:Syncfusion.Windows.Forms.Chart.ChartBaseList.Changed"/> will be raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseList.List">
            <summary>
            Gets an IList containing the list of elements in the ChartBaseList instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseList.IsFixedSize">
            <summary>
            Gets a value indicating whether the ChartBaseList has a fixed size.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseList.IsReadOnly">
            <summary>
            Gets a value indicating whether the ChartBaseList is read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the ChartBaseList is synchronized (thread safe). 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the ChartBaseList.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseList.Count">
            <summary>
            Gets the number of elements contained in the ChartBaseList instance. This property cannot be overridden.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseList.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index. 
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBaseList.ChartBaseEnumerator">
            <summary>
            Internal enumerator for <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseList"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.ChartBaseEnumerator.#ctor(Syncfusion.Windows.Forms.Chart.ChartBaseList)">
            <summary>
            Initializes a new instance of the ChartBaseEnumerator class.
            </summary>
            <param name="list">Instance of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseList"/> class.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.ChartBaseEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseList.ChartBaseEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseList.ChartBaseEnumerator.Current">
            <summary>
            Gets the current element in the collection. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxisCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Add(Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>The position into which the new axis element was inserted.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.AddRange(Syncfusion.Windows.Forms.Chart.ChartAxis[])">
            <summary>
            Adds the array of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/>.
            </summary>
            <param name="values">The values.</param>
            <returns>Returns the count of axis collection.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Contains(Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Determines whether collection contains the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>
                <c>true</c> if collection contains the specified value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Remove(Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.IndexOf(Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Indexes the of.
            </summary>
            <param name="value">The value.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Validate(System.Object)">
            <summary>
            Performs additional custom processes when validating a value.
            </summary>
            <param name="obj">The object to validate.</param>
            <returns>If is true, value is approved.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisCollection.Item(System.Int32)">
            <summary>
            Gets or sets <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/> by index in collection.
            </summary>
            <value>The Chart Axis Object to add to the Chart Axis collection.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartAxisGroupingLabelModel">
            <summary>
               Interface that needs to be implemented to display custom axis Grouping Labels. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAxisGroupingLabelModel.GetGroupingLabelAt(System.Int32)">
            <summary>
                Returns the Grouping Label at the specified index.
            </summary>
            <param name="index" type="int">
                <para>
                Index value to look for.    
                </para>
            </param>
            <returns>
                ChartAxisGroupingLabel to be used as Grouping Label.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAxisGroupingLabelModel.Count">
            <summary>
            Returns the number of Grouping Labels.    
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelCollection">
            <summary>
            Collection of custom ChartAxisGroupingLabel.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartValueType"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelCollection.#ctor">
            <summary>
            To prevent collection construction without ChartAxis reference.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelCollection.IndexOf(Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel)">
            <summary>
                Looks up this collection and returns the index value of the specified Grouping Label.
            </summary>
            <param name="label" type="ChartGroupingAxisLabel">
                <para>
                Grouping Label to look for in this collection.   
                </para>
            </param>
            <returns>
                The index value of the Grouping Label if the look up is successful; -1 otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelCollection.Add(Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel)">
            <summary>
                Adds the specified Grouping Label to this collection.
            </summary>
            <param name="label" type="ChartAxisGroupingLabel">
                <para>
                An instance of the Grouping Label that is to be to add.    
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel)">
            <summary>
                Inserts the specified Grouping Label at the specified index.
            </summary>
            <param name="index" type="int">
                <para>
                Index value where the Grouping Label that is to be inserted.   
                </para>
            </param>
            <param name="label" type="ChartAxisGroupingLabel">
                <para>
                An instance of the Grouping Label that is to be added.    
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelCollection.Remove(Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabel)">
            <summary>
                Removes the specified Grouping Label from this collection.
            </summary>
            <param name="label" type="ChartAxisGroupingLabel">
                <para>
                 Grouping Label that is to be removed.   
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelCollection.GetGroupingLabelAt(System.Int32)">
            <summary>
                Gets the Grouping Label at the specified index.
            </summary>
            <param name="index" type="int">
                <para>
                 The index value to look for.   
                </para>
            </param>
            <returns>
                The ChartAxis Grouping Label at the specified index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelCollection.OnClearComplete">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelCollection.OnInsertComplete(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelCollection.OnRemoveComplete(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelCollection.OnValidate(System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelCollection.BroadcastChange">
            <summary>
            Raise Changed event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelCollection.Item(System.Int32)">
             <summary>
            Returns the axis Grouping Label at the specified index value.
             </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxisGroupingLabelCollection.Changed">
            <summary>
            Event that is raised when a custom axis Grouping Label is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartAxisLabelModel">
            <summary>
               Interface that needs to be implemented to display custom axis labels. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAxisLabelModel.GetLabelAt(System.Int32)">
            <summary>
                Returns the label at the specified index.
            </summary>
            <param name="index" type="int">
                <para>
                Index value to look for.    
                </para>
            </param>
            <returns>
                ChartAxisLabel to be used as label.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAxisLabelModel.Count">
            <summary>
            Returns the number of labels.    
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection">
            <summary>
            Collection of custom ChartAxis labels. These labels will be used as axis labels when
            the value type of the ChartAxis is set to custom.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartValueType"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.#ctor">
            <summary>
            To prevent collection construction without ChartAxis reference.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.IndexOf(Syncfusion.Windows.Forms.Chart.ChartAxisLabel)">
            <summary>
                Looks up this collection and returns the index value of the specified label.
            </summary>
            <param name="label" type="ChartAxisLabel">
                <para>
                 Label to look for in this collection.   
                </para>
            </param>
            <returns>
                The index value of the label if the look up is successful; -1 otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.Add(Syncfusion.Windows.Forms.Chart.ChartAxisLabel)">
            <summary>
                Adds the specified label to this collection.
            </summary>
            <param name="label" type="ChartAxisLabel">
                <para>
                An instance of the label that is to be to add.    
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartAxisLabel)">
            <summary>
                Inserts the specified label at the specified index.
            </summary>
            <param name="index" type="int">
                <para>
                Index value where the label that is to be inserted.   
                </para>
            </param>
            <param name="label" type="ChartAxisLabel">
                <para>
                An instance of the label that is to be added.    
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.Remove(Syncfusion.Windows.Forms.Chart.ChartAxisLabel)">
            <summary>
                Removes the specified label from this collection.
            </summary>
            <param name="label" type="ChartAxisLabel">
                <para>
                 Label that is to be removed.   
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.GetLabelAt(System.Int32)">
            <summary>
                Gets the label at the specified index.
            </summary>
            <param name="index" type="int">
                <para>
                 The index value to look for.   
                </para>
            </param>
            <returns>
                The ChartAxis label at the specified index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.OnClearComplete">
            <summary>
            Overriden. <see cref="T:System.Collections.CollectionBase"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Overriden. <see cref="T:System.Collections.CollectionBase"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Overriden. <see cref="T:System.Collections.CollectionBase"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Overriden. <see cref="T:System.Collections.CollectionBase"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.OnValidate(System.Object)">
            <summary>
            Overriden. <see cref="T:System.Collections.CollectionBase"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.BroadcastChange">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.Capacity">
            <summary>
            Gets or sets the number of elements that the <see cref="T:System.Collections.CollectionBase"></see> can contain.
            </summary>
            <value></value>
            <returns>The number of elements that the <see cref="T:System.Collections.CollectionBase"></see> can contain.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Collections.CollectionBase.Capacity"></see> is set to a value that is less than <see cref="P:System.Collections.CollectionBase.Count"></see>.</exception>
            <exception cref="T:System.OutOfMemoryException">There is not enough memory available on the system.</exception>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.Item(System.Int32)">
            <summary>
            Returns the axis label at the specified index value.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxisLabelCollection.Changed">
            <summary>
            Occurs when a custom axis label was changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection">
            <summary>
            Collection of custom points that are registered for display.
            Custom points can be tied to specific positions on the chart or to specific points on any series.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartCustomPoint"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.Add(Syncfusion.Windows.Forms.Chart.ChartCustomPoint)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.Contains(Syncfusion.Windows.Forms.Chart.ChartCustomPoint)">
            <summary>
            Determines whether collection contains the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>
            <c>true</c> if collection contains the specified value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.Remove(Syncfusion.Windows.Forms.Chart.ChartCustomPoint)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.IndexOf(Syncfusion.Windows.Forms.Chart.ChartCustomPoint)">
            <summary>
            Indexes the of.
            </summary>
            <param name="value">The value.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartCustomPoint)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.Validate(System.Object)">
            <summary>
            Performs additional custom processes when validating a value.
            </summary>
            <param name="obj">The object to validate.</param>
            <returns>If is true, value is approved.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCustomPoint"/> at the specified index.
            </summary>                
            <value>Add the ChartCustomPoint.</value>        
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel">
            <summary>
            Binds ChartAxis to a data source, so as to provide labels for the axis.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList">
            <summary>
            Abstract class that implements the basic functionality of the data binding.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList.m_dataManager">
            <summary>
            The <see cref="T:System.Windows.Forms.CurrencyManager"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList.m_properties">
            <summary>
            The properties collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList"/> class.
            </summary>
            <param name="dataSource">The data source.</param>
            <param name="dataMember">The data member.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList.#ctor(System.Object,System.String,System.Windows.Forms.BindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList"/> class.
            </summary>
            <param name="dataSource">The data source.</param>
            <param name="dataMember">The data member.</param>
            <param name="bindingContext">The binding context.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList.DataBind">
            <summary>
            Refresh binding.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList.ResetProperties">
            <summary>
            Resets the properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList.OnListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Called when list is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList.RaiseChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="args">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList.Changed">
            <summary>
            This event is raised when the data is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
            <value>The data source.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList.DataMember">
            <summary>
            Gets or sets the data member.
            </summary>
            <value>The data member.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList.BindingContext">
            <summary>
            Gets or sets the binding context.
            </summary>
            <value>The binding context.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseDataBindList.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel"/> class.
            </summary>
            <param name="dataSource">The data source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel"/> class.
            </summary>
            <param name="dataSource">The data source.</param>
            <param name="dataMember">The data member.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.#ctor(System.Object,System.String,System.Windows.Forms.BindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel"/> class.
            </summary>
            <param name="dataSource">The data source.</param>
            <param name="dataMember">The data member.</param>
            <param name="bindingContext">The binding context.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.GetPropertyIndex(System.ComponentModel.PropertyDescriptorCollection,System.ComponentModel.PropertyDescriptor,System.String)">
            <summary>
            Gets property index in property collection
            </summary>
            <param name="collection">Property descriptor collection</param>
            <param name="descriptor">Property descriptor</param>
            <param name="propertyName">Name of the property</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.GetPropertyValue(System.ComponentModel.PropertyDescriptorCollection,System.ComponentModel.PropertyDescriptor,System.String,System.Object)">
            <summary>
            Gets the property value
            </summary>
            <param name="collection">Property descriptor collection</param>
            <param name="descriptor">Property descriptor</param>
            <param name="propertyName">Property Name</param>
            <param name="component">Data source component</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.GetLabelAt(System.Int32)">
            <summary>
            Returns the label at the specified index.
            </summary>
            <param name="index">Index value to look for.</param>
            <returns>ChartAxisLabel to be used as label.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.GetAppropriateValue(System.Object)">
            <summary>
            Gets the appropriate value.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.GetProperty(System.ComponentModel.PropertyDescriptorCollection,System.String)">
            <summary>
            Gets property 
            </summary>
            <param name="collection">Property descriptor collection</param>
            <param name="propertyName">Name of the property descriptor</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.UpdateProperties">
            <summary>
            Updates the properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.LabelIndex">
            <summary>
            Gets or sets the index of the label.
            </summary>
            <value>The index of the label.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.LabelName">
            <summary>
            Gets or sets the name of the label.
            </summary>
            <value>The name of the label.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.PositionIndex">
            <summary>
            Gets or sets the index of the position.
            </summary>
            <value>The index of the position.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.PositionName">
            <summary>
            Gets or sets the name of the position.
            </summary>
            <value>The name of the position.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.LabelProperty">
            <summary>
            Gets or sets the label property.
            </summary>
            <value>The label property.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindAxisLabelModel.PositionProperty">
            <summary>
            Gets or sets the label property.
            </summary>
            <value>The label property.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartImageCollection">
            <summary>
            Collection of Image instances.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageCollection.#ctor">
            <summary>
            Initializes a new instance of the ChartImageCollection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageCollection.#ctor(System.Collections.IList)">
            <summary>
            Initializes a new instance of the ChartImageCollection with collection of images.
            </summary>
            <param name="source">Collection of images to copy to array.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageCollection.MakeTransparent(System.Drawing.Color)">
            <summary>
            At this moment all images in this collection is Bitmaps 
            and this color is transparent color.
            </summary>
            <param name="color">Color to make transparent.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageCollection.Add(System.Drawing.Image)">
            <summary>
            Add image to collection.
            </summary>
            <param name="image">Image to add.</param>
            <returns>Index of added image.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageCollection.AddFromList(System.Collections.IList)">
            <summary>
            Adds image from a list to the collection.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageCollection.AddRange(System.Drawing.Image[])">
            <summary>
            Adds an array of images to this collection.
            </summary>        
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageCollection.Remove(System.Drawing.Image)">
            <summary>
            Removes the image from the list.
            </summary>
            <param name="image">Image to remove.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageCollection.Contains(System.Drawing.Image)">
            <summary>
            Check collection to constrains image.
            </summary>
            <param name="image">Image to check.</param>
            <returns>True if collection constrains image, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageCollection.IndexOf(System.Drawing.Image)">
            <summary>
            Returns the index of the specified image.
            </summary>
            <param name="image">Image to get index.</param>
            <returns>Index of given image. If collection doesn't constrains image return -1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageCollection.Insert(System.Int32,System.Drawing.Image)">
            <summary>
            Inserts the image at the specified index.
            </summary>
            <param name="index">Index to insert image.</param>
            <param name="image">Image to insert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageCollection.CopyTo(System.Drawing.Image[],System.Int32)">
            <summary>
            Copies the images to a one dimensional array starting at the specified index of the target array.
            </summary>
            <param name="images">Destination array where the elements are to be stored.</param>
            <param name="index">Index value from which copy is to start.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartImageCollection.Item(System.Int32)">
            <summary>
            Gets image by specified index in collection.
            </summary>
            <value>The position into which the new element was inserted.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPointSortedList">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.m_nCapacity">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.m_array">
            <summary>
            Store array of ChartPointWithIndexs
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.m_count">
            <summary>
            Store count of ChartPointWithIndexs
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.#ctor">
            <summary>
            Creates instance of the ChartPointWithIndexArray.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointSortedList"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.Add(Syncfusion.Windows.Forms.Chart.ChartPointWithIndex)">
            <summary>
            Add ChartPointWithIndex to collection
            </summary>
            <param name="item">ChartPointWithIndex to add</param>
            <returns>Index of added ChartPointWithIndex</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.Clear">
            <summary>
            Clear collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.Contains(Syncfusion.Windows.Forms.Chart.ChartPointWithIndex)">
            <summary>
            Gets value indicates is ChartPointWithIndex in collection
            </summary>
            <param name="point">ChartPointWithIndex to check</param>
            <returns>TRUE in point belongs to collection otherwise FALSE.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.RemoveAt(System.Int32)">
            <summary>
            Remove point by its index in collection
            </summary>
            <param name="index">Index of point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.ToArray">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets IEnumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="start"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.IndexOf(Syncfusion.Windows.Forms.Chart.ChartPointWithIndex)">
            <summary>
            Gets index of point in collection.
            </summary>
            <param name="item">Node to get index</param>
            <returns>Index of the point in collection. If point collection doesn't constrain point return -1</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.GetInsertIndex(Syncfusion.Windows.Forms.Chart.ChartPointWithIndex,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.ProvideSpaceFor(System.Int32)">
            <summary>
            Checks if collection can constrain Count + nItems. If not
            increase collection by collection capacity.
            </summary>
            <param name="nItems">Count of points to check collection size</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.ValidateIndex(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.Capacity">
            <summary>
            Gets or sets collection capacity.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.Item(System.Int32)">
            <summary>
            Gets or sets ChartPointWithIndex by its index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets value indicates that collection is synchronized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets SyncRoot.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.Count">
            <summary>
            Gets count of elements in collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.Enumerator">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.Enumerator.m_collection">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.Enumerator.m_index">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.Enumerator.#ctor(Syncfusion.Windows.Forms.Chart.ChartPointSortedList)">
            <summary>
            
            </summary>
            <param name="tc"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.Enumerator.MoveNext">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.Enumerator.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.Enumerator.Current">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointSortedList.Enumerator.System#Collections#IEnumerator#Current">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRegionCollection">
            <summary>
            Represents the collection of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegion"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegionCollection.HitTest(System.Drawing.Point)">
            <summary>
            Retrieves the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegion"/> at the specified coordinates.
            </summary>
            <param name="point">The point.</param>
            <returns>It returns the region around the hit test point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegionCollection.HitTest(System.Drawing.PointF)">
            <summary>
            Retrieves the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegion"/> at the specified coordinates.
            </summary>
            <param name="point">The point.</param>
            <returns>It returns the region around the hit test point.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartConfigItem">
            <summary>
                Base class of configuration items that are created for specific chart-types. Configuration items are a convenient way to store
                information specific to certain chart types that may not be applicable to other chart types.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartConfigItem.RaisePropertyChanged(System.String)">
            <summary>
                Overloaded. Call this method to raise a <see cref="E:Syncfusion.Windows.Forms.Chart.ChartConfigItem.PropertyChanged"/> event.
            </summary>
            <param name="propertyName" type="string">
                <para>
                 The name of the property that has changed.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartConfigItem.RaisePropertyChanged(Syncfusion.ComponentModel.PropertyChangeEffect,System.String,System.Object,System.Object)">
            <summary>
                 Call this method to raise a <see cref="E:Syncfusion.Windows.Forms.Chart.ChartConfigItem.PropertyChanged"/> event.
            </summary>
            <param name="effect" type="Syncfusion.ComponentModel.PropertyChangeEffect">
                <para>
                The effect that is to take place when a property is changed.
                </para>
            </param>
            <param name="propertyName" type="string">
                <para>
                The name of the property changed.
                </para>
            </param>
            <param name="oldValue" type="object">
                <para>
                The old value of the property that is changed.
                </para>
            </param>
            <param name="newValue" type="object">
                <para>
                The new value of the property that is changed.
                </para>
            </param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartConfigItem.PropertyChanged">
            <summary>
                Event that is raised when a property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartConfigItem.NoEvents">
            <summary>
                Controls whether events are raised or not. If set to True, events are not raised.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBubbleType">
            <summary>
              The type of bubble that is to be rendered with Bubble charts.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBubbleType.Circle">
            <summary>
              Circular shaped bubbles are rendered with Bubble charts.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBubbleType.Square">
            <summary>
              Square shaped bubbles are rendered with Bubble charts.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBubbleType.Image">
            <summary>
              Images are rendered as bubbles with Bubble charts.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBubbleSizingBehavior">
            <summary>
                Defines the behavior in which bubble sizes vary.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBubbleSizingBehavior.Fixed">
            <summary>
              Bubble sizes are fixed. This behavior is not supported in the current version.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBubbleSizingBehavior.Proportional">
            <summary>
              Bubble sizes are proportional to value.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRadarDrawType">
            <summary>
            The type of Radar chart that is to be rendered.    
            </summary>
            <example>
            <code lang="C#">
            series.ConfigItems.RadarItem.Type = ChartRadarDrawType.Symbol;
            </code>    
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRadarDrawType.Area">
            <summary>
            Renders a Radar chart such that points are connected and the enclosed region is filled.    
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRadarDrawType.Line">
            <summary>
            Renders a Radar chart such that points are connected but the enclosed region is not filled.    
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRadarDrawType.Symbol">
            <summary>
            Renders a Radar chart such that points are rendered with the associated symbol. They are not connected to each other.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPieFillMode">
            <summary>
            Lists the mode in which the pie Gradient should be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPieFillMode.AllPie">
            <summary>
            Apply the colors as a whole to the full pie.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPieFillMode.EveryPie">
            <summary>
            Apply the colors to each individual slice.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPieType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPieType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPieType.OutSide">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPieType.InSide">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPieType.Round">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPieType.Bevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPieType.Custom">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartColumnShadingMode">
            <summary>
            Lists the shading mode options for bars and charts.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColumnShadingMode.FlatRectangle">
            <summary>
            Rendered as a flat rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColumnShadingMode.PhongCylinder">
            <summary>
            Rendered in phong style.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartColumnType">
            <summary>
            Lists the rendering options for columns when in 3D mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColumnType.Box">
            <summary>
            Rendered as a box.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColumnType.Cylinder">
            <summary>
            Rendered as a cylinder.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFinancialColorMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFinancialColorMode.Fixed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFinancialColorMode.Mixed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFinancialColorMode.DarkLight">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesParameters">
            <summary>
            Configuration item that pertains to "all" chart types.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesParameters.#ctor(Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartArea"/> class.
            </summary>
            <param name="area">The area.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesParameters.SeriesSpacing">
            <summary>
            Gets or sets the spacing between series.
            </summary>
            <value>The series spacing.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesParameters.PointSpacing">
            <summary>
            Gets or sets the spacing between points.
            </summary>
            <value>The point spacing.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesParameters.SeriesDepthSpacing">
            <summary>
            Gets or sets the depth spacing between series.
            </summary>
            <value>The series depth spacing.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartGanttConfigItem">
            <summary>
            Configuration item that pertains to Gantt charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartGanttConfigItem.DrawMode">
            <summary>
            Specifies the drawing mode of Gantt chart
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBubbleConfigItem">
            <summary>
            Configuration item that pertains to Bubble charts.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBubbleConfigItem.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBubbleConfigItem.MinBounds">
            <summary>
                The minimum bounds to be used by a bubble. Default is (25, 25).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBubbleConfigItem.MaxBounds">
            <summary>
                The maximum bounds to be used by a bubble. Default is (50, 50)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBubbleConfigItem.BubbleType">
            <summary>
            	The type of the bubble that is to be rendered. Default is Circle.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBubbleConfigItem.EnablePhongStyle">
            <summary>
            	Specifies if the PhongStyle is enable. Default is true.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem">
            <summary>
                Configuration item that pertains to Pie charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.AngleOffset">
            <summary>
              The offset angle that is to be used when rendering Pie charts. Default is 0f.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.PieWithSameRadius">
            <summary>
              Gets or sets whether the pie chart render in same radius when the LabelStyle is in Outside or OutsideInCoulmn. Default is false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.PieRadius">
            <summary>
            Gets or sets the pie radius. 
            </summary>
            <value>The pie radius.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.PieTilt">
            <summary>
            Gets or sets the pie tilt. Use this property when MultiplePies is enabled.
            </summary>
            <value>The pie tilt.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.PieHeight">
            <summary>
            Gets or sets the height of the pie. Use this property when MultiplePies is enabled.
            </summary>
            <value>The height of the pie.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.PieSize">
            <summary>
            Gets or sets the size of the pie. Added for internal purposed and used only when MultiplePies is enabled.
            </summary>
            <value>The size of the pie.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.PieType">
            <summary>
            Gets or sets the painting type of the pie.
            </summary>
            <value>The painting type of the pie.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.FillMode">
            <summary>
            Specifies how the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.Gradient"/> should be applied. Default is AllPie.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.Gradient">
            <summary>
            Specifies the gradient colors to use in the chart when PieType is set to Custom. Default is null.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.HeightByAreaDepth">
            <summary>
            Specifies whether the height for the pie is determined through the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.HeightCoeficient"/> property or through the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartArea.Depth"/> property. Default is false (uses HeightCoefficient).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.LabelStyle">
            <summary>
            Specifies the style in which the labels are rendered. Default is Outside.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.HeightCoeficient">
            <summary>
            Specifies the height of the pie as a factor of the radius of the pie. Valid range is 0f - 1f. Default is 0.2f.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.DoughnutCoeficient">
            <summary>
            Specifies the radius of the doughnut hole in the center as a factor of the radius. Default is 0f.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.ShowSeriesTitle">
            <summary>
            Gets or sets a value indicating whether series title is displayed.
            </summary>
            <value><c>true</c> if series title is displayed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPieConfigItem.ShowDataBindLabels">
            <summary>
            Gets or sets a value indicating whether databind labels are displayed.
            </summary>
            <value><c>true</c> if databind labels are displayed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRadarConfigItem">
            <summary>
                Configuration item that pertains to Radar charts.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRadarConfigItem.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRadarConfigItem.Type">
            <summary>
            The type of Radar chart to be rendered. Default is Area.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStepConfigItem">
            <summary>
                Configuration item that pertains to Step charts.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStepConfigItem.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStepConfigItem.Inverted">
            <summary>
            Specifies if the step line is inverted. Default is false.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFunnelConfigItem">
            <summary>
                Configuration item that pertains to Funnel charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFunnelConfigItem.FunnelMode">
            <summary>
            Specifies how the Y values should be interpreted. Default is YIsHeight.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFunnelConfigItem.LabelPlacement">
            <summary>
            Specifies the positioning of the lables in addition to <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFunnelConfigItem.LabelStyle"/>. Default is Right.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFunnelConfigItem.LabelStyle">
            <summary>
            Specifies the positioning of the labels in addition to <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFunnelConfigItem.LabelPlacement"/>. Default is Outside.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFunnelConfigItem.GapRatio">
            <summary>
            Specifies the co-efficient for the gap between the blocks. Default is 0.0f.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFunnelConfigItem.FigureBase">
            <summary>
            Specifies the type of base for the funnel. Default is Circle.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFunnelConfigItem.ShowSeriesTitle">
            <summary>
            Gets or sets a value indicating whether series title is displayed.
            </summary>
            <value><c>true</c> if series title is displayed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFunnelConfigItem.ShowDataBindLabels">
            <summary>
            Gets or sets a value indicating whether databind labels are displayed.
            </summary>
            <value><c>true</c> if databind labels are displayed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPyramidConfigItem">
            <summary>
                Configuration item that pertains to Pyramid charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPyramidConfigItem.PyramidMode">
            <summary>
            Specifies the mode in which the Y values should be interpreted. Default is Linear.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPyramidConfigItem.LabelPlacement">
            <summary>
            Specifies the positioning of the labels in addition to the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartPyramidConfigItem.LabelStyle"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPyramidConfigItem.LabelStyle">
            <summary>
            Specifies the positioning of the labels in addition to the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartPyramidConfigItem.LabelPlacement"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPyramidConfigItem.GapRatio">
            <summary>
            Specifies the co-efficient that determines the gap between the blocks. Default is 0.0f.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPyramidConfigItem.FigureBase">
            <summary>
            Specifies the way in which the pyramid base should be rendered in 3D mode. Default is Square.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPyramidConfigItem.ShowSeriesTitle">
            <summary>
            Gets or sets a value indicating whether series title is displayed.
            </summary>
            <value><c>true</c> if series title is displayed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPyramidConfigItem.ShowDataBindLabels">
            <summary>
            Gets or sets a value indicating whether databind labels are displayed.
            </summary>
            <value><c>true</c> if databind labels are displayed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartHiLoOpenCloseConfigItem">
            <summary>
            Configuration item that pertains to Pyramid charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHiLoOpenCloseConfigItem.DrawMode">
            <summary>
            Specifies the mode in which the Y values should be interpreted. Default is Linear.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHiLoOpenCloseConfigItem.OpenTipColor">
            <summary>
            Specifies the color for open tip
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHiLoOpenCloseConfigItem.CloseTipColor">
            <summary>
            Specifies the color for close tip
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartColumnConfigItem">
            <summary>
                Configuration item that pertains to Column charts.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColumnConfigItem.#ctor">
            <summary>
                Constructor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartColumnConfigItem.ColumnType">
            <summary>
            Specifies the column type. Default is Box.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartColumnConfigItem.ShadingMode">
            <summary>
            Specifies the shading mode used for columns or bars.
            Default is ChartColumnShadingMode.PhongCylinder.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartColumnConfigItem.LightColor">
            <summary>
            Specifies the color of light when ShadingMode is set to PhongCylinder.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartColumnConfigItem.LightAngle">
            <summary>
            Specifies the light angle in horizontal plane when ShadingMode is set to PhongCylinder. Default is (-PI/4).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartColumnConfigItem.PhongAlpha">
            <summary>
            Specifies the Phong's alpha coefficient used for calculation of specular lighting. Default is 20d.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartColumnConfigItem.CornerRadius">
            <summary>
            Specifies the radius of round corners. Default is SizeF.Empty.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFinancialConfigItem">
            <summary>
            Configuration item that pertains to Financial charts.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFinancialConfigItem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFinancialConfigItem.ColorsMode">
            <summary>
            Gets or sets the colors mode.
            </summary>
            <value>The colors mode.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFinancialConfigItem.PriceUpColor">
            <summary>
            Specifies the color with which price-up should be indicated. Default is Green.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFinancialConfigItem.PriceDownColor">
            <summary>
            Specifies the color with which price-down should be indicated. Default is Red.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFinancialConfigItem.DarkLightPower">
            <summary>
            Specifies the difference between the dark and light colors. Default is 0x64.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartHistogramConfigItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHistogramConfigItem.ShowNormalDistribution">
            <summary>
            Gets or sets a value indicating whether normal distribution is shown.
            </summary>
            <value>
            	<c>true</c> if normal distribution is shown; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHistogramConfigItem.ShowDataPoints">
            <summary>
            Gets or sets a value indicating whether data points is shown.
            </summary>
            <value><c>true</c> if data points is shown; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHistogramConfigItem.NumberOfIntervals">
            <summary>
            Gets or sets the number of intervals.
            </summary>
            <value>The number of intervals.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartErrorBarsConfigItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartErrorBarsConfigItem.SymbolSize">
            <summary>
            Gets or sets the size of the symbol.
            </summary>
            <value>The size of the symbol.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartErrorBarsConfigItem.SymbolShape">
            <summary>
            Gets or sets the symbol shape.
            </summary>
            <value>The symbol shape.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartErrorBarsConfigItem.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartErrorBarsConfigItem.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartErrorBarsConfigItem"/> is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBoxAndWhiskerConfigItem">
            <summary>
            Configuration item that pertains to BoxAndWhisker chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBoxAndWhiskerConfigItem.PercentileMode">
            <summary>
            Gets or sets a value indicating whether chart render in percentile mode or in normal mode.  
            </summary>
            <value><c>true</c> if [percentile mode]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBoxAndWhiskerConfigItem.Percentile">
            <summary>
            Gets or sets the percentile. It should be lie between 0.0 to 0.25 . This value decides the outliers in the chart.
            </summary>
            <value>The percentile.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBoxAndWhiskerConfigItem.OutLierWidth">
            <summary>
            Gets or sets the width of the outlier. Value should be greater than zero and it starts from 1.
            </summary>
            <value>The width of the outlier.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem">
            <summary>
            Configuration item that pertains to HeatMap charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem.DisplayColorSwatch">
            <summary>
            Gets or sets a value indicating whether color swatch is displayed.
            </summary>
            <value><c>true</c> if color swatch is displayed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem.LowestValueColor">
            <summary>
            Gets or sets the color of the lowest value.
            </summary>
            <value>The color of the lowest value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem.MiddleValueColor">
            <summary>
            Gets or sets the color of the middle value.
            </summary>
            <value>The color of the middle value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem.HighestValueColor">
            <summary>
            Gets or sets the color of the highest value.
            </summary>
            <value>The color of the highest value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem.StartText">
            <summary>
            Gets or sets "from" text.
            </summary>
            <value>From text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem.EndText">
            <summary>
            Gets or sets "to" text.
            </summary>
            <value>To text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem.LabelMargins">
            <summary>
            Gets or sets the margins.
            </summary>
            <value>The margins.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem.DisplayTitle">
            <summary>
            Gets or sets a value indicating whether title is displayed.
            </summary>
            <value><c>true</c> if title is displayed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem.MaximumCharacters">
            <summary>
            Gets or sets the max characters.
            </summary>
            <value>The max characters.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem.EnableLabelsTruncation">
            <summary>
            Gets or sets a value indicating whether the large labels should be truncated.
            </summary>
            <value><c>true</c> if the latge labels should be truncated; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem.EnableLabelRotation">
            <summary>
            Gets or sets a value indicating whether is allowed to rotation labels.
            </summary>
            <value><c>true</c> if is allowed to rotation labels; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem.AllowLabelsAutoFit">
            <summary>
            Gets or sets a value indicating whether labels auto fit is enebled.
            </summary>
            <value><c>true</c> if labels auto fit is enebled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem.MinimumFontSize">
            <summary>
            Gets or sets the minimal size of the font.
            </summary>
            <value>The minimal size of the font.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem.ShowLargeLabels">
            <summary>
            Gets or sets a value indicating whether the large labels should be hiden.
            </summary>
            <value><c>true</c> if the large labels should be hiden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem.HeatMapStyle">
            <summary>
            Gets or sets the layout style.
            </summary>
            <value>The layout style.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLineConfigItem">
            <summary>
            Configuration Line that pertains to Line,Spline charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineConfigItem.DisableLineCap">
            <summary>
            Gets or sets a value indicating whether Line cap is enabled or disabled for drawing Line series.  
            </summary>
            <value><c>true</c> if [disable LineCap]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineConfigItem.DisableLineRegion">
            <summary>
            Enable/Disable the Line segement(line between two points) for Line and Spline type.Default value is false.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection">
            <summary>
            Collection of Configuration Items. These items store datas that can be used by the chart and its elements in any
            manner.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartConfigItem"/>
            </summary>
            <remarks>
            Pre-defined configuration items may be accessed as shown below.
            <code lang="C#">
            // access the RadarItem ConfigItem to configure radar charts
            series.ConfigItems.RadarItem.Type = ChartRadarDrawType.Symbol;
            </code>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.BubbleItemName">
            <summary>
                Standard identifier for Bubble chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.PieItemName">
            <summary>
                Standard identifier for Pie chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.RadarItemName">
            <summary>
            	Standard identifier for Radar chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.StepItemName">
            <summary>
            	Standard identifier for Step chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.ColumnItemName">
            <summary>
            	Standard identifier for Column chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.FunnelItemName">
            <summary>
            	Standard identifier for Column chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.PyramidItemName">
            <summary>
            	Standard identifier for Column chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.FinancialItemName">
            <summary>
            	Standard identifier for financial charts configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.GanttItemName">
            <summary>
            	Standard identifier for Gantt chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.HiLoOpenCloseItemName">
            <summary>
            	Standard identifier for Gantt chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.HistogramItemName">
            <summary>
             Standard identifier for Histogram chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.ErrorBarsItemName">
            <summary>
            Standard identifier for Histogram chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.HeatMapItemName">
            <summary>
            	Standard identifier for HeatMap chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.BoxAndWhiskerItemName">
            <summary>
            	Standard identifier for BoxAndWhisker chart configuration information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.LineSegmentName">
            <summary>
            	Standard identifier for Line and Spline chart configuration information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.Add(System.String,Syncfusion.Windows.Forms.Chart.ChartConfigItem)">
            <summary>
                Adds the specified configuration item to this collection, with the specified name used for referencing it.
            </summary>
            <param name="name" type="string">
                <para>
                Name to be used for referencing the specified configuration item.
                </para>
            </param>
            <param name="item" type="Syncfusion.Windows.Forms.Chart.ChartConfigItem">
                <para>
                Configuration Item to be added.
                </para>
            </param>
            <returns>
                A void value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.Remove(System.String)">
            <summary>
                Removes specified configuration item from the collection.
            </summary>
            <param name="name" type="string">
                <para>
                Reference name of the item to be removed.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnInsertComplete(System.Object,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.DictionaryBase"/> instance.
            </summary>
            <param name="key">The key of the element to insert.</param>
            <param name="value">The value of the element to insert.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnRemove(System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnRemoveComplete(System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnSet(System.Object,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnSetComplete(System.Object,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnClear">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnClearComplete">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.WireItem(System.Object)">
            <summary>
            Connects the event handlers.
            </summary>
            <param name="value">The value.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.UnwireItem(System.Object)">
            <summary>
            Unconnects the event handlers.
            </summary>
            <param name="value">The value.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.OnContainedObjectPropertyChanged(System.Object,Syncfusion.ComponentModel.SyncfusionPropertyChangedEventArgs)">
            <summary>
            Called when property of contained object is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Syncfusion.ComponentModel.SyncfusionPropertyChangedEventArgs"/> instance containing the event data.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.BroadcastChange">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.ChangeConfig(System.String,System.Object)">
            <summary>
            Changes the config.
            </summary>
            <param name="key">The key.</param>
            <param name="newValue">The new config.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.Changed">
            <summary>
                Event that is raised when configuration information is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.BubbleItem">
            <summary>
                Standard configuration information for Bubble charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.PieItem">
            <summary>
                Standard configuration information for Pie charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.RadarItem">
            <summary>
                Standard configuration information for Radar charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.StepItem">
            <summary>
                Standard configuration information for Step charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.ColumnItem">
            <summary>
                Standard configuration information for Step charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.FunnelItem">
            <summary>
                Standard configuration information for Funnel charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.PyramidItem">
            <summary>
                Standard configuration information for Pyramid charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.FinancialItem">
            <summary>
                Standard configuration information for financial charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.GanttItem">
            <summary>
            Standard configuration information for Gantt chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.HiLoOpenCloseItem">
            <summary>
             Standard configuration information for HiLoOpenClose chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.HistogramItem">
            <summary>
             Standard configuration information for Histogram chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.ErrorBars">
            <summary>
             Standard configuration information for error bars.
            </summary>
            <value>The error bars.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.BoxAndWhiskerItem">
            <summary>
             Standard configuration information for BoxAndWhisker chart.
            </summary>     
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.HeatMapItem">
            <summary>
            Standard configuration information for HeatMap chart.
            </summary>
            <value>The heat map item.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.LineSegment">
            <summary>
                Standard configuration information for Bubble charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.LineItem">
            <summary>
             Standard configuration information for Line chart.
            </summary>     
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesConfigCollection.Item(System.String)">
            <summary>
                Looks up the collection by name and returns the configuration item.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection">
            <summary>
            	Collection of ChartStripLines. A strip line is a band that is drawn on the background of the chart, to highlight areas of interest.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartStripLine"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.IndexOf(Syncfusion.Windows.Forms.Chart.ChartStripLine)">
            <summary>
                Looks up the collection and returns the index value of the specified strip line.
            </summary>
            <param name="stripLine" type="Syncfusion.Windows.Forms.Chart.ChartStripLine">
                <para>
                An instance of the strip line that is to be looked up in the collection.
                </para>
            </param>
            <returns>
                The index value if the look up was successful; -1 otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.Add(Syncfusion.Windows.Forms.Chart.ChartStripLine)">
            <summary>
                Adds the specified strip line to this collection.
            </summary>
            <param name="stripLine" type="Syncfusion.Windows.Forms.Chart.ChartStripLine">
                <para>
                An instance of the strip line that is to be added to the collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartStripLine)">
            <summary>
                Inserts the specified strip line at the specified index value.
            </summary>
            <param name="index" type="int">
                <para>
                Index value where the instance of the specified strip line is to be inserted.
                </para>
            </param>
            <param name="stripLine" type="Syncfusion.Windows.Forms.Chart.ChartStripLine">
                <para>
               An instance of the stripline that is to be inserted at the specified index value.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.Remove(Syncfusion.Windows.Forms.Chart.ChartStripLine)">
            <summary>
                Removes the specified strip line from this collection.
            </summary>
            <param name="stripLine" type="Syncfusion.Windows.Forms.Chart.ChartStripLine">
                <para>
                 Strip line that is to be removed.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase"/> instance.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.CollectionBase"/> instance.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase"/> instance.
            </summary>
            <param name="index">The zero-based index at which to insert <paramref name="value"/>.</param>
            <param name="value">The new value of the element at <paramref name="index"/>.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase"/> instance.
            </summary>
            <param name="index">The zero-based index at which to insert <paramref name="value"/>.</param>
            <param name="value">The new value of the element at <paramref name="index"/>.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes when removing an element from the <see cref="T:System.Collections.CollectionBase"/> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/> can be found.</param>
            <param name="value">The value of the element to remove from <paramref name="index"/>.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase"/> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/> can be found.</param>
            <param name="value">The value of the element to remove from <paramref name="index"/>.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            Called when [set].
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
            <param name="newValue">The new value.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a value in the <see cref="T:System.Collections.CollectionBase"/> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="oldValue"/> can be found.</param>
            <param name="oldValue">The value to replace with <paramref name="newValue"/>.</param>
            <param name="newValue">The new value of the element at <paramref name="index"/>.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.BroadcastChange">
            <summary>
            Broadcasts the change.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.OnStripLineChaged(System.Object,System.EventArgs)">
            <summary>
            Called when [strip line chaged].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.Item(System.Int32)">
            <summary>
            Returns the strip line stored in the specified index.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartStripLineCollection.Changed">
            <summary>
                Event that is raised when this collection is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartListChangeArgs">
            <summary>
            Provides data for the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartListChangeHandler"/> delegate.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartListChangeArgs.#ctor(System.Int32,System.Object[],System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartListChangeArgs"/> class. 
            </summary>
            <param name="index">Index of the items affected by the change.</param>
            <param name="oldItems">Array of items has added to list.</param>
            <param name="newItems">Array of items has removed from list.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartListChangeArgs.Index">
            <summary>
            Gets the index of the items affected by the change.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartListChangeArgs.OldItems">
            <summary>
            Gets array of items has removed from list.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartListChangeArgs.NewItems">
            <summary>
            Gets array of items has added to list.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartListChangeHandler">
            <summary>
            Represents the method that will handle an event that has <see cref="T:Syncfusion.Windows.Forms.Chart.ChartListChangeArgs"/> data. 
            </summary>
            <param name="list">The source of the event.</param>
            <param name="args">Instance of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartListChangeArgs"/> class.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.TrendlineCollection">
            <summary>
            	Collection of TrendLines. A trend line is a  graph drawn to indicate the price value of comparisons.
            <seealso cref="!:CharttrendLine"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.TrendlineCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:TrendLineCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.TrendlineCollection.IndexOf(Syncfusion.Windows.Forms.Chart.Trendline)">
            <summary>
                Looks up the collection and returns the index value of the specified trend line.
            </summary>
            <param name="trendLine" type="Syncfusion.Windows.Forms.Chart.CharttrendLine">
                <para>
                An instance of the trend line that is to be looked up in the collection.
                </para>
            </param>
            <returns>
                The index value if the look up was successful; -1 otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.TrendlineCollection.Add(Syncfusion.Windows.Forms.Chart.Trendline)">
            <summary>
                Adds the specified trend line to this collection.
            </summary>
            <param name="trendLine" type="Syncfusion.Windows.Forms.Chart.CharttrendLine">
                <para>
                An instance of the trend line that is to be added to the collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.TrendlineCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.Trendline)">
            <summary>
                Inserts the specified trend line at the specified index value.
            </summary>
            <param name="index" type="int">
                <para>
                Index value where the instance of the specified trend line is to be inserted.
                </para>
            </param>
            <param name="trendLine" type="Syncfusion.Windows.Forms.Chart.TrendLine">
                <para>
               An instance of the trendline that is to be inserted at the specified index value.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.TrendlineCollection.Remove(Syncfusion.Windows.Forms.Chart.Trendline)">
            <summary>
                Removes the specified trend line from this collection.
            </summary>
            <param name="trendLine" type="Syncfusion.Windows.Forms.Chart.TrendLine">
                <para>
                 trend line that is to be removed.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.TrendlineCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase"/> instance.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.TrendlineCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.CollectionBase"/> instance.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.TrendlineCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase"/> instance.
            </summary>
            <param name="index">The zero-based index at which to insert <paramref name="value"/>.</param>
            <param name="value">The new value of the element at <paramref name="index"/>.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.TrendlineCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase"/> instance.
            </summary>
            <param name="index">The zero-based index at which to insert <paramref name="value"/>.</param>
            <param name="value">The new value of the element at <paramref name="index"/>.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.TrendlineCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes when removing an element from the <see cref="T:System.Collections.CollectionBase"/> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/> can be found.</param>
            <param name="value">The value of the element to remove from <paramref name="index"/>.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.TrendlineCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase"/> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/> can be found.</param>
            <param name="value">The value of the element to remove from <paramref name="index"/>.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.TrendlineCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            Called when [set].
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
            <param name="newValue">The new value.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.TrendlineCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a value in the <see cref="T:System.Collections.CollectionBase"/> instance.
            </summary>
            <param name="index">The zero-based index at which <paramref name="oldValue"/> can be found.</param>
            <param name="oldValue">The value to replace with <paramref name="newValue"/>.</param>
            <param name="newValue">The new value of the element at <paramref name="index"/>.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.TrendlineCollection.BroadcastChange">
            <summary>
            Broadcasts the change.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.TrendlineCollection.OnTrendlineChaged(System.Object,System.EventArgs)">
            <summary>
            Called when [trend line chaged].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.TrendlineCollection.Item(System.Int32)">
            <summary>
            Returns the trend line stored in the specified index.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.TrendlineCollection.Changed">
            <summary>
                Event that is raised when this collection is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartArea">
            <summary>
            The ChartArea is the actual rendering area of the plot.
            It provides a canvas on which the chart is rendered.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartArea">
            <summary>
            The interface that the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartArea"/> type implements.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartArea.Draw(System.Windows.Forms.PaintEventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartArea.Draw(System.Windows.Forms.PaintEventArgs,Syncfusion.Windows.Forms.Chart.ChartPaintFlags)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartArea.DrawZoomingRange(System.Drawing.Graphics)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartArea.CalculateSizes(System.Drawing.Rectangle)">
            <summary>
            Calculates the size of ChartArea.
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartArea.GetValueByPoint(System.Drawing.Point)">
            <summary>
            Returns the chartpoint value at this real point.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartArea.GetPointByValue(Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Gets the real point value at this chart point.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartArea.CorrectionFrom(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartArea.CorrectionFrom(System.Drawing.PointF)">
            <summary>
            
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartArea.CorrectionTo(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartArea.CorrectionTo(System.Drawing.PointF)">
            <summary>
            
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartArea.GetXAxis(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Returns the x axis of associated with this chartseries.
            </summary>
            <param name="ser"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartArea.GetYAxis(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Returns the y axis associated with this chartseries.
            </summary>
            <param name="ser"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.BorderColor">
            <summary>
            Gets or sets the border color of the rectangular area occupied by this ChartArea.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.UpdateClientBounds">
            <summary>
            Gets or sets whether client bounds of chart should be updated or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Width">
            <summary>
            Gets or sets the width of the rectangular area occupied by this ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Height">
            <summary>
            Gets or sets the height of the rectangular area that is occupied by this ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Bounds">
            <summary>
            Returns the bounds associated with this ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.ClientRectangle">
            <summary>
            Gets or sets the ClientRectangle associated with this ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.OffsetX">
            <summary>
            Returns the X axis offset value used when rendering in 3D mode.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.OffsetY">
            <summary>
            Returns the Y axis offset value used when rendering in 3D mode.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Size">
            <summary>
            Gets or sets the size of the rectangular area occupied by the ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Location">
            <summary>
            Gets or sets the location of the rectangular area occupied by this ChartArea.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Series3D">
            <summary>
            Indicates if the ChartArea is to be rendered in 3D. Default value is false.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.RealSeries3D">
            <summary>
            Indicates if the ChartArea is to be rendered in 3D. Default value is false.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Depth">
            <summary>
            Gets or sets the perception of depth that is to be used when the ChartArea is rendered in 3D.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Rotation">
            <summary>
            Gets or sets the rotational angle that is to be used when the ChartArea is rendered in 3D.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Tilt">
            <summary>
            Gets or sets the tilt that is to be used when the ChartArea is rendered in 3D.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Turn">
            <summary>
            Gets or sets the turn that is to be used when the ChartArea is rendered in Real 3D only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.AutoScale">
            <summary>
            Gets or sets a value indicating whether area should scale automatically in 3D mode.
            </summary>
            <value><c>true</c> if area should scale automatically; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.BackInterior">
            <summary>
            Gets or sets the color with which the ChartArea is to be filled initially before any rendering takes place.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.BackImage">
            <summary>
            Gets or sets the image that is to be used as the background for this ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.DivideArea">
            <summary>
            If set to true, the legend will show the series text (for Pie Chart).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.MultiplePies">
            <summary>
            If set to true, multiple pie chart series will be rendered in the same chart area.
            </summary>        
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.RequireAxes">
            <summary>
            Indicates if the ChartArea requires axes to be rendered (for the Chart types being rendered).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.LegacyAppearance">
            <summary>
            Indicates to change the appearance of chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.RequireInvertedAxes">
            <summary>
            Indicates if Chart requires Inverted Axes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Axes">
            <summary>
            Collection of axes associated with this chart. You can add and remove axes from this collection.
            Primary X and Y axes may not be removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.AxisSpacing">
            <summary>
            Gets or sets the spacing between different axes on the same side of the ChartArea. This spacing is useful when you display multiple
            axes side by side.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.PrimaryXAxis">
            <summary>
            The primary X axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.PrimaryYAxis">
            <summary>
            The primary Y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.MinSize">
            <summary>
            Gets or sets the minimum size of this ChartArea.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Scale3DCoeficient">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.ChartAreaMargins">
            <summary>
            Returns the margins that will be deduced from the rectangular area that represents the ChartArea.
            Negative values are supported.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Center">
            <summary>
            Returns the center point of this ChartArea.     
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Radius">
            <summary>
            Returns the radius of the Radar chart occupied by this ChartArea.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.RenderBounds">
            <summary>
            Returns the actual rectangular bounds used for rendering.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.ChartAreaToolTip">
            <summary>
            Gets or sets the ToolTip text associated with this ChartArea.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.ChartPlotAreaMargins">
            <summary>
            Returns the margins of ChartArea (excluding label width and height).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.AdjustPlotAreaMargins">
            <summary>
            Gets or sets the mode of drawing the edge labels.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.AxesInfoBar">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.InteractiveCursors">
            <summary>
            Gets the interactive cursors.
            </summary>
            <value>The interactive cursors.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.CustomPoints">
            <summary>
            Collection of custom points associated with this ChartArea. Custom points can be used to add labels to chart points.    
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection"/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.ChartRegions">
            <summary>
            Gets the chart regions.
            </summary>
            <value>The chart regions.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Transform3D">
            <summary>
            Gets transformation for real 3d mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Settings3D">
            <summary>
            Gets the 3D mode settings.
            </summary>
            <value>The 3D mode settings.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.FullStackMax">
            <summary>
            Gets or sets the maximal value of full stracking charts.
            </summary>
            <value>The maximal value of full stracking charts.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.Chart">
            <summary>
            Gets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.XAxesLayoutMode">
            <summary>
            Gets or sets the X axes layout mode.
            </summary>
            <value>The X axes layout mode.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.YAxesLayoutMode">
            <summary>
            Gets or sets the Y axes layout mode.
            </summary>
            <value>The Y axes layout mode.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartArea.SeriesParameters">
            <summary>
            Gets the series rendering parameters.
            </summary>
            <value>The series parameters.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.#ctor(Syncfusion.Windows.Forms.Chart.IChartAreaHost)">
            <summary>
            Constructor. ChartArea requires a host which implements <see cref="T:Syncfusion.Windows.Forms.Chart.IChartAreaHost"/>. Currently this is implemented
            only by the chart. However, it is possible that other controls that wish to aggregate the chart will implement this
            interface.    
            </summary>
            <param name="chart" type="Syncfusion.Windows.Forms.Chart.IChartAreaHost">
                <para>
                Host interface.   
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.Draw(System.Windows.Forms.PaintEventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.Draw(System.Windows.Forms.PaintEventArgs,Syncfusion.Windows.Forms.Chart.ChartPaintFlags)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.DrawZoomingRange(System.Drawing.Graphics)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetSeriesBounds(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Gets the series bounds.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetXAxis(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Returns the x axis associated with this chartseries.
            </summary>
            <param name="series">A ChartSeries whose ChartAxis we are interested in.</param>
            <returns>The corresponding ChartAxis.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetYAxis(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Returns the y axis associated with this chartseries.
            </summary>
            <param name="series">A ChartSeries whose ChartAxis we are interested in.</param>
            <returns>The corresponding ChartAxis.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.CalculateSizes(System.Drawing.Rectangle)">
            <summary>
            Arranges the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartArea"/> elements.
            </summary>
            <param name="rect">The bounds of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartArea"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetValueByPoint(System.Drawing.Point)">
            <summary>
            Returns the chartpoint value at this real point (in client co-ordinates).
            </summary>
            <returns>The corresponding ChartPoint.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetPointByValue(Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Gets the real point value at this chart point.
            </summary>
            <returns>The corresponding Point in client-coordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetPointByValue(Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Gets the real point value at this chart point. Use this method when multiple axes are used in the chart
            </summary>
            <returns>The corresponding Point in client-coordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.DisposeSeriesStyle">
            <summary>
            Method to dispose series style of chart area
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.Draw2D(System.Windows.Forms.PaintEventArgs,Syncfusion.Windows.Forms.Chart.ChartPaintFlags)">
            <summary>
            Draws the 2D dimentions area.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
            <param name="flags">The flags.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.DrawSymbol(System.Drawing.PointF,System.Drawing.Graphics)">
             <summary>
            Draws the Symbol for each point
             </summary>
             <param name="curpos">The <see cref="T:System.Drawing.PointF"/>Get the Cursor position.</param>
             <param name="g">The <see cref="T:System.Drawing.Graphics"/>graphics to draw the symbol.</param>        
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.SetSeriesSymbolForCursor(Syncfusion.Windows.Forms.Chart.ChartSymbolInfo)">
             <summary>
            Sets the  customized symbol for series points when moving the interactive cursor. 
             </summary>
             <param name="symbolInfo">The ChartSymbolInfo </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.DrawAxes(System.Drawing.Graphics)">
            <summary>
            Render the axes.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> axes render to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.DrawRadarAxes(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Draws the radar axes.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> axes render to.</param>
            <param name="xAxis">The X axis.</param>
            <param name="yAxis">The Y axis.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.DrawCustomPoints(Syncfusion.Windows.Forms.Chart.ChartGraph)">
            <summary>
            Draws the custom points.
            </summary>
            <param name="graph">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartGraph"/> points render to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetRadarPen(Syncfusion.Windows.Forms.Chart.ChartAxis,System.Int32)">
            <summary>
            This method will return the specified pen from the specified axis's Pens collection.
            Currently, This method is used only for Polar and Radar chart types.
            </summary>
            <param name="axis">The axis.</param>
            <param name="index">The index of the pen in the Axis's Pens collection.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.DrawGrid(Syncfusion.Windows.Forms.Chart.ChartGraph)">
            <summary>
            Draws the grid.
            </summary>
            <param name="graph">The graph.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.DrawStripLines(Syncfusion.Windows.Forms.Chart.ChartGraph,Syncfusion.Windows.Forms.Chart.ChartStripLineZorder)">
            <summary>
            Draws the strip lines.
            </summary>
            <param name="graph">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartGraph"/>.</param>
            <param name="zOrder"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.DrawSimpleGrid(Syncfusion.Windows.Forms.Chart.ChartGraph,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.Matrix,System.Nullable{Syncfusion.Windows.Forms.Chart.ChartOrientation})">
            <summary>
            Draws the axis lines.
            </summary>
            <param name="graph">The graph.</param>
            <param name="bounds">The bounds.</param>
            <param name="opposedBounds">Bounds for 3D axis at opposed position</param>
            <param name="transform">Transformation matrix for 3D axis at normal position</param>
            <param name="opposedTransform">Transformation matrix for 3D axis at opposed position</param>
            <param name="orientation">The orientation.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetRadarPath(System.Drawing.PointF,System.Single,System.Boolean,System.Int32)">
            <summary>
            Gets the radar path.
            </summary>
            <param name="center">The center.</param>
            <param name="radius">The radius.</param>
            <param name="isRadar">if set to <c>true</c> [is radar].</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetStripLineRects(Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartStripLine)">
            <summary>
            Gets the strip line rects.
            </summary>
            <param name="axis">The axis.</param>
            <param name="stripLine">The strip line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetCustomPointLocation(Syncfusion.Windows.Forms.Chart.ChartCustomPoint)">
            <summary>
            Gets the custom point location.
            </summary>
            <param name="customPoint">The custom point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.Draw3D(System.Windows.Forms.PaintEventArgs,Syncfusion.Windows.Forms.Chart.ChartPaintFlags)">
            <summary>
            Draws the 3D dimentions area.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
            <param name="flags">The flags.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.DrawGrid(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            Draws the grid.
            </summary>
            <param name="g">The <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.DrawAxes(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            Draws the axes.
            </summary>
            <param name="g">The <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.DrawRadarAxes(Syncfusion.Windows.Forms.Chart.Graphics3D,Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Draws the radar axes.
            </summary>
            <param name="g">The <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/>.</param>
            <param name="xAxis">The X axis.</param>
            <param name="yAxis">The Y axis.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.UpdateTransform3D">
            <summary>
            Updates the real 3D transform.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.CreateWorkPlane(System.Single)">
            <summary>
            Creates the work plane.
            </summary>
            <param name="z">The Z coordinate.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.DrawCustomPoints(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            Draws the custom points.
            </summary>
            <param name="g">The <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.DrawStripLines(Syncfusion.Windows.Forms.Chart.Graphics3D,Syncfusion.Windows.Forms.Chart.ChartStripLineZorder)">
            <summary>
            Draws the strip lines.
            </summary>
            <param name="g">The <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/>.</param>
            <param name="zOrder"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.ShouldSerializeBackInterior">
            <summary>
            Indicates whether the background interior should be  serialized.
            </summary>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.ShouldSerializeAxisSpacing">
            <summary>
            Indicates whether the axis spacing should be serialized
            </summary>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetPointByValueInternal(Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Gets the point by value internal.
            </summary>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param>
            <param name="cpt">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetPointByValueInternalMulAxes(Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Gets the point by value internal. This method is used only when multiple axes are used in the chart
            </summary>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param>
            <param name="cpt">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetPointByValueNormal(Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Gets the point by value normal.
            </summary>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param>
            <param name="cpt">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetPointByValueNormalMulAxes(Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Gets the point by value normal. This method is used only when multiple axes are used in the chart.
            </summary>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param>
            <param name="cpt">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetPointByValueInversed(Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Gets the point by value inversed.
            </summary>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param>
            <param name="cpt">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetValueByPointInversed(Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis,System.Drawing.Point)">
            <summary>
            Gets the value by point inversed.
            </summary>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param>
            <param name="pt">The point on chart.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetValueByPointNormal(Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis,System.Drawing.Point)">
            <summary>
            Gets the value by point normal.
            </summary>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param>
            <param name="pt">The The point on chart.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetValueByPointPolar(Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis,System.Drawing.Point)">
            <summary>
            Gets the value by point polar.
            </summary>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param>
            <param name="pt">The The point on chart.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetPointByValuePolar(Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Gets the point by value polar.
            </summary>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param>
            <param name="cpt">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.CalculateAxesSizes">
            <summary>
            Arranges the axes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.CalculateLabelSizes(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Calculates the label sizes.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">The RectangleF</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.OnAxesChanged(Syncfusion.Windows.Forms.Chart.ChartBaseList,Syncfusion.Windows.Forms.Chart.ChartListChangeArgs)">
            <summary>
            Called when axes is changed.
            </summary>
            <param name="list">The list.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.OnCustomPointsListChanged(Syncfusion.Windows.Forms.Chart.ChartBaseList,Syncfusion.Windows.Forms.Chart.ChartListChangeArgs)">
            <summary>
            Called when custom points list is changed.
            </summary>
            <param name="list">The list.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.OnInteractiveCursorsChanged(Syncfusion.Windows.Forms.Chart.ChartBaseList,Syncfusion.Windows.Forms.Chart.ChartListChangeArgs)">
            <summary>
            Called when interactive cursors collection is changed.
            </summary>
            <param name="list">The list.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.OnChartAreaFormatLabel(System.Object,Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs)">
            <summary>
            Called when it's need to apply label format.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.ApearanceChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the axes apearances was changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.Redraw(System.Boolean)">
            <summary>
            Redraws by the specified update.
            </summary>
            <param name="update">if set to <c>true</c> chart will be updated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetBoundsByRect(System.Drawing.Rectangle)">
            <summary>
            Gets the bounds by rect.
            </summary>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetGlobalBoundsByRect(System.Drawing.Rectangle)">
            <summary>
            Gets the global bounds by rect.
            </summary>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.CorrectionFrom(System.Drawing.Point)">
            <summary>
            Transforms the specified point to the chart plane.
            </summary>
            <param name="pt"></param>
            <returns></returns>
            <remarks>
             Only for real 3D mode.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.CorrectionFrom(System.Drawing.PointF)">
            <summary>
            Transforms the specified point to the screen plane.
            </summary>
            <param name="pt"></param>
            <returns></returns>
            <remarks>
             Only for real 3D mode.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.DoAppearanceChange">
            <summary>
            Change the default appearance of chart.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.CorrectionTo(System.Drawing.Point)">
            <summary>
            Transforms the specified point to the screen plane.
            </summary>
            <param name="pt"></param>
            <returns></returns>
            <remarks>
             Only for real 3D mode.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.CorrectionTo(System.Drawing.PointF)">
            <summary>
            Transforms the specified point to the chart plane.
            </summary>
            <param name="pt"></param>
            <returns></returns>
            <remarks>
             Only for real 3D mode.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.IsPaintFlag(Syncfusion.Windows.Forms.Chart.ChartPaintFlags,Syncfusion.Windows.Forms.Chart.ChartPaintFlags)">
            <summary>
            Calculates  given flag state.
            </summary>
            <param name="target">The target.</param>
            <param name="flag">The flag.</param>
            <returns>
            	<c>true</c> if the specified flag is present in the specified value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.RoundRotation(System.Single)">
            <summary>
            Rounds the rotation.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetRadarRadius(System.Single)">
            <summary>
            Gets the radar radius by the specified font size.
            </summary>
            <param name="fontHeight">Height of the font.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.OnChangingRedraw(System.Object,System.EventArgs)">
            <summary>
            Called when is need to redraw the chart.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetFrontBoundByAxes">
            <summary>
            Gets the front bound by axes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetFrontBoundByAxes(System.Boolean)">
            <summary>
            Gets the front bound by axes.
            </summary>
            <param name="byAllAxes">if set to <c>true</c> [by all axes].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetAxesRect(Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Returns the rectangle encompassing the specified axes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.GetChartRegion(System.Int32)">
            <summary>
            Returns the ChartRegion at the specified index value.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.CalculateXZoomFactorAndZoomPosition(System.Drawing.PointF,System.Drawing.PointF,System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Calculates zoomfactor and zoomposition for x axis.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartArea.CalculateYZoomFactorAndZoomPosition(System.Drawing.PointF,System.Drawing.PointF,System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Calculates zoomfactor and zoomposition for y axis.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.UpdateClientBounds">
            <summary>
            Gets a value indicating whether client bounds will be updated or not.
            </summary>
            <value>
            	<c>true</c> if skin style is set for border appearance, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.IsIndexed">
            <summary>
            Gets or sets a value indicating whether this instance is indexed.
            </summary>
            <value>
            	<c>true</c> if this instance is indexed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.IsAllowGap">
            <summary>
            Gets or sets a value indicating whether this instance is indexed with gap or not when empty points are used.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.CursorReDraw">
            <summary>
            Gets or sets whether  the cursor need to redraw or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.CursorLocation">
            <summary>
            Gets or sets the cursor location of chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Chart">
            <summary>
            Owner of this chart area.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.BorderWidth">
            <summary>
            Gets or sets the border width of the ChartArea. Default is 1.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.BorderColor">
            <summary>
            Gets or sets the bordercolor of the ChartArea. Default is SystemColors.ControlText.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.BorderStyle">
            <summary>
            Gets or sets the style of the border that is to be rendered around the ChartArea. Default is None.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Width">
            <summary>
            Gets or sets the width of the rectangular area that is to be occupied by this ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Height">
            <summary>
            Gets or sets the height of the rectangular area that is to be occupied by this ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Top">
            <summary>
            Returns the y coordinate of the top edge of the rectangular area that is to be occupied by this ChartArea.     
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Right">
            <summary>
            Returns the x coordinate of the right edge of the rectangular area that is to be occupied by the ChartArea.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Left">
            <summary>
            Returns the x coordinate of the left edge of the rectangular area that is to be occupied by the ChartArea.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Bottom">
            <summary>
            Returns the y coordinate of the bottom edge of the rectangular area that is to be occupied by this ChartArea.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Bounds">
            <summary>
            Returns the bounds occupied by this ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.ClientRectangle">
            <summary>
            Returns the Rectangle in client co-ordinates that is occupied by this ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Size">
            <summary>
            Gets or sets the size of the rectangular area that is to be occupied by the ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Location">
            <summary>
                Gets or sets the location of the rectangular area that is to be occupied by this ChartArea.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Radius">
            <summary>
            Returns the radius of the Radar chart occupied by this ChartArea.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.DivideArea">
            <summary>
            Gets or sets a value indicating whether area should be divided for each simple chart (Pie, Funnel...).
            </summary>
            <value><c>true</c> if area should be divided; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.MultiplePies">
            <summary>
            If set to true, multiple pie chart series will be rendered in the same chart area.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.ReDrawAxes">
            <summary>
            If set to true, Chart axes labels will be rendered each time chart updates.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Center">
            <summary>
            Returns the center point of this ChartArea.     
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.RenderGlobalBounds">
            <summary>
            Returns the global rectangular bounds used for rendering.  
            </summary>
            <value>The render global bounds.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.RenderBounds">
            <summary>
            Returns the actual rectangular bounds used for rendering.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.ChartAreaMargins">
            <summary>
            Returns the margins that will be deduced from the rectangular area that represents the ChartArea.
            Negative values are supported.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.OffsetX">
            <summary>
            Returns the X axis offset value that is to be used when rendering in 3D mode.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.OffsetY">
            <summary>
            Returns the Y axis offset value that is to be used when rendering in 3D mode.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Series3D">
            <summary>
            Indicates whether the ChartArea is to be rendered in 3D. Default value is false.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.RealSeries3D">
            <summary>
            Indicates whether the ChartArea is to be rendered in 3D. Default value is false.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Depth">
            <summary>
            Gets or sets the perception of depth that is to be used when the ChartArea is rendered in 3D. Default is 50.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Rotation">
            <summary>
            Gets or sets the rotational angle that is to be used when the ChartArea is rendered in 3D. Default is 30.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Tilt">
            <summary>
            Gets or sets the tilt that is to be used when the ChartArea is rendered in 3D. Default is 30.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Turn">
            <summary>
            Gets or sets the turn that is to be used when the ChartArea is rendered in real 3D only. Default is 0.0f.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.AutoScale">
            <summary>
            Gets or sets a value indicating whether area should scale automatically in 3D mode.
            </summary>
            <value>
            	<c>true</c> if area should scale automatically; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Scale3DCoeficient">
            <summary>
            Gets or sets a scale value in 3D mode.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Transform3D">
            <summary>
            Gets transformation for real 3d mode.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Settings3D">
            <summary>
            Gets the real 3D mode settings.
            </summary>
            <value>The real 3D mode settings.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.BackInterior">
            <summary>
            Gets or sets the background brush of the chart area.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.GridBackInterior">
            <summary>
            Gets or sets the grid back interior.
            </summary>
            <value>The grid back interior.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.BackImage">
            <summary>
            Gets or sets the image that is to be used as the background for this ChartArea.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.InteriorBackImage">
            <summary>
            Gets or sets the image that is to be used as the background for this ChartArea Interior.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.RequireAxes">
            <summary>
            Specifies whether the ChartArea requires axes to be rendered (for the Chart types being rendered).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.LegacyAppearance">
            <summary>
            Specifies whether to change the appearance of chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.RequireInvertedAxes">
            <summary>
            Indicates whether Chart requires Inverted Axes
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Axes">
            <summary>
            Collection of axes associated with this chart. You can add and remove axes from this collection.
            Primary X and Y axes may not be removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.AxisSpacing">
            <summary>
            Gets or sets the spacing between different axes on the same side of the ChartArea. This spacing is useful when you display multiple
            axes side by side.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.PrimaryXAxis">
            <summary>
            The primary X axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.PrimaryYAxis">
            <summary>
            The primary Y axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.MinSize">
            <summary>
            Gets or sets the minimum size of this ChartArea.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.ChartPlotAreaMargins">
            <summary>
            Returns the margins of ChartArea (excluding label width and height).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.AdjustPlotAreaMargins">
            <summary>
            Gets or sets the mode of drawing the edge labels. Default is AutoSet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.AxesInfoBar">
            <summary>
            Gets the information of axes bar representation.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.FullStackMax">
            <summary>
            Gets or sets the maximal value of full stracking charts.
            </summary>
            <value>The maximal value of full stracking charts.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.XAxesLayoutMode">
            <summary>
            Specifies the way in which multiple X-axes will be rendered. Default is Stacking.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.YAxesLayoutMode">
            <summary>
            Specifies the way in which multiple Y-axes will be rendered. Default is Stacking.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.XLayouts">
            <summary>
            Gets the X axes layouts.
            </summary>
            <value>The X axes layouts.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.YLayouts">
            <summary>
            Gets the Y axes layouts.
            </summary>
            <value>The Y axes layouts.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.NeedRedraw">
            <summary>
            Gets or sets the current Redraw flag state. If true, the ChartArea representation is out of date and needs to be refreshed.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.HidePartialLabels">
            <summary>
            Indicates whether partially visible axis labels are hidden.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.RotateCenter">
            <summary>
            Obsolete.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.VisibleAllPies">
            <summary>
            In a PieChart, if set to false, the legend will be displayed with one legend item for each slice in the Pie. Default is false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.ChartRegions">
            <summary>
            List of chart regions
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.AxesSideBySide">
            <summary>
            Old (obsolete) property. Use XAxesLayoutMode and YAxesLayoutMode instead. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.TextRenderingHint">
            <summary>
            Gets or sets the quality of text rendering. Default is AntiAlias.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.BoundsByAxes">
            <summary>
            Indicates if <see cref="P:Syncfusion.Windows.Forms.Chart.ChartArea.RenderBounds"/> is calculated by including the label width and height of the axes. Default is true. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.Watermark">
            <summary>
            Gets the water mark information.
            </summary>
            <value>The water mark.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.ChartAreaToolTip">
            <summary>
            Gets or sets the ToolTip text associated with this ChartArea.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.InteractiveCursors">
            <summary>
            Collection of interactive cursors that renders custom cursors on the chart area.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.CustomPoints">
            <summary>
            Collection of custom points that are to be rendered in this ChartArea. 
            Custom points can be added as markers at a specific location in the chart.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartCustomPointCollection"/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.SeriesParameters">
            <summary>
            Gets the series rendering parameters.
            </summary>
            <value>The series parameters.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.DrawingMode">
            <summary>
            Gets the drawing mode.
            </summary>
            <value>The drawing mode.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.AxesType">
            <summary>
            Gets or sets the type of the axes.
            </summary>
            <value>The type of the axes.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.BackMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.BottomMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.TopMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.LeftMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartArea.RightMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartImageBorder">
            <summary>
            Provides methods to drawing the border by images.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageBorder.#ctor(System.Resources.ResourceManager,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartImageBorder"/> class.
            </summary>
            <param name="resources">The resources.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageBorder.Draw(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Color)">
            <summary>
            Draws the specified g.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="baseColor">Color of the base.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageBorder.Build(System.Drawing.RectangleF)">
            <summary>
            Builds the specified rect.
            </summary>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageBorder.GetRegion(System.Drawing.RectangleF)">
            <summary>
            Gets the region.
            </summary>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageBorder.DrawImage(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the image.
            </summary>
            <param name="g">The g.</param>
            <param name="srcRect">The SRC rect.</param>
            <param name="destRect">The dest rect.</param>
            <param name="attr">The attr.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageBorder.GetRecolorAttributes(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageBorder.GetRegion(System.Drawing.Bitmap,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Gets the region.
            </summary>
            <param name="bmp">The <see cref="T:System.Drawing.Bitmap"/>.</param>
            <param name="rect">The rect.</param>
            <param name="maskColor">Color of the mask.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageBorder.ParseRectangle(System.String)">
            <summary>
            Parses the rectangle.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartImageBorder.ParseColor(System.String)">
            <summary>
            Parses the color.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartImageBorder.Padding">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBorderSkinStyle">
            <summary>
            Specifies the border skin style.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderSkinStyle.None">
            <summary>
            Simple (Flat) border
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderSkinStyle.Emboss">
            <summary>
            An embossed style of border skin is used. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderSkinStyle.Bevel">
            <summary>
            A bevel style of border skin is used. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderSkinStyle.Embed">
            <summary>
            An embed style of border skin is used. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderSkinStyle.Frame">
            <summary>
            A frame style of border skin is used. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderSkinStyle.Pinned">
            <summary>
            A pinned style of border skin is used. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderSkinStyle.Open">
            <summary>
            An open style of border skin is used. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderSkinStyle.RoundedDiagonal">
            <summary>
            A roundedDiagonal style of border skin is used. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderSkinStyle.Slice">
            <summary>
            A slice style of border skin is used. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderSkinStyle.Projector">
            <summary>
            An projector style of border skin is used. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderSkinStyle.Gel">
            <summary>
            A gel style of border skin is used. 
            </summary>
            <remarks>
             Gel skin doesn't support background interior and background image.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderSkinStyle.Sunken">
            <summary>
            A raised sunken of border skin is used
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderSkinStyle.Etched">
            <summary>
            An etched style of border skin is used. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderSkinStyle.Raised">
            <summary>
            A raised style of border skin is used.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartImageLayout">
            <summary>
            Specifies the position of the image. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartImageLayout.None">
            <summary>
            The image is left-aligned at the top across the control's client rectangle. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartImageLayout.Tile">
            <summary>
            The image is tiled across the control's client rectangle. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartImageLayout.Center">
            <summary>
            The image is centered within the control's client rectangle. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartImageLayout.Stretch">
            <summary>
            The image is stretched across the control's client rectangle. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartImageLayout.Zoom">
            <summary>
            The image is enlarged within the control's client rectangle. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBorderInfo">
            <summary>
            Provides the methods to draws the chart border.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.Draw(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the specified g.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.Dispose">
            <summary>
            Method to dispose ChartBorderInfo objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.ComputeThickness">
            <summary>
            Computes the thickness.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawNoneBorder(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the none border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawEmbossBorder(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the emboss border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawBevelBorder(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the bevel border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawEmbedBorder(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the emboss border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawFrameBorder(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the emboss border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawPinnedBorder(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the pinned border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawOpenBorder(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the emboss border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawRoundedDiagonalBorder(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the rounded diagonal border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawSliceBorder(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the slice border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawProjectorBorder(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the projector border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawGelBorder(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the gel border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawSunkenBorder(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the sunken border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawEtchedBorder(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the etched border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawRaisedBorder(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the raised border.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.RaiseChanged">
            <summary>
            Raises the changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawRoundBevel(System.Drawing.Graphics,System.Drawing.RectangleF,System.Single,System.Single,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Draws the round bevel.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="cornerRadius">The corner radius.</param>
            <param name="bevelRadius">The bevel radius.</param>
            <param name="lightColor1">The light color1.</param>
            <param name="lightColor2">The light color2.</param>
            <param name="darkColor1">The dark color1.</param>
            <param name="darkColor2">The dark color2.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawRoundBevel(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Single,System.Single,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            Draws the round bevel.
            </summary>
            <param name="g">The g.</param>
            <param name="path">The path.</param>
            <param name="rect">The rect.</param>
            <param name="bevelRadius">The bevel radius.</param>
            <param name="cornerRadius">The corner radius.</param>
            <param name="lightColor">Color of the light.</param>
            <param name="darkColor">Color of the dark.</param>
            <param name="rasied">if set to <c>true</c> [rasied].</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.FillPathGradient(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>
            Fills the path gradient.
            </summary>
            <param name="g">The g.</param>
            <param name="path">The path.</param>
            <param name="bounds">The bounds.</param>
            <param name="color1">The color1.</param>
            <param name="color2">The color2.</param>
            <param name="focusScale">The focus scale.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawPathGradient(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,System.Drawing.Color,System.Single,System.Single)">
            <summary>
            Draws the path gradient.
            </summary>
            <param name="g">The g.</param>
            <param name="brushPath">The brush path.</param>
            <param name="bounds">The bounds.</param>
            <param name="path">The path.</param>
            <param name="color1">The color1.</param>
            <param name="color2">The color2.</param>
            <param name="focusScale">The focus scale.</param>
            <param name="width">The width.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawPin(System.Drawing.Graphics,System.Drawing.PointF)">
            <summary>
            Draws the pin.
            </summary>
            <param name="g">The g.</param>
            <param name="center">The center.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.DrawBackground(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Drawing.BrushInfo,System.Drawing.Image,Syncfusion.Windows.Forms.Chart.ChartImageLayout)">
            <summary>
            Draws the background.
            </summary>
            <param name="g">The g.</param>
            <param name="rect">The rect.</param>
            <param name="fillBrush">The fill brush.</param>
            <param name="backgroundImage">The background image.</param>
            <param name="imageLayout">The image layout.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.Interior">
            <summary>
            Gets the interior of border line.
            </summary>
            <value>The interior.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.SkinStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.BaseColor">
            <summary>
            Gets or sets the color of the base.
            </summary>
            <value>The color of the base.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.FrameThickness">
            <summary>
            Gets or sets the frame thickness.
            </summary>
            <value>The frame thickness.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.Thickness">
            <summary>
            Gets the thickness of correct skin style.
            </summary>
            <value>The thickness.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.BevelBorder">
            <summary>
            Gets the bevel border.
            </summary>
            <value>The bevel border.</value>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.Changed">
            <summary>
            Occurs when 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.ChartBorderLineInfo">
            <summary>
            Specifies the border line appearance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.ChartBorderLineInfo.#ctor(Syncfusion.Windows.Forms.Chart.ChartBorderInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.ChartBorderLineInfo"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.ChartBorderLineInfo.Dispose">
            <summary>
            Method to dispose ChartBorderLineInfo object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.ChartBorderLineInfo.CreatePen">
            <summary>
            Creates the pen.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.ChartBorderLineInfo.ForeColor">
            <summary>
            Gets or sets the foreground color.
            </summary>
            <value>The foreground color.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.ChartBorderLineInfo.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorderInfo.ChartBorderLineInfo.DashStyle">
            <summary>
            Gets or sets the dash style.
            </summary>
            <value>The dash style.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar">
            <summary>
            The ChartAxesInfoBar display the labels between the rectangular axes.
            </summary>
            <example>
            ChartArea.AxesInfoBar.Visible = true;
            ChartArea.AxesInfoBar.Text = "";
            ChartArea.AxesInfoBar.ShowBorder = true;
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.#ctor">
            <summary>
            Creates instance of the ChartAxesInfoBar.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.Draw(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Draws to the specified graphics.
            </summary>
            <param name="g">The graphics.</param>
            <param name="xAxis">The x axis.</param>
            <param name="yAxis">The y axis.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.Draw(Syncfusion.Windows.Forms.Chart.Graphics3D,Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="xAxis"></param>
            <param name="yAxis"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.GetCellKey(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="col"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.CorrectRect(System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.CalcCellRect(System.Drawing.RectangleF,System.Drawing.SizeF)">
            <summary>
            
            </summary>
            <param name="mainRect"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.OnChanged(System.EventArgs)">
            <summary>
            Raise changed event with event arguments.
            </summary>
            <param name="e">Event arguments to raise event.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.Changed">
            <summary>
            Occurs when <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar"/> properties was changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.Visible">
            <summary>
            Gets or sets value indicates that bar is visible or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.Text">
            <summary>
            Gets or sets text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.Font">
            <summary>
            Gets or sets <see cref="T:System.Drawing.Font"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.TextColor">
            <summary>
            Gets or sets text color.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.ShowBorder">
            <summary>
            Gets or sets value indicates that need to render border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.Border">
            <summary>
            Gets or sets <see cref="T:Syncfusion.Windows.Forms.Chart.LineInfo"/> of the border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.TextFormat">
            <summary>
            Gets or sets <see cref="T:System.Drawing.StringFormat"/> of the text to render.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxesInfoBar.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets grouping cell's text by its column and row index.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartWaterMarkOrder">
            <summary>
            Represents the watermark
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartWaterMarkOrder.Over">
            <summary>
            The watermark will be rendered over chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartWaterMarkOrder.Behind">
            <summary>
            The watermark will be rendered behind chart.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartWatermark">
            <summary>
            Represents the watermark properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartWatermark.#ctor(Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartWatermark"/> class.
            </summary>
            <param name="chartArea">The chart area.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartWatermark.Draw(Syncfusion.Windows.Forms.Chart.ChartGraph,System.Drawing.RectangleF)">
            <summary>
            Draws watermark by the specified graph.
            </summary>
            <param name="graph">The graph.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartWatermark.Draw(Syncfusion.Windows.Forms.Chart.Graphics3D,System.Drawing.RectangleF,System.Single)">
            <summary>
            Draws watermark by the specified G3D.
            </summary>
            <param name="g3d">The G3D.</param>
            <param name="bounds">The bounds.</param>
            <param name="z">The Z coordinate.</param>
            <returns>Returns Polygon.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartWatermark.ComputeBounds(Syncfusion.Windows.Forms.Chart.ChartGraph,System.Drawing.RectangleF,System.Drawing.RectangleF@,System.Drawing.RectangleF@)">
            <summary>
            Computes the bounds.
            </summary>
            <param name="graph">The graph.</param>
            <param name="bounds">The bounds.</param>
            <param name="imageBounds">The image bounds.</param>
            <param name="textBounds">The text bounds.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartWatermark.ShouldSerializeFont">
            <summary>
            Indicates whether the font should be serialized.
            </summary>
            <returns>Indicates whether the font should be serialized or not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartWatermark.ShouldSerializeTextColor">
            <summary>
            Indicates whether the text color should be serialized.
            </summary>
            <returns>Indicates whether the text color should be serialized.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartWatermark.ResetFont">
            <summary>
            Resets the font.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartWatermark.ResetTextColor">
            <summary>
            Resets the text color.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartWatermark.Invalidate">
            <summary>
            Invalidates the chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartWatermark.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartWatermark.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartWatermark.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment.
            </summary>
            <value>The vertical alignment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartWatermark.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
            <value>The horizontal alignment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartWatermark.TextColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartWatermark.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartWatermark.ImageSize">
            <summary>
            Gets or sets the size of the image.
            </summary>
            <value>The size of the image.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartWatermark.ZOrder">
            <summary>
            Gets or sets the depth order.
            </summary>
            <value>The depth order.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartWatermark.Margin">
            <summary>
            Gets or sets the margin.
            </summary>
            <value>The margin.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartWatermark.Opacity">
            <summary>
            Gets or sets the opacity.
            </summary>
            <value>The opacity.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartWatermark.IsVisible">
            <summary>
            Gets a value indicating whether watermark is visible.
            </summary>
            <value>
            	<c>True</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartZoomingAction">
            <summary>
            Indicates allowed action with axis.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartZoomingAction.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartZoomingAction.Panning">
            <summary>
            Panning action is allowed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxis">
            <summary>
            The ChartAxis class represents an axis on the plot. An axis can be vertical or horizontal in orientation. There can be several
            axes in a chart. One X axis and one Y axis are treated as the primary X and primary Y axes. These are the ones that are visible by default.
            You can create and add additional axes to the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartArea"/> using its <see cref="P:Syncfusion.Windows.Forms.Chart.ChartArea.Axes"/> collection. Any series
            on the chart can be plotted on any axis that is registered with the chart.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ResetForeColor">
            <summary>
            Resets the fore color to default value.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ResetTitleColor">
            <summary>
            Resets the color of the title to default value.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ResetTickColor">
            <summary>
            Resets the color of the tick.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeDateTimeOffset">
            <summary>
            Determines if the DateTimeOffset property was modified.
            </summary>
            <returns>True if property was modified, otherwise false.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeForeColor">
            <summary>
            Determines if the ForeColor property was changed.
            </summary>
            <returns>True if property was changed, otherwise false.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeTitleColor">
            <summary>
            Determines if the ForeColor property was changed.
            </summary>
            <returns>True if property was changed, otherwise false.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeOriginDate">
            <summary>
            Determines if OriginDate property was changed.
            </summary>
            <returns>True if property was changed, otherwise false.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeSmallTickSize">
            <summary>
            Determines if SmallTickSize property was changed.
            </summary>
            <returns>True if property was changed, otherwise false.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeTickColor">
            <summary>
            Determines if the TickColor property was changed.
            </summary>
            <returns>True if property was changed, otherwise false.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeTickSize">
            <summary>
            Determines if TickSize property was changed.
            </summary>
            <returns>True if property was changed, otherwise false.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeSize">
            <summary>
            Determines if the size property was modified.
            </summary>
            <returns>True if size property was modified, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeRange">
            <summary>
            Determine if the RangeType property was modified.
            </summary>
            <returns>True if Range property was modified, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeOrientation">
            <summary>
            Calculates value indicates that orientation property will be serialized by designer.
            </summary>
            <returns>True if value will be serialized, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ResetOrientation">
            <summary>
            Resets the orientation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ShouldSerializeInterlacedGridInterior">
            <summary>
            Calculates value indicates that orientation property will be serialized by designer.
            </summary>
            <returns>True if value will be serialized, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ResetInterlacedGridInterior">
            <summary>
            Resets the orientation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.#ctor(Syncfusion.Windows.Forms.Chart.ChartOrientation)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/> class.
            </summary>
            <param name="orientation">The orientation.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/> class.
            </summary>
            <param name="isPrimary">if set to <c>true</c> axis is primary.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.SetOwner(Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
            Sets the owner.
            </summary>
            <param name="area">The area.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.Unsubscribe(System.Object)">
            <summary>
            Unsubscribes the specified target from all events.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.Unsubscribe(System.Delegate,System.Object)">
            <summary>
            Unsubscribes object from specified delegate.
            </summary>
            <param name="del">The delegate to unsubscribe.</param>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.GetDimension(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
            Gets the dimension.
            </summary>
            <param name="g">The graphics content.</param>
            <param name="chartarea">The chart area.</param>
            <returns>Dimension.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.CheckFormatLabel">
            <summary>
            Checks whether FormatLabel event of axis is used or not.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.GetDimension(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartArea,System.Drawing.RectangleF)">
            <summary>
            Gets the dimension.
            </summary>
            <param name="g">The g.</param>
            <param name="chartarea">The chartarea.</param>
            <param name="renderBounds">The render bounds.</param>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.GetTitleDimention(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartArea,System.Drawing.RectangleF)">
            <summary>
            Gets the dimension of title.
            </summary>
            <param name="g">The g.</param>
            <param name="chartarea">The chartarea.</param>
            <param name="renderBounds">The render bounds.</param>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawAxis(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
            Draws the axis.
            </summary>
            <param name="g">The g.</param>
            <param name="chartarea">The chartarea.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawAxis(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartArea,System.Drawing.RectangleF)">
            <summary>
            Draws the axis.
            </summary>
            <param name="g">The g.</param>
            <param name="chartarea">The chartarea.</param>
            <param name="labelBounds">Bounds for axis labels</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.CrossAxis(Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
            Cross the axis. Location of the axis is changed based on the specified value.
            </summary>
            <param name="chartarea">The chartarea.</param>
            <internalonly />
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.CrossInvertedAxis(Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
            Cross the Inverted axis. Location of the axis is changed based on the specified value.
            </summary>
            <param name="chartarea">The chartarea.</param>
            <internalonly />
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawAxis(Syncfusion.Windows.Forms.Chart.Graphics3D,Syncfusion.Windows.Forms.Chart.ChartArea,System.Single)">
            <summary>
            Draws the axis.
            </summary>
            <param name="g">The g.</param>
            <param name="chartarea">The chartarea.</param>
            <param name="z">The z.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DockToRectangle(System.Drawing.RectangleF)">
            <summary>
            Docks to specified bounds.
            </summary>
            <param name="rect">The bounds.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.CenteredZoom(System.Double)">
            <summary>
            Changes the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ZoomFactor"/> and the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ZoomPosition"/> by center.
            </summary>
            <param name="factor">The new zoom factor.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ZoomRange(Syncfusion.Windows.Forms.Chart.DoubleRange)">
            <summary>
            Zooms by range.
            </summary>
            <param name="zoomRange"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.MulZoomCenter(System.Double)">
            <summary>
            Multiplies the zoom factor by center.
            </summary>
            <param name="mulFactor">The mul factor.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ResetZoom">
            <summary>
            Resets the zoom.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.Zoom(System.Drawing.PointF,System.Drawing.PointF,System.Double)">
            <summary>
            Zoom axis and updates zoom factor and zoom position.
            </summary>
            <param name="upPoint">The start point of zoomed rectangle.</param>
            <param name="downPoint">The end point of zoomed rectangle.</param>
            <param name="minZoomFactor">The min zoom factor.</param>
            <returns>True if axis was updated, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.SetRange(Syncfusion.Windows.Forms.Chart.MinMaxInfo)">
            <summary>
            The ChartAxis by default creates a display range based on data. If you do not wish to use this
            range you can set this range yourself using this method. When you set a custom range you have to
            set <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.RangeType"/> to <see cref="F:Syncfusion.Windows.Forms.Chart.ChartAxisRangeType.Set"/>.
            </summary>
            <param name="value" type="Syncfusion.Windows.Forms.Chart.MinMaxInfo">
                <para>
                Range information with minimum and maximum values to be used.    
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.SetNiceRange(Syncfusion.Windows.Forms.Chart.DoubleRange,Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType)">
            <summary>
            Sets the nice range.
            </summary>
            <param name="baseRange">The base range.</param>
            <param name="pattingType">Type of the patting.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.Update">
            <summary>
            Marks the axis and related rendering information as out of date.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.Freeze">
            <summary>
            Disables events raising (<see cref="E:Syncfusion.Windows.Forms.Chart.ChartAxis.AppearanceChanged"/>, <see cref="E:Syncfusion.Windows.Forms.Chart.ChartAxis.DimensionsChanged"/>, 
            <see cref="E:Syncfusion.Windows.Forms.Chart.ChartAxis.IntervalsChanged"/>, <see cref="E:Syncfusion.Windows.Forms.Chart.ChartAxis.VisibleRangeChanged"/>).
            </summary>
            <seealso cref="M:Syncfusion.Windows.Forms.Chart.ChartAxis.Melt"/>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.Melt">
            <summary>
            Enables events raising (<see cref="E:Syncfusion.Windows.Forms.Chart.ChartAxis.AppearanceChanged"/>, <see cref="E:Syncfusion.Windows.Forms.Chart.ChartAxis.DimensionsChanged"/>, 
            <see cref="E:Syncfusion.Windows.Forms.Chart.ChartAxis.IntervalsChanged"/>, <see cref="E:Syncfusion.Windows.Forms.Chart.ChartAxis.VisibleRangeChanged"/>).
            </summary>
            <seealso cref="M:Syncfusion.Windows.Forms.Chart.ChartAxis.Freeze"/>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.GetVisibleValue(System.Double)">
            <summary>
            Gets the visible value on the chart by specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.GetRealValue(System.Drawing.PointF)">
            <summary>
            Calculates real value for given point.
            </summary>
            <param name="p">The point to calculate real value.</param>
            <returns>Real value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.GetRealValue(System.Single)">
            <summary>
            Gets the real value in pixels.
            </summary>
            <param name="value">The value.</param>
            <returns>Calculated value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.GetCoordinateFromValue(System.Double)">
            <summary>
            Gets the coordinate from value.
            </summary>
            <param name="value">The value to get coordinate.</param>
            <returns>Coordinate that represent value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.AddBreak(Syncfusion.Windows.Forms.Chart.MinMaxInfo)">
            <summary>
             Add breaks at the specified range.
            </summary>
            <param name="mm">Break's &gt;<see cref="T:Syncfusion.Windows.Forms.Chart.MinMaxInfo"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.AddBreak(System.Double,System.Double)">
            <summary>
            Add breaks at the specified range.
            </summary>
            <param name="from">Value from.</param>
            <param name="to">Value to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ClearBreaks">
            <summary>
             Clears all the breaks.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.CalculateAxisLocation(System.Drawing.RectangleF)">
            <summary>
            Calculates the axis location.
            </summary>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> to place axis.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.CalculateAxis(System.Drawing.RectangleF,System.Drawing.SizeF,System.Single)">
            <summary>
            Calculates the axis layout.
            </summary>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> to place axis.</param>
            <param name="spacing">The spacing.</param>
            <param name="dimension">The dimension.</param>
            <returns><see cref="T:System.Drawing.RectangleF"/> where axis is placed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.SetZoomPositionFromScrollBarValue(System.Double,System.Boolean)">
            <summary>
            Sets the zoom position from scroll bar value.
            </summary>
            <param name="scrollValue">The scroll value.</param>
            <param name="updateVisibleRange">Indicates that visible range need to be recalculated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.GetScrollBarValueFromZoomPosition">
            <summary>
            Calculates scroll bar position from zoom position.
            </summary>
            <returns>Calculated scroll bar position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawInterlacedGrid(Syncfusion.Windows.Forms.Chart.ChartGraph,System.Drawing.RectangleF)">
            <summary>
            Draw grid on the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartArea"/>.
            </summary>
            <param name="graph">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartGraph"/> to draw grid lines.</param>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> to draw lines.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawGridLines(Syncfusion.Windows.Forms.Chart.ChartGraph,System.Drawing.RectangleF)">
            <summary>
            Draw grid on the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartArea"/>.
            </summary>
            <param name="graph">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartGraph"/> to draw grid lines.</param>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> to draw lines.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawInterlacedGrid(Syncfusion.Windows.Forms.Chart.Graphics3D,System.Drawing.RectangleF,System.Single)">
            <summary>
            Draws the interlaced grid.
            </summary>
            <param name="g">The <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/> to render gris lines.</param>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> to draw lines.</param>
            <param name="z">The z-coord.</param>
            <returns>
            	<see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> that represent grid lines.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawGridLines(Syncfusion.Windows.Forms.Chart.Graphics3D,System.Drawing.RectangleF,System.Single)">
            <summary>
            Draws grid's lines.
            </summary>
            <param name="g">The <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/> to render gris lines.</param>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> to draw lines.</param>
            <param name="z">The z-coord.</param>
            <returns>
            	<see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> that represent grid lines.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawBreaks(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Draw breaks.
            </summary>
            <param name="g"><see cref="T:System.Drawing.Graphics"/> to render breaks.</param>
            <param name="rect"><see cref="T:System.Drawing.RectangleF"/> to render breaks.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawBreaks(Syncfusion.Windows.Forms.Chart.Graphics3D,System.Drawing.RectangleF)">
            <summary>
            Draw breaks.
            </summary>
            <param name="g"><see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/> to render breaks.</param>
            <param name="rect"><see cref="T:System.Drawing.RectangleF"/> to render breaks.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.PointToVisibleValue(System.Drawing.PointF)">
            <summary>
            Subtructs location of axis and returns necessary value by orientation.
            </summary>
            <param name="pt"><see cref="T:System.Drawing.PointF"/> to convert.</param>
            <returns>Calculated value by orientation.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ValueToCoeficient(System.Double)">
            <summary>
            Values to coefficient.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
            
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ValueToCoefficient(System.Double)">
            <summary>
            Values to coefficient.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.CoeficientToValue(System.Double)">
            <summary>
            Coefficients to value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
            
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.CoefficientToValue(System.Double)">
            <summary>
            Coeficients to value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.CalculateNiceRange(Syncfusion.Windows.Forms.Chart.DoubleRange@,System.Double@,Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType)">
            <summary>
            Calculates the nice range.
            </summary>
            <param name="range">The range.</param>
            <param name="interval">The interval.</param>
            <param name="paddingType">Type of the padding.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.CalculateNiceInternal(System.Double)">
            <summary>
            Calculates the nice internal.
            </summary>
            <param name="desiredInterval">The desired interval.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.CalculateNiceInternalEx(System.Double)">
            <summary>
            Calculates the nice internal.
            </summary>
            <param name="desiredInterval">The desired interval.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.CalculatePadding(Syncfusion.Windows.Forms.Chart.DoubleRange,System.Double,Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType)">
            <summary>
            Calculates the padding.
            </summary>
            <param name="baseRange">The base range.</param>
            <param name="interval">The interval.</param>
            <param name="paddingType">Type of the padding.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.TweakToZero(Syncfusion.Windows.Forms.Chart.DoubleRange,System.Double)">
            <summary>
            Tweaks to zero.
            </summary>
            <param name="range">The range.</param>
            <param name="interval">The interval.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.OnAppearanceChanged(System.EventArgs)">
            <summary>
            Raises the appearance changed event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.OnDimensionsChanged(System.EventArgs)">
            <summary>
            Raises the dimensions changed event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.OnIntervalsChanged(System.EventArgs)">
            <summary>
            Raises the intervals changed event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.OnVisibleRangeChanged(System.EventArgs)">
            <summary>
            Raises the visible range changed event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.GetOffsetLabel(System.Single)">
            <summary>
            Gets the offset label.
            </summary>
            <param name="sz">The sz.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.SetDefaultOrientation(Syncfusion.Windows.Forms.Chart.ChartOrientation)">
            <summary>
            Sets the default orientation.
            </summary>
            <param name="value">The value to set orientation.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DoTickLabelsLayout(System.Drawing.Graphics,System.Drawing.RectangleF,System.Single,Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
            Perfoms the tick labels layout.
            </summary>
            <param name="g">The graphics content.</param>
            <param name="labelsBounds">The labels bounds.</param>
            <param name="spacing">The spacing.</param>
            <param name="chartarea"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DoGroupingLabelsLayout(System.Drawing.Graphics,System.Single)">
            <summary>
            Updates grouping labels layout.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="spacing">The spacing.</param>
            <returns>Spacing.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawTickLabels(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartArea,System.Drawing.RectangleF)">
            <summary>
            Draws the tick labels.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to draw.</param>
            <param name="chartArea"></param>
            <param name="labelBounds"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawTickLabels(Syncfusion.Windows.Forms.Chart.Graphics3D,System.Collections.IList,System.Single,Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
            Draws all tick labels.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to draw.</param>
            <param name="paths">The paths.</param>
            <param name="z">The z-coord.</param>
            <param name="chartArea"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawTickLabelGrids(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws the tick label grids.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to draw.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/> to draw tick.</param>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> to place tick.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawAxisText(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Draws the axis title.
            </summary>
            <param name="g">The graphics to draw.</param>
            <param name="rect">The rectangle to draw.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawAxisText(Syncfusion.Windows.Forms.Chart.Graphics3D,System.Drawing.RectangleF,System.Single)">
            <summary>
            Reanders axis' text.
            </summary>
            <param name="g">The graphics to render text.</param>
            <param name="rect">The rectangle to render.</param>
            <param name="z">The z-coord.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.OnNeedRedraw(System.Object,System.EventArgs)">
            <summary>
            Handles visual properties changed events.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.OnNeedResize(System.Object,System.EventArgs)">
            <summary>
            Handles layout properties changed events.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.OnRangeChanged(System.Object,System.EventArgs)">
            <summary>
            Called when range is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.OnBreakRangesChanged(System.Object,System.EventArgs)">
            <summary>
            Called when break ranges is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.RaiseFormatLabel(System.Object,Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs)">
            <summary>
            Raises FormatLabel event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.GetMarginsPoint(System.Drawing.Graphics,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Gets the margins point.
            </summary>
            <param name="g">The g.</param>
            <param name="pt">The pt.</param>
            <param name="sz">The sz.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.ConvertToValueType(System.Double)">
            <summary>
            Converts the type of to value.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>Converted value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.SetSmartZoomFactor(System.Double)">
            <summary>
            Returns a nice zoom factor by taking into account the range of the axis.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.GenerateLabel(System.Double,Syncfusion.Windows.Forms.Chart.ChartArea,System.Int32)">
            <summary>
            Generates the label for given value and chart area.
            </summary>
            <param name="value">The value to generate label.</param>
            <param name="area">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartArea"/>.</param>
            <param name="index">The index of label.</param>
            <returns>Generated label.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.GetSmallTicks">
            <summary>
            Gets the small ticks values.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.GetInterlacedGridRects(System.Drawing.RectangleF)">
            <summary>
            Gets the interlaced grid rects.
            </summary>
            <param name="bounds">The bounds.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.CalculateVisibleRange(System.Double,System.Double)">
            <summary>
            Calculates the visible range.
            </summary>
            <param name="zoomFactor">The zoom factor.</param>
            <param name="zoomPosition">The zoom position.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.RecalculateVisibleRange(System.Double,System.Double)">
            <summary>
            This method is for internal purpose do not use in your code. It will trigger VisibleRangeChanged event handlers for the provided zoomfactor and zoomposition values.        
            </summary>
            <param name="zoomFactor">The zoom factor.</param>
            <param name="zoomPosition">The zoom position.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.RecalculateRanges">
            <summary>
            Recalculates the visible ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.InvalidateRanges">
            <summary>
            Invalidates the ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.SortYValues(Syncfusion.Windows.Forms.Chart.ChartArea,Syncfusion.Windows.Forms.Chart.ChartSeries,System.Collections.ArrayList)">
            <summary>
            Sort the X-axis labels based on Y values.
            </summary>        
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.RecalculateVisibleLabels(Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
            Recalculates the visible labels.
            </summary>
            <param name="area">The area.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.Inside(Syncfusion.Windows.Forms.Chart.MinMaxInfo,System.Double)">
            <summary>
            Insides the specified MinMaxInfo.
            </summary>
            <param name="mmi">The MinMaxInfo.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DateTimeToDouble(System.DateTime)">
            <summary>
            Converts the <see cref="T:System.DateTime"/> to <see cref="T:System.Double"/>.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DoubleToDateTime(System.Double)">
            <summary>
            Converts the <see cref="T:System.Double"/> to <see cref="T:System.DateTime"/>.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.SetZooming(System.Double,System.Double)">
            <summary>
            Zoomings the allowed.
            </summary>
            <param name="zoomFactor">The zoom factor.</param>
            <param name="zoomPosition">The zoom position.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.DisposeChartAxis">
            <summary>
            Dispose ChartAxisObject for MVCChartModel
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxis.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.AutoSize">
            <summary>
             Gets or sets a value indicating whether the size of the chart axis should be calculated automatically.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Size">
            <summary>
             Gets or sets the size of this axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Rect">
            <summary>
             Gets or sets the location and size of the rectangular region occupied by the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.RealLength">
            <summary>
             Gets or sets the length of this axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.SortLabels">
            <summary>
             Gets or sets the sorting labels of X axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Dimension">
            <summary>
            Gets or sets the cardinal dimension of the axis object. If the text that is rendered by the axis is of a dimension that is more, then
            that dimension will be used and this dimension is ignored.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Location">
            <summary>
            If LocationType is set to ChartAxisLocationType.Set,
            then this property is used to calculate RenderGlobalBounds
            and in such a way to define location of axes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Crossing">
            <summary>
            Specifies the double value.This property is used to locate the X and Y axes in
            chart area based on the specified value. specified value must be within the
            range of X and Y axes values.
            <para>      </para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LocationType">
            <summary>
            Determines how location of axes is calculated. See <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Location"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LabelAlignment">
            <summary>
            Gets or sets label alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.RotateFromTicks">
            <summary>
             Gets or sets a value indicating whether label is rotate from Ticks while using Far.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Margin">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/> Showa some space as margin.
            </summary>
            <value><c>true</c> if margin; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawTickLabelGrid">
            <summary>
            Gets or sets a value indicating whether label grid is visible.
            </summary>
            <value><c>true</c> if label grid is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.TickLabelGridPadding">
            <summary>
            Gets or sets the tick label grid padding.
            </summary>
            <value>The tick label grid padding.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.BreakRanges">
            <summary>
            Gets the break ranges.
            </summary>
            <value>The break ranges.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.MakeBreaks">
            <summary>
             Indicates whether the breaks should be shown for the specified axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.BreakInfo">
            <summary>
            Gets the break info.
            </summary>
            <value>The break info.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Breaks">
            <summary>
             Gets the breaks for an axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LabelIntersectionActionEffect">
            <summary>
            Gets or sets the Label intersection control option.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectionActionEffect"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.RequireInvertedAxes">
            <summary>
            Gets or sets a value indicating whether require inverted axes.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Indexed">
            <summary>
            This property is for internal use. Do not try to set it manually.
            It indicates whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/> is indexed. Indexed axes
            have only positional value. They do not actually plot value data; only the position of the data
            is used for plotting. You may read the value, but do not set it manually.
            </summary>
            <value>
            	<c>true</c> if axis is indexed; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ScaleLabels">
            <summary>
            Gets or sets a value indicating whether labels can be scaled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.AutoValueType">
            <summary>
            Gets or sets a value indicating whether the value type of this axis will be automatically assigned. Default is false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.SmartDateZoom">
            <summary>
            Gets or sets a value indicating whether to set zoom factor and labels format 
            according to the improved date time zoom logic or to use default zooming behaviour.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.SmartDateZoomLabelsCulture">
            <summary>
            Gets or sets a value indicating whether to set zoom factor 
            and labels format according improved date time zoom logic or
            to use default zooming behaviour.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.SmartDateZoomYearLevelLabelFormat">
            <summary>
            Gets or sets a value indicating whether to set zoom factor 
            and labels format according improved date time zoom logic or
            to use default zooming behaviour. Default is "y".
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.SmartDateZoomMonthLevelLabelFormat">
            <summary>
            Gets or sets a value indicating whether to set zoom factor 
            and labels format according improved date time zoom logic or
            to use default zooming behaviour. Default is "MMMM d, yyyy"
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.SmartDateZoomDayLevelLabelFormat">
            <summary>
            Indicates whether to set zoom factor 
            and labels format according improved date time zoom logic or
            to use default zooming behaviour. Default is "g"
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.SmartDateZoomWeekLevelLabelFormat">
            <summary>
            Gets or sets a value indicating whether to set zoom factor 
            and labels format according improved date time zoom logic or
            to use default zooming behaviour. Default is "MMM, ddd d, yyyy".
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.SmartDateZoomHourLevelLabelFormat">
            <summary>
            Gets or sets a value indicating whether to set zoom factor 
            and labels format according improved date time zoom logic or
            to use default zooming behaviour. Default is "t".
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.SmartDateZoomMinuteLevelLabelFormat">
            <summary>
            Gets or sets a value indicating whether to set zoom factor and labels format according improved date time zoom logic or
            to use default zooming behaviour. Default is "T".
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.SmartDateZoomSecondLevelLabelFormat">
            <summary>
            Gets or sets a value indicating whether to set zoom factor and labels format according improved date time zoom logic or to use default zooming behaviour. Default is "T".
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.CurrentSmartDateTimeFormat">
            <summary>
            Gets the current smart date time format.
            </summary>
            <value>The current smart date time format.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.InterlacedGrid">
            <summary>
            Gets or sets a value indicating whether interlaced grid is enabled.
            </summary>
            <value><c>true</c> if interlaced grid is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.InterlacedGridInterior">
            <summary>
            Gets or sets the interlaced grid interior.
            </summary>
            <value>The interlaced grid interior.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.EdgeLabelsDrawingMode">
            <summary>
            Gets or sets the edge labels drawing mode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.CustomOrigin">
            <summary>
            By default the axis will calculate the origin of the axis from data contained in the series. Using the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.OriginDate"/>
            and <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Origin"/> properties, you can change this origin. To do so, first set this property to true. Default is false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Origin">
            <summary>
            Gets or sets custom origin for charts containing datas of double value type. By default, the axis will calculate the origin of the axis from data contained in the series. Using the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.OriginDate"/>
            and <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Origin"/> properties, you can change this origin. To enable the origin set with Origin or OriginDate, you have to
            set <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.CustomOrigin"/> to True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.OriginDate">
            <summary>
            Gets or sets custom origin for charts containing datas of DateTime value type. By default the axis will calculate the origin of the axis from data contained in the series. Using the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.OriginDate"/>
            and <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Origin"/> properties, you can change this origin. To enable the origin set with Origin or OriginDate, you have to
            set <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.CustomOrigin"/> to True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.CurrentOrigin">
            <summary>
            Gets the current origin.
            </summary>
            <value>The current origin.</value>        
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.DateTimeFormat">
            <summary>
            This format will be used to format axis labels of type DateTime for display. Default is "g".
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.DateTimeOffset">
            <summary>
            Gets or sets an offset for axis intervals that contain DateTime datas. Depending on the data in the series provided to the Chart, the Chart will calculate and display a range of data on
            the ChartAxis. This will result in major grid lines being rendered along calculated intervals. However, sometimes
            you may wish to offset the calculated grid lines (major) by a certain factor. This is especially useful for DateTime values.
            For example, the default calculation always starts the intervals at Sunday (if the IntervalType is set to weeks). If you wish
            to start the intervals with Monday, you can simply specify a DateTimeOffset of one day. If your axis is not of type DateTime
            and you wish to take advantage of this property, please refer <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Offset"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.DateTimeRange">
            <summary>
                Specify the start and end dates and interval time for the axis. Use this if the data points are of datetime type.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.DateTimeInterval">
            <summary>
                Gets or sets the date time range of this axis as DateTime values.
                Note: it works only if ValueType is DateTime.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.DesiredIntervals">
            <summary>
            Gets or sets the desired number of intervals for the range. Essential Chart includes a sophisticated automatic nice range calculation engine. The goal of this engine is to take
            raw data and convert it into human readable numbers. For example, if your raw numbers are 1.2 - 3.87, nice numbers could
            be 0-5 with 10 intervals of 0.5 each. The ChartAxis can do the same calculation for dates also. It offers precise control over
            how data types are to be interpreted when performing this calculation. With the DesiredIntervals setting, you can request the
            engine to calculate nice numbers such that they result in the number of intervals desired. Due to the nature of the calculation,
            the ChartAxis cannot provide precisely the same number of intervals but it will try to match the value to the extent possible.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.RangePaddingType">
            <summary>
            Gets or sets the padding that will be applied when calculating the axis range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ForceZero">
            <summary>
            Indicates whether one boundary of the calculated range should always be tweaked to zero.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ForceZeroToDouble">
            <summary>
            Indicates whether one boundary of the calculated range should always be tweaked to zero to both positive and negative value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.PreferZero">
            <summary>
            Indicates that you would like one boundary of the calculated range to be tweaked to zero.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.TickAndLabelsDimension">
            <summary>
            Gets the tick and labels dimension.
            </summary>
            <value>The tick and labels dimension.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.GroupingLabelsRowsDimensions">
            <summary>
            Gets the grouping labels rows dimensions.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawGrid">
            <summary>
            Gets or sets a value indicating whether the grid lines associated with the main interval points on the axis are to be rendered. This is
            set to True by default.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ShowAxisLabelTooltip">
            <summary>
            Gets or sets a value indicating whether the tool tip associated with the axis labels are to be rendered. This is
            set to True by default.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ShowCrosshairTooltip">
            <summary>
            Gets or sets a value indicating whether tooltip should be displayed in axis for crosshair or trackball. This is
            set to False by default.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LogLabelsDisplayMode">
            <summary>
            Gets or sets whether labels should be an integer power of log base or not. Applicable only for logarithmic axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.DrawMinorGrid">
            <summary>
            Gets or sets a value indicating whether the minor grid lines associated with the main interval points on the axis are to be rendered. This is
            set to True by default.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.GridDrawMode">
            <summary>
            Gets or sets the grid drawing mode.
            </summary>
            <value>The grid draw mode.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LabelPlacement">
            <summary>
            Gets or sets the label placement on axis. Labels can be placed between ticks only for categorical axis
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.GridLineType">
            <summary>
            Gets the attributes of the axis grid lines. Please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.LineInfo"/> for more information on these attributes and
            how they can change the appearance of the grid lines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.MinorGridLineType">
            <summary>
            Gets the attributes of the axis grid lines. Please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.LineInfo"/> for more information on these attributes and
            how they can change the appearance of the grid lines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.TickDrawingOperationMode">
            <summary>
            Gets or sets the tick drawing operation mode.
            </summary>
            <value>The tick drawing operation mode.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Font">
            <summary>
            Gets or sets the font that is to be used for text that is rendered in association with the axis (such as axis labels).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.TitleFont">
            <summary>
            Gets or sets the title font that is to be used for text that is rendered in association with the axis (such as axis title).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ForeColor">
            <summary>
            Gets or sets the color that is to be used for text that is rendered in association with the axis (such as axis labels).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.TitleColor">
            <summary>
            Gets or sets the title color that is to be used for text that is rendered in association with the axis (such as axis title).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.TitleDrawMode">
            <summary>
            Gets or sets the title draw mode.
            </summary>
            <value>The title draw mode.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Pens">
            <summary>
            Gets or sets a collection of pens by using which internal line of Polar and Radar chart is drawned.        
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Format">
            <summary>
            Gets or sets the format for axis labels. If the value type of the axis is double, this format will be used to format axis labels for display.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.IntervalType">
            <summary>
            Gets or sets a value indicating whether the interval that gets calculated by the nice range calculation engine 
            should be in Years, Months, Weeks, Days, Hours, Minutes, 
            Seconds or MilliSeconds. This setting is used only if the ValueType of the axis is set to DateTime. Default value 
            is Auto.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Inversed">
            <summary>
            Gets or sets a value indicating whether the axis should be reversed. When reversed, the axis will render points from right to left if horizontal and
            top to bottom when vertical.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LabelIntersectAction">
            <summary>
            Gets or sets the label intersect action. Labels can intersect on the axis if they are too close to each other. ChartAxis offers several options to enhance the display
            of the axis when such intersection occurs. Please see <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction"/> for more information.
            </summary>
            <remarks>
            LabelIntersectAction is applicable for horizontally orientated axes only.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.HidePartialLabels">
            <summary>
            Indicates whether partially visible axis labels should be hidden.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LabelRotate">
            <summary>
             Gets or sets a value indicating whether labels can be rotated.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LabelRotateAngle">
            <summary>
            Gets or sets the angle at which labels are to be rotated.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Labels">
            <summary>
            Gets the collection of labels associated with this axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LabelsImpl">
            <summary>
               Use this property to assign a custom implementation of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartAxisLabelModel"/>. If you are working with the
               default label collection, use <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Labels"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.GroupingLabels">
            <summary>
            Collection of grouping labels associated with this axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.GroupingLabelsImpl">
            <summary>
               Use this property to assign a custom implementation of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartAxisLabelModel"/>. If you are working with the
               default label collection, use <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Labels"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LineType">
            <summary>
            Returns attributes of the primary axis line. Please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.LineInfo"/> for more information on these attributes and
            how they can change the appearance of the axis line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LogBase">
            <summary>
            Gets or sets the log base that is to be used when value is logarithimic. Default is base 10.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Offset">
            <summary>
            Gets or sets the Offset. It specifies the offset that should be applied to the automatically calculated range's start value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.PointOffset">
            <summary>
            Gets or sets the PointOffset. It specifies the points offset that should be applied to the automatically calculated range's start value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.OpposedPosition">
            <summary>
            If this axis is a secondary axis, setting this property to True will cause
            it to move to the opposite side of the primary axis. This property is False
            by default.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.AxisLabelPlacement">
            <summary>
            Gets or sets a value indicates whether label is located inside or outside of chart area.
            </summary>
            <value>The legends placement.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Orientation">
            <summary>
            Gets or sets the Orientation of the axis. You cannot change the orientation of primary axes. Primary axes are the ones that are
            created and available by default in the Axes collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Range">
            <summary>
            Gets or sets the range for an axis. By default, the chart will automatically calculate the range that is to be displayed. The range property allows you
            to change this range to be any range of your choice. Set ChartAxis.RangeType to Set for this to take effect.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.RangeType">
            <summary>
             Gets or sets the range type. <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxisRangeType"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.RoundingPlaces">
            <summary>
            Gets or sets the number of places that is to be used for rounding when numbers are used for display (default is 2).
            If this property less zero, rounding is disable.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.SmallTickSize">
            <summary>
            Gets or sets the size of small ticks to be displayed on the axis. By default, small ticks are not displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.SmallTicksPerInterval">
            <summary>
            Gets or sets the number of small ticks to be displayed per major interval. Default is 0.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.StripLines">
            <summary>
            Gets the collection of strip lines. Please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStripLine"/> for more information.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.TickColor">
            <summary>
            Gets or sets the color of ticks that are rendered on the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.TickSize">
            <summary>
            Gets or sets the size of ticks that are rendered on the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Title">
            <summary>
            Gets or sets the title of this axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.TitleSpacing">
            <summary>
            Gets or sets the spacing between title and labels.
            </summary>
            <value>The spacing.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.TitleAlignment">
            <summary>
            Gets or sets the alignment of the axis title.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ToolTip">
            <summary>
            Gets or sets the ToolTip of the axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ValueType">
            <summary>
            Gets or sets the type of value that this axis is displaying. For the types supported, refer to <see cref="T:Syncfusion.Windows.Forms.Chart.ChartValueType"/>.
            </summary>
            <remarks>
            If the <b>ChartValueType.Custom</b> type is set, labels gets from the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LabelsImpl"/> by index or position of label.
            Elsewhere labels is generated by value of label. 
            <p/>
            The <b>ChartValueType.Custom</b> can't guarantee correct position of labels. 
            You can use the other ways to implements the custom labels, such as to use the <see cref="E:Syncfusion.Windows.Forms.Chart.ChartAxis.FormatLabel"/> event.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.TickLabelsDrawingMode">
            <summary>
            Gets or sets the mode of drawing of tick labels.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.VisibleRange">
            <summary>
            Gets the visible range when zoomed.
            </summary>
            <remarks>
            Don't try to change this property manually. The value will be changed if any of related properties is changed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ZoomedRange">
            <summary>
            Gets the range that is currently zoomed in.   
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ZoomFactor">
            <summary>
            Gets or sets the factor that is to be used to calculate Zoomed range.  
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ZoomPosition">
            <summary>
            Gets or sets the minimum value(ZoomPosition) displayed on this axis when zoomed as a fraction of the total range. For example
            if the total range is 20 and the minimum value currently displayed is 10, the ZoomPosition will be
            0.5 (10/20).    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ZoomActions">
            <summary>
            Gets or sets the zoom actions.
            </summary>
            <value>The zoom actions.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.CustomLabelsParameter">
            <summary>
            Gets or sets the the parameter types of <see cref="M:Syncfusion.Windows.Forms.Chart.IChartAxisLabelModel.GetLabelAt(System.Int32)"/> method.
            </summary>
            <value>The parameter type.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.DefaultOrientation">
            <summary>
            Gets the default orientation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Layout">
            <summary>
            Gets or sets the layout.
            </summary>
            <value>The layout.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Primary">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/> is primary.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.VisibleLabels">
            <summary>
            Gets the visible labels.
            </summary>
            <value>The visible labels.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.IsIndexed">
            <summary>
            Gets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/> is indexed.
            </summary>
            <value>
            	<c>true</c> if this instance is indexed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.BreaksEnabled">
            <summary>
            Gets a value indicating whether breaks is enabled.
            </summary>
            <value><c>true</c> if breaks is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ScrollBar">
            <summary>
            Internal property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LabelsOffset">
            <summary>
            Gets or sets LebelsOffset. It specifies the offset that should be applied to the automatically calculated labels.
            </summary>
            <value>The labels offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LabelStringFormat">
            <summary>
            Get or Sets the string format of label.Default value is StringFormat.GenericDefault.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxis.AppearanceChanged">
            <summary>
            Occurs when appearance was changed.
            </summary>
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxis.DimensionsChanged">
            <summary>
            Occurs then dimensions was changed.
            </summary>
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxis.IntervalsChanged">
            <summary>
            Occurs then intervals was changed.
            </summary>
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxis.VisibleRangeChanged">
            <summary>
            Occurs when visible range was changed.
            </summary>
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxis.FormatLabel">
            <summary>
            Event for dynamic formatting of axis labels.
            </summary>
            <example>
            xAxis.FormatLabel += new ChartFormatAxisLabelEventHandler(XAxis_FormatLabel);<p/>
            <b>...</b><p/>
            void XAxis_FormatLabel(object sender, ChartFormatAxisLabelEventArgs args)<p/>
            {<p/>
               args.Label = "Category" + args.Value;<p/>
               args.Handled = true;<p/>
            }
            </example>
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventHandler"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs"/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxis.Zooming">
            <summary>
            Occurs when <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ZoomFactor"/> or <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ZoomPosition"/> properties are changing.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxis.Zoomed">
            <summary>
            Occurs when <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ZoomFactor"/> or <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.ZoomPosition"/> properties are changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBreakLineType">
            <summary>
            Specifies types of break line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBreakLineType.Straight">
            <summary>
            The straight line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBreakLineType.Wave">
            <summary>
            The wave line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBreakLineType.Randomize">
            <summary>
            The randomize line.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBreaksMode">
            <summary>
            Specifies modes of breaks.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBreaksMode.None">
            <summary>
            Breaks isn't used.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBreaksMode.Auto">
            <summary>
            Chart automatically calculate the breaks.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBreaksMode.Manual">
            <summary>
            Breaks is set manually.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisBreakInfo">
            <summary>
            Contains the appearance properties of break lines.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisBreakInfo.DrawBreakLine(System.Drawing.Graphics,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws the break line.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="from">The start point of break line.</param>
            <param name="to">The end point of break line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisBreakInfo.DrawBreakLine(Syncfusion.Windows.Forms.Chart.Graphics3D,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws the break line.
            </summary>
            <param name="g3d">The <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/>.</param>
            <param name="from">The start point of break line.</param>
            <param name="to">The end point of break line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisBreakInfo.GetPen">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisBreakInfo.OnChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:AppearanceChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxisBreakInfo.Changed">
            <summary>
            Occurs when appearance was changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisBreakInfo.LineType">
            <summary>
            Gets or sets the type of the line.
            </summary>
            <value>The type of the line.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisBreakInfo.LineColor">
            <summary>
            Gets or sets the color of the line.
            </summary>
            <value>The color of the line.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisBreakInfo.LineStyle">
            <summary>
            Gets or sets the line style.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisBreakInfo.LineWidth">
            <summary>
            Gets or sets the width of the line.
            </summary>
            <value>The width of the line.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisBreakInfo.LineSpacing">
            <summary>
            Gets or sets the line spacing .
            </summary>
            <value>The line spacing .</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisBreakInfo.SpacingColor">
            <summary>
            Gets or sets the color of the spacing.
            </summary>
            <value>The color of the spacing.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisSegment">
            <summary>
            Specifies the single range segment of axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisSegment.Range">
            <summary>
            Gets or sets the range.
            </summary>
            <value>The range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisSegment.Interval">
            <summary>
            Gets or sets the interval.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisSegment.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisRange">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.#ctor(Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxisRange"/> class.
            </summary>
            <param name="axis">The axis.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.Compute(Syncfusion.Windows.Forms.Chart.ChartSeriesCollection)">
            <summary>
            Computes the breaks by specified series.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.Union(Syncfusion.Windows.Forms.Chart.DoubleRange)">
            <summary>
            Unions the specified range.
            </summary>
            <param name="range">The range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.Exclude(Syncfusion.Windows.Forms.Chart.DoubleRange)">
            <summary>
            Excludes the specified range.
            </summary>
            <param name="range">The range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.IsVisible(System.Double)">
            <summary>
            Determines whether the specified value is visible.
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if the specified value is visible; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.ValueToCoeficient(System.Double)">
            <summary>
            Values to coefficient.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
            
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.ValueToCoefficient(System.Double)">
            <summary>
            Values to coefficient.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
            
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.CoefficientToValue(System.Double)">
            <summary>
            Coefficients to value.
            </summary>
            <param name="coeficient">The coefficient.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.AutoValueToCoeficient(System.Double)">
            <summary>
            Computes coefficient by the specified value for the automatic mode.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
            
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.AutoValueToCoefficient(System.Double)">
            <summary>
            Computes coefficient by the specified value for the automatic mode.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.AutoCoeficientToValue(System.Double)">
            <summary>
            Computes value by the specified coefficient for the automatic mode.
            </summary>
            <param name="coeficient">The coefficient.</param>
            <returns></returns>
            
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.AutoCoefficientToValue(System.Double)">
            <summary>
            Computes value by the specified coefficient for the automatic mode.
            </summary>
            <param name="coeficient">The coefficient.</param>
            <returns></returns>
            
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.ManualValueToCoeficient(System.Double)">
            <summary>
             Computes coefficient by the specified value for the manual mode.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
            
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.ManualValueToCoefficient(System.Double)">
            <summary>
             Computes coefficient by the specified value for the manual mode.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.ManualCoeficientToValue(System.Double)">
            <summary>
            Compute the coefficient of value for manual mode.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
            
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.ManualCoefficientToValue(System.Double)">
            <summary>
            Compute the coefficient of value for manual mode.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.OnChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:AppearanceChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.OnVisibleRangeChanged(System.Object,System.EventArgs)">
            <summary>
            Called when visible range is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisRange.Recalculate">
            <summary>
            Recalculates the ranges.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartAxisRange.Changed">
            <summary>
            Occurs when appearance was changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisRange.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisRange.BreaksMode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisRange.BreakAmount">
            <summary>
            Specifies the minimal ratio of differences between Y values. 
            If this value is 0.25, that means the axis will be broken if more a quarter of the chart space is empty. 
            </summary>
            <remarks>
            The value range is form 0.0 to 1.0.
            </remarks>
            <value>The break amount.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisRange.Segments">
            <summary>
            Gets the segments.
            </summary>
            <value>The segments.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisRange.Breaks">
            <summary>
            Gets the breaks.
            </summary>
            <value>The breaks.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LocationEventArgs">
            <summary>
            Represents the data of <see cref="T:Syncfusion.Windows.Forms.Chart.LocationEventHandler"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LocationEventArgs.#ctor(System.Drawing.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.LocationEventArgs"/> class.
            </summary>
            <param name="location">The location.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LocationEventArgs.Location">
            <summary>
            Gets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LocationEventArgs.Allowed">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Chart.LocationEventArgs"/> is allowed.
            </summary>
            <value><c>true</c> if allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LocationEventHandler">
            <summary>
            Represents the the method that handles the <see cref="E:Syncfusion.Windows.Forms.Chart.ChartDockControl.LocationChanging"/> event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDockingFlags">
            <summary>
            Specifies behavior of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartDockControl"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDockingFlags.None">
            <summary>
            Element doesn't suppport docking or moving.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDockingFlags.Movable">
            <summary>
            Element suppports moving.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDockingFlags.Dockable">
            <summary>
            Element suppports docking.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDockingFlags.All">
            <summary>
            Element supports both behaviours.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDockControl">
            <summary>
            That class that implements the basic functionality of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartDockControl"/> interface.
            </summary>
            <remarks>
            This class can be used as the host for other controls.
            </remarks>
            <example>
            Button button1 = new Button();<p/>
            button1.Text = "Button";<p/>
            chartControl1.DockingManager.Add( new ChartDockControl( button1 ));
            </example>
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartDockingManager"/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartDockControl">
            <summary>
            Represents the properties and events required by the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDockingManager"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartDockControl.Measure(System.Drawing.SizeF)">
            <summary>
            
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartDockControl.LocationChanging">
            <summary>
            Event Raised when the Location of the Legend is changing.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartDockControl.ChartDockChanged">
            <summary>
            Event Raised when the position of the Legend was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartDockControl.ChartAlignmentChanged">
            <summary>
            Event Raised when the Alignment of the Legend was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartDockControl.SizeChanged">
            <summary>
            Event Raised when the size of the Legend was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartDockControl.LocationChanged">
            <summary>
            Event Raised when the location of the Legend was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartDockControl.VisibleChanged">
            <summary>
            Event Raised when the Visible of the Legend was changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartDockControl.Position">
            <summary>
            Get and set the position of the Legend in chartControl.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartDockControl.Alignment">
            <summary>
            Get and set the Alignment of the Legend in chartControl.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartDockControl.Orientation">
            <summary>
            Get and set the Orientation of the Legend in chartControl.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartDockControl.Behavior">
            <summary>
            Get and set the docking as free.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartDockControl.Location">
            <summary>
            Get and set the Location of the Legend.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartDockControl.Size">
            <summary>
            Get and set the Size of the Legend. Its works when the FloatingAutosize property is false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartDockControl.Visible">
            <summary>
            Get and set the Visibility of the Legend in chartControl.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartDockControl.Enabled">
            <summary>
            Gets or sets a value indicating whether the control can respond to user interaction.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDockControl.m_position">
            <summary>
            The dock position of element.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDockControl.m_alignment">
            <summary>
            The alignment of element.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDockControl.m_orientation">
            <summary>
            The orientation of element.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDockControl.m_dockingFree">
            <summary>
            Indicates whether element should be docked.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.IsVisible">
            <summary>
            Ensuring visibility of control
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDockControl"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDockControl"/> class.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.Measure(System.Drawing.SizeF)">
            <summary>
            Measure size of control.
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.OnVisibleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.Control_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseDown event of the Control control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.Control_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseUp event of the Control control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.Control_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the MouseMove event of the Control control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.Control_SizeChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SizeChanged event of the Control control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.Control_LocationChanged(System.Object,System.EventArgs)">
            <summary>
            Event is raised when the location is changing
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.MouseMoveTo(System.Int32,System.Int32)">
            <summary>
            This method is called during the MouseMove event
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.SetOrientationByPosition">
            <summary>
            Specifies the orientation of the dock control based on dock position.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.RaiseChartDockChanged(System.EventArgs)">
            <summary>
            Event is raised when the docking position is changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.RaiseChartAlignmentChanged(System.EventArgs)">
            <summary>
            Event is raised when alignment is changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockControl.CheckLocation(System.Drawing.Point)">
            <summary>
            Checks the location.
            </summary>
            <param name="pt">The pt.</param>
            <returns></returns>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartDockControl.LocationChanging">
            <summary>
            Occurs when Location is changing.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartDockControl.ChartDockChanged">
            <summary>
            Occurs when Position is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartDockControl.ChartAlignmentChanged">
            <summary>
            Occurs when Alignment is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDockControl.Position">
            <summary>
            Specifies the docking position of the control
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDockControl.Alignment">
            <summary>
            Controls the alignment of the Docked Control inside the ChartArea
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDockControl.Orientation">
            <summary>
            Specifies the orientation of the docked control  inside ChartArea
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDockControl.DockingFree">
            <summary>
            Indicates if the control is docking free
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDockControl.Behavior">
            <summary>
            Get and set the docking behaviour.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDockControl.Name">
            <summary>
            Gets or sets the name of the control.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventHandler">
            <summary>
                Delegate that is to be used with ChartControl.
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.  
                </para>
            </param>
            <param name="e" type="Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs">
                <para>
                Event argument.
                </para>
            </param>
            <remarks>
                
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisZoomingEventHandler">
            <summary>
                Delegate that is to be used with ChartAxis.
            </summary>
            <param name="sender" type="object">
                Sender.  
            </param>
            <param name="args" type="Syncfusion.Windows.Forms.Chart.ChartAxisZoomingArgs">
                Event argument.
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs">
            <summary>
              Argument that is to be used with ChartControl.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.#ctor(System.String,System.Double,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
                Constructor.
            </summary>
            <param name="label" type="string">
                <para>
                The text of the label.    
                </para>
            </param>
            <param name="value" type="double">
                <para>
                The value of the point associated with the label.   
                </para>
            </param>
            <param name="axis" type="Syncfusion.Windows.Forms.Chart.ChartAxis">
                <para>
                The axis associated with the label.    
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.AxisOrientation">
            <summary>
                Returns the orientation of the axis for which the label is being generated.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.Handled">
            <summary>
                Indicates whether this event was handled and no further processing is required from the chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.IsAxisPrimary">
            <summary>
                Indicates whether the axis for which the label is being generated is a primary axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.Label">
            <summary>
            Gets or sets the label that is to be rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.ToolTip">
            <summary>
            Gets or sets the tooltip for the label that is to be rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.Value">
            <summary>
                Returns the value associated with the position of the label.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.ValueAsDate">
            <summary>
                Returns the value associated with the position of the label as DateTime.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.Axis">
            <summary>
            Gets the axis.
            </summary>
            <value>The axis.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs.AxisLabelPlacement">
            <summary>
            Gets or sets a value indicates whether every label is located Right or Left of Y-axis and Top or Bottom of X-Axis line.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisZoomingArgs">
            <summary>
            <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxisZoomingArgs"/> is the base class for classes containing event data.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAxisZoomingArgs.#ctor(Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.MinMaxInfo,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxisZoomingArgs"/> class.
            </summary>
            <param name="axis">The axis.</param>
            <param name="range">The range.</param>
            <param name="zoomFactor">The zoom factor.</param>
            <param name="zoomPosition">The zoom position.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisZoomingArgs.Axis">
            <summary>
            Gets the axis.
            </summary>
            <value>The axis.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisZoomingArgs.VisibleRange">
            <summary>
            Gets the new visible range.
            </summary>
            <value>The range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisZoomingArgs.ZoomFactor">
            <summary>
            Gets the zoom factor of current axis.
            </summary>
            <value>The zoom factor.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisZoomingArgs.ZoomPosition">
            <summary>
            Gets the zoom position of current axis.
            </summary>
            <value>The zoom position.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAxisZoomingArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the zooming should be canceled. 
            </summary>
            <value><c>true</c> if zooming is canceled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRegion">
            <summary>
            The Chart Region represents a region on the client area of the Chart control that has a ToolTip.
            It can be a point region. A point region is a region that represents the visual appearance of a point.
            For example, the Rectangle of a Column point. When the ChartRegion represents a chart point, IsChartPoint is set to True.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegion.#ctor(System.Drawing.Region,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegion"/> class.
            </summary>
            <param name="region">The region.</param>
            <param name="seriesIndex">Index of the series.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegion.#ctor(System.Drawing.Region,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegion"/> class.
            </summary>
            <param name="region">The region.</param>
            <param name="seriesIndex">Index of the series.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegion.#ctor(System.Drawing.Region,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegion"/> class.
            </summary>
            <param name="region">The region.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegion.#ctor(System.Drawing.Region,Syncfusion.Windows.Forms.Chart.ChartRegionType,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegion"/> class.
            </summary>
            <param name="region">The region.</param>
            <param name="regionType">Type of the region.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegion.#ctor(System.Drawing.Region,Syncfusion.Windows.Forms.Chart.ChartRegionType,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegion"/> class.
            </summary>
            <param name="region">The region.</param>
            <param name="regionType">Type of the region.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="index">Axis index.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegion.#ctor(System.Drawing.Region,System.Drawing.RectangleF,Syncfusion.Windows.Forms.Chart.ChartRegionType,System.Drawing.PointF,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegion"/> class.
            </summary>
            <param name="region">The region.</param>
            <param name="regionType">Type of the region.</param>
            <param name="bounds">The rectangle bounds.</param>
            <param name="pointF">Point x,y value.</param>
            <param name="seriesIndex">Series Index.</param>
            <param name="pointIndex">Point Index.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegion.#ctor(System.Drawing.Region,Syncfusion.Windows.Forms.Chart.ChartRegionData)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegion"/> class.
            </summary>
            <param name="region">The region.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegion.Dispose">
            <summary>
            Method to dispose ChartRegion object
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.IsChartPoint">
            <summary>
            Indicates whether the region represents a chart point.
            </summary>
            <value>
            	<c>true</c> if this instance is chart point; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.Type">
            <summary>
            Indicates whether the region represents a chart point.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.PointIndex">
            <summary>
            Gets the index of the point.
            </summary>
            <value>The index of the point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.Region">
            <summary>
            Gets or sets the actual region that has the ToolTip.
            </summary>
            <value>The region.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.SeriesIndex">
            <summary>
            Returns the index value of the series that has this region.
            </summary>
            <value>The index of the series.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.AxisIndex">
            <summary>
            Returns the index value of the axis that has this region.
            </summary>
            <value>The index of the axis.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.PointXY">
            <summary>
            Returns the index value of the axis that has this region.
            </summary>
            <value>The index of the axis.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.Bounds">
            <summary>
            Returns the bounds of the rectangle
            </summary>
            <value>The bounds value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.ToolTip">
            <summary>
            Gets or sets the ToolTip of the region.
            </summary>
            <value>The tool tip.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegion.Description">
            <summary>
            Returns the description for this region.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRegionType">
            <summary>
            Lists the types of chart region.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRegionType.SeriesPoint">
            <summary>
            The region is a series point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRegionType.Axis">
            <summary>
            The region is a axes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRegionType.HorAxisLabel">
            <summary>
            The region is a horizontal axis grouping label.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRegionType.VerAxisLabel">
            <summary>
            The region is a vertical axis grouping label.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRegionType.Unknown">
            <summary>
            The region is a unknown element.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRegionType.CalloutLabel">
            <summary>
            The region is a callout datalabel.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRegionType.ChartCustom">
            <summary>
            Anything else not covered.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRegionData">
            <summary>
            Represents the data of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegion"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegionData.#ctor(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegionData"/> class.
            </summary>
            <param name="seriesIndex">Index of the series.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegionData.#ctor(Syncfusion.Windows.Forms.Chart.ChartRegionType,System.Drawing.RectangleF,System.Drawing.PointF,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegionData"/> class.
            </summary>
            <param name="seriesIndex">Type of the region.</param>
            <param name="bounds">The rectangle bounds.</param>
            <param name="pointF">The point x, y position.</param>
            <param name="seriesIndex">Index of the series.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegionData.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegionData"/> class.
            </summary>
            <param name="seriesIndex">Index of the series.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegionData.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegionData"/> class.
            </summary>
            <param name="toolTip">The tool tip.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegionData.#ctor(Syncfusion.Windows.Forms.Chart.ChartRegionType,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegionData"/> class.
            </summary>
            <param name="regionType">Type of the region.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegionData.#ctor(Syncfusion.Windows.Forms.Chart.ChartRegionType,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegionData"/> class.
            </summary>
            <param name="regionType">Type of the region.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="index">Axis index.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegionData.GetChartRegion(System.Drawing.Region)">
            <summary>
            Gets the chart region.
            </summary>
            <param name="region">The region.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegionData.Clone">
            <summary>
            Clones a data.
            </summary>
            <returns>Return ChartRegion Data.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegionData.System#ICloneable#Clone">
            <summary>
            Implementation of interface ICloneable.
            </summary>
            <returns> Returns ChartRegiondata clone. </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegionData.IsChartPoint">
            <summary>
            Indicates whether the region represents a chart point.
            </summary>
            <value>
            	<c>true</c> if this instance is chart point; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegionData.PointIndex">
            <summary>
            Gets the index of the point.
            </summary>
            <value>The index of the point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegionData.SeriesIndex">
            <summary>
            Gets the index of the series.
            </summary>
            <value>The index of the series.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegionData.PointXY">
            <summary>
            Gets the point x,y value
            </summary>
            <value>The x y value of the point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegionData.Bounds">
            <summary>
            Gets the rectangle bounds
            </summary>
            <value>The bounds value of the point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegionData.AxisIndex">
            <summary>
            Gets the index of the Axis.
            </summary>
            <value>The index of the Axis.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegionData.ToolTip">
            <summary>
            Gets or sets the ToolTip for this region.
            </summary>
            <value>The tool tip.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegionData.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegionData.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventHandler">
            <summary>
                Delegate that is to be used with chart region related mouse events.
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.    
                </para>
            </param>
            <param name="e" type="Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs">
                <para>
                Event argument.    
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAreaImageEventHandler">
            <summary>
                Delegate that is to be used with chart area image drawing events.
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.    
                </para>
            </param>
            <param name="e" type="Syncfusion.Windows.Forms.Chart.ChartAreaImageEventArgs">
                <para>
                Event argument.    
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs">
            <summary>
               Argument that is to be used with chart region related mouse events. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs.#ctor(Syncfusion.Windows.Forms.Chart.ChartRegion,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs"/> class.
            </summary>
            <param name="region">The region.</param>
            <param name="clickPoint">The click point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs.#ctor(Syncfusion.Windows.Forms.Chart.ChartRegion,System.Drawing.Point,System.Windows.Forms.MouseButtons)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs"/> class.
            </summary>
            <param name="region">The region.</param>
            <param name="clickPoint">The click point.</param>
            <param name="button">The button.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs.Region">
            <summary>
            Gets the region.
            </summary>
            <value>The region.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs.Point">
            <summary>
            Gets the point.
            </summary>
            <value>The point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRegionMouseEventArgs.Button">
            <summary>
            Gets the button.
            </summary>
            <value>The button.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAreaImageEventArgs">
            <summary>
             Argument that is to be used with chart area image drawing events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAreaImageEventArgs.#ctor(System.Drawing.Image)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAreaImageEventArgs"/> class.
            </summary>
            <param name="BufferImage">The buffer image.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAreaImageEventArgs.BufferImage">
            <summary>
            Gets or sets the buffer image.
            </summary>
            <value>The buffer image.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAreaImageEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAreaImageEventArgs"/> is handled.
            </summary>
            <value><c>true</c> if handled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAreaImageEventArgs.Location">
            <summary>
            Gets or sets the location of the image.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAreaImageEventArgs.Size">
            <summary>
            Gets or sets the size of the image.
            </summary>
            <value>The size.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLayoutMode">
            <summary>
            Specifies how the chart elements will be arranged.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLayoutMode.Stack">
            <summary>
            The elements will be stacked.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLayoutMode.Wrap">
            <summary>
            The elements will be wrapped.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDockingManager">
            <summary>
            ChartDockingManager provides docking feature of chart elements (Legends, Titles, ToolBar...).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDockingManager"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDockingManager"/> class.
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.Freeze">
            <summary>
            This method prevents manager from any processing and firing of events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.Melt">
            <summary>
            This method restores the original state of manager (before freezing).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.Add(Syncfusion.Windows.Forms.Chart.IChartDockControl)">
            <summary>
            Adds the specified control to the ChartDockingManager
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.Remove(Syncfusion.Windows.Forms.Chart.IChartDockControl)">
            <summary>
            Removes the specified control from the Docking manager.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.DoLayout(System.Drawing.Rectangle)">
            <summary>
            Returns the size of the specified rectangle.
            </summary>
            <param name="rect">The bounds of host element.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.Clear">
            <summary>
            Clears all dock controls.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.GetAllControls">
            <summary>
            Returns the controls.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.OnHostMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when mouse is down.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.OnHostMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when mouse is up.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.OnHostMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when mouse is move.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.MoveInWrapDock(Syncfusion.Windows.Forms.Chart.IChartDockControl,System.Drawing.Point)">
            <summary>
            Moves the in wrap dock.
            </summary>
            <param name="dockElement">The dock element.</param>
            <param name="pt">The pt.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.MoveInDock(Syncfusion.Windows.Forms.Chart.IChartDockControl,System.Drawing.Point)">
            <summary>
            Moves the in dock.
            </summary>
            <param name="dockElement">The dock element.</param>
            <param name="pt">The cursor position.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.Dock(Syncfusion.Windows.Forms.Chart.IChartDockControl,System.Drawing.Point)">
            <summary>
            Docks the specified dock element by mouse point.
            </summary>
            <param name="dockElement">The dock element.</param>
            <param name="pt">The pt.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.Move(Syncfusion.Windows.Forms.Chart.IChartDockControl,System.Int32)">
            <summary>
            Moves the specified element to the new index.
            </summary>
            <param name="element">The element.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.SetToCenter(Syncfusion.Windows.Forms.Chart.IChartDockControl,System.Drawing.Rectangle)">
            <summary>
            Sets specified control to the center of specified rectangle.
            </summary>
            <param name="control">The control.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.GetMeasureSize(Syncfusion.Windows.Forms.Chart.ChartDock,System.Drawing.Size)">
            <summary>
            Gets the size of the measure.
            </summary>
            <param name="position">The ChartDock.</param>
            <param name="maxSize">Size of the max.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.GetAlignmentByRect(System.Drawing.Point,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Chart.ChartOrientation)">
            <summary>
            Gets the alignment by rect.
            </summary>
            <param name="pt">The The cursor position.</param>
            <param name="rc">The inner bounds.</param>
            <param name="or">The orientation.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.Control_LocationChanging(System.Object,Syncfusion.Windows.Forms.Chart.LocationEventArgs)">
            <summary>
            Handles the LocationChanging event of the Control control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Syncfusion.Windows.Forms.Chart.LocationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.Control_ChartDockChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ChartDockChanged event of the Control control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.Control_ChartAlignmentChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ChartAlignmentChanged event of the Control control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.RaiseSizeChanged(System.EventArgs)">
            <summary>
            Raises the SizeChanged event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.Control_LocationChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the LocationChanged event of the Control control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.Control_SizeChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SizeChanged event of the Control control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartDockingManager.SizeChanged">
            <summary>
            Event is raised when the size of the docking manager is changed
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDockingManager.Spacing">
            <summary>
            Indicates space between chart elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDockingManager.DockAlignment">
            <summary>
            If it's enable, user can set using mouse alignment for controls.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDockingManager.Placement">
            <summary>
            Determines if the docked element is placed inside or outside the host.
            </summary>
            <value>The placement.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDockingManager.LayoutMode">
            <summary>
            Gets or sets the layout mode.
            </summary>
            <value>The layout mode.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDockingManager.WrapLayouter">
            <summary>
            Implements the wraping of elements.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.WrapLayouter.#ctor(System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDockingManager.WrapLayouter"/> class.
            </summary>
            <param name="isVertical">if set to <c>true</c> [is vertical].</param>
            <param name="spacing">The spacing.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.WrapLayouter.Measure(System.Drawing.Size)">
            <summary>
            Measures elements by the specified size.
            </summary>
            <param name="measureSize">The maximal size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDockingManager.WrapLayouter.Arrange(System.Drawing.Rectangle)">
            <summary>
            Arranges elements by the specified rect.
            </summary>
            <param name="rect">The rect.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDockingManager.WrapLayouter.Elements">
            <summary>
            Gets the elements.
            </summary>
            <value>The elements.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDockingManager.WrapLayouter.Dimension">
            <summary>
            Gets or sets the dimension.
            </summary>
            <value>The dimension.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartAreaHost">
            <summary>
            
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.GetGraphics">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.OnChartFormatAxisLabel(Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartFormatAxisLabelEventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Redraw(System.Boolean)">
            <summary>
            
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Draw(System.Drawing.Image)">
            <summary>
            
            </summary>
            <param name="img"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Draw(System.Drawing.Graphics,System.Drawing.Size)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="sz"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Draw(System.Drawing.Image,System.Drawing.Size)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="sz"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.SaveImage(System.String)">
            <summary>
            Saves the chart as an image in the specified format.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Refresh">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.SeriesChanged(System.Object,Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartAreaHost.GetChartArea">
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartAreaHost.LayoutCompleted">
            <summary>
            Event that will be raised when Chart has completed laying out of axes, legend
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ChartAreaPaint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.IsDesignTime">
            <summary>
            Gets a value indicating whether it's design time.
            </summary>
            <value>
            	<c>true</c> if it's design time; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ActiveIndex">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.AutoHighlight">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.SeriesHighlight">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.HighlightSymbol">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.SeriesHighlightIndex">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ChartRegions">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ClickPoint">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ColumnDrawMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ColumnWidthMode">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ColumnFixedWidth">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.CompatibleSeries">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ElementsSpacing">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.EnableXZooming">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ImprovePerformance">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.FormatAxisLabels">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.EnableYZooming">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Indexed">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.AllowGapForEmptyPoints">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.IndexValues">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.LegendPosition">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Model">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.MouseDownPosition">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.NeedRegionUpdate">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.CalcRegions">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Radar">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Polar">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.RadarStyle">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.RequireAxes">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.RequireInvertedAxes">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Series">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Series3D">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Style3D">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Skins">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.SmoothingMode">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.TextRenderingHint">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Spacing">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.SpacingBetweenSeries">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ZoomFactorX">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ZoomFactorY">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Zooming">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ZoomOutIncrement">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ZoomPositionX">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ZoomPositionY">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.InteractiveCursorMouseDown">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.RealMode3D">
            <summary>
            Gets or sets a value indicating whether is real 3D mode.
            </summary>
            <value><c>true</c> if is real 3D mode; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.DropSeriesPoints">
            <summary>
            Gets or sets a value indicating whether [drop series points].
            </summary>
            <value><c>true</c> if [drop series points]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.NeedPerformance">
            <summary>
            Gets or sets a value indicating whether [improve performance].
            </summary>
            <value><c>true</c> if [improve performance]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ShowLegend">
            <summary>
            Gets or sets a value indicating whether legend is shown.
            </summary>
            <value><c>true</c> if legend is shown; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ChartInterior">
            <summary>
            Gets or sets the interior of axis grid.
            </summary>
            <value>The chart interior.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.BackInterior">
            <summary>
            Gets or sets the color with which the ChartArea is to be filled initially before any rendering takes place.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.BorderAppearance">
            <summary>
            Gets or sets the border appearance style of Chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartAreaHost.ForeColor">
            <summary>
            Gets or sets the color of the fore.
            </summary>
            <value>The color of the fore.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartColorPalette">
            <summary>
            Pre-defined palettes for use with the ChartControl. Palettes are simply a group of colors that
            can be used to provide a better visual appearance when displaying multiple chart series.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.Default">
            <summary>
            Default palette.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.DefaultAlpha">
            <summary>
            Default palette used in older chart versions.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.DefaultOld">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.DefaultOldAlpha">
            <summary>
            Default palette with alpha blending.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.EarthTone">
            <summary>
            Palette containing earth tone colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.Analog">
            <summary>
            Palette containing analog colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.Colorful">
            <summary>
            Colorful palette.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.Nature">
            <summary>
            Palette containing the colors of nature.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.Pastel">
            <summary>
            Palette containing pastel colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.Triad">
            <summary>
            Palette containing triad colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.WarmCold">
            <summary>
            Palette that contains mixed warm and cold colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.GrayScale">
            <summary>
            GrayScale color palette which can be used for monochrome printing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.SkyBlueStyle">
            <summary>
            Palette that contains mixed SkyBlue and Violet colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.RedYellowStyle">
            <summary>
            Palette that contains mixed Red and yellow colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.GreenYellowStyle">
            <summary>
            Palette that contains mixed Green and yellow colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.PinkVioletStyle">
            <summary>
            Palette that contains pink Green and violet colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.Metro">
            <summary>
            Palette that contains Metro colors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorPalette.Custom">
            <summary>
            Custom user assigned color palette.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartColorModel">
            <summary>
            The ChartColorModel class serves as a repository for color information. Color information is used by the chart to render colored series.
            A group of colors is referred to as a palette of colors. You have the option of choosing from several predefined palettes or creating your
            own color palette.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartColorPalette"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartColorModel.Palette"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartColorModel.CustomColors"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColorModel.NumColorsInPalette">
            <summary>
            The number of colors in the ChartColorModel's palette. If the number of series exceeds the number of colors in the palette (16 in the
            current version), colors will be repeated.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.#cctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartColorModel"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartColorModel"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.Dispose">
            <summary>
            Method to dispose Chart color model object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.GetColor(System.Int32)">
            <summary>
            Returns the color (from the palette) corresponding to the specified index value.
            </summary>
            <param name="index" type="int">
              <para>
            	The index value of the color to be returned.
              </para>
            </param>
            <returns>
                A System.Drawing.Color value that is used as the back color for the series.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.CreatePaletteIcon(System.Drawing.Size,Syncfusion.Windows.Forms.Chart.ChartColorPalette,System.Int32)">
            <summary>
            Creates the palette icon.
            </summary>
            <param name="sz">The sz.</param>
            <param name="palette">The palette.</param>
            <param name="colorCount">The color count.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializeSkyBlueStyle">
            <summary>
            Initializes the SkyBlue palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializeRedYellowStyle">
            <summary>
            Initializes the Red-Yellow palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializeGreenYellowStyle">
            <summary>
            Initializes the Green-Yellow palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializePinkVioletStyle">
            <summary>
            Initializes the Pink-Violet palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializeDefaultPalette">
            <summary>
            Initializes the default palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializeDefaultAlphaPalette">
            <summary>
            Initializes the default alpha palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializeDefaultOldAlphaPalette">
            <summary>
            Initializes the default old alpha palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializeDefaultOldPalette">
            <summary>
            Initializes the default old palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializeEarthTonePalette">
            <summary>
            Initializes the earth tone palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializeAnalogPalette">
            <summary>
            Initializes the analog palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializeColorfulPalette">
            <summary>
            Initializes the colorful palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializeNaturePalette">
            <summary>
            Initializes the nature palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializePastelPalette">
            <summary>
            Initializes the pastel palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializeTriadPalette">
            <summary>
            Initializes the triad palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializeWarmColdPalette">
            <summary>
            Initializes the warm cold palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializeGrayScalePalette">
            <summary>
            Initializes the gray scale palette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.InitializePalettes">
            <summary>
            Initializes the palettes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.GetPalette(Syncfusion.Windows.Forms.Chart.ChartColorPalette)">
            <summary>
            Gets the palette.
            </summary>
            <param name="palette">The palette.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorModel.RaiseChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartColorModel.Changed">
            <summary>
            Occurs when palette is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartColorModel.CustomColors">
            <summary>
                Gets or sets the table of custom colors to be used. Series will be colored with color data from this color table. Individual series
                color can still be overriden by specifying style attributes. Palette information is used only when no specific style information
                is available on the color to be used for the series.
                <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartColorModel"/>
                <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartColorModel.Palette"/>
            </summary>
            <value>The custom colors.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartColorModel.Palette">
            <summary>
                Gets or sets the color palette to be used. Series will be colored with color data from this palette (color table). Individual series
                color can still be overriden by specifying style attributes. Palette information is used only when no specific style information
                is available on the color to be used for the series.
                <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartColorModel"/>
                <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartColorModel.CustomColors"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartColorModel.AllowGradient">
            <summary>
            Gets or sets a value indicating whether [allow gradient].
            </summary>
            <value><c>True</c> if [allow gradient]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDataBindModel">
            <summary>
            The default implementation of the IChartSeriesModel.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel">
            <summary>
            Interface that is to be implemented if you want ChartControl to be able to display your data. The default series store is a implementation of IChartSeriesModel. When you implement this interface,
            you can set it as the data underlying any <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> object using the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesModelImpl"/>
            property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetX(System.Int32)">
            <summary>
            Returns the X value of the series at the specified point index.
            </summary>
            <param name="xIndex">The index value of the point.</param>
            <returns>X value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetY(System.Int32)">
            <summary>
            Returns the Y value of the series at the specified point index.
            </summary>
            <param name="xIndex">The index value of the point.</param>
            <returns>Y value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetEmpty(System.Int32)">
            <summary>
            Indicates whether a plottable value is present at the specified point index.
            </summary>
            <param name="xIndex" type="int">
            The index value of the point.
            </param>
            <returns>
                True, if there is a value present at this point index; false otherwise.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.Count">
            <summary>
            Returns the number of points in this series.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.Changed">
            <summary>
            Event that should be raised by any implementation of this interface if data that it holds changes. This will cause the
            chart to be updated accordingly.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel">
             <summary>
             Interface that is to be implemented if you want the ChartControl to be able to display your indexed data (X value is not needed). The ChartControl is totally agnostic
             about the data it displays. Even the default series store is an implementation of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/>. When you implement this interface,
             you can set it as the data underlying any <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> object using the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesIndexedModelImpl"/>. When you
             use this model for a series, you have to set ChartControl's Indexed property to be True.
            
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel.GetY(System.Int32)">
            <summary>
            Returns the Y value of the series at the specified point index. Indexed series do not have an X value.
            </summary>
            <param name="xIndex">The index value of the point.</param>
            <returns>Y value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel.GetEmpty(System.Int32)">
            <summary>
            Indicates whether a plottable value is present at the specified point index.
            </summary>
            <param name="xIndex" type="int">
            The index value of the point.
            </param>
            <returns>
                True, if there is a value present at the specified point index; false otherwise.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel.Count">
            <summary>
            Returns the number of points in this series.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel.Changed">
            <summary>
            Event that should be raised by any implementation of this interface if data that it holds changes. This will cause the
            chart to be updated accordingly.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IUpdateModel.UpdateDataSource(System.Object)">
            <summary>
            Method to update the data source of ChartSeries. Trigger OnSeriesModelChanged event after updating the data source
            </summary>
            <param name="dataSource"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDataBindModel"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDataBindModel"/> class.
            </summary>
            <param name="dataSource">The data source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDataBindModel"/> class.
            </summary>
            <param name="dataSource">The data source that is to be used.</param>
            <param name="dataMember">The data member that holds the label.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.#ctor(System.Object,System.String,System.Windows.Forms.BindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDataBindModel"/> class.
            </summary>
            <param name="dataSource">The data source that is to be used.</param>
            <param name="dataMember">The data member that holds the label.</param>
            <param name="bindingContext">The BindingContext. Set this to be the Form's (hosting the ChartControl) BindingContext.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.UpdateDataSource(System.Object)">
            <summary>
            Update the existing data source with new one
            </summary>
            <param name="dataSource">New data source</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.RaiseChangedEvent(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raise the Changed event.
            </summary>
            <param name="ea">The ItemChanged event data</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.GetX(System.Int32)">
            <summary>
            Implements IChartSeriesModel.GetX
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.GetY(System.Int32)">
            <summary>
            Implements IChartSeriesModel.GetY
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.GetEmpty(System.Int32)">
            <summary>
            Implements IChartSeriesModel.GetEmpty
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.SetEmpty(System.Int32,System.Boolean)">
            <summary>
            Implements SetEmpty
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.GetAppropriateValue(System.Object)">
            <summary>
            Gets the appropriate value.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.GetTimeSpanValue(System.TimeSpan)">
            <summary>
            Gets the time span value.
            </summary>
            <param name="ts">The ts.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.GetPropertyIndex(System.ComponentModel.PropertyDescriptorCollection,System.ComponentModel.PropertyDescriptor,System.String)">
            <summary>
            Gets Property index
            </summary>
            <param name="collection">Property descriptor collection</param>
            <param name="descriptor">Property descriptor</param>
            <param name="propertyName">Name of the property</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.GetPropertyValue(System.ComponentModel.PropertyDescriptorCollection,System.ComponentModel.PropertyDescriptor,System.String,System.Object)">
            <summary>
            Gets the property value
            </summary>
            <param name="collection">Property descriptor collection</param>
            <param name="descriptor">Property descriptor</param>
            <param name="propertyName">Property Name</param>
            <param name="component">Data source component</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.GetPointData(System.Int32)">
            <summary>
            Gets the point data.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.OnListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Called when list is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.GetProperty(System.ComponentModel.PropertyDescriptorCollection,System.String)">
            <summary>
            Gets property 
            </summary>
            <param name="collection">Property descriptor collection</param>
            <param name="propertyName">Name of the property descriptor</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.UpdateProperites">
            <summary>
            Updates the properites.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.XIndex">
            <summary>
            Binds this field to the X Axis
            </summary>
            <value>The index of the X.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.XName">
            <summary>
            Binds this field to the X Axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.YIndexes">
            <summary>
            Binds this fields to the Y Axis
            </summary>
            <value>The Y indexes.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.YNames">
            <summary>
            Binds this fields to the Y Axis
            </summary>
            <value>The Y names.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.XProperty">
            <summary>
            Gets or sets the X property.
            </summary>
            <value>The X property.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDataBindModel.YProperties">
            <summary>
            Gets or sets the X property.
            </summary>
            <value>The X property.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.DataBindTimeSpanUnit">
            <summary>
            Specifies the unit that is to be used by the ChartDataBindModel for handling TimeSpan values.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.DataBindTimeSpanUnit.TotalDays">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.DataBindTimeSpanUnit.TotalHours">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.DataBindTimeSpanUnit.TotalMinutes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.DataBindTimeSpanUnit.TotalSeconds">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.DataBindTimeSpanUnit.TotalMilliseconds">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventHandler">
            <summary>
            This event is raised by the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> class when series class has changed.
            </summary>
            <param name="source" type="object">
                <para>
                Event source.
                </para>
            </param>
            <param name="args" type="Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs">
                <para>
                Event arguments.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartPointMinMax">
            <summary>
            This interface represents the minimum Y value, maximum Y value and the X value at any point in a series.
            This interface is used to compute summary information such as overall series minimum and maximum values for
            rendering the chart. In most cases, you have to simply loop through the Y values at an index and return the minimum
            and maximum values for that point.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartPointMinMax.GetY(System.Int32,System.Int32)">
            <summary>
            Gets the Y.
            </summary>
            <param name="index">The index.</param>
            <param name="yIndex">Index of the y.</param>
            <returns>Returns the Y value.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartPointMinMax.X">
            <summary>
            Gets the X.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartPointMinMax.Min">
            <summary>
            Gets the min.
            </summary>
            <value>The min.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartPointMinMax.Max">
            <summary>
            Gets the max.
            </summary>
            <value>The max.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointMinMax.#ctor(Syncfusion.Windows.Forms.Chart.IChartSeriesModel,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointMinMax"/> class.
            </summary>
            <param name="model">The model.</param>
            <param name="xIndex">Index of the x.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointMinMax.GetY(System.Int32,System.Int32)">
            <summary>
            Gets the Y.
            </summary>
            <param name="index">The index.</param>
            <param name="yIndex">Index of the y.</param>
            <returns>Returns the Y value.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointMinMax.Max">
            <summary>
            Gets the maximum value.
            </summary>
            <value>The maximum value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointMinMax.Min">
            <summary>
            Gets the minimaum value.
            </summary>
            <value>The minimaum value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointMinMax.X">
            <summary>
            Gets the X Value.
            </summary>
            <value>The X Value.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMinMaxEvaluator.CalcMin(System.Double[])">
            <summary>
            Calculates the minimum value.
            </summary>
            <param name="values">The values.</param>
            <returns>Returns the minimum value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMinMaxEvaluator.CalcMax(System.Double[])">
            <summary>
            Calculates  the maximum value.
            </summary>
            <param name="values">The values.</param>
            <returns>Returns the maximum value.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartModel">
            <summary>
            The ChartModel object acts as the central repository of data associated with and displayed by a ChartControl.
            There are three parts to the ChartModel. The first part is the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection"/> instance that is held in the model.
            This collection holds all the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> instances that are registered with and displayed by the Chart. The Chart Model also
            holds a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap"/> instance. This collection maintains a collection of base styles that are registered with it.
            These base styles can be accessed and changed using this collection. Any changes made to base styles will automatically affect all style
            objects that depend on these base styles. Also, in the model is a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartColorModel"/> instance that provides access to several default
            color palettes for use by the ChartControl.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartModel"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.SetChart(Syncfusion.Windows.Forms.Chart.IChartAreaHost)">
            <summary>
            Sets the chart.
            </summary>
            <param name="chartHost">The chart host.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.CheckSeriesCompatibility(Syncfusion.Windows.Forms.Chart.ChartArea,System.Boolean)">
            <summary>
            Checks the series compatibility.
            </summary>
            <param name="chartArea">The chart area.</param>
            <param name="invertedSeriesIsCompatible">If set to <c>true</c> inverted series is compatible.</param>
            <returns>Returns whether inverted series is compatible or not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.Refresh(Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
            Updates the Line series while button click and refresh the model.
            </summary>
            <param name="area">The area.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.UpdateArea(Syncfusion.Windows.Forms.Chart.ChartArea)">
            <summary>
            Updates the axes of chart area.
            </summary>
            <param name="area">The area.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.GetStylesMap">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap"/> associated with this model.
            </summary>
            <returns>Return ChartBaseStylesMap.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.NewSeries">
            <summary>
            Overloaded. Factory method for the creation of new series.
            </summary>
            <returns>Returns ChartSeries.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.NewSeries(System.String)">
            <summary>
            Factory method for the creation of new series.
            </summary>
            <param name="name">Unique name for the new series that is to be created.</param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/>Returns ChartSeries</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.NewSeries(System.String,Syncfusion.Windows.Forms.Chart.ChartSeriesType)">
            <summary>
            Factory method for the creation of new series.
            </summary>
            <param name="name">Unique name for the new series that is to be created.</param>
            <param name="type">The type of the series that is to be created.</param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/>Returns ChartSeries.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.Dispose">
            <summary>
            Method to dispose ChartModel object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.OnSeriesChanged(System.Object,Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs)">
            <summary>
            Called when series is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.GetStackInfo(Syncfusion.Windows.Forms.Chart.IChartArea,Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32,System.Boolean)">
            <summary>
            This method is used when series are rendered stacked. The value returned is a cumulative value of
            Y from all series that are below the series passed in in the contained <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection"/>.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/>
            </summary>
            <param name="chartArea">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartArea"/>.</param>
            <param name="series">Instance of the ChartSeries.</param>
            <param name="pointIndex">The index value of the point.</param>
            <param name="isWithMe">If true the value form this series added too.</param>
            <returns>
            A sum of Y values from all series are below the series.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.GetSideBySideInfo(Syncfusion.Windows.Forms.Chart.IChartArea,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Gets the side by side info.
            </summary>
            <param name="chartArea">The chart area.</param>
            <param name="series">The series.</param>
            <returns>Returns the DoubleRange value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.GetSideBySideInfo(Syncfusion.Windows.Forms.Chart.IChartArea,Syncfusion.Windows.Forms.Chart.ChartSeries,System.Double)">
            <summary>
            Gets the side by side info.
            </summary>
            <param name="chartArea">The chart area.</param>
            <param name="series">The series.</param>
            <param name="seriesWidth">The seriesWidth.</param>
            <returns>Returns the DoubleRange.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.GetMinPointsDelta(Syncfusion.Windows.Forms.Chart.IChartArea)">
            <summary>
            Gets the minimal points delta.
            </summary>
            <param name="chartArea">The chart area.</param>
            <returns></returns>
            <value>The min points delta.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartModel.GetSideBySidePositions(Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32@,System.Int32@)">
            <summary>
            Returns the value of side by side displacement.
            </summary>
            <param name="current">The current.</param>
            <param name="all">A sum of all sides.</param>
            <param name="pos">Position of side of a series.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartModel.ColorModel">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartColorModel"/> associated with this model.
            </summary>
            <value>The color model.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartModel.Series">
            <summary>
            Collection of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> objects. Each series represents an underlying <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/>.
            </summary>
            <value>The series.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartModel.IndexedValues">
            <summary>
            Gets the indexed values.
            </summary>
            <value>The indexed values.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartModel.Chart">
            <summary>
            Gets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartModel.FirstSeries">
            <summary>
            Gets the first series.
            </summary>
            <value>The first series.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.DoubleArrayConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleArrayConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"></see> that represents the type you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleArrayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"></see> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
            <exception cref="T:System.ArgumentNullException">The destinationType parameter is null. </exception>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartPointCore.X">
            <summary>
            Gets or sets the X value.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartPointCore.Y">
            <summary>
            Gets or sets the Y value.
            </summary>
            <value>The Y value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartPointCore.IsEmpty">
            <summary>
            Gets or sets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartCategoryPointCore.Category">
            <summary>
            Gets or sets the Category value.
            </summary>
            <value>The Category.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointDataCore.#ctor(Syncfusion.Windows.Forms.Chart.IChartSeriesModel,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointDataCore"/> class.
            </summary>
            <param name="ds">The ds.</param>
            <param name="xIndex">Index of the x.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointDataCore.IsEditableData">
            <summary>
            Determines whether data is editable.
            </summary>
            <returns>
            	<c>true</c> if data is editable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointDataCore.GetEditableData">
            <summary>
            Gets the editable data.
            </summary>
            <returns> Returns IEditableChartSeriesModel.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointDataCore.X">
            <summary>
            Gets or sets the X.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointDataCore.Y">
            <summary>
            Gets or sets the Y.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointDataCore.IsEmpty">
            <summary>
            Gets or sets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointDataCore.YDates">
            <summary>
            Gets or sets the Y dates.
            </summary>
            <value>The Y dates.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPointContainedCore">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointContainedCore.#ctor(System.Double,System.Double[])">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointContainedCore.GetY(System.Int32)">
            <summary>
            Gets the Y value.
            </summary>
            <param name="yIndex">Index of the y value.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointContainedCore.X">
            <summary>
            Gets or sets the X value.
            </summary>
            <value>The X value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointContainedCore.Y">
            <summary>
            Gets or sets the Y value.
            </summary>
            <value>The Y value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointContainedCore.IsEmpty">
            <summary>
            Gets or sets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPoint">
            <summary>
            This class provides an easy interface to interact with the underlying data points contained in the <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> associated
            with the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> that contains this data. Even though you are interacting with a friendly object model, the ChartPoint
            itself stores no data. It simply delegates to the underlying model that the ChartSeries is displaying.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPoint.Empty">
            <summary>
             Signifies the empty point.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.GetYValuesAsDateTime">
            <summary>
            Returns Y values associated with this point as DateTime values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.#ctor(System.Double,System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/> class.
            </summary>
            <param name="x" type="double">
                <para>
                X value of this ChartPoint.
                </para>
            </param>
            <param name="y" type="double[]">
                <para>
                Y values pertaining to this ChartPoint. More than one Y value can be associated with a ChartPoint.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.#ctor(System.Double,System.Double[],System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/> class.
            </summary>
            <param name="x" type="double">
                <para>
                X value of this ChartPoint.
                </para>
            </param>
            <param name="y" type="double[]">
                <para>
                Y values pertaining to this ChartPoint. More than one Y value can be associated with a ChartPoint.
                </para>
            </param>
            <param name="category" type="string">
                <para>
               Category value of this ChartPoint.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/> class. Used when working with ChartPoints that have
            only one Y value.
            </summary>
            <param name="x" type="double">
                <para>
                X value of this ChartPoint.
                </para>
            </param>
            <param name="y" type="double">
                <para>
                Y value of this ChartPoint.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.#ctor(System.Double,System.DateTime[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/> class. Used when working with ChartPoints that have
            DateTime Y values.
            </summary>
            <param name="x" type="double">
                <para>
                X value of this ChartPoint.
                </para>
            </param>
            <param name="dates" type="DateTime[]">
                <para>
                DateTime Y values of this ChartPoint.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.#ctor(System.Double,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/> class. Used when working with ChartPoints that have a single
            associated DateTime Y value.
            </summary>
            <param name="x" type="double">
                <para>
                X value of this ChartPoint.
                </para>
            </param>
            <param name="date" type="DateTime">
                <para>
                DateTime Y value pertaining to this ChartPoint.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.#ctor(System.DateTime,System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/> class. Used when working with ChartPoints that have
            a DateTime X value.
            </summary>
            <param name="date" type="DateTime">
                <para>
                DateTime X value of this ChartPoint.
                </para>
            </param>
            <param name="yValues" type="double[]">
                <para>
                Y values of this ChartPoint.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.#ctor(System.DateTime,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/> class. Used when working with ChartPoints that have
            a DateTime X value.
            </summary>
            <param name="date" type="DateTime">
                <para>
                DateTime X value of this ChartPoint.
                </para>
            </param>
            <param name="y" type="double">
                <para>
                Y value of this ChartPoint.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.#ctor(Syncfusion.Windows.Forms.Chart.IChartSeriesModel,System.Int32,Syncfusion.Windows.Forms.Chart.IChartSeriesCategory)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/> class.
            </summary>
            <param name="ds">The IChartSeriesModel argument.</param>
            <param name="xIndex">Index of the x.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.IsVisible">
            <summary>
            Returns true if point is visible; otherwise false
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPoint.HasNAN(System.Double[])">
            <summary>
            Returns true if the double array contains NaN value
            </summary>
            <param name="yValues"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPoint.DateX">
            <summary>
            Gets or sets the X value associated with this point as a DateTime value.
            </summary>
            <value>The date X.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPoint.X">
            <summary>
            Gets or sets the X value associated with this point.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPoint.YValues">
            <summary>
            Gets or sets the Y values associated with this point.
            </summary>
            <value>The Y values.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPoint.IsEmpty">
            <summary>
            Indicates whether this point should be plotted.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPoint.Category">
            <summary>
            Gets or sets the Category values associated with this point.
            </summary>
            <value>The Category values.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPointWithIndex">
            <summary>
            Contains chart point and index of point.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointWithIndex.#ctor(Syncfusion.Windows.Forms.Chart.ChartPoint,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointWithIndex"/> class.
            </summary>
            <param name="point">The point.</param>
            <param name="index">The index of point.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointWithIndex.Point">
            <summary>
            Specifies the ChartPoint.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointWithIndex.Index">
            <summary>
            Specifies the index of the ChartPoint
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ComparerPointWithIndexByX">
            <summary>
            Provides the method to compare the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointWithIndex"/> by the X value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ComparerPointWithIndexByX.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
            <exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"></see> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ComparerPointWithIndexByY">
            <summary>
            Provides the method to compare the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointWithIndex"/> by the first Y value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ComparerPointWithIndexByY.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
            <exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"></see> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPointIndexerEditor">
            <summary>
            Provides the GUI editor of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointIndexer"/> instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexerEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointIndexerEditor"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexerEditor.GetItems(System.Object)">
            <summary>
            Gets an array of objects containing the specified collection.
            </summary>
            <param name="editValue">The collection to edit.</param>
            <returns>
            An array containing the collection objects, or an empty object array if the specified collection does not inherit from <see cref="T:System.Collections.ICollection"></see>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexerEditor.SetItems(System.Object,System.Object[])">
            <summary>
            Sets the specified array as the items of the collection.
            </summary>
            <param name="editValue">The collection to edit.</param>
            <param name="value">An array of objects to set as the collection items.</param>
            <returns>
            The newly created collection object or, otherwise, the collection indicated by the editValue parameter.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexerEditor.CreateNewItemTypes">
            <summary>
            Gets the data types that this collection editor can contain.
            </summary>
            <returns>
            An array of data types that this collection can contain.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPointIndexerCodeDomSerializer">
            <summary>
            Serializes the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointIndexer"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexerCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Serializes the specified object into a CodeDOM object.
            </summary>
            <param name="manager">The serialization manager to use during serialization.</param>
            <param name="value">The object to serialize.</param>
            <returns>
            A CodeDOM object representing the object that has been serialized.
            </returns>
            <exception cref="T:System.ArgumentNullException">manager or value is null.</exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexerCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Deserializes the specified serialized CodeDOM object into an object.
            </summary>
            <param name="manager">A serialization manager interface that is used during the deserialization process.</param>
            <param name="codeObject">A serialized CodeDOM object to deserialize.</param>
            <returns>The deserialized CodeDOM object.</returns>
            <exception cref="T:System.ArgumentNullException">manager or codeObject is null.</exception>
            <exception cref="T:System.ArgumentException">codeObject is an unsupported code element.</exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPointIndexer">
            <summary>
            Represents the wrapper for <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> that implements the <see cref="T:System.Collections.IList"/>.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointIndexer"/> class.
            </summary>
            <param name="series">The series.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.#ctor(Syncfusion.Windows.Forms.Chart.IChartSeriesModel,Syncfusion.Windows.Forms.Chart.IChartSeriesCategory)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointIndexer"/> class.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(System.Double,System.Double[],System.Boolean)">
            <summary>
            Adds a point to the series
            </summary>
            <param name="x">X value of point</param>
            <param name="yValues">Y values of point</param>
            <param name="isEmpty">if set to <c>true</c> points is empty.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(System.Double,System.Double[])">
            <summary>
            Adds a point to the series
            </summary>
            <param name="x">X value of point</param>
            <param name="yValues">Y values of point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(System.Double,System.Double)">
            <summary>
            Adds a point to the series
            </summary>
            <param name="x">X value of point</param>
            <param name="y">Y value of point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(System.String,System.Double)">
            <summary>
            Adds a point to the series
            </summary>
            <param name="x">X value of point</param>
            <param name="y">Y value of point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(System.String,System.Double[])">
            <summary>
            Adds a point to the series
            </summary>
            <param name="x">X value of point</param>
            <param name="yValues">Y values of point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(System.Double,System.DateTime[])">
            <summary>
            Adds a point to the series
            </summary>
            <param name="x">X value of point</param>
            <param name="dates">Y dates of point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(System.Double,System.DateTime)">
            <summary>
            Adds a point to the series
            </summary>
            <param name="x">X value of point</param>
            <param name="date">Y date of point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Adds a point to the series
            </summary>
            <param name="cp">Instance of ChartPoint</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(System.DateTime,System.Double[])">
            <summary>
            Adds a point to the series
            </summary>
            <param name="date">X date of point</param>
            <param name="yValues">Y values of point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Add(System.DateTime,System.Double)">
            <summary>
            Adds a point to the series
            </summary>
            <param name="date">X date of point</param>
            <param name="y">Y value of point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Clear">
            <summary>
            Removes all points from the series.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Inserts a point to the series at the specified index. 
            </summary>
            <param name="xIndex">Index of a point</param>
            <param name="cp">Instance of ChartPoint</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Remove(Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Removes the specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
            <param name="cp">The cp.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Remove(System.Int32)">
            <summary>
            Removes a point from the series at the specified index. 
            </summary>
            <param name="xIndex">Index of a point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.IList"></see> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.IndexOf(Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Returns index of a point.
            </summary>
            <param name="cp">Instance of ChartPoint</param>
            <returns>The specified index of point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.  
            </summary>
            <returns>An IEnumerator object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to add to the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            The position into which the new element was inserted.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList"></see> contains a specific value.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to locate in the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            true if the <see cref="T:System.Object"></see> is found in the <see cref="T:System.Collections.IList"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to locate in the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            The index of value if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList"></see> at the specified index.
            </summary>
            <param name="index"></param>
            <param name="value">The <see cref="T:System.Object"></see> to insert into the <see cref="T:System.Collections.IList"></see>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
            <exception cref="T:System.NullReferenceException">value is null reference in the <see cref="T:System.Collections.IList"></see>.</exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to remove from the <see cref="T:System.Collections.IList"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ArgumentException">The type of the source <see cref="T:System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination array. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero. </exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.SeriesModel">
            <summary>
            Gets or sets the series model.
            </summary>
            <value>The series model.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.SeriesCategoryModel">
            <summary>
            Gets or sets the series category model.
            </summary>
            <value>The series category model.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/> with the specified x index.
            </summary>
            <value></value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.Count">
            <summary>
            Gets count of points int the series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"></see> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IList"></see> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"></see> has a fixed size.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IList"></see> has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value></value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
            <value></value>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.ChartPointEnumerator">
            <summary>
            Represents the enumerator for <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointIndexer"/>.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.ChartPointEnumerator.#ctor(Syncfusion.Windows.Forms.Chart.IChartSeriesModel)">
            <summary>
            Initializes a new instance of the ChartPointEnumerator class. 
            </summary>
            <param name="chartSeriesModel">Instance of IChartSeriesModel.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.ChartPointEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.  
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.ChartPointEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointIndexer.ChartPointEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPrepareStyleInfoHandler">
            <summary>
            Delegate used by the <see cref="E:Syncfusion.Windows.Forms.Chart.ChartSeries.PrepareStyle"/> and <see cref="E:Syncfusion.Windows.Forms.Chart.ChartSeries.PrepareSeriesStyle"/> events.
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.
                </para>
            </param>
            <param name="args" type="Syncfusion.Windows.Forms.Chart.ChartPrepareStyleInfoEventArgs">
                <para>
            	Argument.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPrepareStyleInfoEventArgs">
            <summary>
            This class is used as the argument by the <see cref="E:Syncfusion.Windows.Forms.Chart.ChartSeries.PrepareStyle"/> and <see cref="E:Syncfusion.Windows.Forms.Chart.ChartSeries.PrepareSeriesStyle"/> events.
            These events are raised when chart style information is about to be used for rendering. They provide a just-in-time hook for changing any
            attributes of the style object(<see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>) before it is used by the chart.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPrepareStyleInfoEventArgs.#ctor(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPrepareStyleInfoEventArgs.Handled">
            <summary>
            If the event raised has been completely handled by user code and no further processing is required, this flag should be set to
            True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPrepareStyleInfoEventArgs.Index">
            <summary>
            Returns the position of the contained style in the series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPrepareStyleInfoEventArgs.Style">
            <summary>
            Returns the style object that is to be used by the chart.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeries">
            <summary>
            ChartSeries acts as a wrapper around data that is to be displayed and styles that are associated with the data.
            The data that is to be displayed is contained in either <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> or <see cref="T:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel"/>
            implementation. The style to be used to display the points is stored in a contained implementation of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesHost">
            <summary>
            This interface is implemented by classes that host series specific style information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesHost.GetStylesMap">
            <summary>
                A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap"/> acts as a repository that is used to hold information on registered base styles.
                This information forms the core that is needed to apply base style information to styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesHost.BackColor">
            <summary>
               Gets the back color hint from the host.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.m_model">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.m_indexedModelAdapter">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.m_name">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.m_pointsIndexer">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.m_prepareSeriesStyleInfoHandler">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.m_prepareStyleInfoHandler">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.m_seriesConfigCollection">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.m_seriesModelAdapter">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.m_seriesCategoryModelAdapter">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.m_seriesModel">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.m_seriesCategoryModel">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.m_seriesStylesModel">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.m_stylesIndexer">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeries.m_text">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.ShouldSerializePoints">
            <summary>
            Should the serialize points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.ShouldSerializeSeriesModel">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.ResetSeriesModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.#ctor">
            <summary>
            Initializes a new instance of the ChartSeries class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.#ctor(System.String,Syncfusion.Windows.Forms.Chart.ChartSeriesType)">
            <summary>
            Initializes a new instance of the ChartSeries class.
            </summary>
            <param name="name">An name of series. This value will be set to <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Text"/> property too.</param>
            <param name="type">An type of series.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.DisposeChartSeries">
            <summary>
            Method to dispose ChartSeries object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.Dispose">
            <summary>
            Method to dispose ChartSeries object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ChartSeries class.
            </summary>
            <param name="name">An name of series. This value will be set to <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Text"/> property too.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.GetOfflineStyle">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.GetOfflineStyle(System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.GetStylesMap">
            <summary>
            Refer <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesHost.GetStylesMap"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.ResetLegend">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.AddAxis(Syncfusion.Windows.Forms.Chart.ChartAxis,System.Boolean)">
            <summary>
            Method to add or modify axis in a series without triggering axes changed event.
            Use this method for changing the horizontal or vertical axis of a series between begin and end update methods
            <param name="axis">Axis to be modified</param>
            <param name="horizontal">A boolean value representing the orientation of axis. True represents horizontal and false represents vertical axis</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.RemoveChartModel">
            <summary>
            Internal method to nullify ChartModel and unbind the events associated with it
            Used in clearing the series collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnCreateSeriesSummaryImpl">
            <summary>
            Factory method that gets called to create an instance of an implementation of IChartSeriesSummary
            </summary>
            <returns>
                A Syncfusion.Windows.Forms.Chart.IChartSeriesSummary value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.GetEditableData">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.GetCategoryEditableData">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.IsEditableData">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnAppearanceChanged(System.EventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnChartStyleChanged(System.Object,Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnCreateSeriesModel">
             <summary>
             Factory method that gets called to create an instance of an implementation of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/>. The default instance
             created is of type <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesModel"/>.
             </summary>
            
             <returns>
             An instance that implements IChartSeriesModel.
             </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnCreateGategorySeriesModel">
             <summary>
             Factory method that gets called to create an instance of an implementation of <see cref="!:ChartSeriesCategory"/>. The default instance
             created is of type <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesModel"/>.
             </summary>
            
             <returns>
             An instance that implements ChartSeriesCategory.
             </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnCreateSeriesStylesModelImpl">
            <summary>
            Factory method that gets called to create an instance of an implementation of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel"/>. The default instance
            created is of type <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesStylesModel"/>.
            </summary>
            <returns>
            An instance that implements IChartSeriesStylesModel.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnPrepareSeriesStyleInfo(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
            After composing the style of each series, the chart's style system will call this method before the style is used for display.
            Override this method if you wish to change the contents of the series ChartStyleInfo object that is passed in. For instance, if
            you wish to change the back color of the series being rendered based on external criteria, you could check this criteria when this
            method gets called and change the color of the series based on such. Note that any changes made to the style object in this method
            are not permanent but are temporary and lasts only for the current rendering cycle. This makes this method
            a convenient place to set transient data based attributes.
            </summary>
            <param name="styleInfo" type="Syncfusion.Windows.Forms.Chart.ChartStyleInfo">
                <para>
                ChartStyleInfo object that can be changed.
                </para>
            </param>
            <param name="seriesIndex" type="int">
                <para>
                The index value of this series in the chart's <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection"/>.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnPrepareStyleInfo(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
            After composing the style of each point in a series, the chart's style system will call this method before the style is used for display.
            Override this method if you wish to change the contents of the ChartStyleInfo object that is passed in. For instance, if
            you wish to change the back color of the series point being rendered based on external criteria, you could check this criteria when this
            method gets called and change the color of the point based on such. Note that any changes made to the style object in this method
            are not permanent but are temporary and lasts only for the current rendering cycle. This makes this method
            a convenient place to set transient data based attributes.
            </summary>
            <param name="styleInfo" type="Syncfusion.Windows.Forms.Chart.ChartStyleInfo">
                <para>
                 ChartStyleInfo object that can be changed.
                </para>
            </param>
            <param name="index" type="int">
                <para>
                The index value of the point (in the current series) associated with the style information passed in.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesChanged(System.EventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesModelImplChanged">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesModelImplChanging">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesStylesImplChanged">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesStylesImplChanging">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesSummaryImplChanged">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesSummaryImplChanging">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnColorModelChanged(System.Object,System.EventArgs)">
            <summary>
            Called when color model is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.RaiseModelImplChanged">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.RaiseSeriesStylesImplChanged">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.SetSummaryImpl(Syncfusion.Windows.Forms.Chart.IChartSeriesSummary)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.SetSeriesModel(Syncfusion.Windows.Forms.Chart.IChartSeriesModel)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.SetCategorySeriesModel(Syncfusion.Windows.Forms.Chart.IChartSeriesCategory)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.SetSeriesGategoryModelAdapter(Syncfusion.Windows.Forms.Chart.IChartSeriesCategory)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.SetStylesImpl(Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.UnwireStylesEvents">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.WireStylesEvents">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnConfigItemsChanged(System.Object,System.EventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.Style_Changed(System.Object,Syncfusion.Styles.StyleChangedEventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.OnSeriesModelChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Called when series model is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.UpdateLegendItem">
            <summary>
            Resets the settings of the legend item.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.UpdateRenderer(Syncfusion.Windows.Forms.Chart.ChartUpdateFlags)">
            <summary>
            Updates the renderer.
            </summary>
            <param name="flags">The flags.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeries.InvalidateStyles">
            <summary>
            Invalidates the styles.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeries.AppearanceChanged">
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeries.DataChanged">
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeries.PrepareSeriesStyle">
            <summary>
            When a series point is about to be rendered by the chart, it will raise this event and allow event subscribers to change the
            Series style used. You can handle this event to easily change style attributes based on external rules (for example).
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeries.PrepareStyle">
            <summary>
            When a series point is about to be rendered by the chart, it will raise this event and allow event subscribers to change the
            style used. You can handle this event to easily change style attributes based on external rules (for example).
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesChanged">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Points">
            <summary>
            Collection of Data points. These data points only serve as a thin wrapper around the actual data contained in the 
            <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> or <see cref="T:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel"/>. You can add, remove and edit points
            in this collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.PointFormats">
            <summary>
            Gets the formats.
            </summary>
            <value>The formats.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Name">
            <summary>
            Gets or sets the name of this series object. You can retrieve a series by its name from the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection"/> object in the
            <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ChartModel"/> where it is stored.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ChartModel"/> can't contains several series with the same name.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Tag">
            <summary>
            Gets or sets the object that contains data about the series. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Text">
            <summary>
            Gets /sets the text that is to be associated with this series. This is the text that will be displayed by default by the legend item associated with
            this series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ChartModel">
            <summary>
            Gets or sets the Chart's model.
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ChartModel"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesIndexedModelImpl">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel"/> interface is a special interface that serves as a degraded special case of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/>.
            The special case being situations where the X value is not needed. When you implement <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel"/> and set it to this property,
            the chart will internally create an adapter that implements <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> and treat it as any other model.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesModel">
            <summary>
            Returns an instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> underlying this series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.CategoryModel">
            <summary>
            Returns an instance of the <see cref="!:ChartSeriesCategory"/> underlying this series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesModelAdapter">
            <summary>
            Returns an instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> underlying this series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesCategoryModelAdapter">
            <summary>
            Returns an instance of the <see cref="!:ChartSeriesCategory"/> underlying this series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Summary">
            <summary>
            Provides access to summary information such as minimum / maximum values contained in this series at any given
            moment.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.XAxis">
            <summary>
            Gets or sets the X Axis instance against which this series will be plotted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ActualXAxis">
            <summary>
            Returns actual X axis, that values of series.Points[i].X are plotted on it.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ActualYAxis">
            <summary>
            Returns actual Y axis, that values of series.Points[i].Yvalues are plotted on it.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.XType">
            <summary>
            Returns the X value type that is being rendered. Please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.ChartValueType"/> for details on supported value types.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.YAxis">
            <summary>
            Gets or sets the Y Axis instance against which this series will be plotted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.YType">
            <summary>
            Returns the Y value type that is being rendered. Please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.ChartValueType"/> for details on supported value types.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Resolution">
            <summary>     
            Based on the resolution the number of points drawn will be reduced for improving the performance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.EnableStyles">
            <summary>
            If set to False, the rendering is faster with the following remarks:
            The points style is disabled, all points use series style.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Style">
            <summary>
            Returns the style object associated with the series. Attributes that are applied to this style will change the appearance of the complete
            series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Styles">
            <summary>
            Returns the styles that represent rendering information for the individual points in the series. Each of these style objects can be manipulated to
            affect the formatting and display of individual points. Styles set to individual points take precedence over the style of the Series (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Style"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.StylesImpl">
            <summary>
            Gets or sets the object that implements <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel"/>. This object stores styles in an optimized manner and
            provides them on demand. You can replace this object with your own implementation of this interface to meet specific performance
            needs. In most cases, you should just use the default styles model that is provided.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.BaseType">
            <summary>
            Gets the base type of the ChartSeries. The BaseType is used by the rendering code to check which of the pre-defined display patterns this series fits.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseType"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.BaseStackingType">
            <summary>
            Gets the base type of the ChartSeries. The BaseType is used by the rendering code to check which of the pre-defined display patterns this series fits.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseType"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ConfigItems">
            <summary>
               Returns the Chart series configuration items.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Renderer">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/>.
            </summary>
            <value>The renderer.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.RequireAxes">
            <summary>
            Indicates whether the currently set series type requires axes to be rendered. Currently set to False only for Pie charts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.RequireInvertedAxes">
            <summary>
            Indicates whether the currently set series type requires axes to be inverted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.OriginDependent">
            <summary>
            Gets a value indicating whether a series is dependent by <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Origin"/>.
            </summary>
            <value><c>true</c> if a series is dependent by origin; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Type">
            <summary>
            Gets or sets the chart type that is to be rendered using this series. Please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesType"/> for a complete list and
            explanation of chart types.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ZOrder">
            <summary>
            Gets or sets the ZOrder of the series. You can use this setting to control which series gets plotted first. The chart will sort
            by ZOrder before rendering.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesToolTipFormat">
            <summary>
            Gets or sets the format for tooltip
            "{0}" - series name
            "{1}" - series style tooltip
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.PointsToolTipFormat">
            <summary>
            Gets or sets the format for tooltip
            "{0}" - series name
            "{1}" - series style tooltip
            "{2}" - tooltip of point
            "{3}" - X value of point
            "{4}" and other - Y value of point
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Visible">
            <summary>
            Indicates whether the series is to be plotted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.BackColor">
            <summary>
            Refer <see cref="P:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesHost.BackColor"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Compatible">
            <summary>
            Indicates whether the series is compatible with other series added to the series collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.FancyToolTip">
            <summary>
            Returns the Fancy tooltip
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Trendlines">
            <summary>
            Returns the trendline
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SortBy">
            <summary>
            Gets or sets the type of sorting used.
            </summary> 
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SortOrder">
            <summary>
            Gets a value indicating whether sorting the axis value type direction by <see cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.Origin"/>.
            </summary>      
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SortPoints">
            <summary>
            Gets or sets a value indicating whether points will be sorted.
            </summary>
            <value><c>true</c> if points will be sorted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.LegendItem">
            <summary>
            Returns the private instance of LegendItem class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.LegendName">
            <summary>
            Gets or sets value indicates the legend for representation of series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.LegendItemUseSeriesStyle">
            <summary>
            Indicates whether the legend item should use the series style.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ExplodedIndex">
            <summary>
            Gets or sets the index of the point that is to be exploded from the main display. In the current implementation, this property is used
            only by the pie chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ExplodedAll">
            <summary>
            Explode all points . In the current implementation, this property is used
            only by the pie chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ExplosionOffset">
            <summary>
            Gets or sets the offset value that is to be used when a point is to be exploded from the main display. Currently applies
            only to the Pie chart. Offset is taken in percentage terms.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ReversalAmount">
            <summary>
            Gets or sets the reversal amount (Useful for Kagi chart,PointAndFigure chart and Renko chart)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ReversalIsPercent">
            <summary>
            Indicates if the Reversal amount is taken in percentage
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.HeightBox">
            <summary>
            Gets or sets height of the boxes in the financial chart types.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.OptimizePiePointPositions">
            <summary>
            Indicates if the pie points are optimized for position
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ResetStyles">
            <summary>
            Gets or sets a value indicating whether reset all the styles while modifying the ChartPoint properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.Rotate">
            <summary>
            Indicates whether the ChartArea is to be rotated and rendered. Default value is false.    
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.DrawColumnSeparatingLines">
            <summary>
            The drawing of separating line between columns is controlled by this property.     
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ShowTicks">
            <summary>
            Indicates if the Ticks should be shown (only for Pie charts)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ScatterConnectType">
            <summary>
            Specifies connect type of scatter chart
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ScatterSplineTension">
            <summary>
            Gets or sets the tension required for the scatter spline chart.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.DrawSeriesNameInDepth">
            <summary>
            Indicates whether to draw series name at opposed position to origin, along x axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesNameOXAngle">
            <summary>
            Indicates rotation angle around x axis of series name string.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SmartLabels">
            <summary>
            Specifies the behavior of the labels.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SmartLabelsBorderWidth">
            <summary>
            Gets or sets the BorderWidth of the Smartlabels.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SmartLabelsBorderColor">
            <summary>
            Gets or sets the BorderColor of the Smartlabels.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.EnableAreaToolTip">
            <summary>
            Get or set to enable or disable the ToolTip for Full Area of ChartInterior. This is only for AreaCharts.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.DrawErrorBars">
            <summary>
            Error Bars are used to indicate a degree of uncertainity in the plotted data through a bar indicating an "error range". 
            The 2nd Y value of a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/> is used to indicate the error range. This is supported with Line, Bar and Column charts. 
            Also see <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ErrorBarsSymbolShape"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ErrorBarsSymbolShape">
            <summary>
            Specifies the symbol that should be used in error bars. Also see <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.DrawErrorBars"/> 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.NumberOfHistogramIntervals">
            <summary>
            Gets or sets the number of Histogram intervals
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ShowHistogramDataPoints">
            <summary>
            Indicates if the histogram data points should be shown
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesModelImpl">
            <summary>
            Gets or sets an instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> underlying this series. Use this property to replace this instance with your own
            implementation. Use <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.SeriesModel"/> to access the model if you do not intend to replace it.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.DrawHistogramNormalDistribution">
            <summary>
            Indicates if the Histogram normal distribution should be drawn
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.GanttDrawMode">
            <summary>
            Specifies the drawing mode of Gantt chart
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.OpenCloseDrawMode">
            <summary>
            Indicates rotation angle around x axis of series name string.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.InSideRadius">
            <summary>
            Sets / Gets the doughnut coefficient of pie chart 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.PriceUpColor">
            <summary>
            Gets or sets the price down color
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeries.PriceDownColor">
            <summary>
            Gets or sets the price up color
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventHandler">
             <summary>
             Delegate that is to be used with the <see cref="E:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Changed"/> event.
             </summary>
             <param name="sender" type="object">
                 <para>
                 Sender.
                 </para>
             </param>
             <param name="e" type="Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs">
                 <para>
                 Argument.
                 </para>
             </param>
             <remarks>
            
             </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType">
            <summary>
                The type of change that had occurred to the Chart series collection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType.Added">
            <summary>
            Series has been added to the collection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType.Inserted">
            <summary>
            Series has been inserted into the collection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType.Removed">
            <summary>
            Series has been removed from the collection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType.Changed">
            <summary>
            Series in the collection has been changed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType.Reset">
            <summary>
            The collection has been reset.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs">
            <summary>
               Argument that is to be used with the <see cref="E:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Changed"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType)">
            <summary>
                Constructor.
            </summary>
            <param name="changeType" type="Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType">
                <para>
                The type of change that had occurred in the collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangeType,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Constructor.
            </summary>
            <param name="changeType">The type of change that had occurred in the collection.</param>
            <param name="series">The series.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs.CreateAddedEvent(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Creates the Added event arguments.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs.CreateChangedEvent(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Creates the Changed event arguments.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs.CreateRemovedEvent(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Creates the Removed event arguments.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>		
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs.CreateResetEvent">
            <summary>
            Creates the Reset event arguments.
            </summary>		
            <returns>The new ChartSeriesCollectionChangedEventArgs instance</returns>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs.ChangeType">
            <summary>
               Returns the type of change that had occurred in the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs.Series">
            <summary>
            Gets the series.
            </summary>
            <value>The series.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ComparerByZandY">
            <summary>
            Exposes a method that compares two <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> by Y values.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ComparerByZandY.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares the two <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/>.
            </summary>
            <param name="x">The first <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> to compare.</param>
            <param name="y">The second <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> to compare.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesComparerByZOrder">
            <summary>
            Exposes a method that compares two <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> by <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.ZOrder"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesComparerByZOrder.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects.
            </summary>
            <param name="x">The first <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> to compare.</param>
            <param name="y">The second <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> to compare.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection">
            <summary>
            <see cref="T:System.Collections.CollectionBase"/> derived class that holds instances of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.#ctor(Syncfusion.Windows.Forms.Chart.ChartModel)">
            <summary>
                Constructor.
            </summary>
            <param name="chartModel" type="Syncfusion.Windows.Forms.Chart.ChartModel">
                <para>
                 Chart model associated with this collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.BeginUpdate">
            <summary>
            Call this method if you perform multiple changes in quick succession.
            </summary>
            <seealso cref="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.EndUpdate"/>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.EndUpdate">
            <summary>
            Call this method if you called <see cref="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.BeginUpdate"/> earlier and you are done with your changes.
            </summary>
            <seealso cref="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.BeginUpdate"/>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Add(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Adds the specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> into this collection.
            </summary>
            <param name="series" type="Syncfusion.Windows.Forms.Chart.ChartSeries">
                <para>
            <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> An instance of the Chartseries that is to be added to this collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.IndexOf(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Call this method to retrieve the index value of the specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/>.
            </summary>
            <param name="series" type="Syncfusion.Windows.Forms.Chart.ChartSeries">
                <para>
            	An instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> that is to be located.
                </para>
            </param>
            <returns>
                The index value of specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Contains(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Determines whether the collection contains a specific value.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Inserts the specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> to this collection at the specified index.
            </summary>
            <param name="index" type="int">
                <para>
            Index value where the insert is to be made.
                </para>
            </param>
            <param name="series" type="Syncfusion.Windows.Forms.Chart.ChartSeries">
                <para>
            An instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> that is to be inserted into this collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Remove(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Removes the specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> from this collection.
            </summary>
            <param name="series" type="Syncfusion.Windows.Forms.Chart.ChartSeries">
                <para>
            <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> that is to be removed from this collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.ResetCache">
            <summary>
            Call this method to remove any temporarily cached style instances. You do not normally have to call this method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.ResetCache(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Call this method to remove any temporarily cached style instances. You do not normally have to call this method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Sort(System.Collections.IComparer)">
            <summary>
            Sorts by the specified comparer.
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.IComparer"/>. Only <see cref="T:Syncfusion.Windows.Forms.Chart.ComparerByZandY"/> is supported.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
            <param name="index">The zero-based index at which value can be found.</param>
            <param name="value">The value of the element to remove from index.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Called when [set complete].
            </summary>
            <param name="index">The index.</param>
            <param name="newValue">The new value.</param>
            <param name="oldValue">The old value.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnValidate(System.Object)">
            <summary>
            Performs additional custom processes when validating a value.
            </summary>
            <param name="value">The object to validate.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.GetSeriesClipRectangle(Syncfusion.Windows.Forms.Chart.ChartSeries,System.Drawing.RectangleF)">
            <summary>
            Returns the clip rectangle for Chart Series
            </summary>
            <param name="series">Chart series</param>
            <param name="areaBounds">Chart area bounds</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.DrawSeries(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.IChartAreaHost)">
            <summary>
            Draws series on input <see cref="T:System.Drawing.Graphics"/> object
            </summary>
            <param name="g">Graphics for drawing on.</param>
            <param name="chart"><see cref="T:Syncfusion.Windows.Forms.Chart.IChartAreaHost"/> interface reference</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.DrawSeries(Syncfusion.Windows.Forms.Chart.Graphics3D,Syncfusion.Windows.Forms.Chart.IChartAreaHost)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="chart"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.DrawSeriesNamesInDepth(Syncfusion.Windows.Forms.Chart.Graphics3D,Syncfusion.Windows.Forms.Chart.IChartAreaHost)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="chart"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.SetClip(Syncfusion.Windows.Forms.Chart.Graphics3D,Syncfusion.Windows.Forms.Chart.IChartAreaHost)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="chart"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.RaiseCollectionChangedEventHandler(Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs)">
            <summary>
            Cals methods, assigned on collectionChangedEventHandler delegate. 
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnSeriesChanged(System.Object,System.EventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.OnSeriesDataChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.RaiseResetEvent">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.ClearSeries(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <internalonly/>
            Internal method to unbind events and remove ChartModel object in series when clearing the series collection
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.UnwireSeries(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.WireSeries(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.GetIndexMostSeries(System.Int32,Syncfusion.Windows.Forms.Chart.ChartSeriesType)">
            <summary>
            
            </summary>
            <param name="pointIndex"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.GetIndexLowerSeries(System.Int32,Syncfusion.Windows.Forms.Chart.ChartSeriesType)">
            <summary>
            
            </summary>
            <param name="pointIndex"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.GetMaxCountPoint">
            <summary>
            Returns the maximum number of points in the series collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.VisibleByIndex(System.Int32)">
            <summary>
            Returns the index of the visible series
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.GetSeriesByVisible(System.Int32)">
            <summary>
            Returns the visible series with the specified index 
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.VisibleSeriesIndexOf(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Returns the index of the series if visible otherwise returns -1
            </summary>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.RefreshVisibleList">
            <summary>
            Recalculates list of visible series, when some of the series are changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Changed">
            <summary>
            Event that will be raised when this collection is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.ShouldSort">
            <summary>
            Indicates whether the series in this collection should be sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.DisableStyles">
            <summary>
            Indicates whether the Series's EnableStyles Enable or Not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Sorted">
            <summary>
            Indicates whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection"/> is sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Item(System.Int32)">
            <summary>
            Overloaded. Returns the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> object stored at the specified index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.Item(System.String)">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> object stored with the specified name.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.VisibleCount">
            <summary>
            Returns the number of visible series in the collection
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.VisibleList">
            <summary>
            Returns <see cref="T:System.Collections.IList"/> sorted/unsorted collection <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> objects.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesCollection.ShouldUpdate">
            <summary>
            Gets a value indicating whether should update collecation.
            </summary>
            <value><c>true</c> if should update; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs">
            <summary>
            Provides data of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventHandler"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs.FromListChangedEventArgs(System.ComponentModel.ListChangedEventArgs,Syncfusion.Windows.Forms.Chart.IChartSeriesModel)">
            <summary>
            Helper method that creates ChartDataChangedEventArgs from ListChangedEventArgs.
            </summary>
            <param name="args" type="System.ComponentModel.ListChangedEventArgs">
                <para>
                ListChangedEventArgs object; information that will be used to create the ChartDataChangedEventArgs object.
                </para>
            </param>
            <param name="chartData" type="Syncfusion.Windows.Forms.Chart.IChartSeriesModel">
                <para>
                Not used in the current version.
                </para>
            </param>
            <returns>
                A Syncfusion.Windows.Forms.Chart.ChartDataChangedEventArgs value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs.CreateResetEventArgs">
            <summary>
            Creates the reset event args.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs.CreateInsertEventArgs">
            <summary>
            Creates the insert event args.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs.CreateRemovedEventArgs">
            <summary>
            Creates the removed event args.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs.CreateChangedEventArgs">
            <summary>
            Creates the changed event args.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs.EventType">
            <summary>
            Returns the type of event that occurred.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs.Type"/>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs.Type">
            <summary>
            Specifies the type of event that occurred.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs.Type.Reset">
            <summary>
            Specifies that the datasource was reset. All data is expected to have changed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs.Type.Inserted">
            <summary>
            Specifies that data has been inserted.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs.Type.Removed">
            <summary>
            Specifies that data has been removed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesChangedEventArgs.Type.Changed">
            <summary>
            Specifies that data has been changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter">
            <summary>
            Provides the wrapper for <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel"/> that implements the <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/>.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.#ctor(Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter"/> class.
            </summary>
            <param name="model">The model.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.GetX(System.Int32)">
            <summary>
            Returns the X value of the series at the specified point index.
            </summary>
            <param name="xIndex">The index value of the point.</param>
            <returns>X value.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.GetY(System.Int32)">
            <summary>
            Returns the Y value of the series at the specified point index.
            </summary>
            <param name="xIndex">The index value of the point.</param>
            <returns>Y value.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.GetEmpty(System.Int32)">
            <summary>
            Indicates whether a plottable value is present at the specified point index.
            </summary>
            <param name="xIndex">The index value of the point.</param>
            <returns>
            True, if there is a value present at this point index; false otherwise.
            </returns>
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.Changed">
            <summary>
            Event that should be raised by any implementation of this interface if data that it holds changes. This will cause the
            chart to be updated accordingly.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.Inner">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel"/>.
            </summary>
            <value>The <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesIndexedModel"/>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesIndexedModelAdapter.Count">
            <summary>
            Returns the number of points in this series.
            </summary>
            <value></value>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesModel">
            <summary>
            This is the core data container implementation for a chart. This is a very simple model that stores data in the list inherited
            from the CollectionBase. It relies on the events raised by the CollectionBase base class to inform users of the changes that had occurred to the series.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel">
            <summary>
            Interface to be implemented if you want ChartPoint to be able to change your data through code. Additionally, in a future version this interface will
            allow the chart to edit data. If you wish to just display data as a series in the chart, please refer to the simpler <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/>
            interface.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Add(System.Double,System.Double[])">
            <summary>
            Adds data to the end of the data representation.
            </summary>
            <param name="x">X value.</param>
            <param name="y">Y value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Add(System.Double,System.Double[],System.String)">
            <summary>
            Adds data to the end of the data representation.
            </summary>
            <param name="x">X value.</param>
            <param name="y">Y value.</param>
            <param name="category">Category value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Add(System.Double,System.Double[],System.Boolean)">
            <summary>
            Adds data to the end of the data representation.
            </summary>
            <param name="x">X value.</param>
            <param name="y">Y value.</param>
            <param name="isEmpty">if set to <c>true</c> the point is empty.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Add(System.Double,System.Double[],System.Boolean,System.String)">
            <summary>
            Adds data to the end of the data representation.
            </summary>
            <param name="x">X value.</param>
            <param name="y">Y value.</param>
            <param name="isEmpty">if set to <c>true</c> the point is empty.</param>
            <param name="category">Category value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Insert(System.Int32,System.Double,System.Double[])">
            <summary>
            Inserts a value in the data at the specified index.
            </summary>
            <param name="xIndex">Index value where the insertion is to be made.</param>
            <param name="x">The X value.</param>
            <param name="yValues">The associated Y values.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Insert(System.Int32,System.Double,System.Double[],System.String)">
            <summary>
            Inserts a value in the data at the specified index.
            </summary>
            <param name="xIndex">Index value where the insertion is to be made.</param>
            <param name="x">The X value.</param>
            <param name="yValues">The associated Y values.</param>
            <param name="category">The associated Category values.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetX(System.Int32,System.Double)">
            <summary>
            Changes the X value of the data point at the specified index.
            </summary>
            <param name="xIndex">Index value where the data is to be changed.</param>
            <param name="value">New X value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetY(System.Int32,System.Double[])">
            <summary>
            Changes the Y value of the data point at the specified index.
            </summary>
            <param name="xIndex">Index value where data is to be changed.</param>
            <param name="yValues">New Y values.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetEmpty(System.Int32,System.Boolean)">
            <summary>
            Sets the empty state indicating if the value at the specified point index is to be plotted. If this
            value is set to True, then it is treated as not present and is not plotted.
            </summary>
            <param name="xIndex" type="int">
            Index value where the empty state indicator is to be stored.
            </param>
            <param name="isEmpty" type="bool">
            Empty state indicator.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Remove(System.Int32)">
            <summary>
            Removes the data point at the specified index.
            </summary>
            <param name="xIndex">Index value where data is to be removed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Clear">
            <summary>
            Clears all data points in this datasource.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesCategory.GetY(System.Int32)">
            <summary>
            Returns the Y values of the series at the specified point index.
            </summary>
            <param name="xIndex">The index value of the point.</param>
            <returns>Y values at specified index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesCategory.GetCategory(System.Int32)">
            <summary>
            Returns the Category value of the series at the specified point index.
            </summary>
            <param name="xIndex">The index value of the point.</param>
            <returns>Category value.</returns>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartSeriesCategory.Changed">
            <summary>
            Event that should be raised by any implementation of this interface if data that it holds changes. This will cause the
            chart to be updated accordingly.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartEditableCategory.SetCategory(System.Int32,System.String)">
            <summary>
            Changes the Category value of the data point at the specified index.
            </summary>
            <param name="xIndex">Index value where the data is to be changed.</param>
            <param name="value">New Category value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartEditableCategory.Add(System.String)">
            <summary>
            Adds data to the end of the data representation.
            </summary>
            <param name="category">Category value.</param>       
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.GetX(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetX(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.GetY(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetY(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.GetEmpty(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetEmpty(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.GetCategory(System.Int32)">
            <summary>
            Please refer to <see cref="!:IChartSeriesModel.GetGategory"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.Add(System.Double,System.Double[])">
            <summary>
            Adds data to the end of the data representation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.Add(System.Double,System.Double[],System.String)">
            <summary>
            Adds data to the end of the data representation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.Add(System.Double,System.Double[],System.Boolean)">
            <summary>
            Adds data to the end of the data representation.
            </summary>
            <param name="x">The x.</param>
            <param name="yValues">The y values.</param>
            <param name="isEmpty">if set to <c>true</c> is empty.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.Add(System.Double,System.Double[],System.Boolean,System.String)">
            <summary>
            Adds data to the end of the data representation.
            </summary>
            <param name="x">The x.</param>
            <param name="yValues">The y values.</param>
            <param name="isEmpty">if set to <c>true</c> is empty.</param>
            <param name="category">The category values.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.Insert(System.Int32,System.Double,System.Double[])">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Insert(System.Int32,System.Double,System.Double[])"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.Insert(System.Int32,System.Double,System.Double[],System.String)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Insert(System.Int32,System.Double,System.Double[])"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SetX(System.Int32,System.Double)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetX(System.Int32,System.Double)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SetY(System.Int32,System.Double[])">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetY(System.Int32,System.Double[])"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SetEmpty(System.Int32,System.Boolean)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetEmpty(System.Int32,System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SetCategory(System.Int32,System.String)">
            <summary>
            Please refer to <see cref="!:IEditableChartSeriesModel.SetCategory"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.Remove(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Remove(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnClear">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnClearComplete">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnInsert(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnInsertComplete(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnRemove(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnRemoveComplete(System.Int32,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnSet(System.Int32,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.OnSetComplete(System.Int32,System.Object,System.Object)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.RaiseChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="args">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.Add(System.String)">
            <summary>
            Adds data to the end of the data representation.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.Changed">
            <summary>
            Please refer to <see cref="E:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.Changed"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntity">
            <summary>
            Represents the data item of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/>.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntity.#ctor(System.Double,System.Double[])">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntity.#ctor(System.String)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntity.#ctor(System.Double,System.Double[],System.String)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntity.#ctor(System.Double,System.Double[],System.Boolean)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntity.#ctor(System.Double,System.Double[],System.Boolean,System.String)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntity.#ctor(System.Double,System.Double)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntity.#ctor(System.Double,System.Double,System.String)">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntity.X">
            <summary>
            Gets or sets the X value.
            </summary>
            <value>The X.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntity.Y">
            <summary>
            Gets or sets the Y values.
            </summary>
            <value>The Y.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntity.IsEmpty">
            <summary>
            Gets or sets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesModel.SeriesEntity.Category">
            <summary>
            Gets or sets the Category values.
            </summary>
            <value>The Category.</value>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter">
            <summary>
            This class is the wrapper for <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/>. 
            Implements the <see cref="T:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel"/> and <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> interfaces.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Constructor
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.GetX(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetX(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.GetY(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetY(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.GetEmpty(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.GetEmpty(System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.Add(System.Double,System.Double[])">
            <summary>
            Adds data to the end of the data representation.
            </summary>
            <param name="x">The x.</param>
            <param name="yValues">The y values.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.Add(System.Double,System.Double[],System.Boolean)">
            <summary>
            Adds data to the end of the data representation.
            </summary>
            <param name="x">X value.</param>
            <param name="yValues">The y values.</param>
            <param name="isEmpty">if set to <c>true</c> point is empty.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.Insert(System.Int32,System.Double,System.Double[])">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Insert(System.Int32,System.Double,System.Double[])"/>.
            </summary>
            <param name="xIndex">Index value where the insertion is to be made.</param>
            <param name="x">The X value.</param>
            <param name="yValues">The associated Y values.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.SetX(System.Int32,System.Double)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetX(System.Int32,System.Double)"/>.
            </summary>
            <param name="xIndex">Index value where the data is to be changed.</param>
            <param name="value">New X value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.SetY(System.Int32,System.Double[])">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetY(System.Int32,System.Double[])"/>.
            </summary>
            <param name="xIndex">Index value where data is to be changed.</param>
            <param name="yValues">New Y values.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.SetEmpty(System.Int32,System.Boolean)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.SetEmpty(System.Int32,System.Boolean)"/>.
            </summary>
            <param name="xIndex">Index value where the empty state indicator is to be stored.</param>
            <param name="isEmpty">Empty state indicator.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.Remove(System.Int32)">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Remove(System.Int32)"/>.
            </summary>
            <param name="xIndex">Index value where data is to be removed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.Clear">
            <summary>
            Please refer to <see cref="M:Syncfusion.Windows.Forms.Chart.IEditableChartSeriesModel.Clear"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.Changed">
            <summary>
            Please refer to <see cref="E:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.Changed"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesModelAdapter.Count">
            <summary>
            Please refer to <see cref="P:Syncfusion.Windows.Forms.Chart.IChartSeriesModel.Count"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPredefinedValues">
            <summary>
            Contains predefined random values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPredefinedValues.GetPoints(Syncfusion.Windows.Forms.Chart.ChartSeriesType,System.Int32)">
            <summary>
            Gets the points.
            </summary>
            <param name="type">The type.</param>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPredefinedValues.GetSeriesCount(Syncfusion.Windows.Forms.Chart.ChartSeriesType)">
            <summary>
            Gets the series count.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPredefinedValues.ConvertYtoPoints(System.Double[][])">
            <summary>
            Converts the 1D array to 2D.
            </summary>
            <param name="array">The array.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPredefinedValues.ConvertXtoPoints(System.Double[])">
            <summary>
            Converts the xto points.
            </summary>
            <param name="xvalues">The xvalues.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDummyPointsAdapter">
            <summary>
            Implements the <see cref="T:Syncfusion.Windows.Forms.Chart.IChartSeriesModel"/> interfaces. 
            If values is empty, it's return "dummy" values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDummyPointsAdapter.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDummyPointsAdapter"/> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDummyPointsAdapter.GetX(System.Int32)">
            <summary>
            Returns the X value of the series at the specified point index.
            </summary>
            <param name="xIndex">The index value of the point.</param>
            <returns>X value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDummyPointsAdapter.GetY(System.Int32)">
            <summary>
            Returns the Y value of the series at the specified point index.
            </summary>
            <param name="xIndex">The index value of the point.</param>
            <returns>Y value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDummyPointsAdapter.GetEmpty(System.Int32)">
            <summary>
            Indicates whether a plottable value is present at the specified point index.
            </summary>
            <param name="xIndex">The index value of the point.</param>
            <returns>
            True, if there is a value present at this point index; false otherwise.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDummyPointsAdapter.Count">
            <summary>
            Returns the number of points in this series.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDummyPointsAdapter.RandomPoints">
            <summary>
            
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartDummyPointsAdapter.Changed">
            <summary>
            Occurs when Model is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary">
            <summary>
            Contains summary information for implementing a class. In the current version, this
            interface is implemented by the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.Refresh">
            <summary>
            Refreshes summary information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.GetYPercentage(System.Int32)">
            <summary>
            Gets the Y percentage.
            </summary>
            <param name="pointIndex">Index of the point.</param>
            <returns></returns>
            <remarks>Percentages computes for positive values only.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.GetYPercentage(System.Int32,System.Int32)">
            <summary>
            Gets the Y percentage.
            </summary>
            <param name="pointIndex">Index of the point.</param>
            <param name="yIndex">Index of the y.</param>
            <returns></returns>
            <remarks>Percentages computes for positive values only.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.FindValue(System.Double)">
            <summary>
            Finds point by specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.FindValue(System.Double,System.String)">
            <summary>
            Finds point by specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="useValue">The use value.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.FindValue(System.Double,System.String,System.Int32@)">
            <summary>
            Finds point by specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <param name="index">Index to start looking from. Returns index of found point or -1.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.FindValue(System.Double,System.String,System.Int32@,System.Int32)">
            <summary>
            Finds point by specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <param name="index">Index to start looking from. Returns index of found point or -1.</param>
            <param name="endIndex">The Index where the search is end.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.FindMinValue">
            <summary>
            Finds point with minimal value.
            </summary>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.FindMinValue(System.String)">
            <summary>
            Finds point with minimal value.
            </summary>
            <param name="useValue">The use value.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.FindMinValue(System.String,System.Int32@)">
            <summary>
            Finds point with minimal value.
            </summary>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <param name="index">Index to start looking from. Returns index of found point or -1.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.FindMinValue(System.String,System.Int32@,System.Int32)">
            <summary>
            Finds point with minimal value.
            </summary>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <param name="index">Index to start looking from. Returns index of found point or -1.</param>
            <param name="endIndex">The Index where the search is end..</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.FindMaxValue">
            <summary>
            Finds point with maximal value.
            </summary>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.FindMaxValue(System.String)">
            <summary>
            Finds point with maximal value.
            </summary>
            <param name="useValue">The use value.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.FindMaxValue(System.String,System.Int32@)">
            <summary>
            Finds point with maximal value.
            </summary>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <param name="index">Index to start looking from. Returns index of found point or -1.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.FindMaxValue(System.String,System.Int32@,System.Int32)">
            <summary>
            Finds point with maximal value.
            </summary>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <param name="index">Index to start looking from. Returns index of found point or -1.</param>
            <param name="endIndex">The Index where the search is end.</param>
            <returns>Found point or null.</returns>       
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.MaxX">
            <summary>
            Returns the maximum X value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.MaxY">
            <summary>
            Returns the maximum Y value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.MinX">
            <summary>
            Returns the minimum X value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.MinY">
            <summary>
            Returns the minimum Y value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.ModelImpl">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesSummary.CategoryModel">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.GetYPercentage(System.Int32)">
            <summary>
            Gets the Y percentage.
            </summary>
            <param name="pointIndex">Index of the point.</param>
            <returns></returns>
            <remarks>Percentages computes for positive values only.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.GetYPercentage(System.Int32,System.Int32)">
            <summary>
            Gets the Y percentage.
            </summary>
            <param name="pointIndex">Index of the point.</param>
            <param name="yIndex">Index of the y.</param>
            <returns></returns>
            <remarks>Percentages computes for positive values only.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindValue(System.Double)">
            <summary>
            Finds point by specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindValue(System.Double,System.String)">
            <summary>
            Finds point by specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="useValue">The use value.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindValue(System.Double,System.String,System.Int32@)">
            <summary>
            Finds point by specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <param name="index">Index to start looking from. Returns index of found point or -1.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindValue(System.Double,System.String,System.Int32@,System.Int32)">
            <summary>
            Finds point by specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <param name="index">Index to start looking from. Returns index of found point or -1.</param>
            <param name="endIndex">The end index.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindMinValue">
            <summary>
            Finds point with minimal value.
            </summary>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindMinValue(System.String)">
            <summary>
            Finds point with minimal value.
            </summary>
            <param name="useValue">The use value.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindMinValue(System.String,System.Int32@)">
            <summary>
            Finds point with minimal value.
            </summary>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <param name="index">Index to start looking from. Returns index of found point or -1.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindMinValue(System.String,System.Int32@,System.Int32)">
            <summary>
            Finds point with minimal value.
            </summary>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <param name="index">Index to start looking from. Returns index of found point or -1.</param>
            <param name="endIndex">The index where the search is end.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindMaxValue">
            <summary>
            Finds point with maximal value.
            </summary>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindMaxValue(System.String)">
            <summary>
            Finds point with maximal value.
            </summary>
            <param name="useValue">The use value.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindMaxValue(System.String,System.Int32@)">
            <summary>
            Finds point with maximal value.
            </summary>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <param name="index">Index to start looking from. Returns index of found point or -1.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindMaxValue(System.String,System.Int32@,System.Int32)">
            <summary>
            Finds point with maximal value.
            </summary>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <param name="index">Index to start looking from. Returns index of found point or -1.</param>
            <param name="endIndex">The end Index.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.Refresh">
            <summary>
            Refreshes summary information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindXValue(System.Double,System.Int32,System.Int32)">
             <summary>
             Finds the X value.
             </summary>
             <param name="value">The value.</param>
            <param name="from">The searching start at this index value</param> 
            <param name="to">The searching end at this index value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindYValue(System.Double,System.Int32,System.Int32,System.Int32)">
             <summary>
             Finds the X value.
             </summary>
             <param name="value">The value.</param>
             <param name="yIndex">The yIndex</param> 
            <param name="from">The searching start at this index value</param> 
            <param name="to">The searching end at this index value</param>              
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindMinXValue(System.Int32,System.Int32)">
            <summary>
            Finds the X value.
            </summary>
            <param name="from">The searching start at this index value</param>
            <param name="to">The searching end at this index value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindMaxXValue(System.Int32,System.Int32)">
            <summary>
            Finds the X value.
            </summary>
            <param name="from">The searching start at this index value</param>
            <param name="to">The searching end at this index value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindMinYValue(System.Int32,System.Int32,System.Int32)">
            <summary>
            Finds the X value.
            </summary>
            <param name="yIndex">The yIndex value.</param>
            <param name="from">The searching start at this index value</param>
            <param name="to">The searching end at this index value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.FindMaxYValue(System.Int32,System.Int32,System.Int32)">
            <summary>
            Finds the X value.
            </summary>
            <param name="yIndex">The yIndex value.</param>
            <param name="from">The searching start at this index value</param>
            <param name="to">The searching end at this index value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.OnModelChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Called when model is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.EnsureRefreshed">
            <summary>
            Ensures the refreshed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.ProcessUsageString(System.String,System.Int32@)">
            <summary>
            Processes the useValue string.
            </summary>
            <param name="request">The request.</param>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.MaxX">
            <summary>
            Returns the maximum X value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.MaxY">
            <summary>
            Returns the maximum Y value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.MinX">
            <summary>
            Returns the minimum X value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.MinY">
            <summary>
            Returns the minimum Y value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.ModelImpl">
            <summary>
            </summary>
            <value></value>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.Coordinate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.Coordinate.X">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesSummary.Coordinate.Y">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.BspNode">
            <summary>
            Represents the node of BSP tree.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.BspNode.Back">
            <summary>
            Gets or sets the back node.
            </summary>
            <value>The back node.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.BspNode.Front">
            <summary>
            Gets or sets the front node.
            </summary>
            <value>The front node.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.BspNode.Plane">
            <summary>
            Gets or sets the plane.
            </summary>
            <value>The plane.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ClassifyPointResult">
            <summary>
            Specifies the point location by the plane.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ClassifyPointResult.OnFront">
            <summary>
            Point is in the front of plane.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ClassifyPointResult.OnBack">
            <summary>
            Point is at the back of plane.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ClassifyPointResult.OnPlane">
            <summary>
            Point is on the plane.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ClassifyPolyResult">
            <summary>
            Specifies the polygon location by the plane.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ClassifyPolyResult.OnPlane">
            <summary>
            Polygon is on the plane.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ClassifyPolyResult.ToRight">
            <summary>
            Polygon is from right of the plane.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ClassifyPolyResult.ToLeft">
            <summary>
            Polygon is from left of the plane.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ClassifyPolyResult.Unknown">
            <summary>
            Location of polygon is unknown.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.BspTreeBuilder">
            <summary>
            This class contains methods to compute the Binary Space Partitioning (BSP) tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BspTreeBuilder.Add(Syncfusion.Windows.Forms.Chart.Polygon)">
            <summary>
            Adds the specified poly.
            </summary>
            <param name="poly">The poly.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BspTreeBuilder.Build">
            <summary>
            Builds this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BspTreeBuilder.Build(System.Collections.Generic.List{Syncfusion.Windows.Forms.Chart.Polygon})">
            <summary>
            Builds the specified collection of polygons.
            </summary>
            <param name="arlist">The collection of polygons.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BspTreeBuilder.GetNodeCount(Syncfusion.Windows.Forms.Chart.BspNode)">
            <summary>
            Gets the node count.
            </summary>
            <param name="el">The el.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BspTreeBuilder.GetNodeCount">
            <summary>
            Gets the node count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BspTreeBuilder.ClassifyPolygon(Syncfusion.Windows.Forms.Chart.Polygon,Syncfusion.Windows.Forms.Chart.Polygon)">
            <summary>
            
            </summary>
            <param name="pln">The Polygon.</param>
            <param name="plg">The Polygon.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BspTreeBuilder.ClassifyPoint(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Polygon)">
            <summary>
            Classifies the point.
            </summary>
            <param name="pt">The pt.</param>
            <param name="pln">The PLN.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BspTreeBuilder.SplitPolygon(Syncfusion.Windows.Forms.Chart.Polygon,Syncfusion.Windows.Forms.Chart.Polygon,Syncfusion.Windows.Forms.Chart.Polygon[]@,Syncfusion.Windows.Forms.Chart.Polygon[]@)">
            <summary>
            
            </summary>
            <param name="poly"></param>
            <param name="part"></param>
            <param name="backPoly"></param>
            <param name="frontPoly"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BspTreeBuilder.CutOutBackPolygon(System.Collections.ArrayList,Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification,System.Collections.ArrayList)">
            <summary>
            Cuts the out back polygon.
            </summary>
            <param name="polyPoints">The poly points.</param>
            <param name="vwiwc">The vwiwc.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BspTreeBuilder.CutOutFrontPolygon(System.Collections.ArrayList,Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification,System.Collections.ArrayList)">
            <summary>
            Cuts the out front polygon.
            </summary>
            <param name="polyPoints">The poly points.</param>
            <param name="vwiwc">The vwiwc.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BspTreeBuilder.GetNext(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="i"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.BspTreeBuilder.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.BspTreeBuilder.Count">
            <summary>
            Gets the count of polygons.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D,System.Int32,Syncfusion.Windows.Forms.Chart.ClassifyPointResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification"/> class.
            </summary>
            <param name="point">The Vector3D point.</param>
            <param name="ind">The index.</param>
            <param name="res">The ClassifyPointResult.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification.#ctor(Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification"/> class.
            </summary>
            <param name="vectWW">The Vector3DWithIndexWithClassification argument.</param>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification.Vector">
            <summary>
            Gets or sets the vector.
            </summary>
            <value>The vector.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification.Result">
            <summary>
            Gets or sets the classify result.
            </summary>
            <value>The classify result.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification.CuttingBackPoint">
            <summary>
            Gets or sets a value indicating whether [cutting back point].
            </summary>
            <value><c>true</c> if [cutting back point]; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification.CuttingFrontPoint">
            <summary>
            Gets or sets a value indicating whether [cutting front point].
            </summary>
            <value><c>true</c> if [cutting front point]; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification.CuttingBackPairIndex">
            <summary>
            Gets or sets the index of the cutting back pair.
            </summary>
            <value>The index of the cutting back pair.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification.CuttingFrontPairIndex">
            <summary>
            Gets or sets the index of the cutting front pair.
            </summary>
            <value>The index of the cutting front pair.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification.AlreadyCuttedBack">
            <summary>
            Gets or sets a value indicating whether [already cutted back].
            </summary>
            <value><c>true</c> if [already cutted back]; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Vector3DWithIndexWithClassification.AlreadyCuttedFront">
            <summary>
            Gets or sets a value indicating whether [already cutted front].
            </summary>
            <value><c>true</c> if [already cutted front]; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.PointsOnLineComparer">
            <summary>
            Compares the points by distance to the eye.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PointsOnLineComparer.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.PointsOnLineComparer"/> class.
            </summary>
            <param name="direction">The direction.</param>
            <param name="point">The point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PointsOnLineComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
            <exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"></see> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.CategoryAxisDataBindModel.#ctor">
            <summary>
            Returns a data bind model without any data source. Data source can be explicitly provided using DataSource property
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.CategoryAxisDataBindModel.#ctor(System.Object)">
            <summary>
            Returns a data bind model with data source. 
            </summary>
            <param name="dataSource"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.CategoryAxisDataBindModel.#ctor(System.Object,System.String)">
            <summary>
            Returns a data bind model with data source and data member
            </summary>
            <param name="dataSource">Data source to bind with Chart</param>
            <param name="dataMember">Data member to identify data table, if data set is used as data source</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.CategoryAxisDataBindModel.#ctor(System.Object,System.String,System.Windows.Forms.BindingContext)">
            <summary>
            Returns a 
            </summary>
            <param name="dataSource"></param>
            <param name="dataMember"></param>
            <param name="context"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.CategoryAxisDataBindModel.GetX(System.Int32)">
            <summary>
            Gets the X value of data point at specified index
            </summary>
            <param name="xIndex">Index of the data point</param>
            <returns>Retruns X value of data point at specified index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.CategoryAxisDataBindModel.GetCategory(System.Int32)">
            <summary>
            Gets the categorical value of a data point at specified index.
            </summary>
            <param name="xIndex">Index of the data point</param>
            <returns>Retruns the categorical value at specified index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.CategoryAxisDataBindModel.GetY(System.Int32)">
            <summary>
            Gets the Y value of data point at a specified index
            </summary>
            <param name="xIndex">Index of the data point</param>
            <returns>Retruns the Y value array at specified index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.CategoryAxisDataBindModel.GetEmpty(System.Int32)">
            <summary>
            Checks whether data point at an index is empty or not.
            </summary>
            <param name="xIndex">Index of the data point</param>
            <returns>Retruns true if data point at specified index is an empty point.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.CategoryAxisDataBindModel.CategoryName">
            <summary>
            Gets or sets the field name for binding categorical (X) values with Chart. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.CategoryAxisDataBindModel.DataSource">
            <summary>
            Datasource to bind with chart
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.CategoryAxisDataBindModel.DataMember">
            <summary>
            Data member for data source. If data set is used as data source, data table name should be provided as value to this field
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.CategoryAxisDataBindModel.YNames">
            <summary>
            Gets or sets the field names for Y values of Chart. 
            This is an array property because HiLo, HiLoOpenClose, Candle, etc.., type requires more than one Y value
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.CategoryAxisDataBindModel.Count">
            <summary>
            Gets the count of data in data source
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartGraph">
            <summary>
            The ChartGraph class provides methods for drawing primitives to the chart.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.PushTranfsorm">
            <summary>
            Pushes the transform to the stack.
            </summary>
            
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.PushTransform">
            <summary>
            Pushes the transform to the stack.
            </summary>
            
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.Translate(System.Drawing.SizeF)">
            <summary>
            Translates the specified offset.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
            <summary>
            Multiplies the transform.
            </summary>
            <param name="matrix">The matrix.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.PopTransform">
            <summary>
            Pops the transform from the stack.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws the line.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="pt1">The start point.</param>
            <param name="pt2">The end point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawRect(Syncfusion.Drawing.BrushInfo,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the rectangle.
            </summary>
            <param name="brushInfo">The <see cref="T:Syncfusion.Drawing.BrushInfo"/>.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawRect(Syncfusion.Drawing.BrushInfo,System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws the rectangle.
            </summary>
            <param name="brushInfo">The <see cref="T:Syncfusion.Drawing.BrushInfo"/>.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawRect(System.Drawing.Brush,System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws the rectangle.
            </summary>
            <param name="brush">The <see cref="T:System.Drawing.Brush"/>.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawRect(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws the rectangle.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawEllipse(Syncfusion.Drawing.BrushInfo,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the ellipse.
            </summary>
            <param name="brushInfo">The <see cref="T:Syncfusion.Drawing.BrushInfo"/>.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawPath(Syncfusion.Drawing.BrushInfo,System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
            </summary>
            <param name="brushInfo">The <see cref="T:Syncfusion.Drawing.BrushInfo"/>.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Draws the image.
            </summary>
            <param name="image">The image.</param>
            <param name="rect">The bounds of image.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawRect(System.Drawing.Brush,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the rectangle.
            </summary>
            <param name="brush">The <see cref="T:System.Drawing.Brush"/>.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawEllipse(System.Drawing.Brush,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the ellipse.
            </summary>
            <param name="brush">The <see cref="T:System.Drawing.Brush"/>.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawPath(System.Drawing.Brush,System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws the path.
            </summary>
            <param name="brush">The <see cref="T:System.Drawing.Brush"/>.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the line.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the image.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image"/>.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawPolyline(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws the polyline.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws the polygon.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.FillPolygon(System.Drawing.SolidBrush,System.Drawing.PointF[])">
            <summary>
            Fill the polygon.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Draws the string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
            Draws the string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="location">The location.</param>
            <param name="stringformat">The stringformat.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draws the string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="rect">The rectangle.</param>
            <param name="stringformat">The stringformat.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.MeasureString(System.String,System.Drawing.Font)">
            <summary>
            Measures the specified string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <returns>Returns the size of the Text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.MeasureString(System.String,System.Drawing.Font,System.Single)">
            <summary>
            Measures the specified string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="maxWidth">Maximal width of row.</param>
            <returns>Returns the size of the Text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.MeasureString(System.String,System.Drawing.Font,System.Single,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="maxWidth">Width of the max.</param>
            <param name="stringFormat">The string format.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="layoutArea">The layout area.</param>
            <param name="stringFormat">The string format.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.GetBrush(Syncfusion.Drawing.BrushInfo,System.Drawing.RectangleF)">
            <summary>
            Gets the brush.
            </summary>
            <param name="brushInfo">The brush info.</param>
            <param name="bounds">The bounds.</param>
            <returns>Returns the Brush.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.GetBrushItem(Syncfusion.Drawing.BrushInfo,System.Drawing.RectangleF)">
            <summary>
            Gets the brush item.
            </summary>
            <param name="brushInfo">The brush info.</param>
            <param name="bounds">The bounds.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGraph.GetGenericColorBlend(Syncfusion.Drawing.BrushInfoColorArrayList)">
            <summary>
            Gets the generic color blend.
            </summary>
            <param name="colors">The colors.</param>
            <returns>Returns the ColorBlend.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartGraph.Transform">
            <summary>
            Gets or sets the transform.
            </summary>
            <value>The transform.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartGraph.SmoothingMode">
            <summary>
            Gets or sets the SmoothingMode.
            </summary>
            <value>The SmoothingMode.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartGDIGraph">
            <summary>
            The ChartGDIGraph.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.#ctor(System.Drawing.Graphics)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartGDIGraph"/> class.
            </summary>
            <param name="g">The g.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.DrawRect(System.Drawing.Brush,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the rect.
            </summary>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.DrawEllipse(System.Drawing.Brush,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the ellipse.
            </summary>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.DrawPath(System.Drawing.Brush,System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws the path.
            </summary>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
            <param name="gp">The gp.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the line.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the image.
            </summary>
            <param name="image">The image.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.DrawPolyline(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws the polyline.
            </summary>
            <param name="pen">The pen.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws the polygon.
            </summary>
            <param name="pen">The pen.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.FillPolygon(System.Drawing.SolidBrush,System.Drawing.PointF[])">
            <summary>
            Fill the polygon.
            </summary>
            <param name="pen">The pen.</param>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.MeasureString(System.String,System.Drawing.Font)">
            <summary>
            Measures the specified string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.MeasureString(System.String,System.Drawing.Font,System.Single)">
            <summary>
            Measures the specified string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="maxWidth">Maximal width of row.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.MeasureString(System.String,System.Drawing.Font,System.Single,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="maxWidth">Maximal width of row.</param>
            <param name="stringFormat">StringFormat instance.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="layoutArea">Maximal width of row.</param>
            <param name="stringFormat">StringFormat instance.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Draws the string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
            Draws the string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="location">The location.</param>
            <param name="stringformat">The stringformat.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draws the string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="rect">The rect.</param>
            <param name="stringformat">The stringformat.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.Graphics">
            <summary>
            Gets the graphics.
            </summary>
            <value>The graphics.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.Transform">
            <summary>
            Gets or sets the transform.
            </summary>
            <value>The transform.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartGDIGraph.SmoothingMode">
            <summary>
            Gets or sets the SmoothingMode.
            </summary>
            <value>The SmoothingMode.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Transform3D">
            <summary>
            Contains the view and projection transformation of <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Transform3D.SetCenter(Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Sets the center of world.
            </summary>
            <param name="center">The center.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Transform3D.SetPerspective(System.Double)">
            <summary>
            Sets the perspective.
            </summary>
            <param name="distance">The distance to the "eye".</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Transform3D.SetLookAt(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Sets the view matrix by the position and direction of eye.
            </summary>
            <param name="pos">The pos.</param>
            <param name="dir">The dir.</param>
            <param name="up">The up.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Transform3D.ToScreen(Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Transform <see cref="T:Syncfusion.Windows.Forms.Chart.Vector3D"/> to the screen.
            </summary>
            <param name="vector3d">The vector3d.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Transform3D.ToPlane(System.Drawing.PointF,Syncfusion.Windows.Forms.Chart.Plane3D)">
            <summary>
            Returns the intercept point of mouse ray with the specified plane.
            </summary>
            <param name="point">The point.</param>
            <param name="plane">The plane.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Transform3D.Centered">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Transform3D.View">
            <summary>
            Gets or sets the view matrix.
            </summary>
            <value>The view.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Transform3D.Projection">
            <summary>
            Gets or sets the projection matrix.
            </summary>
            <value>The projection.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Transform3D.Result">
            <summary>
            Gets the result matrix.
            </summary>
            <value>The result.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Graphics3D">
            <summary>
            Provide the methods for drawing in 3D mode. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.#ctor(System.Drawing.Graphics)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/> class.
            </summary>
            <param name="g">The <see cref="P:Syncfusion.Windows.Forms.Chart.Graphics3D.Graphics"/> to the drawing.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.AddPolygon(Syncfusion.Windows.Forms.Chart.Polygon)">
            <summary>
            Adds the polygon to the drawing.
            </summary>
            <param name="polygon">The <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.PrepairView">
            <summary>
            Computes the BSP tree.
            </summary>
            
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.PrepareView">
            <summary>
            Computes the BSP tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.View3D">
            <summary>
            Draws the polygons to the <see cref="P:Syncfusion.Windows.Forms.Chart.Graphics3D.Graphics"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.SaveState">
            <summary>
            Saves the <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/> options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.LoadState(Syncfusion.Windows.Forms.Chart.Graphics3DState)">
            <summary>
            Loads the <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/> options.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.CreateBox(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D,System.Drawing.Pen,System.Drawing.Brush)">
            <summary>
            Creates the box.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="p">The pen.</param>
            <param name="b">The brush.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.CreateBox(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D,System.Drawing.Pen,Syncfusion.Drawing.BrushInfo)">
            <summary>
            Creates the box.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="p">The p.</param>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.CreateBoxV(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D,System.Drawing.Pen,Syncfusion.Drawing.BrushInfo)">
            <summary>
            Creates the vertical box.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="p">The p.</param>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.CreateEllipse(Syncfusion.Windows.Forms.Chart.Vector3D,System.Drawing.SizeF,System.Int32,System.Drawing.Pen,Syncfusion.Drawing.BrushInfo)">
            <summary>
            Creates the ellipse.
            </summary>
            <param name="v1">The v1.</param>
            <param name="sz">The sz.</param>
            <param name="dsc">The DSC.</param>
            <param name="p">The p.</param>
            <param name="br">The br.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.CreateRectangle(Syncfusion.Windows.Forms.Chart.Vector3D,System.Drawing.SizeF,System.Drawing.Pen,Syncfusion.Drawing.BrushInfo)">
            <summary>
            Creates the rectangle.
            </summary>
            <param name="v1">The v1.</param>
            <param name="sz">The sz.</param>
            <param name="p">The p.</param>
            <param name="br">The br.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.CreateRectangle(Syncfusion.Windows.Forms.Chart.Vector3D,System.Drawing.SizeF,System.Drawing.Pen,Syncfusion.Drawing.BrushInfo,System.Boolean)">
            <summary>
            Creates the rectangle.
            </summary>
            <param name="v1">The v1.</param>
            <param name="sz">The sz.</param>
            <param name="p">The p.</param>
            <param name="br">The br.</param>
            <param name="IsPNF">The PNF.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.CreateShpeare(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D,System.Int32,System.Drawing.Pen,Syncfusion.Drawing.BrushInfo)">
            <summary>
            Creates the sphere.
            </summary>
            <param name="v1">The v1.</param>
            <param name="r">The r.</param>
            <param name="dsc">The DSC.</param>
            <param name="p">The p.</param>
            <param name="br">The br.</param>
            <returns></returns>
            
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.CreateSphere(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D,System.Int32,System.Drawing.Pen,Syncfusion.Drawing.BrushInfo)">
            <summary>
            Creates the sphere.
            </summary>
            <param name="v1">The v1.</param>
            <param name="r">The r.</param>
            <param name="dsc">The DSC.</param>
            <param name="p">The p.</param>
            <param name="br">The br.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.CreateCylinderV(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D,System.Int32,System.Drawing.Pen,Syncfusion.Drawing.BrushInfo)">
            <summary>
            Creates the vertical cylinder.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="dsc">The DSC.</param>
            <param name="p">The p.</param>
            <param name="br">The br.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.CreateCylinderH(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D,System.Int32,System.Drawing.Pen,Syncfusion.Drawing.BrushInfo)">
            <summary>
            Creates the horizontal cylinder.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="dsc">The DSC.</param>
            <param name="p">The p.</param>
            <param name="br">The br.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3D.DrawBspNode3D(Syncfusion.Windows.Forms.Chart.BspNode,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Draws the BSP node in 3D.
            </summary>
            <param name="tr">The tree.</param>
            <param name="eye">The eye position.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3D.RootNode">
            <summary>
            Gets or sets the root node.
            </summary>
            <value>The root node.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3D.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3D.Count">
            <summary>
            Gets the count of input polygons.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3D.LightPosition">
            <summary>
            Gets or sets the light position.
            </summary>
            <value>The light position.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3D.LightCoeficient">
            <summary>
            Gets or sets the light coefficient.
            </summary>
            <value>The light coefficient.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3D.Light">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/> is light.
            </summary>
            <value><c>true</c> if light; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3D.Graphics">
            <summary>
            Gets the graphics.
            </summary>
            <value>The graphics.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3D.CountPolygons">
            <summary>
            Gets the count output polygons.
            </summary>
            <value>The count polygons.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3D.Regions">
            <summary>
            Gets or sets the regions.
            </summary>
            <value>The regions.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3D.DefaultStrinfFormat">
            <summary>
            Gets the default string format.
            </summary>
            <value>The default string format.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3D.Transform">
            <summary>
            Gets or sets the transform.
            </summary>
            <value>The transform.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Graphics3DState">
            <summary>
            Provide the representation settings of <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Graphics3DState.RaiseChanged">
            <summary>
            Raises the changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.Graphics3DState.Changed">
            <summary>
            Occurs when settings is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3DState.LightPosition">
            <summary>
            Gets or sets the light direction.
            </summary>
            <value>The light direction.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3DState.LightCoeficient">
            <summary>
            Gets or sets the light coefficient.
            </summary>
            <value>The light coefficient.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3DState.Perspective">
            <summary>
            Gets or sets a value indicating whether perspective is enabled.
            </summary>
            <value><c>True</c> If perspective is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3DState.AutoPerspective">
            <summary>
            Gets or sets a value indicating whether perspective is computed automatically.
            </summary>
            <value><c>True</c> If perspective is computed automatically; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3DState.Light">
            <summary>
            Gets or sets a value indicating whether light is enabled.
            </summary>
            <value><c>True</c> If light is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Graphics3DState.ZDistant">
            <summary>
            Gets or sets the distance from eye to the chart. This value is used for computing of perspective.
            </summary>
            <value>The depth distant.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Image3D">
            <summary>
            Represents the <see cref="T:System.Drawing.Image"/> in the 3D.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Polygon">
            <summary>
            Represents the simple 3D polygon.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Plane3D">
            <summary>
            Represents the 3D plane.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Plane3D.m_normal">
            <summary>
            The normal of plane.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Plane3D.m_d">
            <summary>
            The constant of plane.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Plane3D.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Plane3D"/> class.
            </summary>
            <param name="normal">The normal.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Plane3D.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Plane3D"/> class.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Plane3D.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Plane3D"/> class.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Plane3D.GetPoint(System.Double,System.Double)">
            <summary>
            Gets the point on the plane.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>Returns Vector3D instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Plane3D.GetPoint(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Gets the point of intersect ray with plane.
            </summary>
            <param name="pos">The pos.</param>
            <param name="ray">The ray.</param>
            <returns>Returns Vector3D instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Plane3D.Transform(Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            Transforms by the specified matrix.
            </summary>
            <param name="matrix">The matrix.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Plane3D.Clone(Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            Clones this instance and apply the specified transformation.
            </summary>
            <param name="matrix">The matrix.</param>
            <returns>Returns Plane3D instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Plane3D.Test">
            <summary>
            Tests this instance to the existing.
            </summary>
            <returns>Indicates whether Normal of Plane is valid or Not.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Plane3D.CalcNormal(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Calculates the normal.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Plane3D.Normal">
            <summary>
            Gets the normal.
            </summary>
            <value>The normal.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Plane3D.A">
            <summary>
            Gets the A component.
            </summary>
            <value>The A component.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Plane3D.B">
            <summary>
            Gets the B component.
            </summary>
            <value>The B component.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Plane3D.C">
            <summary>
            Gets the C component.
            </summary>
            <value>The C component.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Plane3D.D">
            <summary>
            Gets the D component.
            </summary>
            <value>The D component.</value>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Polygon.m_points">
            <summary>
            Points of polygon.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Polygon.m_pen">
            <summary>
            The <see cref="P:Syncfusion.Windows.Forms.Chart.Polygon.Pen"/> for border drawing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Polygon.m_FigurePen">
            <summary>
            The <see cref="P:Syncfusion.Windows.Forms.Chart.Polygon.Pen"/> for border drawing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Polygon.m_brush">
            <summary>
            The <see cref="P:Syncfusion.Windows.Forms.Chart.Polygon.Brush"/> for polygon filling.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Polygon.m_brInfo">
            <summary>
            The <see cref="P:Syncfusion.Windows.Forms.Chart.Polygon.BrushInfo"/> for polygon filling.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Polygon.isClipPolygon">
            <summary>
            Indicates whether this polygon is used as clip plane.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Polygon.m_dataRegion">
            <summary>
            The data of result regions.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> class.
            </summary>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D[],System.Drawing.Brush)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="br">The br.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D[],Syncfusion.Windows.Forms.Chart.Polygon)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="polygon">The PLG.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D[],System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="br">The br.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D[],System.Drawing.Pen)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D[],Syncfusion.Drawing.BrushInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="br">The br.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D[],Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="br">The br.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D[],Syncfusion.Drawing.BrushInfo,System.Drawing.Pen,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="br">The br.</param>
            <param name="pen">The pen.</param>
            <param name="IsPNF">The PNF.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> class.
            </summary>
            <param name="normal">The normal.</param>
            <param name="d">The d.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="clipPolygon">if set to <c>true</c> [clip polygon].</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.#ctor(Syncfusion.Windows.Forms.Chart.Polygon)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> class.
            </summary>
            <param name="poly">The poly.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.CreateRectangle(System.Drawing.RectangleF,System.Double,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            Creates the polygon by specified rectangle.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="z">The Z coordinate.</param>
            <param name="brushInfo">The brush info.</param>
            <param name="pen">The pen.</param>
            <returns>Returns Polygon.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.GetNormal(Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            Gets the normal.
            </summary>
            <param name="transform">The transform.</param>
            <returns>Returns Vector3D instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.Draw(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            Draws to the specified <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/>.
            </summary>
            <param name="g3d">The g3d.</param>
            <returns>Return ChartRegion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.Transform(Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            Transforms by the specified <see cref="T:Syncfusion.Windows.Forms.Chart.Matrix3D"/>.
            </summary>
            <param name="matrix3D">The <see cref="T:Syncfusion.Windows.Forms.Chart.Matrix3D"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns Polygon.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.CalcNormal">
            <summary>
            Calculates the normal.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.DrawPolygon(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath,System.Int32)">
            <summary>
            Draws the polygon.
            </summary>
            <param name="g">The g.</param>
            <param name="pen">The pen.</param>
            <param name="gp">The gp.</param>
            <param name="coef">The coefficient.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.FillPolygon(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath,System.Int32)">
            <summary>
            Fills the polygon.
            </summary>
            <param name="g">The g.</param>
            <param name="br">The br.</param>
            <param name="gp">The gp.</param>
            <param name="coef">The coefficient.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.FillPolygon(System.Drawing.Graphics,Syncfusion.Drawing.BrushInfo,System.Drawing.Drawing2D.GraphicsPath,System.Int32)">
            <summary>
            Fills the polygon.
            </summary>
            <param name="g">The g.</param>
            <param name="brInfo">The br info.</param>
            <param name="gp">The gp.</param>
            <param name="coef">The coefficient.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Polygon.LigthColor(System.Drawing.Color,System.Int32)">
            <summary>
            Lights the color.
            </summary>
            <param name="color">The color.</param>
            <param name="coef">The coefficient.</param>
            <returns>Returns the light color.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Polygon.Points">
            <summary>
            Gets the points of polygon.
            </summary>
            <value>The points.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Polygon.Brush">
            <summary>
            Gets the brush.
            </summary>
            <value>The brush.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Polygon.Pen">
            <summary>
            Gets the pen.
            </summary>
            <value>The pen.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Polygon.BrushInfo">
            <summary>
            Gets the brush info.
            </summary>
            <value>The brush info.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Polygon.ClipPolygon">
            <summary>
            Gets or sets a value indicating whether polygon is used as clip plane.
            </summary>
            <value><c>true</c> if it's used as clip plane; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Polygon.RegionData">
            <summary>
            Gets or sets the region data.
            </summary>
            <value>The region data.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Image3D.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D[],System.Drawing.Image)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Image3D"/> class.
            </summary>
            <param name="vs">The positions of polygon.</param>
            <param name="img">The image.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Image3D.Draw(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            Draws to the specified <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/>.
            </summary>
            <param name="g3d">The g3d.</param>
            <returns>Returns ChartRegion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Image3D.FromImage(System.Drawing.Image,System.Drawing.RectangleF,System.Single)">
            <summary>
            Create the new instance from the specified image.
            </summary>
            <param name="image">The image.</param>
            <param name="bounds">The bounds.</param>
            <param name="z">The depth coordinate.</param>
            <returns>Returns Image3D.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Image3D.Clone">
            <summary>
            Create the new instance and copy all members.
            </summary>
            <returns>Returns Polygon after clone.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Image3D.Attributes">
            <summary>
            Gets or sets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Matrix3D">
            <summary>
            Represents the matrix 4x4.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Matrix3D"/> class.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Matrix3D"/> class.
            </summary>
            <param name="m11">The M11 element of matrix.</param>
            <param name="m12">The M12 element of matrix.</param>
            <param name="m13">The M13 element of matrix.</param>
            <param name="m14">The M14 element of matrix.</param>
            <param name="m21">The M21 element of matrix.</param>
            <param name="m22">The M22 element of matrix.</param>
            <param name="m23">The M23 element of matrix.</param>
            <param name="m24">The M24 element of matrix.</param>
            <param name="m31">The M31 element of matrix.</param>
            <param name="m32">The M32 element of matrix.</param>
            <param name="m33">The M33 element of matrix.</param>
            <param name="m34">The M34 element of matrix.</param>
            <param name="m41">The M41 element of matrix.</param>
            <param name="m42">The M42 element of matrix.</param>
            <param name="m43">The M43 element of matrix.</param>
            <param name="m44">The M44 element of matrix.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.op_Addition(Syncfusion.Windows.Forms.Chart.Matrix3D,Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.op_Multiply(Syncfusion.Windows.Forms.Chart.Matrix3D,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            
            </summary>
            <param name="m1"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.op_BitwiseAnd(Syncfusion.Windows.Forms.Chart.Matrix3D,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            
            </summary>
            <param name="m1"></param>
            <param name="v1"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.op_Multiply(System.Double,Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            
            </summary>
            <param name="f1"></param>
            <param name="m1"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.op_Multiply(Syncfusion.Windows.Forms.Chart.Matrix3D,Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.op_Equality(Syncfusion.Windows.Forms.Chart.Matrix3D,Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.op_Inequality(Syncfusion.Windows.Forms.Chart.Matrix3D,Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.GetInvertal(Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            Intervals the matrix.
            </summary>
            <param name="matrix3D">The matrix.</param>
            <returns></returns>
            
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.GetInterval(Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            Intervals the matrix.
            </summary>
            <param name="matrix3D">The matrix.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.GetMinor(Syncfusion.Windows.Forms.Chart.Matrix3D,System.Int32,System.Int32)">
            <summary>
            Gets the minor.
            </summary>
            <param name="dd">The matrix.</param>
            <param name="columnIndex">The index of column.</param>
            <param name="rowIndex">The index of row.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.GetD(Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            Gets the determinant.
            </summary>
            <param name="matrix3D">The matrix.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.GetIdentity">
            <summary>
            Gets the identity matrix.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.GetGauss(Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            Gets the gauss result.
            </summary>
            <remarks>
            The columns of matrix is the A, B, C, D parameters of equations.
            </remarks>
            <param name="m1">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.Transform(System.Double,System.Double,System.Double)">
            <summary>
            Transforms the specified vector.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="z">The Z coordinate.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.Turn(System.Double)">
            <summary>
            Turns by the specified angle.
            </summary>
            <param name="angle">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.Tilt(System.Double)">
            <summary>
            Tilts by the specified angle.
            </summary>
            <param name="angle">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.Twist(System.Double)">
            <summary>
            Twists by the specified angle.
            </summary>
            <param name="angle">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.Scale(System.Double,System.Double,System.Double)">
            <summary>
            Scales by  the specified values.
            </summary>
            <param name="dx">The X scale.</param>
            <param name="dy">The Y scale.</param>
            <param name="dz">The Z scale.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.Transposed(Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            Transposes the specified matrix.
            </summary>
            <param name="matrix3D">The matrix.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.Shear(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Shears the specified values.
            </summary>
            <param name="xy">The xy shear.</param>
            <param name="xz">The xz shear.</param>
            <param name="yx">The yx shear.</param>
            <param name="yz">The yz shear.</param>
            <param name="zx">The zx shear.</param>
            <param name="zy">The zy shear.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.RotateAlongOX(System.Double)">
            <summary>
            Creates transformation matrix that rotates polygon around OX axis.
            </summary>
            <param name="angle">The angle to rotate.</param>
            <returns>Transformation matrix.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.RotateAlongOY(System.Double)">
            <summary>
            Creates transformation matrix that rotates polygon around OY axis.
            </summary>
            <param name="angle">The angle to rotate.</param>
            <returns>Transformation matrix.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.RotateAlongOZ(System.Double)">
            <summary>
            Creates transformation matrix that rotates polygon around OZ axis.
            </summary>
            <param name="angle">The angle to rotate.</param>
            <returns>Transformation matrix.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.GetDeterminant(System.Double[][])">
            <summary>
            Calculates determinant row given matrix..
            </summary>
            <param name="dd">The matrix to calculate determinant.</param>
            <returns>Determinant of the given matrix.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Matrix3D.GetMMtr(System.Double[][],System.Int32,System.Int32)">
            <summary>
            Gets the minor.
            </summary>
            <param name="dd">The matrix.</param>
            <param name="columnIndex">The index of column.</param>
            <param name="rowIndex">The index of row.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Matrix3D.IsAffine">
            <summary>
            Gets a value indicating whether this matrix is affine.
            </summary>
            <value><c>true</c> if this matrix is affine; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Matrix3D.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Double"/> with the specified column and row.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Matrix3D.Identity">
            <summary>
            Gets the identity matrix.
            </summary>
            <value>The identity matrix.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.PathGroup3D">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PathGroup3D.#ctor(System.Double)">
             <summary>
             
             </summary>      
            <param name="z"></param> 
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PathGroup3D.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Brush,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            Adds the path.
            </summary>
            <param name="gp">The gp.</param>
            <param name="brush">The brush.</param>
            <param name="brushInfo">The BrushInfo</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PathGroup3D.GetNormal(Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            
            </summary>
            <param name="transform"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PathGroup3D.Draw(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            
            </summary>
            <param name="g3d"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PathGroup3D.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.PathGroup3D.PathItem">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Path3D">
            <summary>
            Represents the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> in the 3D.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3D.#ctor(Syncfusion.Windows.Forms.Chart.Plane3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Path3D"/> class.
            </summary>
            <param name="plane">The plane.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3D.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Path3D"/> class.
            </summary>
            <param name="vs">The vs.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3D.#ctor(Syncfusion.Windows.Forms.Chart.Vector3D[],System.Byte[],Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Path3D"/> class.
            </summary>
            <param name="vs">The vs.</param>
            <param name="types">The types.</param>
            <param name="br">The br.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3D.#ctor(Syncfusion.Windows.Forms.Chart.Path3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Path3D"/> class.
            </summary>
            <param name="p3d">The P3D.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3D.FromGraphicsPath(System.Drawing.Drawing2D.GraphicsPath,System.Double,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Creates <see cref="T:Syncfusion.Windows.Forms.Chart.Path3D"/> from the graphics path.
            </summary>
            <param name="gp">The gp.</param>
            <param name="z">The z.</param>
            <param name="br">The br.</param>
            <param name="pen">The pen.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3D.FromGraphicsPath(System.Drawing.Drawing2D.GraphicsPath,System.Double,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            Creates <see cref="T:Syncfusion.Windows.Forms.Chart.Path3D"/> from the graphics path.
            </summary>
            <param name="gp">The gp.</param>
            <param name="z">The z.</param>
            <param name="br">The br.</param>
            <param name="pen">The pen.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3D.FromGraphicsPath(System.Drawing.Drawing2D.GraphicsPath,System.Double,System.Drawing.Brush)">
            <summary>
            Creates <see cref="T:Syncfusion.Windows.Forms.Chart.Path3D"/> from the graphics path.
            </summary>
            <param name="gp">The gp.</param>
            <param name="z">The z.</param>
            <param name="br">The br.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3D.FromGraphicsPath(System.Drawing.Drawing2D.GraphicsPath,System.Double,System.Drawing.Pen)">
            <summary>
            Creates <see cref="T:Syncfusion.Windows.Forms.Chart.Path3D"/> from the graphics path.
            </summary>
            <param name="gp">The gp.</param>
            <param name="z">The z.</param>
            <param name="pen">The pen.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3D.FromGraphicsPath(System.Drawing.Drawing2D.GraphicsPath,System.Double,Syncfusion.Drawing.BrushInfo)">
            <summary>
            Creates <see cref="T:Syncfusion.Windows.Forms.Chart.Path3D"/> from the graphics path.
            </summary>
            <param name="gp">The gp.</param>
            <param name="z">The z.</param>
            <param name="br">The br.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3D.FromGraphicsPath(System.Drawing.Drawing2D.GraphicsPath,Syncfusion.Windows.Forms.Chart.Plane3D,System.Double,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Creates <see cref="T:Syncfusion.Windows.Forms.Chart.Path3D"/> from the graphics path.
            </summary>
            <param name="gp">The gp.</param>
            <param name="plane">The plane.</param>
            <param name="z">The z.</param>
            <param name="br">The br.</param>
            <param name="pen">The pen.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3D.GetPath(System.Drawing.PointF[])">
            <summary>
            
            </summary>
            <param name="pts"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3D.Draw(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            
            </summary>
            <param name="g3d"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3D.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Path3D.Types">
            <summary>
            Gets the types.
            </summary>
            <value>The types.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Path3DCollect">
            <summary>
            Represents polygones polygon.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3DCollect.#ctor(Syncfusion.Windows.Forms.Chart.Polygon[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Path3DCollect"/> class.
            </summary>
            <param name="paths">The array of polygons.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3DCollect.#ctor(Syncfusion.Windows.Forms.Chart.Polygon)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Path3DCollect"/> class.
            </summary>
            <param name="paths">The polygon.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3DCollect.#ctor(Syncfusion.Windows.Forms.Chart.Path3DCollect)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Path3DCollect"/> class.
            </summary>
            <param name="p3dc">The <see cref="T:Syncfusion.Windows.Forms.Chart.Path3DCollect"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3DCollect.Add(Syncfusion.Windows.Forms.Chart.Polygon)">
            <summary>
            Adds the specified polygon to the group.
            </summary>
            <param name="polygon">The <see cref="T:Syncfusion.Windows.Forms.Chart.Polygon"/>.</param>
            <returns>Returns the index of the added polygon.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3DCollect.Draw(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            Draws to the specified <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/>.
            </summary>
            <param name="g3d">The g3d.</param>
            <returns>Returns ChartRegion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3DCollect.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns the polygon.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3DCollect.Transform(Syncfusion.Windows.Forms.Chart.Matrix3D)">
            <summary>
            Transforms by the specified <see cref="T:Syncfusion.Windows.Forms.Chart.Matrix3D"/>.
            </summary>
            <param name="matrix3D">The <see cref="T:Syncfusion.Windows.Forms.Chart.Matrix3D"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Path3DCollect.RefreshPoints">
            <summary>
            Refreshes the points.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Path3DCollect.Points">
            <summary>
            Gets the points of polygon.
            </summary>
            <value>The points.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Pseudo3DText">
            <summary>
            Represents the label positioned in the 3D.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Pseudo3DText.#ctor(System.String,System.Drawing.Font,System.Drawing.Brush,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Pseudo3DText"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="br">The br.</param>
            <param name="loc">The loc.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Pseudo3DText.#ctor(System.String,System.Drawing.Font,System.Drawing.Brush,Syncfusion.Windows.Forms.Chart.Vector3D,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Pseudo3DText"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="br">The br.</param>
            <param name="loc">The loc.</param>
            <param name="bounds">Bounds of the text</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Pseudo3DText.Draw(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            Draws to the specified <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/>.
            </summary>
            <param name="g3d">The <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/>.</param>
            <returns>Returns ChartRegion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Pseudo3DText.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Return polygon.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Pseudo3DText.Font">
            <summary>
            Gets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Pseudo3DText.Text">
            <summary>
            Gets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Pseudo3DText.Location">
            <summary>
            Gets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Pseudo3DText.Alignment">
            <summary>
            Gets or sets the alignment.
            </summary>
            <value>The alignment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Pseudo3DText.Matrix">
            <summary>
            Gets or sets the matrix.
            </summary>
            <value>The matrix.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Vector3D">
            <summary>
            Represents the coordinates of a 3D point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Vector3D.Empty">
            <summary>
            The empty <see cref="T:Syncfusion.Windows.Forms.Chart.Vector3D"/>. All coordinates is zero.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3D.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Vector3D"/> struct.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3D.op_Subtraction(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Implements the operator -.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3D.op_Addition(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Implements the operator +.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3D.op_Multiply(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Implements the cross product operation.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3D.op_BitwiseAnd(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Implements the dot product operation.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3D.op_Multiply(Syncfusion.Windows.Forms.Chart.Vector3D,System.Double)">
            <summary>
            Implements the operator *.
            </summary>
            <param name="v1">The v1.</param>
            <param name="val">The val.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3D.op_LogicalNot(Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Implements the operator !.
            </summary>
            <param name="v1">The v1.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3D.op_Equality(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3D.op_Inequality(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3D.GetLength">
            <summary>
            Gets the length.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3D.Normalize">
            <summary>
            Normalizes this vector.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3D.ToString">
            <summary>
            Overrides <see cref="M:System.Object.ToString"/> method.
            </summary>
            <returns>The text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3D.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Vector3D.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Vector3D.X">
            <summary>
            Gets the X coordinate.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Vector3D.Y">
            <summary>
            Gets the Y coordinate.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Vector3D.Z">
            <summary>
            Gets the Z coordinate.
            </summary>
            <value>The Z.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Vector3D.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>True</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Vector3D.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value><c>True</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAreaCursorCollection">
            <summary>
            ChartAreaCursorCollection is a collection for <see cref="T:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor"/> objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAreaCursorCollection.IndexOf(Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor)">
            <summary>
                Looks up the collection and returns the index value of the specified cursor if it is present.
            </summary>
            <param name="cursor" type="ChartInteractiveCursor">
                <para>
                 Cursor to look for.   
                </para>
            </param>
            <returns>
                The index value of the cursor if the look up was successful; -1 otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAreaCursorCollection.Add(Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor)">
            <summary>
                Adds the specified cursor to this collection.
            </summary>
            <param name="cursor" type="ChartInteractiveCursor">
                <para>
                An instance of the cursor that is to be added.    
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAreaCursorCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor)">
            <summary>
                Inserts the specified cursor at the specified index.
            </summary>
            <param name="index" type="int">
                <para>
                Index value where the cursor is to be inserted.   
                </para>
            </param>
            <param name="cursor" type="ChartInteractiveCursor">
                <para>
                An instance of the cursor that is to be inserted.    
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAreaCursorCollection.Remove(Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor)">
            <summary>
                Removes the specified cursor from this collection.
            </summary>
            <param name="cursor" type="ChartInteractiveCursor">
                <para>
                 Cursor that is to be removed.   
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartAreaCursorCollection.Validate(System.Object)">
            <summary>
            Performs additional custom processes when validating a value
            </summary>
            <param name="obj">The object to validate.</param>
            <returns>If is true, value is approved.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartAreaCursorCollection.Item(System.Int32)">
            <summary>
            Looks up the collection and returns the interactive cursor at the specified index.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor">
            <summary>
            This type implements the cursor service which lets the end user drag a set of horizontal and vertical lines and dock them
            to a data point to help visualize the X and Y values of these data points.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor"/> class.
            </summary>
            <param name="chartSeries">Specifies the chart series data points that the cursor should track.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor"/> class.
            </summary>
            <param name="chartSeries">Specifies the chart series data points that the cursor should track.</param>
            <param name="color">The color of the cursors.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.VerticalMove(System.Boolean)">
            <summary>
            Call this method to move the horizontal cursor up or down, to the next nearest data point in Y axis.
            </summary>
            <param name="moveUp">True to move up, false to move down.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.HorizontalMove(System.Boolean)">
            <summary>
            Call this method to move the vertical cursor left or right, to the next nearest data point in X axis.
            </summary>
            <param name="moveRight">True to move right, false to move left.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.HorizontalMove(System.Double)">
            <summary>
            Returns the series index value of the closest point to the specified x value and moves the cursor to that point.
            If closest point could not be found, -1 is returned.
            </summary>
            <param name="x">Specifies the X value in the chart near which the data point is to be found.</param>
            <returns>The series index of the data point or -1 if nothing is nearby.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.VerticalMove(System.Double)">
            <summary>
            Returns the series index value of the closest point to the specified y value.
            If closest point could not be found, -1 is returned.
            </summary>
            <param name="y">Specifies the Y value in the chart near which the data point is to be found.</param>
            <returns>The series index of the data point or -1 if nothing is nearby.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.GetClosestXPoint(System.Double)">
            <summary>
            Returns the closest  X point for the given Y value.
            </summary>
            <param name="x">Specifies the X value in the chart near which the data point is to be found.</param>
            <returns>The series index of the data point or -1 if nothing is nearby.</returns>   
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.GetClosestYPoint(System.Double)">
            <summary>
            Returns the closest Y point for the given Y value.
            </summary>
            <param name="y">Specifies the Y value in the chart near which the data point is to be found.</param>
            <returns>The series index of the data point or -1 if nothing is nearby.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.IsXLocation(System.Drawing.Point)">
            <summary>
            Specifies if the absolute difference in X position of the specified point and the current location of the cursor is less than 3.
            </summary>
            <param name="pt">The point in question.</param>
            <returns>true if the specified point is within a range of 3.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.IsYLocation(System.Drawing.Point)">
            <summary>
            Specifies if the absolute difference in Y position of the specified point and the current location of the cursor is less than 3.
            </summary>
            <param name="pt">The point in question.</param>
            <returns>true if the specified point is within a range of 3.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.ResortArrays">
            <summary>
            Resorts the points arrays.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.OnSeriesChanged(System.Object,System.EventArgs)">
            <summary>
            Called when series is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.RaiseChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.Changed">
            <summary>
            Occurs when properties is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.XPosition">
            <summary>
            Gets or sets the X position.
            </summary>
            <value>The X position.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.YPosition">
            <summary>
            Get and Set the Y position of the Interactive Cursor.
            </summary>
            <value>The Y position.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.CursorOrientation">
            <summary>
            Get and Set the Cursor Orientation of the Interactive Cursor.
            </summary>
            <value>Cursor Orientation</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.MoveToChartArea">
            <summary>
            Get or Set the cursor moving to chart area.
            </summary>
            <value>The move to chart area </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.SnapToPoints">
            <summary>
            Get or Set whether interactive cursor will be placed in chart area or closest point after releasing the mouse.
            </summary>
            <value>Snap to a point in series</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.LineRedraw">
            <summary>
            Get or Set whether the cursor line need to LineRedraw or not.
            </summary>
            <value>The LineRedraw </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.ShowPointSymbol">
            <summary>
            Get and Set the symbol for series points.
            </summary>
            <value>ShowPointSymbol</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.XInterval">
            <summary>
            Get and Set the X inetrval.
            </summary>
            <value>Interval  for X Axis</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.YInterval">
            <summary>
            Get and Set the Y inetrval.
            </summary>
            <value>Interval  for Y Axis</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.HorizontalCursorColor">
            <summary>
            Get and Set the Horizontal cursor color of the Interactive Cursor.
            </summary>
            <value>Horizontal cursor color</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.VerticalCursorColor">
            <summary>
            Get and Set the Vertical cursor color of the Interactive Cursor.
            </summary>
            <value>Vertical cursor color</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.Location">
            <summary>
            Gets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.LineLocation">
            <summary>
            Get or Set the CursorLineLocation.
            </summary>
            <value>The CursorLine location.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.Point">
            <summary>
            Gets the point.
            </summary>
            <value>The point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartInteractiveCursor.Series">
            <summary>
            Gets the series.
            </summary>
            <value>The series.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendCollection">
            <summary>
            Collection of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/> instances.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendCollection.Add(Syncfusion.Windows.Forms.Chart.IChartLegend)">
            <summary>
            Adds <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/> to collection.
            </summary>
            <param name="value">Instance of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/> class.</param>
            <returns>Index of item.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendCollection.Contains(Syncfusion.Windows.Forms.Chart.IChartLegend)">
            <summary>
            Determines whether the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendCollection"/> contains a specific item.
            </summary>
            <param name="value">Instance of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/> class.</param>
            <returns>true if the <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/> is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendCollection.Remove(Syncfusion.Windows.Forms.Chart.IChartLegend)">
            <summary>
            Removes the specific <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/> from the collection.
            </summary>
            <param name="value">Instance of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/> class.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendCollection.IndexOf(Syncfusion.Windows.Forms.Chart.IChartLegend)">
            <summary>
            Determines the index of a specific item in the collection.
            </summary>
            <param name="value">Instance of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/> class.</param>
            <returns>Index of specified <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.IChartLegend)">
            <summary>
            Inserts an item to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/> should be inserted.</param>
            <param name="value">Instance of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/> class.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendCollection.Validate(System.Object)">
            <summary>
            Validates the specified object.
            </summary>
            <param name="obj">An <see cref="T:System.Object"/> to validation.</param>
            <returns>true if specified <see cref="T:System.Object"/> is <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/> and collection doesn't contain it; otherwise, false.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendCollection.Item(System.Int32)">
            <summary>
            Gets or sets <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/> by the index.
            </summary>
            <param name="index">Index of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendCollection.Item(System.String)">
            <summary>
            Gets <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/> by the name.
            </summary>
            <param name="name">Name of <see cref="T:Syncfusion.Windows.Forms.Chart.IChartLegend"/>.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LegendItemClickEventHandler">
            <summary>
            Delegate that is to be used with ChartLegend.click event. This Event is fired when the legend items is clicked.
            Handle this event to customize chart when a legend item is clicked.
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.
                </para>
            </param>
            <param name="e" type="Syncfusion.Windows.Forms.Chart.ChartLegendFilterItemsEventArgs">
                <para>
                Argument.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LegendFilterItemsEventHandler">
            <summary>
            Delegate that is to be used with ChartLegend.FilterItems event. This Event is fired when the legend items need to be filtered.
            Handle this event to change the collection of LegendItems that the legend contains.
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.
                </para>
            </param>
            <param name="e" type="Syncfusion.Windows.Forms.Chart.ChartLegendFilterItemsEventArgs">
                <para>
                Argument.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LegendDrawItemEventHandler">
            <summary>
            Delegate that is to be used with ChartLegend.DrawItem event. This event is fired when a legend item needs to draw. Handle this event to change the drawing of items.
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.
                </para>
            </param>
            <param name="e" type="Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs">
                <para>
                Argument.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendMinSizeEventHandler">
            <summary>
            Delegate that is to be used with ChartLegend.MinSize event. This event is fired when the legend's minimum size is to be fixed.
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.
                </para>
            </param>
            <param name="e" type="Syncfusion.Windows.Forms.Chart.ChartLegendMinSizeEventArgs">
                <para>
                Argument.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LegendDrawItemTextEventHandler">
            <summary>
            Delegate that is to be used with ChartLegend.DrawItemText event. This event is fired when a legend item text needs to draw. Handle this event to change the drawing of items text.
            </summary>
            <param name="sender" type="object">
                <para>
                Sender.
                </para>
            </param>
            <param name="e" type="Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemTextEventArgs">
                <para>
                Argument.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemTextEventArgs.#ctor(System.Drawing.Graphics,System.String,System.Drawing.RectangleF)">
            <summary>
                Constructor.
            </summary>
            <param name="g" type="System.Drawing.Graphics">
                <para>
                Graphics object.
                </para>
            </param>
            <param name="text" type="Syncfusion.Windows.Forms.Chart.LegendItem">
                <para>
                Legend item text to be rendered.
                </para>
            </param>
            <param name="m_textRect" type="System.Drawing.Point">
                <para>
                 Bounds of the legend item.
                </para>
            </param>     
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemTextEventArgs.Graphics">
            <summary>
            Gets the graphics.
            </summary>
            <value>The graphics.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemTextEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this LegendDrawItemTextEventArgs is handled.
            </summary>
            <value><c>true</c> if handled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemTextEventArgs.Text">
            <summary>
            Gets or sets text of Legend item
            </summary>
            <value>The graphics.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemTextEventArgs.TextRect">
            <summary>
            Gets bounds of legend item
            </summary>
            <value>The graphics.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendFilterItemsEventArgs">
            <summary>
            Event argument that is to be used with ChartLegend.FilterItems event. This
            event is raised before the legend items are rendered. This can be used to remove any item conditionally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendFilterItemsEventArgs.#ctor(Syncfusion.Windows.Forms.Chart.ChartLegendItem[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendFilterItemsEventArgs"/> class.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendFilterItemsEventArgs.#ctor(Syncfusion.Windows.Forms.Chart.ChartLegendItemsCollection)">
            <summary>
                Constructor.
            </summary>
            <param name="items" type="Syncfusion.Windows.Forms.Chart.LegendItem[]">
                <para>
                Legend items that are to be rendered.
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendFilterItemsEventArgs.Items">
            <summary>
                Gets or sets the legend items that are to be rendered.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendItemClickEventArgs">
            <summary>
            Event argument that is to be used with ChartLegend.FilterItems event. This
            event is raised before the legend items are rendered. This can be used to remove any item conditionally.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemClickEventArgs.#ctor(Syncfusion.Windows.Forms.Chart.ChartLegendItem,System.Int32,System.Int32)">
            <summary>
                Constructor.
            </summary>
            <param name="item" type="Syncfusion.Windows.Forms.Chart.LegendItem[]">
                <para>
                Legend item that was clicked.
                </para>
            </param>
            <param name="index"></param>
            <param name="legendIndex"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemClickEventArgs.Item">
            <summary>
                Gets or sets the legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemClickEventArgs.Index">
            <summary>
                Gets the index of legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemClickEventArgs.LegendIndex">
            <summary>
                Gets the index of legend in Chart Legends collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs">
            <summary>
             Delegate that is to be used with ChartLegend.DrawItem event. This event is fired when a legend item needs to draw. Handle this event to change the drawing of items.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs.#ctor(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartLegendItem,System.Drawing.Point,System.Int32)">
            <summary>
                Constructor.
            </summary>
            <param name="g" type="System.Drawing.Graphics">
                <para>
                Graphics object.
                </para>
            </param>
            <param name="item" type="Syncfusion.Windows.Forms.Chart.LegendItem">
                <para>
                Legend item to be rendered.
                </para>
            </param>
            <param name="loc" type="System.Drawing.Point">
                <para>
                Location of the legend item.
                </para>
            </param>
            <param name="index" type="int">
                <para>
                Index value of the legend item being rendered.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs.#ctor(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartLegendItem,System.Drawing.Rectangle,System.Int32)">
            <summary>
                Constructor.
            </summary>
            <param name="g" type="System.Drawing.Graphics">
                <para>
                Graphics object.
                </para>
            </param>
            <param name="item" type="Syncfusion.Windows.Forms.Chart.LegendItem">
                <para>
                Legend item to be rendered.
                </para>
            </param>
            <param name="bounds" type="System.Drawing.Point">
                <para>
                Bounds of the legend item.
                </para>
            </param>
            <param name="index" type="int">
                <para>
                Index value of the legend item being rendered.
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs.Graphics">
            <summary>
            Gets the graphics.
            </summary>
            <value>The graphics.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs"/> is handled.
            </summary>
            <value><c>true</c> if handled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs.LegendItem">
            <summary>
            Gets the legend item.
            </summary>
            <value>The legend item.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs.Location">
            <summary>
            Gets or sets the location of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs.Size">
            <summary>
            Gets or sets the size of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendDrawItemEventArgs.Bounds">
            <summary>
            Gets or sets the bounds of the item. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendMinSizeEventArgs">
            <summary>
            Argument that is to be used with ChartLegend.MinSize event. This event is fired when the legend's minimum size is to be fixed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendMinSizeEventArgs.#ctor(System.Drawing.Size)">
            <summary>
                Constructor.
            </summary>
            <param name="size" type="System.Drawing.Size">
                <para>
                Size to be used for the legend.
                </para>
            </param>
            <returns>
                A void value.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendMinSizeEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendMinSizeEventArgs"/> is handled.
            </summary>
            <value><c>true</c> if handled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendMinSizeEventArgs.Size">
            <summary>
                Gets or sets the minimum size to be used for the legend.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LegendItem">
            <summary>
            This class is obsolete. Use the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItem"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendItem">
            <summary>
            The ChartLegendItem class holds information about each legend item like text, color and interior. Use this to add
            custom legend items through the ChartLegend.CustomItems list. Or parse through the auto generated ChartLegend.Items list.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItem.m_children">
            <summary>
            The collection of subitems.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItem.m_text">
            <summary>
            The text of title.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItem.m_style">
            <summary>
            The appearance style of item.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItem.m_visible">
            <summary>
            Indicates whether item is visible.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItem.m_isChecked">
            <summary>
            Indicates whether item is checked.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItem.m_bounds">
            <summary>
            The bounds of item.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItem.m_iconRect">
            <summary>
            The bounds of icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItem.m_textRect">
            <summary>
            The bounds of title.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItem.m_isDrawingShadow">
            <summary>
            Indicates is the shadow drawing pass.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.#ctor">
            <summary>
                Overloaded constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.#ctor(System.String)">
            <summary>
                Overloaded constructor.
            </summary>
            <param name="text">Text of item.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.SetLegend(Syncfusion.Windows.Forms.Chart.IChartLegend)">
            <summary>
            Sets the legend.
            </summary>
            <param name="legend">The legend.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.SetOwner(Syncfusion.Windows.Forms.Chart.ChartLegendItem)">
            <summary>
            Sets the owner.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.IsHit(System.Int32,System.Int32)">
            <summary>
            Indicates if <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItem"/> contains the specified coordinates.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Measure(System.Drawing.Graphics)">
            <summary>
            Measures the size of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItem"/>.
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Measure(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Measures the size of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItem"/>.
            </summary>
            <param name="g">Graphics object used for drawing the legend item</param>
            <param name="bounds">Rectangle defining the bounds of legend item</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Arrange(System.Drawing.RectangleF)">
            <summary>
            Sets the bounds of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItem"/>.
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItem"/>.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Draw(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draws the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItem"/>.        
            </summary>        
            <param name="g">Graphics object</param>
            <param name="borderPen">RectangleF object. Legend item border will be drawn with this Pen. If border is not required pass null as value for this parameter</param>
            <param name="bounds">RectangleF object. Legend item will be drawn within the bounds of this rectangle</param>
            <param name="format">StringFormat object. Legend item text will be drawn in the specified string format</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.DisposeLegendItem">
            <summary>
            Disposes legend item object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.DrawInternal(System.Drawing.Graphics)">
            <summary>
            Internal method for the drawing of item.
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.GetBrushInfo">
            <summary>
            Returns <see cref="T:Syncfusion.Drawing.BrushInfo"/> for the icon.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.GetPen">
            <summary>
            Returns border <see cref="T:System.Drawing.Pen"/> for the icon.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.GetLinePen">
            <summary>
            Returns line <see cref="T:System.Drawing.Pen"/> for the icon.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.GetTextBrush">
            <summary>
            Returns <see cref="T:System.Drawing.Brush"/> for the text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.OnCheckedChanged(System.EventArgs)">
            <summary>
            This method is called when <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.IsChecked"/> was changed.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.OnChildrenChanged(Syncfusion.Windows.Forms.Chart.ChartBaseList,Syncfusion.Windows.Forms.Chart.ChartListChangeArgs)">
            <summary>
            Called when [children changed].
            </summary>
            <param name="list">The list.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.RaiseChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Changed"/> event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.RaiseCheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.Chart.ChartLegendItem.CheckedChanged"/> event.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.DrawIcon(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Windows.Forms.Chart.ChartLegendItemType)">
            <summary>
            Draws legend icon by the specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItemType"/>.
            </summary>
            <param name="g">Instance of <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">Rectangle of icon.</param>
            <param name="shape">Shape of icon.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Changed">
            <summary>
            Raised when the any properties is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartLegendItem.CheckedChanged">
            <summary>
            Raised when s <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.IsChecked"/> property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Children">
            <summary>
            Returns the the child collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.ItemStyle">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle"/> for this item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Font">
            <summary>
            Gets or sets the font of the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.ImageIndex">
            <summary>
            Gets or sets the image index value of the item in the item's image list.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.ImageList">
            <summary>
            Gets or sets the ImageList associated with this item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Interior">
            <summary>
            Gets or sets the interior brush for the rectangular area that represents a legend.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.RepresentationSize">
            <summary>
            Gets or sets the size of the rectangle holding the representation icon of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.ShowSymbol">
            <summary>
            Indicates whether the symbol is to be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Spacing">
            <summary>
            Gets or sets the spacing of the item within the legend.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Symbol">
            <summary>
            Gets or sets the symbol that is to be associated with this item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Border">
            <summary>
            Gets or sets the border item that is to be associated with this item's border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Text">
            <summary>
            Gets or sets the text of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.TextColor">
            <summary>
            Gets or sets the color of the text of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Type">
            <summary>
            Gets or sets the type of representation for the legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.ShowIcon">
            <summary>
            Indicates whether the icon is to be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.IconAlignment">
            <summary>
            Gets or sets the left/right alignment of the icon with respect to the legend text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.TextAligment">
            <summary>
            Gets or sets the vertical alignment of the legend text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.VisibleCheckBox">
            <summary>
            Indicates if the checkbox associated with this legend item is to be displayed. Also see <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.IsChecked"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.ShowShadow">
            <summary>
            Indicates if the shadow is to be shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.ShadowOffset">
            <summary>
            Gets or sets the size of shadow offset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.ShadowColor">
            <summary>
            Gets or sets the color of the Shadow.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Visible">
            <summary>
            Gets or sets value indicates whether <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItem"/> is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.IsChecked">
            <summary>
            Gets or sets the state of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItem"/> checkbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.TextLines">
            <summary>
            Gets or sets the lines of text in multiline configurations.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Bounds">
            <summary>
            Gets the rendering bounds of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItem.Image">
            <summary>
            Gets or sets the icon image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendItem.#ctor">
            <summary>
                Overloaded constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LegendItem.#ctor(System.String)">
            <summary>
                Overloaded constructor.
            </summary>
            <param name="text">Text of item.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesLegendItem">
            <summary>
            This type is used internally to create legend items associated with a series. Such auto generated legend items are usually 
            of this type in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItem"/> list.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesLegendItem.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initialize new instance of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesLegendItem"/> class.
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesLegendItem.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            Initialize new instance of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesLegendItem"/> class.
            </summary>
            <param name="series"></param>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesLegendItem.Refresh(System.Boolean)">
            <summary>
            Sets settings of item by series.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesLegendItem.CopySymbol(System.Object,System.Object)">
            <summary>
            ChartLegendItem.CopySymbol method.
            </summary>
            <param name="src">Instance of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>.</param>        
            <param name="target">Instance of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesLegendItem.DrawIcon(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Windows.Forms.Chart.ChartLegendItemType)">
            <summary>
            Overrides <see cref="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.DrawIcon(System.Drawing.Graphics,System.Drawing.RectangleF,Syncfusion.Windows.Forms.Chart.ChartLegendItemType)"/> method.
            </summary>
            <param name="g">Instance of <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">Rectangle of icon.</param>
            <param name="shape">Shape of icon.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesLegendItem.OnCheckedChanged(System.EventArgs)">
            <summary>
            Overrides <see cref="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.OnCheckedChanged(System.EventArgs)"/> method.
            </summary>
            <param name="args">Argument.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesLegendItem.GetBrushInfo">
            <summary>
            Overrides <see cref="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.GetBrushInfo"/> method.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesLegendItem.Series">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> corresponding to this item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesLegendItem.DrawSeriesIcon">
            <summary>
            Indicates the method for the drawing of legend icon. If true, an icon representing the series type will be rendered.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTrendlineLegendItem.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.Trendline)">
            <summary>
            Initialize new instance of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesLegendItem"/> class.
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTrendlineLegendItem.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.Trendline,System.Int32)">
            <summary>
            Initialize new instance of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesLegendItem"/> class.
            </summary>
            <param name="series"></param>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTrendlineLegendItem.Refresh(System.Boolean)">
            <summary>
            Sets settings of item by series.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTrendlineLegendItem.CopySymbol(System.Object,System.Object)">
            <summary>
            ChartLegendItem.CopySymbol method.
            </summary>
            <param name="src">Instance of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>.</param>        
            <param name="target">Instance of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTrendlineLegendItem.GetBrushInfo">
            <summary>
            Overrides <see cref="M:Syncfusion.Windows.Forms.Chart.ChartLegendItem.GetBrushInfo"/> method.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartTrendlineLegendItem.Trendline">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/> corresponding to this item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartTrendlineLegendItem.DrawSeriesIcon">
            <summary>
            Indicates the method for the drawing of legend icon. If true, an icon representing the series type will be rendered.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendItemsCollection">
            <summary>
            A collection of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItem"/>s.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemsCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItemsCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemsCollection.Add(Syncfusion.Windows.Forms.Chart.ChartLegendItem)">
            <summary>
            Adds the specified legend item to the collection.
            </summary>
            <param name="value">The item to add.</param>
            <returns> The position into which the new element was inserted.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemsCollection.AddRange(Syncfusion.Windows.Forms.Chart.ChartLegendItem[])">
            <summary>
            Adds item array to the collection.
            </summary>
            <param name="range">The array of items to add.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemsCollection.Remove(Syncfusion.Windows.Forms.Chart.ChartLegendItem)">
            <summary>
            Removes the specified legend item from the collection.
            </summary>
            <param name="value">
            The legend item to be removed.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemsCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.ChartLegendItem)">
            <summary>
            Inserts the specified legend item in the specified index.
            </summary>
            <param name="index">
            The index value where the legend item is to be inserted.
            </param>
            <param name="value">
            The legend item that is to be inserted.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemsCollection.IndexOf(Syncfusion.Windows.Forms.Chart.ChartLegendItem)">
            <summary>
            Returns the index value of the specified legend item.
            </summary>
            <param name="value">The legend item to look for.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemsCollection.ToArray">
            <summary>
            Copies the elements of the array.
            </summary>
            <returns>Returns array of ChartLegendItem.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemsCollection.Contains(Syncfusion.Windows.Forms.Chart.ChartLegendItem)">
            <summary>
            Indicates whether the specified item is in the list.
            </summary>
            <param name="value">The System.Object to locate in the System.Collections.IList.</param>
            <returns>true if the ChartLegendItem is found in the List; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemsCollection.Validate(System.Object)">
            <summary>
            Performs additional custom processes when validating a value
            </summary>
            <param name="obj">The object to validate.</param>
            <returns>If is true, value is approved.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemsCollection.Item(System.Int32)">
            <summary>
            Looks up the collection and returns the legend item stored in the specified index.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle">
            <summary>
            Defines the style of a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItem"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.#ctor(System.Collections.Hashtable)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle"/> class.
            </summary>
            <param name="store">The store.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Reset(Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys)">
            <summary>
            Resets style value by the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Clear">
            <summary>
            Clears the style values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.CreateDefaultSymbol">
            <summary>
            Creates the default symbol info.
            </summary>
            <returns>Returns ChartSymbolInfo instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.CreateDefault">
            <summary>
            Creates the default style.
            </summary>
            <returns>Returns ChartLegendItemStyle instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.SetToLowerLevel(Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle)">
            <summary>
            Sets the parent to the lower level.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Dispose">
            <summary>
            Method to dispose ChartLegendItemStyle object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.SetObject(System.Object,System.Object)">
            <summary>
            Sets the object.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.GetObject(System.Object)">
            <summary>
            Gets the object.
            </summary>
            <param name="key">The key.</param>
            <returns>Return Oblect.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Url">
            <summary>
            Gets or sets the Url that is to be associated with a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>. This Url will be applied to the point if
            EnableUrl and CalcRegion property is set to True.This property is applicable only for ChartWeb.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Default">
            <summary>
            Gets the default.
            </summary>
            <value>The default.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.IsEmpty">
            <summary>
            Gets a value indicating whether this style is empty.
            </summary>
            <value><c>true</c> if this style is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.BaseStyle">
            <summary>
            Gets or sets the base style.
            </summary>
            <value>The base style.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Font">
            <summary>
            Gets or sets the font of the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ImageIndex">
            <summary>
            Gets or sets the image index value of the item in the item's image list.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ImageList">
            <summary>
            Gets or sets the ImageList associated with this item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Interior">
            <summary>
            Gets or sets the interior for the rectangular area that represents a legend.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.RepresentationSize">
            <summary>
            Gets or sets the size of the rectangle holding the representation of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ShowSymbol">
            <summary>
            Gets or sets a value indicating whether [show symbol].
            </summary>
            <value><c>true</c> if [show symbol]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Spacing">
            <summary>
            Gets or sets the spacing of the item within the legend.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Symbol">
            <summary>
            Gets or sets the symbol that is to be associated with this item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Border">
            <summary>
            Gets or sets the border that is to be associated with this item's border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.TextColor">
            <summary>
            Gets or sets the color of the text of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.BorderColor">
            <summary>
            Gets or sets the color of the border of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Type">
            <summary>
            Gets or sets the type of representation for the legend item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ShowIcon">
            <summary>
            Gets or sets a value indicating whether [show icon].
            </summary>
            <value><c>true</c> if [show icon]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.IconAlignment">
            <summary>
            Gets or sets the icon alignment.
            </summary>
            <value>The icon alignment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.TextAlignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
            <value>The text alignment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.VisibleCheckBox">
            <summary>
            Gets or sets a value indicating whether [visible check box].
            </summary>
            <value><c>true</c> if [visible check box]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ShowShadow">
            <summary>
            Gets or sets a value indicating whether [show shadow].
            </summary>
            <value><c>true</c> if [show shadow]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ShadowOffset">
            <summary>
            Gets or sets the shadow offset.
            </summary>
            <value>The shadow offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ShadowColor">
            <summary>
            Gets or sets the color of the shadow.
            </summary>
            <value>The color of the shadow.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys">
            <summary>
            Contains the keys for each properties of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.Font">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Font"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.ImageIndex">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Font"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.ImageList">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ImageList"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.Interior">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Interior"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.RepresentationSize">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.RepresentationSize"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.ShowSymbol">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ShowSymbol"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.Spacing">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Spacing"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.Symbol">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Symbol"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.Border">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Border"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.TextColor">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.TextColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.Type">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Type"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.ShowIcon">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ShowIcon"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.IconAlignment">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.IconAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.TextAlignment">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.TextAlignment"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.VisibleCheckBox">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.VisibleCheckBox"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.ShowShadow">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ShowShadow"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.ShadowOffset">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ShadowOffset"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.ShadowColor">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ShadowColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.BorderColor">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.BorderColor"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.ChartLegendStyleKeys.Url">
            <summary>
            The key of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLegendItemStyle.Url"/> property.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartLegend">
            <summary>
             Specifies the default properties of legend.
            </summary>  
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.ItemsTextAligment">
            <summary>
            Gets or sets the items text aligment.
            </summary>
            <value>The items text aligment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.ItemsAlignment">
            <summary>
            Gets or sets the items alignment.
            </summary>
            <value>The items alignment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.RepresentationType">
            <summary>
            Gets or sets the type of the representation.
            </summary>
            <value>The type of the representation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.Alignment">
            <summary>
            Gets or sets the alignment.
            </summary>
            <value>The alignment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.ItemsSize">
            <summary>
            Gets or sets the size of the items.
            </summary>
            <value>The size of the items.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.ItemsShadowOffset">
            <summary>
            Gets or sets the items shadow offset.
            </summary>
            <value>The items shadow offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.ItemsShadowColor">
            <summary>
            Gets or sets the color of the items shadow.
            </summary>
            <value>The color of the items shadow.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.Spacing">
            <summary>
            Gets or sets the spacing.
            </summary>
            <value>The spacing.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.RowsCount">
            <summary>
            Gets or sets the rows count.
            </summary>
            <value>The rows count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.ColumnsCount">
            <summary>
            Gets or sets the columns count.
            </summary>
            <value>The columns count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.ShowSymbol">
            <summary>
            Gets or sets a value indicating whether [show symbol].
            </summary>
            <value><c>true</c> if [show symbol]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.OnlyColumnsForFloating">
            <summary>
            Gets or sets a value indicating whether [only columns for floating].
            </summary>
            <value>
               <c>true</c> if [only columns for floating]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.FloatingAutoSize">
            <summary>
            Gets or sets a value indicating whether [floating auto size].
            </summary>
            <value><c>true</c> if [floating auto size]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.VisibleCheckBox">
            <summary>
            Gets or sets a value indicating whether [visible check box].
            </summary>
            <value><c>true</c> if [visible check box]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.ShowItemsShadow">
            <summary>
            Gets or sets a value indicating whether [show items shadow].
            </summary>
            <value><c>true</c> if [show items shadow]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.SetDefSizeForCustom">
            <summary>
            Gets or sets a value indicating whether [set def size for custom].
            </summary>
            <value>
                <c>true</c> if [set def size for custom]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.BackColor">
            <summary>
            Gets or sets the background color of the legend.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartLegend.ForeColor">
            <summary>
            Gets or sets the foreground color of the legend.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartLegend.FilterItems">
            <summary>
            Fired when the legend items need to be filtered. Handle this event to change the collection of ChartLegendItems that the legend contains.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Localization.SR">
            <summary>
               SR provides localized access to string resources specific 
               from the assembly manifest Syncfusion.Windows.Forms.Chart.Localization.SR.resources
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Localization.SR"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetLoader">
            <summary>
            Gets the loader.
            </summary>      
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetString(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            Gets the string.
            </summary>
            <param name="culture">The culture.</param>
            <param name="name">The name.</param>
            <param name="args">The args.</param>
            <returns>Returns string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetString(System.String)">
            <summary>
            Gets the string.
            </summary>
            <param name="name">The name.</param>
            <returns>Returns string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetString(System.String,System.Object[])">
            <summary>
            Gets the string.
            </summary>
            <param name="name">The name.</param>
            <param name="args">The args.</param>
            <returns>Returns string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetString(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the string.
            </summary>
            <param name="culture">The culture.</param>
            <param name="name">The name.</param>
            <returns>Returns string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetObject(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the object.
            </summary>
            <param name="culture">The culture.</param>
            <param name="name">The name.</param>
            <returns>Returns object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetObject(System.String)">
            <summary>
            Gets the object.
            </summary>
            <param name="name">The name.</param>
            <returns>Returns object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetBoolean(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the boolean.
            </summary>
            <param name="culture">The culture.</param>
            <param name="name">The name.</param>
            <returns>Returns boolean.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetBoolean(System.String)">
            <summary>
            Gets the boolean.
            </summary>
            <param name="name">The name.</param>
            <returns>Returns boolean.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetByte(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the byte.
            </summary>
            <param name="culture">The culture.</param>
            <param name="name">The name.</param>
            <returns>Returns byte.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetByte(System.String)">
            <summary>
            Gets the byte.
            </summary>
            <param name="name">The name.</param>
            <returns>Returns byte.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetChar(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the char.
            </summary>
            <param name="culture">The culture.</param>
            <param name="name">The name.</param>
            <returns>Returns a single character.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetChar(System.String)">
            <summary>
            Gets the char.
            </summary>
            <param name="name">The name.</param>
            <returns>Returns a single character.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetDouble(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the double.
            </summary>
            <param name="culture">The culture.</param>
            <param name="name">The name.</param>
            <returns>Returns double.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetDouble(System.String)">
            <summary>
            Gets the double.
            </summary>
            <param name="name">The name.</param>
            <returns>Returns double.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetFloat(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the float.
            </summary>
            <param name="culture">The culture.</param>
            <param name="name">The name.</param>
            <returns>Returns flaot.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetFloat(System.String)">
            <summary>
            Gets the float.
            </summary>
            <param name="name">The name.</param>
            <returns>Returns float.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetInt(System.String)">
            <summary>
            Gets the int.
            </summary>
            <param name="name">The name.</param>
            <returns>Returns integer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetInt(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the int.
            </summary>
            <param name="culture">The culture.</param>
            <param name="name">The name.</param>
            <returns>Returns integer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetLong(System.String)">
            <summary>
            Gets the long.
            </summary>
            <param name="name">The name.</param>
            <returns>Return long.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetLong(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the long.
            </summary>
            <param name="culture">The culture.</param>
            <param name="name">The name.</param>
            <returns>Returns long.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetShort(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the short.
            </summary>
            <param name="culture">The culture.</param>
            <param name="name">The name.</param>
            <returns>Returns short.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SR.GetShort(System.String)">
            <summary>
            Gets the short.
            </summary>
            <param name="name">The name.</param>
            <returns>Returns short.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Localization.SRCategoryAttribute">
            <summary>
            Specifies the category in which the property or event will be displayed in a visual designer.
            </summary>
            <remarks>
            This is a localized version of CategoryAttribute. The localized string will be loaded from the 
            assembly manifest Syncfusion.Windows.Forms.Chart.Localization.SR.resources
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SRCategoryAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Localization.SRCategoryAttribute"/> class.
            </summary>
            <param name="category">The name of the category.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SRCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Looks up the localized name of the specified category.
            </summary>
            <param name="value">The identifer for the category to look up.</param>
            <returns>
            The localized name of the category, or null if a localized name does not exist.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Localization.SRDescriptionAttribute">
            <summary>
            Specifies a description for a property or event.
            </summary>
            <remarks>
            This is a localized version of DescriptionAttribute. The localized string will be loaded from the 
            assembly manifest Syncfusion.Windows.Forms.Chart.Localization.SR.resources
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Localization.SRDescriptionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Localization.SRDescriptionAttribute"/> class.
            </summary>
            <param name="description">The description text.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults">
            <summary>
            Contains the methods to return the default information of calendar.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults.GetCalendar">
            <summary>
            Gets the calendar.
            </summary>
            <returns>Returns calender.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults.GetDaysInYear">
            <summary>
            Gets the days in year.
            </summary>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults.GetDaysInMonth">
            <summary>
            Gets the days in month.
            </summary>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults.GetMinDaysInMonth">
            <summary>
            Gets the min days in month.
            </summary>
            <returns>Gets minimum days in week.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults.GetDaysInWeek">
            <summary>
            Gets the days in week.
            </summary>
            <returns>Returns no of days in week.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults.GetFirstDayOfWeek">
            <summary>
            Gets the first day of week.
            </summary>
            <returns>Gets first day of week.</returns>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeDefaults">
            <summary>
            Implements the <see cref="T:Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults"/> interface;
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeDefaults.GetCalendar">
            <summary>
            Gets the calendar.
            </summary>
            <returns>Returns calender object.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeDefaults.GetDaysInYear">
            <summary>
            Gets the days in year.
            </summary>
            <returns>Returns no of days in year.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeDefaults.GetDaysInMonth">
            <summary>
            Gets the days in month.
            </summary>
            <returns>Returns the no of days in month.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeDefaults.GetMinDaysInMonth">
            <summary>
            Gets the min days in month.
            </summary>
            <returns>Returns no of days in month.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeDefaults.GetDaysInWeek">
            <summary>
            Gets the days in week.
            </summary>
            <returns>Returns no of days in week.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeDefaults.GetFirstDayOfWeek">
            <summary>
            Gets the first day of week.
            </summary>
            <returns>Returns first day of the week.</returns>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType">
            <summary>
            Types of DateTime intervals that are supported by Essential Chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Auto">
            <summary>
            The interval defaults to the most appropriate for the range of values being considered. For example, if the range
            is a few years, the interval would be internally set to years.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Years">
            <summary>
            Interval is set to years.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Months">
            <summary>
            Interval is set to months.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Weeks">
            <summary>
            Interval is set to weeks.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Days">
            <summary>
            Interval is set to days.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Hours">
            <summary>
            Interval is set to hours.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Minutes">
            <summary>
            Interval is set to minutes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.Seconds">
            <summary>
            Interval is set to seconds.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType.MilliSeconds">
            <summary>
            Interval is set to milliseconds.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval">
            <summary>
              Represents a DateTime interval value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.DefaultIntervalName">
            <summary>
            Name of default interval. 
            </summary>
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.Intervals"/>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.#ctor(Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType,System.Double,Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="value">The value.</param>
            <param name="offsetType">Type of the offset.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.#ctor(Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator">
            <summary>
            Overloaded. Creates and returns a default iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>.
            </summary>
            <returns>Returns IEnumerable object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator(Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationFilter)">
            <summary>
            Creates and returns an iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>. The
            IterationFilter callback will be called for each position in this range to check if the position should be included.
            </summary>
            <param name="filter">The filter.</param>
            <returns>Returns IEnumerable object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator(Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationModifier)">
            <summary>
            Creates and returns an iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>. The
            IterationModifier callback will be called for each position in this range to allow the DateTime value of each position to
            be modified.
            </summary>
            <param name="modifier">The modifier.</param>
            <returns>Returns IEnumerable object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator(Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationFilter,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationModifier)">
            <summary>
            Creates and returns an iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>. The
            IterationModifier callback will be called for each position in this range to allow the DateTime value of each position to
            be modified. The IterationFilter callback will be called for each position in this range to check if the position should be included.
            </summary>
            <param name="filter">The filter.</param>
            <param name="modifier">The modifier.</param>
            <returns>Returns IEnumerable object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator(System.DateTime,System.DateTime)">
            <summary>
            Creates and returns a default iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>.
            Only values that are between rangeStart and rangeEnd will be used.
            </summary>
            <param name="rangeStart">The range start.</param>
            <param name="rangeEnd">The range end.</param>
            <returns>Returns IEnumerable object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator(System.DateTime,System.DateTime,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationFilter)">
            <summary>
            Creates and returns an iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>.
            Only values that are between rangeStart and rangeEnd will be used. In this range, the IterationFilter callback will be called for
            each position in this range to check if the position should be included.
            </summary>
            <param name="rangeStart">The range start.</param>
            <param name="rangeEnd">The range end.</param>
            <param name="filter">The filter.</param>
            <returns>Returns IEnumerable object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator(System.DateTime,System.DateTime,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationModifier)">
            <summary>
            Creates and returns an iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>.
            Only values that are between rangeStart and rangeEnd will be used. In this range, the IterationModifier callback will be called for
            each position in this range to allow it to be modified.
            </summary>
            <param name="rangeStart">The range start.</param>
            <param name="rangeEnd">The range end.</param>
            <param name="modifier">The modifier.</param>
            <returns>Returns IEnumerable object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Iterator(System.DateTime,System.DateTime,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationFilter,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationModifier)">
            <summary>
            Creates and returns an iterator that will iterate over the associated range (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent"/>.
            Only values that are between rangeStart and rangeEnd will be used. In this range, the IterationModifier callback will be called for
            each position in this range to allow it to be modified. For each modified value, the IterationFilter callback will be called
            to check if the position should be included.
            </summary>
            <param name="rangeStart">The range start.</param>
            <param name="rangeEnd">The range end.</param>
            <param name="filter">The filter.</param>
            <param name="modifier">The modifier.</param>
            <returns>Returns IEnumerable object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.GetIntervalCount(System.Collections.IEnumerable)">
            <summary>
            Given a ChartDateTimeInterval.Enumerator instance, this method simply loops through and calculates the number of distinct positions
            in the range that the iterator represents.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange"/>
            </summary>
            <param name="enumerable" type="System.Collections.IEnumerable">
                <para>
                An instance of the ChartDateTimeInterval.Enumerator.
                </para>
            </param>
            <returns>
                Number of distinct positions.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.ToString">
            <summary>
            Overridden. Returns a string representation of this interval.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.ApplyInterval(System.DateTime,System.Globalization.Calendar,Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType,System.Double)">
            <summary>
            Adds the specified interval to the specified date.
            </summary>
            <param name="dateTime">The date time.</param>
            <param name="calendar">The calendar.</param>
            <param name="type">The type of interval.</param>
            <param name="interval">The interval value.</param>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.SetParent(Syncfusion.Windows.Forms.Chart.ChartDateTimeRange)">
            <summary>
            Sets the owner of interval.
            </summary>
            <param name="parent">The parent <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.ApplyInterval(System.DateTime,System.Globalization.Calendar,System.Boolean)">
            <summary>
            Applies the interval to the specified date/time.
            </summary>
            <param name="dateTime">The date time.</param>
            <param name="calendar">The calendar.</param>
            <param name="first">This value indicates if is the first value of axis.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Type">
            <summary>
            Gets or sets the type of this interval.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Value">
            <summary>
            Gets or sets the value of this interval. Interval values should be interpreted in the context of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Type"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.OffsetType">
            <summary>
            Gets or sets the type of the offset. Intervals can have offsets. Offsets merely affect the first position when an interval
            is applied to a range. They translate the first position by the value of the offset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Offset">
            <summary>
            Gets or sets the value of the offset. Intervals can have offsets. Offsets merely affect the first position when an interval
            is applied to a range. They translate the first position by the value of the offset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Parent">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange"/> object with which this interval is associated. Intervals are not created stand alone but
            in the context of a range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationFilter">
            <summary>
            Delegate that is to be used during interaction on the range associated with an instance of ChartDateTimeInterval. If this
            delegate returns False, then that position is not used.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/>
            </summary>
            <param name="dt" type="System.DateTime">
                <para>
                The date that is to be included or not included.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationModifier">
            <summary>
            Delegate that is to be used during iteration on the range associated with an instance of ChartDateTimeInterval. This delegate can
            change the date that gets passed in during iteration.
            </summary>
            <param name="dt" type="System.DateTime">
                <para>
                The date; that is a position along the associated range during iteration. This date can be changed by this callback.
                </para>
            </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator">
            <summary>
            The Enumerator class which implements IEnumerable, IEnumerator.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator.#ctor(Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval,System.DateTime,System.DateTime,System.Globalization.Calendar)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator"/> class.
            </summary>
            <param name="interval">The interval.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="calendar">The calendar.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator.#ctor(Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval,System.DateTime,System.DateTime,System.Globalization.Calendar,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationFilter,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationModifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator"/> class.
            </summary>
            <param name="interval">The interval.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="calendar">The calendar.</param>
            <param name="iterationFilter">The iteration filter.</param>
            <param name="iterationModifier">The iteration modifier.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator.System#Collections#IEnumerator#MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator.System#Collections#IEnumerator#Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator.AdjustDate(System.DateTime)">
            <summary>
            Adjusts the date.
            </summary>
            <param name="dt">The dt.</param>
            <returns>Returns datetime object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator.IsPastEnd(System.DateTime)">
            <summary>
            Determines whether [is past end] [the specified dt].
            </summary>
            <param name="dt">The dt.</param>
            <returns>
            	<c>true</c> if [is past end] [the specified dt]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator.GetNextDate(System.DateTime,System.Boolean)">
            <summary>
            Gets the next date.
            </summary>
            <param name="currentDate">The current date.</param>
            <param name="first">if set to <c>true</c> [first].</param>
            <returns>Returns datetime object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator.DoIterationFilter(System.DateTime)">
            <summary>
            Does the iteration filter.
            </summary>
            <param name="dt">The dt.</param>
            <returns>Returns boolean.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator.DoIterationModifier(System.DateTime)">
            <summary>
            Does the iteration modifier.
            </summary>
            <param name="dt">The dt.</param>
            <returns>Returns datetime object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator.DefaultIterationFilter(System.DateTime)">
            <summary>
            Defaults the iteration filter.
            </summary>
            <param name="dt">The dt.</param>
            <returns>Returns bool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator.DefaultIterationModifier(System.DateTime)">
            <summary>
            Defaults the iteration modifier.
            </summary>
            <param name="dt">The dt.</param>
            <returns>Returns DateTime object</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.Enumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <value></value>
            <returns>
            The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The enumerator is positioned before the first element of the collection or after the last element.
            </exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.RangeEnumerator">
            <summary>
            The RangeEnumerator class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.RangeEnumerator.#ctor(Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Globalization.Calendar,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationFilter,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.IterationModifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.RangeEnumerator"/> class.
            </summary>
            <param name="interval">The interval.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="rangeStart">The range start.</param>
            <param name="rangeEnd">The range end.</param>
            <param name="calendar">The calendar.</param>
            <param name="iterationFilter">The iteration filter.</param>
            <param name="iterationModifier">The iteration modifier.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.RangeEnumerator.#ctor(Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Globalization.Calendar)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.RangeEnumerator"/> class.
            </summary>
            <param name="interval">The interval.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="rangeStart">The range start.</param>
            <param name="rangeEnd">The range end.</param>
            <param name="calendar">The calendar.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.RangeEnumerator.AdjustDate(System.DateTime)">
            <summary>
            Adjusts the date.
            </summary>
            <param name="dt">The dt.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval.RangeEnumerator.IsPastEnd(System.DateTime)">
            <summary>
            Determines whether is the specified date most past by the end date.
            </summary>
            <param name="dt">The dt.</param>
            <returns>
                <c>true</c> if [is past end] [the specified dt]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange">
            <summary>
            Specifies the start and end dates and interval time for the axis. Use this if the data points are of datetime type.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.#ctor(System.DateTime,System.DateTime,System.Double,Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="interval">The interval.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.#ctor(System.DateTime,System.DateTime,System.Double,Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType,System.Globalization.Calendar)">
             <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange"/> class.
             </summary>
             <param name="start" type="System.DateTime">
                 <para>
                 The start of this range.
                 </para>
             </param>
             <param name="end" type="System.DateTime">
                 <para>
                 The end of this range.
                 </para>
             </param>
             <param name="interval" type="double">
                 <para>
                 The value of the default interval that is to be associated with this range.
                 </para>
             </param>
             <param name="type" type="Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType">
                 <para>
                  The type of the default interval that is to be associated with this range.
                 </para>
             </param>
             <param name="calendar" type="System.Globalization.Calendar">
                 <para>
                 The calendar that is to be associated with this range.
                 </para>
             </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.ToString">
            <summary>
            Overridden. Returns a string representation of this range.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.Start">
            <summary>
            Gets the start boundary of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.End">
            <summary>
            gets the end boundary of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.DefaultInterval">
            <summary>
            Gets the default interval associated with this range.
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.Intervals"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.Intervals">
            <summary>
            Gets the Collection of registered intervals. (<see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/>) of several types can be registered with this range. 
            Intervals afford an easy way to partition and iterate through a date range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.Calendar">
            <summary>
            gets an instance of the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.Calendar"/> associated with this date range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection">
            <summary>
            Collection of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/>. Each <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange"/> object has an associated set of intervals that
            can be used to iterate over the range. ChartIntervalCollection is the repository for these intervals.
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeRange.Intervals"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection.#ctor(Syncfusion.Windows.Forms.Chart.ChartDateTimeRange)">
            <summary>
            Initializes a new instance of 
            </summary>
            <param name="parent" type="Syncfusion.Windows.Forms.Chart.ChartDateTimeRange">
                <para>
                Range that is to be associated with all <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/> registered with this collection.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection.Reset">
            <summary>
            Removes all registered intervals except the default interval.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection.Clear">
            <summary>
            Removes all registered intervals including the default interval.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection.Register(System.String,Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval)">
            <summary>
            Registers an interval with this collection.
            </summary>
            <param name="name" type="string">
                <para>
                The registration name of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/> that is to be registered.
                </para>
            </param>
            <param name="interval" type="Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval">
                <para>
                The interval that is to be registered.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection.Remove(System.String)">
            <summary>
            Looks up the collection and removes the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/> with the specified name.
            </summary>
            <param name="name" type="string">
                <para>
                The registration name of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/> to look for.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection.ToString">
            <summary>
            Overridden. Returns a string representation of this collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartIntervalCollection.Item(System.String)">
            <summary>
            Looks up the collection and returns the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/> with the specified name.
            </summary>
            <value>
                <para>
                The registration name of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeInterval"/> to look for.
                </para>
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.INiceRangeMaker">
            <summary>
            Interface that defines preferences and access methods used for the automatic calculation of 'nice' range
            given any range of data. 'Nice' ranges are generally more easily understood in comparison to 'raw' data.    
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.INiceRangeMaker.MakeNiceRange(System.Double,System.Double,Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType)">
            <summary>
            Given a minimum value and a maximum value, this method will calculate a 'nice' minimum value and a maxiumum value
            as well as an interval value that can be used for visually representing this data. 'Nice' values are better
            perceived by humans. For example, consider a range 1.21-3.5. A nice range that we can use to visually represent values
            in this range can be 0-3.6 with an interval of 2. You can tweak the results obtained by changing optional settings.
            </summary>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="rangePaddingType">The range padding type.</param>
            <returns>Calculated <see cref="T:Syncfusion.Windows.Forms.Chart.MinMaxInfo"/>.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.INiceRangeMaker.DesiredIntervals">
            <summary>
            Gets or sets the approximate number of intervals into which the range is to be partitioned. The actual number of
            intervals calculated will depend on the actual algorithm used.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.INiceRangeMaker.RangePaddingType">
            <summary>
            Gets or sets the padding type that will be applied for calculating the ranges for this axis.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.INiceRangeMaker.PreferZero">
            <summary>
            Indicates whether one boundary of the calculated range should be tweaked to zero. Such tweaking will happen
            only if zero is within a resonable distance from the calculated boundary. To ensure that one boundary
            is always zero, use the <see cref="P:Syncfusion.Windows.Forms.Chart.INiceRangeMaker.ForceZero"/> setting instead.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.INiceRangeMaker.ForceZero">
            <summary>
            Gets or Sets the result whether one boundary of the calculated range should always be tweaked to zero. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.MinMaxInfo">
            <summary>
            Simple, unchangeable class to store information on minimum and maximum values and a suggested interval.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.MinMaxInfo.min">
            <summary>
            Store min value of range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.MinMaxInfo.max">
            <summary>
            Store max value of the range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.MinMaxInfo.interval">
            <summary>
            Store interval.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Clone">
            <summary>
            Creates a copy of the MinMaxInfo object.
            </summary>
            <returns>The MinMaxInfo.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Equals(Syncfusion.Windows.Forms.Chart.MinMaxInfo)">
            <summary>
             Compares this object with another object of the same type.
            </summary>
            <param name="minMaxInfo" type="Syncfusion.Windows.Forms.Chart.MinMaxInfo">
                <para>
                The object with which this object is to be compared.
                </para>
            </param>
            <returns>
                Returns True if the objects are equal in value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Contains(System.Double)">
            <summary>
            Checks whether range contains double value.
            </summary>
            <param name="d">Double to check</param>
            <returns>Bool value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Intersects(Syncfusion.Windows.Forms.Chart.MinMaxInfo)">
            <summary>
            Checks whether range intersects with range.
            </summary>
            <param name="r">MinMaxInfo to check</param>
            <returns>Bool value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfo.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            MinMaxInfo represents a range of double type values. There is a lower bound, upper bound and an associated interval.
            </summary>
            <param name="min" type="double">
                <para>
                The lower bound value.
                </para>
            </param>
            <param name="max" type="double">
                <para>
                The upper bound value.
                </para>
            </param>
            <param name="interval" type="double">
                <para>
                The interval value.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfo.OnSettingsChanged(System.EventArgs)">
            <summary>
            Raises the settings changed event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfo.ToString">
            <summary>
            Overridden. Returns a string representation of this object.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.MinMaxInfo.SettingsChanged">
            <summary>
            Occurs when one of the range settings was changed.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Delta">
            <summary>
            gets the difference between the upper and lower boundary of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Min">
            <summary>
            Gets or sets the lower boundary of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Max">
            <summary>
            Gets or sets the upper boundary of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Interval">
            <summary>
            Gets or sets the value of the interval associated with this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.MinMaxInfo.NumberOfIntervals">
            <summary>
            Gets the number of intervals present in this range.
            <see cref="P:Syncfusion.Windows.Forms.Chart.MinMaxInfo.Interval"/>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.MinMaxInfoConverter">
            <summary>
            Converts instances of other types to and from a <see cref="T:Syncfusion.Windows.Forms.Chart.MinMaxInfo"/>. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfoConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object"/> that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that is used as a filter.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> with the properties that are exposed for this data type, or null if there are no properties.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfoConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)"/> should be called to find the properties of this object; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfoConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"/> to create a new value, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            true if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"/> to create a new value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfoConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter"/> is associated with, using the specified context, given a set of property values for the object.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary"/> of new property values.</param>
            <returns>
            An <see cref="T:System.Object"/> representing the given <see cref="T:System.Collections.IDictionary"/>, or null if the object cannot be created. This method always returns null.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfoConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfoConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfoConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.MinMaxInfoConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="destinationType"/> parameter is null.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.NiceRangeMaker">
            <summary>
            Provides the methods to compute the 'nice' range.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.NiceRangeMaker"/> class.
            </summary>
            <param name="desiredIntervals">The desired intervals.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.NiceRangeMaker"/> class.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.MakeNiceRange(System.Double,System.Double,Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType)">
            <summary>
            Given a minimum value and a maximum value, this method will calculate a 'nice' minimum value and a maxiumum value
            as well as an interval value that can be used for visually representing this data. 'Nice' values are better
            perceived by humans. For example, consider a range 1.21-3.5. A nice range that we can use to visually represent values
            in this range can be 0-3.6 with an interval of 2. You can tweak the results obtained by changing optional settings.
            </summary>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="rangePaddingType">The range padding type.</param>
            <returns>
            Calculated <see cref="T:Syncfusion.Windows.Forms.Chart.MinMaxInfo"/>.
            </returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.CreatePadding(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState,Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType)">
            <summary>
            Add padding to the incoming minimum and maximum values.
            </summary>
            <param name="opState">The operational status.</param>
            <param name="rangePaddingType">The ChartAxisRangePaddingTyp.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.TweakMinMax(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            Tweaks the incoming minimum and maximum values so that special conditions are handled
            properly.
            </summary>
            <param name="opState">The operational status.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.AdjustPlaces(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            Raises the working values to powers of 10 such that we work with whole
            numbers. The number of places adjusted is stored in the operating state.
            </summary>
            <param name="opState">The operational status.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.CalcNiceValues(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            Calculates 'nice' values by calling other methods. 
            </summary>
            <param name="opState">The operational status.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.CalcNiceInterval(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            Calculates the nice interval.
            </summary>
            <param name="opState">The operational status.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.MakeNiceNumber(System.Double)">
            <summary>
            Simple logic for creating 'nice' numbers that are close to the numbers passed in.
            </summary>
            <param name="val">
            Value whose equivalent 'nice' number is to be found.
            </param>
            <returns>Returns double.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.CalcNiceMin(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            Calculates a 'nice' minimum value given a 'nice' interval. This function basically makes the minimum
            value divisible by the interval.
            </summary>
            <param name="opState"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.CalcNiceMax(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            Calculates a 'nice' maximum value given a 'nice' interval. This function basically makes the maximum
            value divisible by the interval.
            </summary>
            <param name="opState"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.UndoAdjustPlaces(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            Divides the calculated values again by the adjustment factor to go back to correct values.
            </summary>
            <param name="opState"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.TweakToFitZero(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            Checks the minimum and maximum values calculated to see if either of them can
            be made zero. Visual respresentation of data appears more readable if zero is used as a baseline.
            </summary>
            <param name="opState"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.TweakBoundaries(Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState)">
            <summary>
            Checks the calculated minimum and maximum values to see if they need to be changed
            so that a visual representation does not result in values being displayed too close to the boundaries.
            </summary>
            <param name="opState"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.DesiredIntervals">
            <summary>
            Gets or sets the approximate number of intervals into which the range is to be partitioned. The actual number of
            intervals calculated will depend on the actual algorithm used.
            </summary>
            <value>The Desired Intervals.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.RangePaddingType">
            <summary>
            Gets or sets the padding type that will be applied for calculating the ranges for this axis.
            </summary>
            <value>The RangePaddingType type.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.PreferZero">
            <summary>
            Gets or Sets whether one boundary of the calculated range should be tweaked to zero. Such tweaking will happen
            only if zero is within a resonable distance from the calculated boundary. To ensure that one boundary
            is always zero, use the <see cref="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.ForceZero"/> setting instead.
            </summary>
            <value>The PreferZero.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.ForceZero">
            <summary>
            Gets or Sets the result whether one boundary of the calculated range should always be tweaked to zero.
            </summary>
            <value>the ForceZero.</value>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState">
            <summary>
            This class holds operational states (intermediate calculated values, support values, etc).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.#ctor(Syncfusion.Windows.Forms.Chart.NiceRangeMaker,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState"/> class.
            </summary>
            <param name="parent">The parent.</param>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.UpdateCalcInterval">
            <summary>
            Updates the calc interval.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.Min">
            <summary>
            Gets the min.
            </summary>
            <value>The min.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.Max">
            <summary>
            Gets the max.
            </summary>
            <value>The max.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.Interval">
            <summary>
            Gets the interval.
            </summary>
            <value>The interval.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.CalcMin">
            <summary>
            Gets or sets the calc min.
            </summary>
            <value>The calc min.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.CalcMax">
            <summary>
            Gets or sets the calc max.
            </summary>
            <value>The calc max.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.CalcInterval">
            <summary>
            Gets or sets the calc interval.
            </summary>
            <value>The calc interval.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.NiceRangeMaker.OpState.AdjustedPlaces">
            <summary>
            Gets or sets the adjusted places.
            </summary>
            <value>The adjusted places.</value>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker">
            <summary>
            Implements methods to compute the 'nice' data range/
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.#ctor(Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults,Syncfusion.Windows.Forms.Chart.INiceRangeMaker)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker"/> class.
            </summary>
            <param name="chartDateTimeDefaults">The chart date time defaults.</param>
            <param name="niceRangeMaker">The nice range maker.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.#ctor(Syncfusion.Windows.Forms.Chart.IChartDateTimeDefaults)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker"/> class.
            </summary>
            <param name="chartDateTimeDefaults">The chart date time defaults.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker"/> class.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceRange(System.DateTime,System.DateTime)">
            <summary>
            Makes the nice range.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns>Returns ChartDateTimeRange instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceRange(System.DateTime,System.DateTime,Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType)">
            <summary>
            Makes the nice range.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="type">The type.</param>
            <returns>Returns ChartDateTimeRange instance.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceRange(System.DateTime,System.DateTime,Syncfusion.Windows.Forms.Chart.ChartDateTimeIntervalType,Syncfusion.Windows.Forms.Chart.ChartAxisRangePaddingType)">
            <summary>
            Makes the nice range.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="type">The type.</param>
            <param name="rangePaddingType">Type of the range padding.</param>
            <returns>Returns ChartDateTimeRange instance.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceYearsRange(System.DateTime,System.DateTime)">
            <summary>
            Makes the nice years range.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns>Returns ChartDateTimeRange instance.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceMonthsRange(System.DateTime,System.DateTime)">
            <summary>
            Makes the nice months range.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns>Returns ChartDateTimeRange instance.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceWeeksRange(System.DateTime,System.DateTime)">
            <summary>
            Makes the nice weeks range.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns>Returns ChartDateTimeRange instance.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceDaysRange(System.DateTime,System.DateTime)">
            <summary>
            Makes the nice days range.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns>Returns ChartDateTimeRange instance.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceHoursRange(System.DateTime,System.DateTime)">
            <summary>
            Makes the nice hours range.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns>Returns ChartDateTimeRange instance.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceMinutesRange(System.DateTime,System.DateTime)">
            <summary>
            Makes the nice minutes range.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns>Returns ChartDateTimeRange instance.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceSecondsRange(System.DateTime,System.DateTime)">
            <summary>
            Makes the nice seconds range.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns>Returns ChartDateTimeRange instance.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.MakeNiceMilliSecondsRange(System.DateTime,System.DateTime)">
            <summary>
            Makes the nice milli seconds range.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns>Returns ChartDateTimeRange instance.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.CalculateIntervalType(System.TimeSpan)">
            <summary>
            Calculates the type of the interval.
            </summary>
            <param name="diff">The diff.</param>
            <returns>Returns ChartDateTimeRange instance.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.AdjustToWeekStart(System.DateTime,Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.SeekDirection)">
            <summary>
            Adjusts to week start.
            </summary>
            <param name="dt">The dt.</param>
            <param name="direction">The direction.</param>
            <returns>Returns ChartDateTimeRange instance.</returns>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.Defaults">
            <summary>
            Gets the defaults.
            </summary>
            <value>The defaults.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.Calendar">
            <summary>
            Gets the calendar.
            </summary>
            <value>The calendar.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.DesiredIntervals">
            <summary>
            Gets or sets the desired intervals count.
            </summary>
            <value>The desired intervals count.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.RangePaddingType">
            <summary>
            Gets or sets the type of the range padding.
            </summary>
            <value>The type of the range padding.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.ForceZero">
            <summary>
            Gets or sets a value indicating whether zero is "forced".
            </summary>
            <value><c>true</c> if zero is "forced"; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.PreferZero">
            <summary>
            Gets or sets a value indicating whether zero is preferred.
            </summary>
            <value><c>true</c> if zero is preferred; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.DesiredIntervalType">
            <summary>
            Gets or sets the type of the desired interval.
            </summary>
            <value>The type of the desired interval.</value>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.SeekDirection">
            <summary>
            Resperents the seek direction.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.SeekDirection.Forward">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.SeekDirection.Reverse">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.ImplWeeks">
            <summary>
            Implemenets the methods to compute the 'nice' weeks range.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDateTimeNiceRangeMaker.ImplWeeks.MakeNiceNumber(System.Double)">
            <summary>
            Simple logic for creating 'nice' numbers that are close to the numbers passed in.
            </summary>
            <param name="val">Value whose equivalent 'nice' number is to be found.</param>
            <returns>Returns double.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptArray">
            <summary>
            Represents the post script array.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptArray"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptArray.ToPostScriptString">
            <summary>
            Toes the post script string.
            </summary>
            <returns>Returns string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptArray.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptArray.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptArray.List">
            <summary>
            Gets the list.
            </summary>
            <value>The list.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary">
            <summary>
            Represents the post script dictionary.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary.ToPostScriptString">
            <summary>
            Toes the post script string.
            </summary>
            <returns>Returns string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary.SetNum(System.Int32)">
            <summary>
            Sets the num.
            </summary>
            <param name="n">The n.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary.InternalTable">
            <summary>
            Gets the internal table.
            </summary>
            <value>The internal table.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.PostScript.LinearColorFunction">
            <summary>
            Represents the post script linear color function.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.LinearColorFunction.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.LinearColorFunction"/> class.
            </summary>
            <param name="c1">The color1.</param>
            <param name="c2">The color2.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.PostScript.LinearColorFunction.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.PostScript.SampledColorFunction">
            <summary>
            Represents the post script sampled color function.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.SampledColorFunction.#ctor(System.Drawing.Color[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.SampledColorFunction"/> class.
            </summary>
            <param name="crs">The color array..</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.PostScript.SampledColorFunction.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.PostScript.StitchingColorFunction">
            <summary>
            Represents the post script stitching color function.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.StitchingColorFunction.#ctor(System.Drawing.Color[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.StitchingColorFunction"/> class.
            </summary>
            <param name="clrs">The color array.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.PostScript.StitchingColorFunction.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.PostScript.LinearShadingDictionary">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.LinearShadingDictionary.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.LinearShadingDictionary"/> class.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
            <param name="funcName">Name of the func.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.PostScript.LinearShadingDictionary.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionaryCollection">
            <summary>
            Collection of <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary"/>.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionaryCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionaryCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionaryCollection.Add(Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary)">
            <summary>
            Adds the specified dictionary.
            </summary>
            <param name="dict">The <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary"/>.</param>
            <returns>Returns PostScriptDictionary object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionaryCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary)">
            <summary>
            Inserts the specified dictionary.
            </summary>
            <param name="index">The index.</param>
            <param name="dict">The <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionaryCollection.Remove(Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary)">
            <summary>
            Removes the specified dictionary.
            </summary>
            <param name="dict">The <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionaryCollection.IndexOf(Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary)">
            <summary>
            Returns index of the specified dictionary.
            </summary>
            <param name="dict">The <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary"/>.</param>
            <returns> The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionaryCollection.Contains(Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary)">
            <summary>
            Determines whether collection contains the specified dictionary.
            </summary>
            <param name="dict">The <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary"/>.</param>
            <returns>
            	<c>true</c> if collection contains the specified dictionary; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionaryCollection.ContainsSimilar(Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary)">
            <summary>
            Determines whether colection contains similar dictionary.
            </summary>
            <param name="dict">The <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptDictionary"/>.</param>
            <returns>True if it contains similar object else false.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics">
            <summary>
            Provides methods to draw the primitives of the <see cref="T:Syncfusion.Windows.Forms.Chart.PostScriptImage"/>.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.#ctor(System.IO.TextWriter,Syncfusion.Windows.Forms.Chart.PostScriptImage)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics"/> class.
            </summary>
            <param name="textWriter">The <see cref="T:System.IO.TextWriter"/>.</param>
            <param name="image">The <see cref="T:Syncfusion.Windows.Forms.Chart.PostScriptImage"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
            </summary>
            <param name="pen">The pen.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Fills the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
            </summary>
            <param name="brush">The brush.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws the polygon.
            </summary>
            <param name="pen">The pen.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the polygon.
            </summary>
            <param name="brush">The brush.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the rectangle.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
            <summary>
            Draws the rectangle.
            </summary>
            <param name="pen">The pen.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the rectangle.
            </summary>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
            <summary>
            Fills the rectangle.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the rectangle.
            </summary>
            <param name="brush">The brush.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the line.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the bezier curve.
            </summary>
            <param name="pen">The pen.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <param name="x3">The x3.</param>
            <param name="y3">The y3.</param>
            <param name="x4">The x4.</param>
            <param name="y4">The y4.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.TranslateTransform(System.Single,System.Single)">
            <summary>
            Translates the transform.
            </summary>
            <param name="dx">The dx.</param>
            <param name="dy">The dy.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.RotateTransform(System.Single)">
            <summary>
            Rotate the transform.
            </summary>
            <param name="dx">The dx.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
            Translates the transform.
            </summary>
            <param name="dx">The dx.</param>
            <param name="dy">The dy.</param>
            <param name="order">The order.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.Clear(System.Drawing.Color)">
            <summary>
            Clears the image by the specified color.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Drawing.StringFormat,System.Boolean)">
            <summary>
            Draws the string.
            </summary>
            <param name="s">The s.</param>
            <param name="font">The font.</param>
            <param name="brush">The brush.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="stringformat"></param>
            <param name="editableText"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clip.
            </summary>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.IntersectClip(System.Drawing.RectangleF)">
            <summary>
            Intersects the clip.
            </summary>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.ResetClip">
            <summary>
            Resets the clip.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.Save(System.String)">
            <summary>
            Saves the image to file by the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.BeginContainer">
            <summary>
            Saves the correct states.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.EndContainer">
            <summary>
            Reverts the saved states.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.ConcatTransform(System.Drawing.Drawing2D.Matrix)">
            <summary>
            Concats the transform.
            </summary>
            <param name="m">The m.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.SetTransform(System.Drawing.Drawing2D.Matrix)">
            <summary>
            Sets the transform.
            </summary>
            <param name="m">The <see cref="T:System.Drawing.Drawing2D.Matrix"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.GetPathStringFromPath(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Gets the path string from path.
            </summary>
            <param name="path">The path.</param>
            <returns>Returns string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.GetPathStringFromLine(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Gets the path string from line.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <returns>Returns path string from line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.GetPathStringFromBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Gets the path string from bezier.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <param name="x3">The x3.</param>
            <param name="y3">The y3.</param>
            <param name="x4">The x4.</param>
            <param name="y4">The y4.</param>
            <returns>Path string from bezier.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.GetPathStringFromRectangle(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Gets the path string from rectangle.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>Path string from rectangle.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.GetPathStringFromRectangle(System.Drawing.RectangleF)">
            <summary>
            Gets the path string from rectangle.
            </summary>
            <param name="rect">The rect.</param>
            <returns>Path string from rectangle.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.SaveGraphicState">
            <summary>
            Saves the state of the graphic.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.RestoreGraphicState">
            <summary>
            Restores the state of the graphic.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.SetColor(System.Drawing.Color)">
            <summary>
            Sets the color.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.GetStringFromColor(System.Drawing.Color)">
            <summary>
            Gets the color of the string from.
            </summary>
            <param name="color">The color.</param>
            <returns>Returns string from color.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.SetBrushColor(System.Drawing.Brush)">
            <summary>
            Sets the color of the brush.
            </summary>
            <param name="brush">The brush.</param>
            <returns>Returns string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.GetMatrixStringFromMatrix(System.Drawing.Drawing2D.Matrix)">
            <summary>
            Gets the matrix string from matrix.
            </summary>
            <param name="m">The m.</param>
            <returns>Returns Matrix string from Matrix.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.GetMatrixStringFromTranslate(System.Single,System.Single)">
            <summary>
            Gets the matrix string from translate.
            </summary>
            <param name="dx">The dx.</param>
            <param name="dy">The dy.</param>
            <returns>Returns the matrix string from translate.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.SetFont(System.Drawing.Font)">
            <summary>
            Sets the font.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.MoveTo(System.Single,System.Single)">
            <summary>
            Moves to.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.SetLinearGradientColor(System.Drawing.Color,System.Drawing.Color,System.Drawing.RectangleF)">
            <summary>
            Sets the color of the linear gradient.
            </summary>
            <param name="c1">The c1.</param>
            <param name="c2">The c2.</param>
            <param name="rect">The rect.</param>
            <returns>Returns string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.SetLinearGradientColor(System.Drawing.Color,System.Drawing.Color,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Sets the color of the linear gradient.
            </summary>
            <param name="c1">The c1.</param>
            <param name="c2">The c2.</param>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <returns>Returns LinearShadingDictionary name.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.SetLinearGradientColor(System.Drawing.Color[],System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Sets the color of the linear gradient.
            </summary>
            <param name="colors">The colors.</param>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <returns>Returns string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.SetRadialGradientColor(System.Drawing.Color,System.Drawing.Color,System.Drawing.PointF,System.Single,System.Drawing.PointF,System.Single)">
            <summary>
            Sets the color of the radial gradient.
            </summary>
            <param name="c1">The c1.</param>
            <param name="c2">The c2.</param>
            <param name="p1">The p1.</param>
            <param name="r1">The r1.</param>
            <param name="p2">The p2.</param>
            <param name="r2">The r2.</param>
            <returns> Returns RadialShadingDictionary name.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.phongShadingColors(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Double,System.Double,System.Drawing.Color[]@,System.Single[]@)">
            <summary>
            Gets the phong shading blend.
            </summary>
            <param name="ambientColor">Color of the ambient.</param>
            <param name="diffusiveColor">Color of the diffusive.</param>
            <param name="lightColor">Color of the light.</param>
            <param name="alpha">The alpha.</param>
            <param name="phong_alpha">The phong_alpha.</param>
            <param name="colors">The colors.</param>
            <param name="positions">The positions.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.PostScript.PostScriptGraphics.StripLine">
            <summary>
            Indicates whether the strip line is enabled.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.PostScript.RadialShadingDictionary">
            <summary>
            Represents the post scripf radial shading dictionary.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.RadialShadingDictionary.#ctor(System.Drawing.PointF,System.Single,System.Drawing.PointF,System.Single,System.String)">
            <summary>
            Creates instance of the RadialShadingDictionary.
            </summary>
            <param name="point1"></param>
            <param name="r1"></param>
            <param name="point2"></param>
            <param name="r2"></param>
            <param name="funcName"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.PostScript.RadialShadingDictionary.Name">
            <summary>
            Overridden.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.PostScript.ShadingPatternDictionary">
            <summary>
            Represents the post script shading pattern dictionary.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScript.ShadingPatternDictionary.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.PostScript.ShadingPatternDictionary"/> class.
            </summary>
            <param name="shading">The shading.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.PostScript.ShadingPatternDictionary.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.PostScriptImage">
            <summary>
            Represents the post script document.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScriptImage.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.PostScriptImage"/> class.
            </summary>
            <param name="width">The width of image.</param>
            <param name="height">The height of image.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScriptImage.GetGraphics">
            <summary>
            Gets the graphics.
            </summary>
            <returns>Returns new PostScriptGraphics instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScriptImage.Save(System.IO.Stream)">
            <summary>
            Saves image to the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.PostScriptImage.Save(System.String)">
            <summary>
            Saves image to the file.
            </summary>
            <param name="filename">The name of file.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.PostScriptImage.Dictionaries">
            <summary>
            Gets the dictionaries.
            </summary>
            <value>The dictionaries.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.PostScriptImage.Size">
            <summary>
            Gets the size of image.
            </summary>
            <value>The size.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ToPostScript">
            <summary>
            Provides the methods to draw into post script image.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ToPostScript"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.GetRealGraphics(System.Drawing.Size)">
            <summary>
            Gets the real graphics.
            </summary>
            <param name="size">The size.</param>
            <returns>Return real graphics.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.GetPostScriptImage">
            <summary>
            Gets the post script image.
            </summary>
            <returns>Returns PostScriptImage object. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.Save(System.String)">
            <summary>
            Saves the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.CallBackMethod(System.Object,Syncfusion.Windows.Forms.Chart.GraphProxyEventArgs)">
            <summary>
            Calls the back method.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Syncfusion.Windows.Forms.Chart.GraphProxyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXDrawPath(System.Object[])">
            <summary>
            PRXs the draw path.
            </summary>
            <param name="prms">The PRMS.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXRotateTransform(System.Object[])">
            <summary>
            PRXs the rotate transform.
            </summary>
            <param name="prms">The PRMS.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXFillPath(System.Object[])">
            <summary>
            PRXs the fill path.
            </summary>
            <param name="prms">The PRMS.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXDrawPolygon(System.Object[])">
            <summary>
            PRXs the draw polygon.
            </summary>
            <param name="prms">The PRMS.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXFillPolygon(System.Object[])">
            <summary>
            PRXs the fill polygon.
            </summary>
            <param name="prms">The PRMS.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXDrawRectangle(System.Object[])">
            <summary>
            PRXs the draw rectangle.
            </summary>
            <param name="prms">The PRMS.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXFillRectangle(System.Object[])">
            <summary>
            PRXs the fill rectangle.
            </summary>
            <param name="prms">The PRMS.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXTranslateTransform(System.Object[])">
            <summary>
            PRXs the translate transform.
            </summary>
            <param name="prms">The PRMS.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXDrawLine(System.Object[])">
            <summary>
            PRXs the draw line.
            </summary>
            <param name="prms">The PRMS.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXDrawBezier(System.Object[])">
            <summary>
            PRXs the draw bezier.
            </summary>
            <param name="prms">The PRMS.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXClear(System.Object[])">
            <summary>
            PRXs the clear.
            </summary>
            <param name="prms">The PRMS.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXDrawString(System.Object[])">
            <summary>
            PRXs the draw string.
            </summary>
            <param name="prms">The PRMS.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXSetClip(System.Object[])">
            <summary>
            PRXs the set clip.
            </summary>
            <param name="prms">The PRMS.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXIntersectClip(System.Object[])">
            <summary>
            PRXs the intersect clip.
            </summary>
            <param name="prms">The PRMS.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXResetClip">
            <summary>
            PRXs the reset clip.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXBeginContainer">
            <summary>
            PRXs the begin container.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXEndContainer">
            <summary>
            PRXs the end container.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToPostScript.PRXset_Transform(System.Object[])">
            <summary>
            PRs the xset_ transform.
            </summary>
            <param name="prms">The PRMS.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ToPostScript.EditableText">
            <summary>
            Enable or Disable the editable text for chart.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.CandleRenderer">
            <summary>
            The Candle Chart rendering class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer">
            <summary>
            Represents the column type renderer.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer">
            <summary>
            <para>
            Base class for all renderers. Each renderer is responsible for rendering one data series 
            (please refer to <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeries"/>) inside of the chart area. ChartSeriesRenderer 
            provides the basic plumbing that is needed by all renderers. It is not an abstract class. 
            It is used as the renderer for the scatter plot since the scatter plot needs only basic 
            point rendering at the correct position.
            </para>
            <para>
            You can derive from ChartSeriesRenderer to create your own renderers.
            </para>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.POLYGON_SECTORS">
            <summary>
            The number of polygons of cylinder
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.SPLINE_DIGITIZATION">
            <summary>
            The number of polygons of spline
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.m_series">
            <summary>
            The owner series.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.m_segments">
            <summary>
            Internal member.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.m_serStyle">
            <summary>
            The series style.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetMinPointsDelta">
            <summary>
            Gets the minimal points delta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Constructor.
            </summary>
            <param name="series" type="Syncfusion.Windows.Forms.Chart.ChartSeries">
                <para>
                ChartSeries that will be rendered by this renderer instance.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Dispose">
            <summary>
            Method to dispose ChartSeriesRenderer object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Render(System.Drawing.Graphics)">
            <summary>
                In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does 
                the rendering. 
            </summary>
            <param name="g" type="System.Drawing.Graphics">
                <para>
                The graphics object that is to be used for rendering.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.RenderSeriesNameInDepth(System.Drawing.Graphics)">
            <summary>
                Renders series name in the minimal position of all axes.
            </summary>
            <param name="g" type="System.Drawing.Graphics">
                <para>
                The graphics object that is to be used for rendering.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
                In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does 
                the rendering. 
            </summary>
            <param name="g" type="System.Drawing.Graphics">
                <para>
                The graphics object that is to be used for rendering.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.RenderSeriesNameInDepth(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            Renders series name in the minimal position of all axes.
            </summary>
            <param name="g" type="System.Drawing.Graphics">
                <para>
                The graphics object that is to be used for rendering.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws the icon on the legend.
            </summary>
            <param name="g">Instance of <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">Bounds of icon.</param>
            <param name="isShadow">If is true method draws the shadow.</param>
            <param name="shadowColor"><see cref="T:System.Drawing.Color"/> of shadow.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawIcon(System.Int32,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws the icon on the legend.
            </summary>
            <param name="index">Index of point.</param>
            <param name="g">Instance of <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">Bounds of icon.</param>
            <param name="isShadow">If is true method draws the shadow.</param>
            <param name="shadowColor"><see cref="T:System.Drawing.Color"/> of shadow.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CanRender">
            <summary>
            Checks the count of values for rendering.
            </summary>
            <returns>True if renderer can to render the series.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.StackSorting">
            <summary>
            Sort the stacking sereies Y values.
            </summary>
            <returns>True if renderer can to render the series.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetMinSize(System.Drawing.Graphics)">
            <summary>
            Computes the size of necessary rectangle for the rendering.
            </summary>
            <returns><see cref="T:System.Drawing.SizeF"/> of minimal rectangle.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.SetChart(Syncfusion.Windows.Forms.Chart.IChartAreaHost)">
            <summary>
            Sets the chart to representation.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetCharacterPoint(System.Int32)">
            <summary>
            Gets character point by index. Used for symbols and fancy tooltips.
            </summary>
            <param name="index">Index of point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Update(Syncfusion.Windows.Forms.Chart.ChartUpdateFlags)">
            <summary>
            Updates by specified flags.
            </summary>
            <param name="flags">The flags.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DataUpdate(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Updates the points cache.
            </summary>
            <param name="args">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.VisiblePoint(System.Collections.IList,System.Int32,System.Int32@,System.Boolean)">
            <summary>
            Returns the next or previous visible point
            </summary>
            <param name="points">Collection of points</param>
            <param name="index">Index of the current point in collection</param>
            <param name="n">Index of the next or previous visible point</param>
            <param name="first">A boolean value specifiying whether the function should find next or previous visible point from index </param>
            <returns>Returns a point representing the screen co-ordinate of the next or previous visible chart point </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.VisiblePointIndex(System.Collections.IList,System.Int32,System.Boolean)">
            <summary>
            Returns the next or previous visible point index
            </summary>
            <param name="points">Collection of points</param>
            <param name="index">Index of the current point in collection</param>
            <param name="first">A boolean value specifiying whether the function should find next or previous visible point from index </param>
            <returns>An integer representing the index of next or previous visible point</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.VisibleChartPoint(System.Collections.IList,System.Int32,System.Int32@,System.Boolean)">
            <summary>
            Returns the next or previous visible chart point
            </summary>
            <param name="points">Collection of points</param>
            <param name="index">Index of the current point in collection</param>
            <param name="n">Index of the next or previous visible point</param>
            <param name="first">A boolean value specifiying whether the function should find next or previous visible point from index </param>
            <returns>Returns a point representing the next or previous visible chart point </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.VisibleChartPoint(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint[],System.Int32,System.Int32@,System.Boolean)">
            <summary>
            Returns the next or previous visible chart styled point
            </summary>
            <param name="points">Collection of points</param>
            <param name="index">Index of the current point in collection</param>
            <param name="n">Index of the next or previous visible point</param>
            <param name="first">A boolean value specifiying whether the function should find next or previous visible point from index </param>
            <returns>Returns a point representing the next or previous visible chart styled point </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.RemoveDuplicates(System.Drawing.PointF[])">
            <summary>
            Remove duplicate values in the array
            </summary>
            <param name="points">Array of points</param>       
            <returns>Array of points without any duplicate values</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetVisiblePoints(Syncfusion.Windows.Forms.Chart.ChartPointWithIndex[])">
            <summary>
            Returns an array of visible chart points
            </summary>
            <param name="list">Array of points</param>       
            <returns>Array of visible points</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetVisiblePoints(Syncfusion.Windows.Forms.Chart.ChartPointIndexer)">
            <summary>
            Returns an array of visible chart points
            </summary>
            <param name="list">Chart point indexer collection</param>       
            <returns>Array of visible points</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetVisiblePoints(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint[])">
            <summary>
            Returns an array of visible points from the styled point collection
            </summary>
            <param name="list">Array of styled points</param>       
            <returns>Array of visible styled points</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetPointByValueForSeries(Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Gets the point by value for series.
            </summary>
            <param name="chpt">The ChartPoint.</param>
            <returns> Returns Real Point for the Specified ChartPoint </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetOffsetPoints(System.Drawing.PointF[],System.Drawing.SizeF)">
            <summary>
            Clones the points and shifts by offset.
            </summary>
            <param name="points"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetSeriesOffset">
            <summary>
            Calculates depth offset.
            </summary>
            <returns>Series offset.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetSeriesDepth">
            <summary>
            Gets the depth size of series.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetThisOffset">
            <summary>
            Gets the this series offset.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetPlaceDepth">
            <summary>
            Gets the depth offset of series.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CalculateStepPointsForSeries3D(System.Drawing.PointF[]@)">
            <summary>
            Overloaded. Calculates step point's offsets in derived classes to draw correctly series with close or same values.
            This method is needed only in cases when series are rendered in 3D mode.
            It fixes problems with overlapped series.
            </summary>
            <param name="stepPoints"></param> 
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CalculateStepPointsForSeries3D(System.Drawing.PointF[]@,System.Drawing.SizeF)">
            <summary>
            Calculates step point's offsets in derived classes to draw correctly series with close or same values.
            This method is needed only in cases when series are rendered in 3D mode.
            It fixes problems with overlapped series.
            </summary>
            <param name="stepPoints"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetUpPriceInterior(Syncfusion.Drawing.BrushInfo)">
            <summary>
            Returns the up interior for financial chart types.
            </summary>
            <param name="original">The base interior of chart.</param>
            <returns>The <see cref="T:Syncfusion.Drawing.BrushInfo"/> for the up price sectors.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetDownPriceInterior(Syncfusion.Drawing.BrushInfo)">
            <summary>
            Returns the down interior for financial chart types.
            </summary>
            <param name="original">The base interior of chart.</param>
            <returns>The <see cref="T:Syncfusion.Drawing.BrushInfo"/> for the down price sectors.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Draw3DSpline(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex[],System.Double[],System.Drawing.SizeF,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            Draws 3D Spline from points array and additionally second derivatives added in y2 array.
            Remember that second derivatives should be calculated in naturalSpline function and
            improper y2[] values can cause improper spline drawing. 
            </summary>
            <param name="g"></param>
            <param name="points"></param>
            <param name="y2"></param>
            <param name="offset"></param>
            <param name="brush"></param>
            <param name="pen"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.AddExtremumPoints(Syncfusion.Windows.Forms.Chart.ChartPointWithIndex[],System.Double[],Syncfusion.Windows.Forms.Chart.ChartPointWithIndex[]@,System.Double[]@)">
            <summary>
             Adds all extremum points to new arrays. This method is needed to imitate 3D Spline strip.
            </summary>
            <param name="points"></param>
            <param name="y2"></param>
            <param name="pointsNew"></param>
            <param name="y2New"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.NaturalSpline(Syncfusion.Windows.Forms.Chart.ChartPointWithIndex[],System.Double[]@)">
            <summary>
            Given the array of chart points. The procedure returns array of second derivatives of cubic splines at this points.
            Then we can get bezier curve coordinates from the second derivatives and points array.
            </summary>
            <param name="points">The points.</param>
            <param name="ys2">The ys2.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.NaturalSpline(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint[],System.Double[]@)">
            <summary>
            Given the array of chart points. The procedure returns array of second derivatives of cubic splines at this points.
            Then we can get bezier curve coordinates from the second derivatives and points array.
            </summary>
            <param name="points">The points.</param>
            <param name="ys2">The ys2.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.BezierPointsFromSpline(System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Gets bezier curve points from cubic spline curve defined by two points and two second derivative y2 at this points.
            </summary>
            <param name="point1"> Start  of spline curve </param>
            <param name="point2"> End  of spline curve</param>
            <param name="y2_1"> Second y derivative x at start point </param>
            <param name="y2_2"> Second y derivative x at end point </param>
            <param name="p0"> First Bezier curve point </param>
            <param name="p1"> Second Bezier curve point </param>
            <param name="p2"> Third Bezier curve point</param>
            <param name="p3"> Fourth Bezier curve point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetBezierControlPoints(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint,Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint,System.Double,System.Double,Syncfusion.Windows.Forms.Chart.ChartPoint@,Syncfusion.Windows.Forms.Chart.ChartPoint@,System.Int32)">
            <summary>
            Gets the bezier control points.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
            <param name="ys1">The ys1.</param>
            <param name="ys2">The ys2.</param>
            <param name="controlPoint1">The control point1.</param>
            <param name="controlPoint2">The control point2.</param>
            <param name="yIndex">Index of the y.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.BezierPointsFromSpline(Syncfusion.Windows.Forms.Chart.ChartPointWithIndex,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex,System.Double,System.Double,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex@,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex@,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex@,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex@)">
            <summary>
            Gets bezier curve points from cubic spline curve defined by two points and two second derivative y2 at this points.
            </summary>
            <param name="point1"> Start  of spline curve </param>
            <param name="point2"> End  of spline curve</param>
            <param name="y2_1"> Second y derivative x at start point </param>
            <param name="y2_2"> Second y derivative x at end point </param>
            <param name="p0"> First Bezier curve point </param>
            <param name="p1"> Second Bezier curve point </param>
            <param name="p2"> Third Bezier curve point</param>
            <param name="p3"> Fourth Bezier curve point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.canonicalSpline(Syncfusion.Windows.Forms.Chart.ChartPointWithIndex[],System.Double,System.Boolean,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex[]@,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex[]@)">
            <summary>
            Given the array of points. The procedure will fit the canonical spline curve to pass through all the points.
            Note: The curve will not be "function" line. There can be few Y values for one X value;
            </summary>
            <param name="points"></param>
            <param name="tension">Canonical spline tension</param>
            <param name="addextremumpoints"></param>
            <param name="bpoints">Bezier points array. The length of this array is 4n, where n is number of intervals (number of points - 1)</param>
            <param name="bextrpoints"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.SplitBezierCurve(Syncfusion.Windows.Forms.Chart.ChartPointWithIndex,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex,System.Double,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex@,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex@,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex@,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex@,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex@,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex@,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex@,Syncfusion.Windows.Forms.Chart.ChartPointWithIndex@)">
            <summary>
            Splits the bezier curve.
            </summary>
            <param name="p0">The p0.</param>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <param name="p3">The p3.</param>
            <param name="t0">The t0.</param>
            <param name="pb0">The PB0.</param>
            <param name="pb1">The PB1.</param>
            <param name="pb2">The PB2.</param>
            <param name="pb3">The PB3.</param>
            <param name="pe0">The pe0.</param>
            <param name="pe1">The pe1.</param>
            <param name="pe2">The pe2.</param>
            <param name="pe3">The pe3.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Draw3DBeziers(System.Drawing.Graphics,System.Drawing.PointF[],System.Drawing.PointF[],System.Drawing.SizeF,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            Draws beziers curve.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to render curve.</param>
            <param name="drawpoints">The array of <see cref="T:System.Drawing.PointF"/> to render curve.</param>
            <param name="fillpoints">The array of <see cref="T:System.Drawing.PointF"/> to fill.</param>
            <param name="offset">The curve offset.</param>
            <param name="brush">The <see cref="T:Syncfusion.Drawing.BrushInfo"/> to fill curve body.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/> to render curve border.</param>
            <returns><see cref="T:System.Drawing.Region"/> that represent curve.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CreateVerticalCylinder3D(System.Drawing.RectangleF,System.Drawing.SizeF)">
            <summary>
            Creates the vertical cylinder 3D geometry.
            </summary>
            <param name="rect">The bounds of the cylinder.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CreateHorizintalCylinder3DTop(System.Drawing.RectangleF,System.Drawing.SizeF)">
            <summary>
            Creates the horizontal cylinder 3D top geometry.
            </summary>
            <param name="rect">The bounds of the cylinder.</param>
            <param name="offset">The offset.</param>
            <returns>
            	<see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> that represent cylinder.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CreateVerticalCylinder3DTop(System.Drawing.RectangleF,System.Drawing.SizeF)">
            <summary>
            Creates the vertical cylinder 3D top geometry.
            </summary>
            <param name="rect">The bounds of the cylinder.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CreateHorizintalCylinder3D(System.Drawing.RectangleF,System.Drawing.SizeF)">
            <summary>
            Creates the horizontal cylinder 3D geometry.
            </summary>
            <param name="rect">The bounds of the cylinder.</param>
            <param name="offset">The offset.</param>
            <returns>
            	<see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> that represent cylinder.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetLeftBezierPoint(System.Drawing.PointF,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Gets the left bezier point.
            </summary>
            <param name="p1">The start point.</param>
            <param name="p2">The first control point.</param>
            <param name="p3">The second control point.</param>
            <param name="p4">The end point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetRightBezierPoint(System.Drawing.PointF,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Gets the right bezier point.
            </summary>
            <param name="p1">The start point.</param>
            <param name="p2">The first control point.</param>
            <param name="p3">The second control point.</param>
            <param name="p4">The end point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetTopBezierPoint(System.Drawing.PointF,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Gets the top bezier point.
            </summary>
            <param name="p1">The start point.</param>
            <param name="p2">The first control point.</param>
            <param name="p3">The second control point.</param>
            <param name="p4">The end point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetBottomBezierPoint(System.Drawing.PointF,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Gets the bottom bezier point.
            </summary>
            <param name="p1">The start point.</param>
            <param name="p2">The first control point.</param>
            <param name="p3">The second control point.</param>
            <param name="p4">The end point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Draw3DLines(System.Drawing.Graphics,System.Drawing.PointF[],System.Drawing.SizeF,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen,System.Drawing.Color[])">
            <summary>
            Draw 3D lines.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to render lines.</param>
            <param name="points">The lines' points.</param>
            <param name="offset">The offset.</param>
            <param name="brush">The <see cref="T:Syncfusion.Drawing.BrushInfo"/> to fill lines body.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/> to render lines border.</param>
            <param name="colors">The array of <see cref="T:System.Drawing.Color"/> to draw lines.</param>
            <returns><see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> that represent lines.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Draw3DLines(System.Drawing.Graphics,System.Drawing.PointF[],System.Drawing.SizeF,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            Draw 3D lines.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to render lines.</param>
            <param name="points">The lines' points.</param>
            <param name="offset">The offset.</param>
            <param name="brush">The <see cref="T:Syncfusion.Drawing.BrushInfo"/> to fill lines body.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/> to render lines border.</param>
            <returns><see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> that represent lines.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Draw(Syncfusion.Windows.Forms.Chart.ChartGraph,System.Drawing.Drawing2D.GraphicsPath,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            Draw for given Graphical path.
            </summary>
            <param name="cg">Chart Graph.</param>
            <param name="gp">Graphical Path.</param>
             <param name=" br">BrushInfo.</param>
              <param name="p">Pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetRectangle(Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Calculates <see cref="T:System.Drawing.RectangleF"/> for given chart points.
            </summary>
            <param name="firstPoint">The first chart point to calculate rectangle.</param>
            <param name="secondPoint">The second chart point to calculate rectangle.</param>
            <returns>Calculated rectangle.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Draw3DRectangle(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.SizeF,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            Helper method to render a 3D rectangle.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
            <param name="rc">The rectangle that is to be drawn.</param>
            <param name="offset">The Offset in 3D.</param>
            <param name="brush">The brush that is to be used for filling the rectangle sides.</param>
            <param name="pen">The pen that is to be used for drawing the rectangle sides.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CreateBox(System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Creates <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> that represent box.
            </summary>
            <param name="rect">The bounds of the box.</param>
            <param name="is3D">The value indicates that box is in 3D.</param>
            <returns><see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> that represent box.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CreateBoxRight(System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Creates <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> that represent box.
            </summary>
            <param name="rect">The bounds of the box.</param>
            <param name="is3D">The value indicates that box is in 3D.</param>
            <returns><see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> that represent box.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CreateBoxTop(System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Creates <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> that represent box.
            </summary>
            <param name="rect">The bounds of the box.</param>
            <param name="is3D">The value indicates that box is in 3D.</param>
            <returns><see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> that represent box.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawPointSymbol(Syncfusion.Windows.Forms.Chart.Graphics3D,Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint)">
            <summary>
            Renders the symbol that is to be associated with a point. Delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>
            </summary>
            <param name="g">The graphics object that is to be used.</param>
            <param name="styledPoint">The associated point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawPointSymbol(Syncfusion.Windows.Forms.Chart.Graphics3D,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,Syncfusion.Windows.Forms.Chart.Vector3D,System.Boolean)">
            <summary>
            Renders the symbol that is to be associated with a point. Delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>
            </summary>
            <param name="g">The graphics object that is to be used.</param>
            <param name="style">The style that is to be used.</param>
            <param name="pt">Anchor point.</param>
            <param name="drawMarker">Indicates whether a marker should be drawn.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.AddSymbolRegion(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint)">
            <summary>
            Adds the symbol region by the specified point index.
            </summary>
            <param name="styledPoint">The associated point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetRegionFromCircle(System.Drawing.PointF,System.Single)">
            <summary>
            Called by several derived renderers to create a region from a 'Hit Test' circle. By overriding this
            method you can expand, contract or change this region.
            </summary>
            <param name="center">The anchor point.</param>
            <param name="radius">The radius of the circle that is to be used as the base for the region.</param>
            <returns>Region object that is commonly used for hit testing, for display of tooltips and the like.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetPath3DFromCircle(Syncfusion.Windows.Forms.Chart.Vector3D,System.Single)">
            <summary>
            Gets the 3D circle.
            </summary>
            <param name="pt">The center of circle.</param>
            <param name="radius">The radius.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetBrush(System.Int32)">
            <summary>
            Brush information is retrieved from the style associated with the index of the point to be rendered.
            It is then changed for special cases such as when automatic highlighting is enabled.
            </summary>
            <param name="index">Index value of the point for which the brush information is required.</param>
            <returns>Brush information that is to be used for filling elements displayed at this index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetBrush(System.Int32,System.Drawing.Color)">
            <summary>
            Brush information is retrieved from the style associated with the index of the point to be rendered.
            It is then changed for special cases such as when automatic highlighting, series highlighting, symbol highlighting are enabled.
            </summary>
            <param name="index">Index value of the point for which the brush information is required.</param>
            <returns>Brush information that is to be used for filling elements displayed at this index.</returns>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetBrush">
            <summary>
            Brush information is retrieved from the style associated with the index of the point to be rendered.
            It is then changed for special cases such as when automatic highlighting is enabled.
            </summary>
            <returns>Brush information that is to be used for filling elements displayed at this index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetSeriesHighlightBrush(System.Int32,Syncfusion.Drawing.BrushInfo,Syncfusion.Windows.Forms.Chart.ChartStyleInfo)">
            <summary>
            Brush information is retrieved from the style associated with the index of the point to be rendered when SeriesHighlight is enabled.
            It is then changed for special cases such as when automatic highlighting is enabled.
            </summary>
            <returns>Brush information that is to be used for filling elements displayed at this index.</returns>
            <param name="serIndex">Specfies the series index.</param>
            <param name="brush">Interior of the specified series..</param>
            <param name="style">Series .</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetSymbolHighlightBrush(System.Int32,Syncfusion.Drawing.BrushInfo,Syncfusion.Windows.Forms.Chart.ChartStyleInfo)">
            <summary>
            Gets the symbol highlight brush.
            </summary>
            <param name="serIndex">Index of the ser.</param>
            <param name="brush">The brush.</param>
            <param name="style">The style.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetPhongInterior(Syncfusion.Drawing.BrushInfo,System.Drawing.Color,System.Double,System.Double)">
            <summary>
            Gets the phong interior.
            </summary>
            <param name="brushInfo">The base brush info.</param>
            <param name="lightColor">Color of the light.</param>
            <param name="lightAlpha">The light alpha.</param>
            <param name="phongAlpha">The phong alpha.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetLowerAnchorPointValue(System.Int32)">
            <summary>
            Calculates the point that is considered to be the low anchor point of a series. This
            value is used when rendering text below chart point elements.
            </summary>
            <param name="index">Index value of the point for which the value is requested.</param>
            <returns>Calculated value that is to be used as the base anchor point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetPointFromIndex(System.Int32,System.Int32)">
            <summary>
            Overloaded. Given a point index, returns the point to be plotted on the chart.
            </summary>
            <param name="i">X Index value</param>
            <param name="j">Y Index value</param>
            <returns>Point to be plotted</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetPointFromIndex(System.Int32)">
            <summary>
            Given a point index, returns the point to be plotted on the chart.
            </summary>
            <param name="i">X index. Y Index is taken as 0.</param>
            <returns>Point to be plotted.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetPointFromValue(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint)">
            <summary>
            Compute real point from specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint"/>
            </summary>
            <param name="cpt">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetPointFromValue(System.Double,System.Double)">
            <summary>
            Compute real point from specified coordinates.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetPointFromValue(Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Gets the point from value.
            </summary>
            <param name="cpt">The CPT.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetPointFromValue(Syncfusion.Windows.Forms.Chart.ChartPoint,System.Int32)">
            <summary>
            Gets the point from value.
            </summary>
            <param name="cpt">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.</param>
            <param name="j">The index of Y value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetSideBySideRange">
            <summary>
            Gets the side by side range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetSideBySideInfo">
            <summary>
            Gets the "side by side" info.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetStackInfo(System.Int32)">
            <summary>
            Overloaded. This method is used when series are rendered as stacked data. The value returned is a cumulative value of
            Y from all series that are below the series currently being rendered.
            </summary>
            <param name="i"></param>
            <returns>Value that gives the position from which this series should be rendered.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetStackInfoValue(System.Int32)">
            <summary>
            Overloaded. This method is used when series are rendered as stacked data. The value returned is a cumulative value of
            Y from all series that are below the series currently being rendered.
            </summary>
            <param name="i">The index of point.</param>
            <returns>Value that gives the position from which this series should be rendered.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetStackInfoValue(System.Int32,System.Boolean)">
            <summary>
            Overloaded. This method is used when series are rendered as stacked data. The value returned is a cumulative value of
            Y from all series that are below the series currently being rendered.
            </summary>
            <param name="i">The index of point.</param>
            <param name="isWithMe">if set to <c>true</c> the Y value of point will be added to result.</param>
            <returns>Value that gives the position from which this series should be rendered.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetSymbolPoint(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint)">
            <summary>
            Returns the anchor point at which the symbol associated with an index is to be
            displayed.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetSymbolVector(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint)">
            <summary>
            Gets the symbol vector.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetSymbolCoordinates(System.Int32)">
            <summary>
            
            </summary>
            <param name="pointIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetHiLoSymbolCoordinates(System.Int32)">
            <summary>
            Gets the symbol coordinate for hilo series
            </summary>
            <param name="pointIndex">Index of the point</param>
            <returns>Location of the point at specified index</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetSymbolCoordinates(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint)">
            <summary>
            Gets the symbol coordinates.
            </summary>
            <param name="styledPoint">The styled point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetXFromIndex(System.Int32,System.Int32)">
            <summary>
            Given a point index, returns the X value to be plotted on the chart.
            </summary>
            <param name="i">X index</param>
            <param name="j">Y index</param>
            <returns>X value to be plotted.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetXFromValue(Syncfusion.Windows.Forms.Chart.ChartPoint,System.Int32)">
            <summary>
            Given a point and y value, returns the X value to be plotted on the chart.
            </summary>
            <param name="cp">The chart point</param>
            <param name="j">The Y index</param>
            <returns>X value to be plotted.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetXFromCoordinate(System.Double)">
            <summary>
            Given an X coordinate value, returns the display value.
            </summary>
            <param name="value">Coordinate on the axis.</param>
            <returns>Display value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetYFromIndex(System.Int32,System.Int32)">
            <summary>
            Given the point indices, returns the Y value to be plotted on the chart.
            </summary>
            <param name="i">X index</param>
            <param name="j">Y index</param>
            <returns>Y value to be plotted</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetYFromValue(Syncfusion.Windows.Forms.Chart.ChartPoint,System.Int32)">
            <summary>
            Given a point and y value, returns the Y value to be plotted on the chart.
            </summary>
            <param name="cp">The chart point value.</param>
            <param name="j">The Y index</param>
            <returns>Y value to be plotted</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetYFromCoordinate(System.Double)">
            <summary>
            Given a Y coordinate value, returns the display value.
            </summary>
            <param name="y"></param>
            <returns>Display value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetIndexValueFromX(System.Double)">
            <summary>
            This function transforms x vales of series points to index vales.
            Also it populates index hash table.
            </summary>
            <param name="x">The X value of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetAngleValue(Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Gets the angle value.
            </summary>
            <param name="cp">The cp.</param>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetAngleValue(System.Int32,Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Gets the angle by X value.
            </summary>
            <param name="index">The index.</param>
            <param name="cp">The cp.</param>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetXAxisValue(Syncfusion.Windows.Forms.Chart.ChartPoint,System.Int32)">
            <summary>
            Returns the value form <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/> requiring by X axis.
            </summary>
            <param name="cpt">Instance of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/></param>
            <param name="j">Index of Y value from specified point.</param>
            <returns>Require value for axis.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetYAxisValue(Syncfusion.Windows.Forms.Chart.ChartPoint,System.Int32)">
            <summary>
            Returns the value form <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/> requiring by Y axis.
            </summary>
            <param name="cpt">Instance of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/></param>
            <param name="j">Index of Y value from specified point.</param>
            <returns>Require value for axis.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetXDataMeasure">
            <summary>
            Measures the X range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetYDataMeasure">
            <summary>
            Measures the X range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawText(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint,System.Drawing.PointF)">
            <summary>
            Overloaded. Renders text. Performs positioning and delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            </summary>
            <param name="g">Renders text. Performs positioning and delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.</param>
            <param name="styledPoint">The associated point.</param>
            <param name="p">Point that is to be used as the anchor.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawCalloutShapeText(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint,System.Drawing.PointF)">
            <summary>
            Overloaded. Renders text. Performs positioning and delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            </summary>
            <param name="g">Renders text. Performs positioning and delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.</param>
            <param name="styledPoint">The associated point.</param>
            <param name="pointPos">Point that is to be used as the anchor.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CalculateCalloutPath(Syncfusion.Windows.Forms.Chart.ChartCalloutInfo,System.Drawing.Rectangle,System.Drawing.PointF)">
            <summary>
            
            </summary>
            <param name="callout">callout object</param>
            <param name="bnds"> callout rect bounds</param>
            <param name="pointPos">point position</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChangeCalloutPosition(Syncfusion.Windows.Forms.Chart.ChartCalloutInfo,System.Drawing.PointF,System.Drawing.SizeF,System.Single,System.Single)">
            <summary>
            Changing the callout bounds position when it was rendering outside the chart area.
            </summary>
            <param name="callout">The callout.</param>
            <param name="calloutPos">The callout shape x and y position.</param>
            <param name="siz">The callout shape width and height.</param>
            <param name="offsetX">The callout text offsetX.</param>
            <param name="offsetY">The callout text offsetY.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CalculatePolygonPosition(Syncfusion.Windows.Forms.Chart.ChartCalloutInfo,System.Drawing.Rectangle,System.Drawing.PointF)">
            <summary>
            
            </summary>
            <param name="callout">callout object</param>
            <param name="bnds"> callout rect bounds</param>
            <param name="pointPos">point position</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DrawText(Syncfusion.Windows.Forms.Chart.Graphics3D,Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint,Syncfusion.Windows.Forms.Chart.Vector3D,System.Drawing.Size)">
            <summary>
            Renders text. Performs positioning and delegates to the <see cref="T:Syncfusion.Windows.Forms.Chart.RenderingHelper"/> class.
            </summary>
            <param name="g">The graphics object that is to be used.</param>
            <param name="styledPoint">The associated point.</param>
            <param name="p">The point that is to be used as anchor.</param>
            <param name="sz">The display size of the string.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.RenderAdornments(System.Drawing.Graphics)">
            <summary>
            Overloaded. Renders elements such as Text and Point Symbols.
            </summary>
            <param name="g">The graphics object that is to be used.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.RenderAdornments(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            Renders elements such as Text and Point Symbols.
            </summary>
            <param name="g">The graphics object that is to be used.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.RenderAdornment(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint)">
            <summary>
            Renders the adornment.
            </summary>
            <param name="g">The g.</param>
            <param name="point">The point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetToolTip">
            <summary>
            Gets the tool tip.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetToolTip(System.Int32)">
            <summary>
            Gets the tooltip by the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.SetBoundsAndRange(Syncfusion.Windows.Forms.Chart.IChartAreaHost,System.Drawing.RectangleF,Syncfusion.Windows.Forms.Chart.ChartAxis,Syncfusion.Windows.Forms.Chart.ChartAxis)">
            <summary>
            
            </summary>
            <param name="chart"></param>
            <param name="bounds"></param>
            <param name="xAxis"></param>
            <param name="yAxis"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CreateBoundsPolygon(System.Single)">
            <summary>
            Creates the space separator.
            </summary>
            <param name="z">The Z coordinate.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetStyleAt(System.Int32)">
            <summary>
            Delegates to <see cref="M:Syncfusion.Windows.Forms.Chart.ChartSeries.GetOfflineStyle"/> to return the style associated with this index.
            You can use this override to specify additional style attributes on a renderer basis.
            </summary>
            <param name="index">Index value of the point for which the style is required.</param>
            <returns>Offline composed copy of the style associated with the index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.FillStyles">
            <summary>
            Fills the styles.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.IsVisiblePoint(Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Determines whether the specified point is visible.
            </summary>
            <param name="cpt">The ChartPoint instance.</param>
            <returns>
            	<c>true</c> if the specified point is visible; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.PrepearePoints">
            <summary>
            Generates the array of points with specified style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CreateStyledPoint(System.Int32)">
            <summary>
            Creates the styled point.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CalculateVisibleRange">
            <summary>
            Calculate the visible indices of points for rendering.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CalculateUnEmptyRanges(Syncfusion.Windows.Forms.Chart.IndexRange)">
            <summary>
            Computes the array of <see cref="T:Syncfusion.Windows.Forms.Chart.IndexRange"/>, using for indicating unempty points.
            </summary>
            <param name="vrange">The visible range of points.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.PhongShadingColors(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Double,System.Double,System.Drawing.Color[]@,System.Single[]@)">
            <summary>
            Gets the phong shading blend.
            </summary>
            <param name="ambientColor">Color of the ambient.</param>
            <param name="diffusiveColor">Color of the diffusive.</param>
            <param name="lightColor">Color of the light.</param>
            <param name="alpha">The alpha.</param>
            <param name="phong_alpha">The phong_alpha.</param>
            <param name="colors">The colors.</param>
            <param name="positions">The positions.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetTotalDepth">
            <summary>
            Gets the total depth.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetCache">
            <summary>
            Gets the points cache.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.InsertPoint(System.Int32)">
            <summary>
            Inserts the point.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.RemovePoint(System.Int32)">
            <summary>
            Removes the point.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.UpdatePoint(System.Int32)">
            <summary>
            Updates the point.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ResetCache">
            <summary>
            Resets the cache.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.GetStyledPoint(System.Int32)">
            <summary>
            Gets the styled point.
            </summary>
            <param name="pointIndex">Index of the point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CalCachePoints">
            <summary>
            calculates the points to draw when huge data source binded to chart for improving the performance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.StyledPoints">
            <summary>
             Retruns all Styled Point Collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Place">
            <summary>
            Number of layer for specified series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.PlaceSize">
            <summary>
            Count of the chart layers.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.FillSpaceType">
            <summary>
            Indicates how much space this type will use.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Center">
            <summary>
            Gets the center of <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Bounds"/>.
            </summary>
            <value>The center.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.SeriesStyle">
            <summary>
            Gets the series style.
            </summary>
            <value>The series style.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Segments">
            <summary>
            Gets array of geometry primitives for sorting before visualizting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.UnEmptyRanges">
            <summary>
            Computes the array of <see cref="T:Syncfusion.Windows.Forms.Chart.IndexRange"/>, using for indicating unempty points.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.EnableStyles">
            <summary>
            Duplicates the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeries.EnableStyles"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Bounds">
            <summary>
            Returns the bounds that this renderer operates in.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.Chart">
            <summary>
            Reference to the <see cref="T:Syncfusion.Windows.Forms.Chart.IChartAreaHost"/> instance that uses this instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartArea">
            <summary>
            Reference to the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartArea"/> instance that uses this instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CustomOriginX">
            <summary>
            Returns the X coordinate of the origin. This property will return the correct coordinate even if the X axis has a custom
            origin.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.CustomOriginY">
            <summary>
            Returns the Y coordinate of the origin. This property will return the correct coordinate even if the Y axis has a custom
            origin.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.IgnoreSeriesInversion">
            <summary>
            This setting allows chart types that are normally not rendered inverted to be combined with those that are
            normally rendered inverted. For example Bar charts are rendered inverted. The Bubble chart can be combined with
            Bar charts because it sets IgnoreSeriesInversion to true. When this property is set to true the renderer will ignore
            the inversion setting on the series being rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.OriginLocation">
            <summary>
            The location of the origin as used for rendering.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.XAxis">
            <summary>
            Returns the X axis object that the current renderer is tied to.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.YAxis">
            <summary>
            Returns the Y axis object that the current renderer is tied to.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartAxis"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ShouldSort">
            <summary>
            Gets a value indicating whether points should be sort.
            </summary>
            <value><c>true</c> if points should be sorted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.IsInvertedAxes">
            <summary>
            True if axes is inverted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.IsRadial">
            <summary>
            True if series using the radial axes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.IntervalSpace">
            <summary>
            Computes and returns the space occupied by each interval on the series being rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.DividedIntervalSpace">
            <summary>
            Calculates and returns the number of display units that are used per logical(value) unit.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint">
            <summary>
            This class is using for the caching points and styles.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint.#ctor(Syncfusion.Windows.Forms.Chart.ChartPoint,System.Int32)">
            <summary>
            Initialize the new instance.
            </summary>
            <param name="cp"></param>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint.Dispose">
            <summary>
            Method to dispose ChartStyledPoint object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint.X">
            <summary>
            Gets or sets the X.
            </summary>
            <value>The X.</value>
            <remarks>
            In indexed mode it's the index of real X value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint.YValues">
            <summary>
            Gets or sets the Y values.
            </summary>
            <value>The Y values.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint.Category">
            <summary>
            Gets or sets the Y values.
            </summary>
            <value>The Y values.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint.IsVisible">
            <summary>
            Gets or sets a value indicating whether this point is visible.
            </summary>
            <value>
            	<c>true</c> if this point is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint.Style">
            <summary>
            Gets or sets the specified style of point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint.ToolTip">
            <summary>
            Gets or sets the tooltip of point.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPointComparer">
            <summary>
            This class is using for sorting <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint"/> by X or Index values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPointComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
            <exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"></see> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPointComparerY">
            <summary>
            This class is using for sorting <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint"/> by Y or Index values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPointComparerY.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
            <exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"></see> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPointComparerXDescending">
            <summary>
            This class is using for descending order sorting <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint"/> by X or Index values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPointComparerXDescending.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
            <exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"></see> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPointComparerYDescending">
            <summary>
            This class is using for descending order sorting <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint"/> by Y or Index values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPointComparerYDescending.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
            <exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"></see> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.DrawChartPoint(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
            Draws the specified point in specified style
            </summary>
            <param name="g">Graphics object</param>
            <param name="point">Chart Point</param>
            <param name="info">Style of the point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.RenderAdornment(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint)">
            <summary>
            Renders the adornment.
            </summary>
            <param name="g"></param>
            <param name="point">The point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.GetPointByValueForSeries(Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Gets the point by value for series.
            </summary>
            <param name="chpt">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.</param>
            <returns>Returns PointF.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.GetXDataMeasure">
            <summary>
            Computes the necessary range of X axis.
            </summary>
            <returns>Returns the DoubleRange.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.CalculateSides(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint,Syncfusion.Windows.Forms.Chart.DoubleRange,System.Double@,System.Double@)">
            <summary>
            Calculates the sides.
            </summary>
            <param name="styledPoint">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint"/>.</param>
            <param name="sbsInfo">The side-by-side info.</param>
            <param name="x1">The x1.</param>
            <param name="x2">The x2.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.GetColumnBounds(Syncfusion.Windows.Forms.Chart.ChartRenderArgs,Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Gets the column bounds.
            </summary>
            <param name="args">The args.</param>
            <param name="stypedPoint">The styped point.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <returns>Returns RectangleF.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.CheckColumnBounds(System.Boolean,System.Drawing.RectangleF@)">
            <summary>
            Checks the column bounds.
            </summary>
            <param name="isInverted">if set to <c>true</c> axes is inverted.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.CheckColumnPoints(System.Boolean,System.Drawing.RectangleF@)">
            <summary>
            Checks the column bounds.
            </summary>
            <param name="isInverted">if set to <c>true</c> axes is inverted.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.CalculateSides(Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.DoubleRange,System.Double@,System.Double@)">
            <summary>
            Calculates the sides.
            </summary>
            <param name="cpt">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.</param>
            <param name="sbsInfo">The side-by-side info.</param>
            <param name="x1">The x1.</param>
            <param name="x2">The x2.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.GetSymbolCoordinates(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint)">
            <summary>
            Gets the symbol coordinates.
            </summary>
            <param name="point">The point.</param>
            <returns>Returns Synbol Coordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.GetBrush">
            <summary>
            Brush information is retrieved from the style associated with the index of the point to be rendered.
            It is then changed for special cases such as when automatic highlighting is enabled.
            </summary>
            <returns>
            Brush information that is to be used for filling elements displayed at this index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.GetBrush(System.Int32)">
            <summary>
            Brush information is retrieved from the style associated with the index of the point to be rendered.
            It is then changed for special cases such as when automatic highlighting is enabled.
            </summary>
            <param name="index">Index value of the point for which the brush information is required.</param>
            <returns>
            Brush information that is to be used for filling elements displayed at this index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws the icon on the legend.
            </summary>
            <param name="g">Instance of <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">Bounds of icon.</param>
            <param name="isShadow">If is true method draws the shadow.</param>
            <param name="shadowColor"><see cref="T:System.Drawing.Color"/> of shadow.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.FillSpaceType">
            <summary>
            Indicated how much space this type will fill.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRenderer.IsFixedWidth">
            <summary>
            Gets a value indicating whether this instance is fixed width.
            </summary>
            <value>
            	<c>true</c> if this instance is fixed width; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.CandleRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.CandleRenderer"/> class.
            </summary>
            <param name="series">The ChartSeries.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.CandleRenderer.DrawChartPoint(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
            Draw the specified point with specified style
            </summary>
            <param name="g">Graphics</param>
            <param name="point">Chart Point</param>
            <param name="info">Point Style</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.CandleRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>		
            <param name="args">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.CandleRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The ChartRenderArgs3 args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.CandleRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws the icon on the legend.
            </summary>
            <param name="g">Instance of <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">Bounds of icon.</param>
            <param name="isShadow">If is true method draws the shadow.</param>
            <param name="shadowColor"><see cref="T:System.Drawing.Color"/> of shadow.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.CandleRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value>The Require YValues Count.</value>       
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.CandleRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value>The RegionDescription. </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.AreaRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AreaRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.AreaRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AreaRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AreaRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AreaRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws icon.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to render icon.</param>
            <param name="bounds">The bounds of icon.</param>
            <param name="isShadow">The value indicates that draw shadow.</param>
            <param name="shadowColor">The shadow <see cref="T:System.Drawing.Color"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AreaRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.BarRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.BarRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.BarRenderer"/> class.
            </summary>
            <param name="series"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.BarRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.BubbleRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.BubbleRenderer.#cctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.BubbleRenderer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.BubbleRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.BubbleRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.BubbleRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.BubbleRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.BubbleRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws the icon on the legend.
            </summary>
            <param name="g">Instance of <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">Bounds of icon.</param>
            <param name="isShadow">If is true method draws the shadow.</param>
            <param name="shadowColor"><see cref="T:System.Drawing.Color"/> of shadow.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.BubbleRenderer.CalculateYRange(System.Int32)">
            <summary>
            Calculates the Y range.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.BubbleRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.BubbleRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.BubbleRenderer.IgnoreSeriesInversion">
            <summary>
            This setting allows chart types that are normally not rendered inverted to be combined with those that are
            normally rendered inverted. For example Bar charts are rendered inverted. The Bubble chart can be combined with
            Bar charts because it sets IgnoreSeriesInversion to true. When this property is set to true the renderer will ignore
            the inversion setting on the series being rendered.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRangeRenderer">
            <summary>
            Summary description for ColumnRangeRenderer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRangeRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRangeRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRangeRenderer.DrawChartPoint(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
            Draws the specified point in specified style
            </summary>
            <param name="g">Graphics object</param>
            <param name="point">Chart Point</param>
            <param name="info">Style of the point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRangeRenderer.Render(System.Drawing.Graphics)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRangeRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRangeRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRangeRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ColumnRangeRenderer.IsFixedWidth">
            <summary>
            Gets a value indicating whether this instance is fixed width.
            </summary>
            <value>
                <c>true</c> if this instance is fixed width; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartCustomPointsRenderer">
            <summary>
            The ChartCustomPoints Renderering class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointsRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCustomPointsRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointsRenderer.Render(System.Drawing.Graphics)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPointsRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPointsRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.FullStackedColumnRenderer">
            <summary>
            Summary description for ChartStackedColumn100PercentRenderer.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.StackingColumnRenderer">
            <summary>
            Represents the stacking-column type renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StackingColumnRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.StackingColumnRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StackingColumnRenderer.DrawChartPoint(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
            Draws the specified point in specified style
            </summary>
            <param name="g">Graphics object</param>
            <param name="point">Chart Point</param>
            <param name="info">Style of the point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StackingColumnRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StackingColumnRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StackingColumnRenderer.GetPointByValueForSeries(Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Gets the point by value for series.
            </summary>
            <param name="chpt">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StackingColumnRenderer.GetYDataMeasure">
            <summary>
            Measures the X range.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.StackingColumnRenderer.FillSpaceType">
            <summary>
            Indicated how much space this type will fill.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.StackingColumnRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FullStackedColumnRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.FullStackedColumnRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.FullStackedColumnRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.FullStackingAreaRenderer">
            <summary>
            The FullStackingArea Renderering class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.StackingAreaRenderer">
            <summary>
            The StackingArea chart renderering class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StackingAreaRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.StackingAreaRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StackingAreaRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StackingAreaRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StackingAreaRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws the icon on the legend.
            </summary>
            <param name="g">Instance of <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">Bounds of icon.</param>
            <param name="isShadow">If is true method draws the shadow.</param>
            <param name="shadowColor"><see cref="T:System.Drawing.Color"/> of shadow.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StackingAreaRenderer.GetYDataMeasure">
            <summary>
            Measures the X range.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.StackingAreaRenderer.FillSpaceType">
            <summary>
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.StackingAreaRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.StackingAreaRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FullStackingAreaRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.FullStackingAreaRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.FullStackingAreaRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.FullStackingBarRenderer">
            <summary>
            The FullStackingBar Renderering class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FullStackingBarRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.FullStackingBarRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.FullStackingBarRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer">
            <summary>
            Represents the funnel type renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.Render(System.Drawing.Graphics)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.OnRender(System.Drawing.Graphics,System.Boolean)">
            <summary>
            Render the chart type.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="showTitle">if set to <c>true</c> title is shown.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.OnRender(Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D,System.Boolean)">
            <summary>
            Render the chart type.
            </summary>
            <param name="args">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D"/>.</param>
            <param name="showTitle">if set to <c>true</c> title is shown.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.CreateLayersAndLabels(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint[],System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Creates the layers and labels.
            </summary>
            <param name="points">The points.</param>
            <param name="g">The g.</param>
            <param name="drawingRect">The drawing rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.OptimizationFunc_YIsWidth(System.Double)">
            <summary>
            Optimizations the width of the func_ Y is.
            </summary>
            <param name="k">The k.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.OptimizationFunc_YIsHeight(System.Double)">
            <summary>
            Optimizations the height of the func_ Y is.
            </summary>
            <param name="ctg">The CTG.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.CalcLayersAndLabelsSizeLocAndGetTheirBoundingRect">
            <summary>
            Calculates the layers and labels size loc and get their bounding rect.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.FightWithLabelsIntersection">
            <summary>
            Fights the with labels intersection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.FightWithLabelsAndConnectionLinesIntersection">
            <summary>
            Fights the with labels and connection lines intersection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.GetLabelsRect(System.Collections.ArrayList)">
            <summary>
            Gets the labels rect.
            </summary>
            <param name="labels">The labels.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.GetLayersRect(System.Collections.ArrayList)">
            <summary>
            Gets the layers rect.
            </summary>
            <param name="layers">The layers.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.GetMinSize(System.Drawing.Graphics)">
            <summary>
            Computes the size of necessary rectangle for the rendering.
            </summary>
            <param name="g"></param>
            <returns>
            	<see cref="T:System.Drawing.SizeF"/> of minimal rectangle.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.GetAllValue">
            <summary>
            Gets all value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.AreRectanglesStacked(System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Calculate value indicates that rectangles are stacked.
            </summary>
            <param name="r1">The  first rectangle to check.</param>
            <param name="r2">The second rectangle to check.</param>
            <returns>True if given rectangles are stacked, otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.GetTotalDepth">
            <summary>
            Gets the total depth.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.FillSpaceType">
            <summary>
            Indicates how much space this type will use.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.FunnelRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer">
            <summary>
            The AccumulationChartsLayer class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.GetGapRatioHeight">
            <summary>
            Gets the height of the gap ratio.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.GetAngleTangent">
            <summary>
            Gets the angle tangent.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.GetMinDrawingRect">
            <summary>
            Gets the min drawing rect.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.GetOuterDrawingRect">
            <summary>
            Gets the outer drawing rect.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.GetInnerDrawingRect">
            <summary>
            Gets the inner drawing rect.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.GetDownDrawingRect">
            <summary>
            Gets down drawing rect.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.GetUpDrawingRect">
            <summary>
            Gets up drawing rect.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.GetFullDrawingRect">
            <summary>
            Gets the full drawing rect.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.IsWidding">
            <summary>
            Determines whether this instance is widding.
            </summary>
            <returns>
            	<c>true</c> if this instance is widding; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.NeedTopSide">
            <summary>
            Needs the top side.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.#cctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.#ctor(System.Int32,System.Drawing.PointF,System.Single,System.Boolean,System.Single,Syncfusion.Windows.Forms.Chart.ChartFunnelMode)">
            <summary>
            Creates instance of the AccumulationChartsLayer.
            </summary>
            <param name="index">The layer index.</param>
            <param name="topCenterPoint">The top center point.</param>
            <param name="height">The layer height.</param>
            <param name="series3D">The value indicates that is 3D series.</param>
            <param name="offset3DRatio">The offset ratio.</param>
            <param name="funnelmode">The chart funnel mode.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.#ctor(System.Int32,System.Drawing.PointF,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Single,Syncfusion.Windows.Forms.Chart.ChartFunnelMode)">
            <summary>
            Creates instance of the AccumulationChartsLayer.
            </summary>
            <param name="index">The layer index.</param>
            <param name="topCenterPoint">The top center point.</param>
            <param name="upWidth">The upper width.</param>
            <param name="downWidth">The down width.</param>
            <param name="height">The layer height.</param>
            <param name="gapRatio">The gap ratio.</param>
            <param name="series3D">The value indicates that is 3D series.</param>
            <param name="offset3DRatio">The offset ratio.</param>
            <param name="funnelmode">The chart funnel mode.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.Draw(System.Drawing.Graphics,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen,System.Boolean)">
            <summary>
            Draw funnel series.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to renderer series.</param>
            <param name="brushInfo">The <see cref="T:Syncfusion.Drawing.BrushInfo"/> to fill series.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/> to render series border.</param>
            <param name="outputRegion">Calculated output <see cref="T:System.Drawing.Region"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.Draw3D(Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            Draw 3D.
            </summary>
            <param name="brushInfo">The brush info.</param>
            <param name="pen">The pen.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.UpWidth">
            <summary>
            Gets or sets up width.
            </summary>
            <value>Up width.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.DownWidth">
            <summary>
            Gets or sets down width.
            </summary>
            <value>Down width.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.GapRatio">
            <summary>
            Gets or sets the gap ratio.
            </summary>
            <value>The gap ratio.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.MinWidth">
            <summary>
            Gets or sets the width of the min.
            </summary>
            <value>The width of the min.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.TopCenterPoint">
            <summary>
            Gets or sets the top center point.
            </summary>
            <value>The top center point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.Series3D">
            <summary>
            Gets a value indicating whether [series3 D].
            </summary>
            <value><c>true</c> if [series3 D]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.TopLevel">
            <summary>
            Gets or sets a value indicating whether [top level].
            </summary>
            <value><c>true</c> if [top level]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.FunnelMode">
            <summary>
            Gets the funnel mode.
            </summary>
            <value>The funnel mode.</value>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.FigureBase">
            <summary>
            Gets or sets the figure base.
            </summary>
            <value>The figure base.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.RotationRation">
            <summary>
            Gets or sets the rotation ration.
            </summary>
            <value>The rotation ration.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.Offset3DRation">
            <summary>
            Gets or sets the offset3 D ration.
            </summary>
            <value>The offset3 D ration.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.Series">
            <summary>
            Gets or sets the series.
            </summary>
            <value>The series.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer.DepthPosition">
            <summary>
            Gets or sets the depth position.
            </summary>
            <value>The depth position.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel">
            <summary>
            The AccumulationChartsLabel class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.#ctor(System.Int32,Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer,Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabelAttachMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="point">The point.</param>
            <param name="style">The style.</param>
            <param name="layer">The layer.</param>
            <param name="attachMode">The attach mode.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.#ctor(System.Int32,Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLayer,Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabelAttachMode,Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="point">The point.</param>
            <param name="style">The style.</param>
            <param name="layer">The layer.</param>
            <param name="attachMode">The attach mode.</param>
            <param name="series">The series.</param>
            <param name="LblIndex">Index of the LBL.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.CalcSize(System.Drawing.Graphics)">
            <summary>
            Calculatess the size.
            </summary>
            <param name="g">The g.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.CalcLocation(System.Drawing.RectangleF)">
            <summary>
            Calculates the location.
            </summary>
            <param name="columnInRect">The column in rect.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.GetConnectioLinePoints(System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Gets the connectio line points.
            </summary>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.TryToAvoidRectangleIntersection(System.Drawing.RectangleF)">
            <summary>
            Tries to avoid rectangle intersection.
            </summary>
            <param name="r1">The r1.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.TryToAvoidLineIntersection(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Tries to avoid line intersection.
            </summary>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="g">The g.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.Draw3D">
            <summary>
            Draw 3D.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.CalcConnectionPoint">
            <summary>
            Calculates the connection point.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.Rectangle">
            <summary>
            Gets or sets the rectangle.
            </summary>
            <value>The rectangle.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.Style">
            <summary>
            Gets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.Point">
            <summary>
            Gets the point.
            </summary>
            <value>The point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.ConnetcPoint">
            <summary>
            Gets or sets the connect point.
            </summary>
            <value>The connetc point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.NotCorrectPoint">
            <summary>
            Gets the not correct point.
            </summary>
            <value>The not correct point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.MaxTextWidth">
            <summary>
            Gets or sets the width of the max text.
            </summary>
            <value>The width of the max text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.Layer">
            <summary>
            Gets the layer.
            </summary>
            <value>The layer.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.AttachMode">
            <summary>
            Gets the attach mode.
            </summary>
            <value>The attach mode.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.LabelPlacement">
            <summary>
            Gets or sets the label placement.
            </summary>
            <value>The label placement.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.LabelStyle">
            <summary>
            Gets or sets the label style.
            </summary>
            <value>The label style.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.AllowYOffset">
            <summary>
            Gets a value indicating whether [allow Y offset].
            </summary>
            <value><c>true</c> if [allow Y offset]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.VerticalPadding">
            <summary>
            Gets or sets the vertical padding.
            </summary>
            <value>The vertical padding.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.HorizontalPadding">
            <summary>
            Gets or sets the horizontal padding.
            </summary>
            <value>The horizontal padding.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.Series">
            <summary>
            Gets or sets the series.
            </summary>
            <value>The series.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabel.LabelIndex">
            <summary>
            Gets or sets the index of the label.
            </summary>
            <value>The index of the label.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabelComparer">
            <summary>
            The AccumulationChartsLabelComparer class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabelComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero <paramref name="x"/> is less than <paramref name="y"/>. Zero <paramref name="x"/> equals <paramref name="y"/>. Greater than zero <paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
            <exception cref="T:System.ArgumentException">Neither <paramref name="x"/> nor <paramref name="y"/> implements the <see cref="T:System.IComparable"/> interface.-or- <paramref name="x"/> and <paramref name="y"/> are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabelAttachMode">
            <summary>
            The AccumulationChartsLabelAttachMode enumerator.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabelAttachMode.Top">
            <summary>
            AccumulationChartsLabelAttachMode is Top.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabelAttachMode.Center">
            <summary>
            AccumulationChartsLabelAttachMode is Center.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Renderers.AccumulationChartsLabelAttachMode.Bottom">
            <summary>
            AccumulationChartsLabelAttachMode is Bottom.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.GanttRenderer">
            <summary>
            The Gantt chart rendering class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.GanttRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.GanttRenderer"/> class.
            </summary>
            <param name="series">The ChartSeries.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.GanttRenderer.DrawChartPoint(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
            Draws the specified point in specified style
            </summary>
            <param name="g">Graphics object</param>
            <param name="point">Chart Point</param>
            <param name="info">Style of the point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.GanttRenderer.Render(System.Drawing.Graphics)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.GanttRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.GanttRenderer.GetConnectionLine(System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>
            Gets the connection line.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="offset">The offset.</param>
            <returns>Returns the PointF array.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.GanttRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.GanttRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.DrawColorSwatch(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Draws the color swatch element.
            </summary>
            <param name="args">The args.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.VerticalLayout(System.Collections.Generic.IList{Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.HeatRectangle},System.Drawing.RectangleF)">
            <summary>
            Arranges elements in vertical.
            </summary>
            <param name="rects">The rects.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.HorizontalLayout(System.Collections.Generic.IList{Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.HeatRectangle},System.Drawing.RectangleF)">
            <summary>
            Arranges elements in horizontal.
            </summary>
            <param name="rects">The rects.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.RectangleLayout(System.Collections.Generic.IList{Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.HeatRectangle},System.Drawing.RectangleF)">
            <summary>
            Arranges elements in ractangles.
            </summary>
            <param name="rects">The rects.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.DrawRectangle(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D,Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.HeatRectangle)">
            <summary>
            Draws the rectangle.
            </summary>
            <param name="args">The args.</param>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.GetText(System.String,Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem)">
            <summary>
            Return the truncate text.
            </summary>
            <param name="text">The text.</param>
            <param name="configItem">The config item.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.GetAmount(System.Collections.Generic.IList{Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.HeatRectangle},System.Int32,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Returns the maximal length of rectangle.
            </summary>
            <param name="rects">The rects.</param>
            <param name="index">The index.</param>
            <param name="bounds">The bounds.</param>
            <param name="vertival">if set to <c>true</c> [vertival].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.ComputeAreaCoeficient(System.Collections.Generic.IList{Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.HeatRectangle},System.Int32,System.Int32)">
            <summary>
            Computes the area coeficient.
            </summary>
            <param name="rects">The rects.</param>
            <param name="start"></param>
            <param name="length"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.LeprColor(Syncfusion.Windows.Forms.Chart.ChartHeatMapConfigItem,System.Double)">
            <summary>
            Leprs the color.
            </summary>
            <param name="item">The item.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.CompareHeatRectangles(Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.HeatRectangle,Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.HeatRectangle)">
            <summary>
            Compares the heat rectangles.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.RenderAdornments(System.Drawing.Graphics)">
            <summary>
            Overloaded. Renders elements such as Text and Point Symbols.
            </summary>
            <param name="g">The graphics object that is to be used.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.RenderAdornments(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            Renders elements such as Text and Point Symbols.
            </summary>
            <param name="g">The graphics object that is to be used.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.FillSpaceType">
            <summary>
            Indicates how much space this type will use.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.ChartHeatMapRenderer.HeatRectangle">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.HiLoOpenCloseRenderer">
            <summary>
            The HiLoOpenClose Renderering class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.HiLoRenderer">
            <summary>
            The Chart HiLo Renderering class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HiLoRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.HiLoRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HiLoRenderer.DrawChartPoint(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
            Draws the specified point in specified style
            </summary>
            <param name="g">Graphics object</param>
            <param name="point">Chart Point</param>
            <param name="info">Style of the point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HiLoRenderer.Render(System.Drawing.Graphics)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HiLoRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HiLoRenderer.GetBrush">
            <summary>
            Brush information is retrieved from the style associated with the index of the point to be rendered.
            It is then changed for special cases such as when automatic highlighting is enabled.
            </summary>
            <returns>
            Brush information that is to be used for filling elements displayed at this index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HiLoRenderer.GetBrush(System.Int32)">
            <summary>
            Brush information is retrieved from the style associated with the index of the point to be rendered.
            It is then changed for special cases such as when automatic highlighting is enabled.
            </summary>
            <param name="index">Index value of the point for which the brush information is required.</param>
            <returns>
            Brush information that is to be used for filling elements displayed at this index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HiLoRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws chart's icon.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to render icon.</param>
            <param name="bounds">The icon bounds.</param>
            <param name="isShadow">The value indicates to draw shadow or not.</param>
            <param name="shadowColor">The <see cref="T:System.Drawing.Color"/> to render shadow.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.HiLoRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.HiLoRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HiLoOpenCloseRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.HiLoOpenCloseRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HiLoOpenCloseRenderer.DrawChartPoint(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
            Draws the specified point in specified style
            </summary>
            <param name="g">Graphics object</param>
            <param name="point">Chart Point</param>
            <param name="info">Style of the point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HiLoOpenCloseRenderer.Render(System.Drawing.Graphics)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HiLoOpenCloseRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.HiLoOpenCloseRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.HiLoOpenCloseRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.HistogramRenderer">
            <summary>
            The Histogram Renderering class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HistogramRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.HistogramRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HistogramRenderer.Render(System.Drawing.Graphics)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HistogramRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HistogramRenderer.NormalDistribution(System.Double,System.Double,System.Double)">
            <summary>
            Normal Distribution function.
            </summary>
            <param name="x">The x.</param>
            <param name="m">The m.</param>
            <param name="sigma">The sigma.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HistogramRenderer.GetBrush">
            <summary>
            Brush information is retrieved from the style associated with the index of the point to be rendered.
            It is then changed for special cases such as when automatic highlighting is enabled.
            </summary>
            <returns>
            Brush information that is to be used for filling elements displayed at this index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HistogramRenderer.GetBrush(System.Int32)">
            <summary>
            Brush information is retrieved from the style associated with the index of the point to be rendered.
            It is then changed for special cases such as when automatic highlighting is enabled.
            </summary>
            <param name="index">Index value of the point for which the brush information is required.</param>
            <returns>
            Brush information that is to be used for filling elements displayed at this index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HistogramRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws the icon on the legend.
            </summary>
            <param name="g">Instance of <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">Bounds of icon.</param>
            <param name="isShadow">If is true method draws the shadow.</param>
            <param name="shadowColor"><see cref="T:System.Drawing.Color"/> of shadow.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HistogramRenderer.GetYDataMeasure">
            <summary>
            Measures the Y range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HistogramRenderer.GetHistogramIntervalsValues(Syncfusion.Windows.Forms.Chart.ChartPointWithIndex[],System.Double[]@,System.Double[]@)">
            <summary>
            Gets the histogram intervals values.
            </summary>
            <param name="cpwiA">The cpwi A.</param>
            <param name="histogramIntervals">The histogram intervals.</param>
            <param name="histogramValues">The histogram values.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HistogramRenderer.GetHistogramMax">
            <summary>
            Gets the maximal value of histogram.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.HistogramRenderer.GetHistogramMeanAndDeviation(Syncfusion.Windows.Forms.Chart.ChartPointWithIndex[],System.Double@,System.Double@)">
            <summary>
            Gets the histogram mean and deviation.
            </summary>
            <param name="cpwiA">The cpwi A.</param>
            <param name="mean">The mean.</param>
            <param name="standartDeviation">The standart deviation.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.HistogramRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.KagiRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.KagiRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.KagiRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.KagiRenderer.Render(System.Drawing.Graphics)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.KagiRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.KagiRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
            <param name="isShadow"></param>
            <param name="shadowColor"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.KagiRenderer.RequireYValuesCount">
            <summary>
            Gets count of required Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLabel">
            <summary>
            Represents the layout information of point label. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabel.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.SizeF)">
            <summary>
            Creates instance of the ChartLabel.
            </summary>
            <param name="connectPoint">The connection point.</param>
            <param name="symbolPoint">The symbol point.</param>
            <param name="size">The size of the label.</param>
            <param name="offset">The label offset.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabel.DrawPointingLine(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Draw pointing line.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to render line.</param>
            <param name="style">Line style.</param>
            <param name="mm_series">The Chart Series</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLabel.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLabel.Offset">
            <summary>
            Gets the offset.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLabel.ConnectPoint">
            <summary>
            Gets the connect point.
            </summary>
            <value>The connect point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLabel.SymbolPoint">
            <summary>
            Gets the symbol point.
            </summary>
            <value>The symbol point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLabel.Rect">
            <summary>
            Gets or sets the rect.
            </summary>
            <value>The rect.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager">
            <summary>
            Provides the 'SmartLabels' feature.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager"/> class.
            </summary>
            <param name="workArea">The work area.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.AddLabel(Syncfusion.Windows.Forms.Chart.ChartLabel)">
            <summary>
            Add label to collection.
            </summary>
            <param name="label">The label to add.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.AddPoint(System.Drawing.PointF)">
            <summary>
            Add point to collection.
            </summary>
            <param name="p">Point to add.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.Clear">
            <summary>
            Clears the labels.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the labels to the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.Exclude2(System.Drawing.RectangleF)">
            <summary>
            Exclude2s the specified rect.
            </summary>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.Exclude(System.Drawing.RectangleF)">
            <summary>
            Excludes the specified rect.
            </summary>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.Exclude(System.Drawing.PointF)">
            <summary>
            Excludes the specified p.
            </summary>
            <param name="p">The p.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.FindFreeSpace(Syncfusion.Windows.Forms.Chart.ChartLabel)">
            <summary>
            Finds the free space.
            </summary>
            <param name="label">The label.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.CalcBestPlace(Syncfusion.Windows.Forms.Chart.ChartLabel,System.Drawing.RectangleF)">
            <summary>
            Calculates the best place.
            </summary>
            <param name="label">The label.</param>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.CheckWithMinSize(System.Drawing.RectangleF,System.Collections.ArrayList)">
            <summary>
            Checks the size of the with min.
            </summary>
            <param name="rect">The rect.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.CalcRadius(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Calculates the radius.
            </summary>
            <param name="pt1">The PT1.</param>
            <param name="pt2">The PT2.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.CalcCenter(System.Drawing.RectangleF)">
            <summary>
            Calculates the center.
            </summary>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.MinimalSize">
            <summary>
            Gets or sets the size of the minimal.
            </summary>
            <value>The size of the minimal.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.Count">
            <summary>
            Gets the count of labels.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLabel"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.RectangleAreaComparer">
            <summary>
            Compares <see cref="T:System.Drawing.RectangleF"/> by the area value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLabelLayoutManager.RectangleAreaComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
            <exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"></see> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer">
            <summary>
            The Line chartrendering class.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer.RenderAdornment(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint)">
            <summary>
            Renders the adornment.
            </summary>
            <param name="g"></param>
            <param name="point">The point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws chart's icon.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to render icon.</param>
            <param name="bounds">The icon bounds.</param>
            <param name="isShadow">The value indicates to draw shadow or not.</param>
            <param name="shadowColor">The <see cref="T:System.Drawing.Color"/> to render shadow.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer.DataUpdate(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Updates the points cache.
            </summary>
            <param name="args">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer.Update(Syncfusion.Windows.Forms.Chart.ChartUpdateFlags)">
            <summary>
            Updates by specified flags.
            </summary>
            <param name="flags">The flags.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer.GetXDataMeasure">
            <summary>
            Measures the X range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer.GetYDataMeasure">
            <summary>
            Measures the Y range.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.LineRenderer.ShouldSort">
            <summary>
            Gets a value indicating whether points should be sort.
            </summary>
            <value><c>true</c> if points should be sorted; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.PolygonWithTangent">
            <summary>
            Represents the polygon with the tangent.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PolygonWithTangent.#ctor(Syncfusion.Windows.Forms.Chart.Polygon,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.PolygonWithTangent"/> class.
            </summary>
            <param name="p">The polygon.</param>
            <param name="tan">The tangent.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PolygonWithTangent.Polygon">
            <summary>
            Gets or sets the polygon.
            </summary>
            <value>The polygon.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PolygonWithTangent.Tangent">
            <summary>
            Gets or sets the tangent.
            </summary>
            <value>The tangent.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.PolygonWithTangentComparer">
            <summary>
            Compares the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.PolygonWithTangent"/> by <see cref="P:Syncfusion.Windows.Forms.Chart.Renderers.PolygonWithTangent.Tangent"/> value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PolygonWithTangentComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
            <exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"></see> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.DrawCalloutOutsideLabel(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D,Syncfusion.Windows.Forms.Chart.ChartCalloutInfo,Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel,System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="callout"></param>
            <param name="pieLabel"></param>
            <param name="boundsRect"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.DrawCalloutInsideLabel(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D,Syncfusion.Windows.Forms.Chart.ChartCalloutInfo,Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSector,System.Drawing.RectangleF,System.Single,System.Double,Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="callout"></param>
            <param name="midpnt"></param>
            <param name="bnds"></param>
            <param name="angl"></param>
            <param name="centeAngle"> center angle of the slice</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.CalculateOuterPolygonPosition(Syncfusion.Windows.Forms.Chart.ChartCalloutInfo,System.Drawing.Rectangle,System.Drawing.PointF,Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel)">
            <summary>
            
            </summary>
            <param name="callout"></param>
            <param name="bnds"> callout label bounds</param>
            <param name="pt"> sector center position</param>
            <param name="label">pie label</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.ChangeCalloutPosition(System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Changing the callout bounds position when it was rendering outside the chart area.
            </summary>
            <param name="pt">The callout shape x and y position.</param>
            <param name="siz">The callout shape width and height.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.DrawCalloutPolygon(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D,Syncfusion.Windows.Forms.Chart.ChartCalloutInfo,System.Drawing.Rectangle,System.Drawing.PointF)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="callout">point callout</param>
            <param name="bnds">callout rectangle bounds</param>
            <param name="pointPos">point position</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.DrawCalloutText(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D,Syncfusion.Windows.Forms.Chart.ChartCalloutInfo,System.Drawing.Rectangle,System.Drawing.SizeF,System.Int32)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="callout"></param>
            <param name="bnds"></param>
            <param name="siz"></param>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.RenderAdornments(System.Drawing.Graphics)">
            <summary>
            Overloaded. Renders elements such as Text and Point Symbols.
            </summary>
            <param name="g">The graphics object that is to be used.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.RenderAdornments(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            Renders elements such as Text and Point Symbols.
            </summary>
            <param name="g">The graphics object that is to be used.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.CompareByStartAngle(Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.Pie3DSegment,Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.Pie3DSegment)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.GetCost(Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.Pie3DSegment)">
            <summary>
            Gets the cost.
            </summary>
            <param name="segment">The segment.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.GetCost(System.Single)">
            <summary>
            Gets the cost.
            </summary>
            <param name="angle">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.CompareByEndAngle(Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.Pie3DSegment,Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.Pie3DSegment)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.GetMinSize(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.CreateSector(Syncfusion.Windows.Forms.Chart.Vector3D,System.Single,System.Single,System.Single,System.Single,System.Single,System.Drawing.Pen,Syncfusion.Drawing.BrushInfo)">
            <summary>
            
            </summary>
            <param name="center"></param>
            <param name="inSideRadius"></param>
            <param name="outSideRadius"></param>
            <param name="start"></param>
            <param name="fov"></param>
            <param name="depth"></param>
            <param name="pen"></param>
            <param name="brInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.CreateLabels(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint[])">
            <summary>
            
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.MeasureLabels(Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel[],Syncfusion.Windows.Forms.Chart.ChartGraph,System.Drawing.SizeF)">
            <summary>
            Measures the labels.
            </summary>
            <param name="labels">The labels.</param>
            <param name="g">The g.</param>
            <param name="radius">The radius.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.ArrangeLabels(Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel[],System.Drawing.SizeF,System.Drawing.PointF,System.Boolean)">
            <summary>
            
            </summary>
            <param name="labels"></param>
            <param name="radius"></param>
            <param name="center"></param>
            <param name="inColumn"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.WrapLabels(Syncfusion.Windows.Forms.Chart.ChartGraph,Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel[])">
            <summary>
            Method to wrap overlapping labels
            <param name="g">ChartGraph object</param>
            <param name="labels">Array of labels in the pie</param>
            </summary>        
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.GetAllValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.GetMaxZero(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.SelectKnow(Syncfusion.Windows.Forms.Chart.ChartPieType)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.DrawIcon(System.Int32,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws the icon of pie chart on the legend.
            </summary>
            <param name="index">Index of point.</param>
            <param name="g">Instance of <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">Bounds of icon.</param>
            <param name="isShadow">If is true method draws the shadow.</param>
            <param name="shadowColor"><see cref="T:System.Drawing.Color"/> of shadow.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.FillSpaceType">
            <summary>
            Indicates how much space this type will use.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSectorCorner">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSector">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSector.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSector"/> class.
            </summary>
            <param name="point">The point.</param>
            <param name="outSideRect">The out side rect.</param>
            <param name="inSideRect">The inner bounds.</param>
            <param name="startAngle">The start angle.</param>
            <param name="endAngle">The end angle.</param>
            <param name="depth">The depth.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSector.Render">
            <summary>
            Renders this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSector.Draw(Syncfusion.Windows.Forms.Chart.ChartGraph,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen,Syncfusion.Windows.Forms.Chart.ChartPieFillMode,System.Drawing.Drawing2D.ColorBlend)">
            <summary>
            Draws sector.
            </summary>
            <param name="graph">The graph.</param>
            <param name="brInfo">The br info.</param>
            <param name="pen">The pen.</param>
            <param name="type">The type.</param>
            <param name="gradient">The gradient.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSector.GetRegion(Syncfusion.Windows.Forms.Chart.ChartRegionData)">
            <summary>
            Gets the lower region.
            </summary>
            <param name="regionData">The region data.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSector.CreateSegment(System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Creates the segment.
            </summary>
            <param name="startAngle">The start angle.</param>
            <param name="endAngle">The end angle.</param>
            <param name="left">if set to <c>true</c> left side will be created.</param>
            <param name="right">if set to <c>true</c> right side will be created.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSector.AddSector(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="gp"></param>
            <param name="rect"></param>
            <param name="start"></param>
            <param name="angle"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSector.AddClosedSector(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="gp"></param>
            <param name="rect"></param>
            <param name="start"></param>
            <param name="angle"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSector.StyledPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSector.StartAngle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSector.EndAngle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSector.InnerBounds">
            <summary>
            Gets the inner bounds.
            </summary>
            <value>The inner bounds.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSector.OuterBounds">
            <summary>
            Gets the outer bounds.
            </summary>
            <value>The outer bounds.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSectorComparer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieSectorComparer.Compare(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint,System.Single,Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.Measure(Syncfusion.Windows.Forms.Chart.ChartGraph,System.Single)">
            <summary>
            Measures the specified g.
            </summary>
            <param name="g">The g.</param>
            <param name="maxWidth">Width of the max.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.SetConnectPoint(System.Drawing.PointF)">
            <summary>
            Sets the connect point.
            </summary>
            <param name="pt">The point to connect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.CorrectTopLeft(System.Single)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.CorrectTopRight(System.Single)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.CorrectBottomLeft(System.Single)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.CorrectBottomRight(System.Single)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.AlignRightSide(System.Single)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.AlignLeftSide(System.Single)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.StyledPoint">
            <summary>
            Gets the styled point.
            </summary>
            <value>The styled point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.Rectangle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.ConnectPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.NotCorrectPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.CornerLabel">
            <summary>
            Set True if the label placed on top or bo
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.Series">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.LabelIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.Angle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabel.Corner">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabelComparer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.PieLabelComparer.Compare(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.Pie3DSegment">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.Pie3DSegment.Draw(Syncfusion.Windows.Forms.Chart.ChartGraph,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Draws the specified graph.
            </summary>
            <param name="graph">The graph.</param>
            <param name="interior">The interior.</param>
            <param name="pen">The pen.</param>
            <param name="series">The ChartSeries.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PieRenderer.Pie3DSegment.GetRegion(Syncfusion.Windows.Forms.Chart.ChartRegionData)">
            <summary>
            Gets the region.
            </summary>
            <param name="regionData">The region data.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.PointAndFigureRenderer">
            <summary>
            Summary description for PointAndFigureRenderer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PointAndFigureRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Constructor.
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PointAndFigureRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PointAndFigureRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PointAndFigureRenderer.DrawPointO(Syncfusion.Windows.Forms.Chart.ChartGraph,System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="pen"></param>
            <param name="rect"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PointAndFigureRenderer.DrawFigureX(Syncfusion.Windows.Forms.Chart.ChartGraph,System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="pen"></param>
            <param name="rect"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PointAndFigureRenderer.ComputeRectangles(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Computes the rectangles.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PointAndFigureRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
            <param name="isShadow"></param>
            <param name="shadowColor"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PointAndFigureRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.PointAndFigureRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.PointAndFigureRenderer.PNFColumn">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.PyramidRenderer">
            <summary>
            Represents the pyramid type renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PyramidRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.PyramidRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PyramidRenderer.Render(System.Drawing.Graphics)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PyramidRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PyramidRenderer.CreateLayersAndLabels(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint[],System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Creates the layers and labels.
            </summary>
            <param name="points">The points.</param>
            <param name="g">The g.</param>
            <param name="drawingRect">The drawing rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PyramidRenderer.OptimizationFunc_Pyramid(System.Double)">
            <summary>
            Optimizations the func_ pyramid.
            </summary>
            <param name="ctg">The CTG.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.PyramidRenderer.OptimizationFunc_SurfacePyramid(System.Double)">
            <summary>
            Optimizations the func_ surface pyramid.
            </summary>
            <param name="ctg">The CTG.</param>
            <returns>Returns double.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.RadarRenderer">
            <summary>
            The Radar chart renderering class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.RadarRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.RadarRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.RadarRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.RadarRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.RadarRenderer.GetBrush">
            <summary>
            Brush information is retrieved from the style associated with the index of the point to be rendered.
            It is then changed for special cases such as when automatic highlighting is enabled.
            </summary>
            <returns>
            Brush information that is to be used for filling elements displayed at this index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.RadarRenderer.GetBrush(System.Int32)">
            <summary>
            Brush information is retrieved from the style associated with the index of the point to be rendered.
            It is then changed for special cases such as when automatic highlighting is enabled.
            </summary>
            <param name="index">Index value of the point for which the brush information is required.</param>
            <returns>
            Brush information that is to be used for filling elements displayed at this index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.RadarRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws the icon on the legend.
            </summary>
            <param name="g">Instance of <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">Bounds of icon.</param>
            <param name="isShadow">If is true method draws the shadow.</param>
            <param name="shadowColor"><see cref="T:System.Drawing.Color"/> of shadow.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.RadarRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.RadarRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.RangeAreaRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.RangeAreaRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.RangeAreaRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.RangeAreaRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.RangeAreaRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws icon.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to render icon.</param>
            <param name="bounds">The bounds of icon.</param>
            <param name="isShadow">The value indicates that draw shadow.</param>
            <param name="shadowColor">The shadow <see cref="T:System.Drawing.Color"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.RangeAreaRenderer.RequireYValuesCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.RangeAreaRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.RenkoRenderer">
            <summary>
            Summary description for ChartRenkoRenderer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.RenkoRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.RenkoRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.RenkoRenderer.Render(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.RenkoRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.RenkoRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
            <param name="isShadow"></param>
            <param name="shadowColor"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.RenkoRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.RotatedSplineRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.SplineRenderer">
            <summary>
            The Spline chart renderering class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.SplineRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.SplineRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.SplineRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.SplineRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.SplineRenderer.DrawBezier(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D,System.Drawing.Pen,Syncfusion.Drawing.BrushInfo,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws the 3D bezier line.
            </summary>
            <param name="args">The args.</param>
            <param name="pen">The pen.</param>
            <param name="interior">The interior.</param>
            <param name="pt1">The start point.</param>
            <param name="pt2">The first control point.</param>
            <param name="pt3">The second control point.</param>
            <param name="pt4">The end point.</param>
            <returns>The geometry of line.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.SplineRenderer.ComputeExtremums(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint,Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint,Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartPoint,System.Double@,System.Double@,System.Int32)">
            <summary>
            Computes the extremums of bezier line.
            </summary>
            <param name="point1">The start point.</param>
            <param name="point2">The end point.</param>
            <param name="controlPoint1">The first control point.</param>
            <param name="controlPoint2">The second control point.</param>
            <param name="intelator1">The first intelator.</param>
            <param name="intelator2">The second intelator.</param>
            <param name="yIndex">Index of the Y value.</param>
            <returns>
            	<c>true</c> if extremums is present. otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.SplineRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draw icon.
            </summary>
            <param name="g">The graphics to render icon.</param>
            <param name="bounds">The bounds of the icon.</param>
            <param name="isShadow">The value indicates draw shadow or not.</param>
            <param name="shadowColor">The shadow color.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.SplineRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.SplineRenderer.RegionDescription">
            <summary>
            Gets description of regions.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.SplineRenderer.ShouldSort">
            <summary>
            Gets a value indicating whether points should be sort.
            </summary>
            <value><c>true</c> if points should be sorted; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.RotatedSplineRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.RotatedSplineRenderer"/> class.
            </summary>
            <param name="series"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.RotatedSplineRenderer.RegionDescription">
            <summary>
            Gets description of regions.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.ScatterRenderer">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ScatterRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ScatterRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ScatterRenderer.Render(System.Drawing.Graphics,System.Int32,System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ScatterRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ScatterRenderer.RenderAdornment(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer.ChartStyledPoint)">
            <summary>
            Renders the adornment.
            </summary>
            <param name="g"></param>
            <param name="point">The point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ScatterRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="from"></param>
            <param name="count"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ScatterRenderer.GetBrush">
            <summary>
            Brush information is retrieved from the style associated with the index of the point to be rendered.
            It is then changed for special cases such as when automatic highlighting is enabled.
            </summary>
            <returns>
            Brush information that is to be used for filling elements displayed at this index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ScatterRenderer.GetBrush(System.Int32)">
            <summary>
            Brush information is retrieved from the style associated with the index of the point to be rendered.
            It is then changed for special cases such as when automatic highlighting is enabled.
            </summary>
            <param name="index">Index value of the point for which the brush information is required.</param>
            <returns>
            Brush information that is to be used for filling elements displayed at this index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ScatterRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws the icon on the legend.
            </summary>
            <param name="g">Instance of <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">Bounds of icon.</param>
            <param name="isShadow">If is true method draws the shadow.</param>
            <param name="shadowColor"><see cref="T:System.Drawing.Color"/> of shadow.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ScatterRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSegment">
            <summary>
            Abstract class of series segment.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSegment.m_bounds">
            <summary>
            The bounds of segment.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSegment.Clip">
            <summary>
            Clips Rectangle for the segment
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSegment.Update">
            <summary>
            Specifies whether segment region 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSegment.m_zOrder">
            <summary>
            The drawing order of segment.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSegment.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the segment to specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSegment.GetChartRegion">
            <summary>
            Gets the region of segment.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSegment.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSegment.ZOrder">
            <summary>
            Gets or sets the drawing order.
            </summary>
            <value>The drawing order.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesPath">
            <summary>
            Represents the simple geometry element.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesPath.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesPath"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesPath.#ctor(System.Drawing.Drawing2D.GraphicsPath,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesPath"/> class.
            </summary>
            <param name="gp">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</param>
            <param name="br">The <see cref="T:Syncfusion.Drawing.BrushInfo"/>.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesPath.#ctor(System.Drawing.Drawing2D.GraphicsPath,Syncfusion.Drawing.BrushInfo,System.Drawing.Pen,Syncfusion.Windows.Forms.Chart.ChartRegionData)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesPath"/> class.
            </summary>
            <param name="gp">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</param>
            <param name="br">The <see cref="T:Syncfusion.Drawing.BrushInfo"/>.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="crd">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRegionData"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesPath.AddPrimitive(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Pen,Syncfusion.Drawing.BrushInfo)">
            <summary>
            Adds the graphical primitive.
            </summary>
            <param name="gp">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="brushInfo">The <see cref="T:Syncfusion.Drawing.BrushInfo"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesPath.AddPrimitive(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Pen,Syncfusion.Drawing.BrushInfo,System.String)">
            <summary>
            Adds the graphical primitive.
            </summary>
            <param name="gp">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="brushInfo">The <see cref="T:Syncfusion.Drawing.BrushInfo"/>.</param>
            <param name="boxName">The <see cref="T:System.String"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesPath.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the segment to specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesPath.Draw(Syncfusion.Windows.Forms.Chart.ChartGraph)">
            <summary>
            Draws the segment to specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartGraph"/>.
            </summary>
            <param name="cg">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartGraph"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesPath.Draw(Syncfusion.Windows.Forms.Chart.ChartGraph,System.String)">
            <summary>
            Draws the segment to specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartGraph"/>.
            </summary>
            <param name="cg">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartGraph"/>.</param>
            <param name="g">The <see cref="T:System.String"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesPath.GetChartRegion">
            <summary>
            Gets the region of segment.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesPath.RegionData">
            <summary>
            Gets or sets the region data.
            </summary>
            <value>The region data.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartUpdateFlags">
            <summary>
            The ChartUpdateFlags enumerator.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartUpdateFlags.None">
            <summary>
            None was changed
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartUpdateFlags.Data">
            <summary>
            Points was changed
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartUpdateFlags.Styles">
            <summary>
            Styles was changed
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartUpdateFlags.Config">
            <summary>
            Config items was changed
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartUpdateFlags.Indexed">
            <summary>
            Indexed mode was changed
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartUpdateFlags.Regions">
            <summary>
            Need update regions
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartUpdateFlags.Ranges">
            <summary>
            Axes was changed 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartUpdateFlags.All">
            <summary>
            All was changed
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRenderArgs">
            <summary>
            Provides the series render arguments.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.#ctor(Syncfusion.Windows.Forms.Chart.IChartAreaHost,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRenderArgs"/> class.
            </summary>
            <param name="chart">The <see cref="T:Syncfusion.Windows.Forms.Chart.IChartAreaHost"/>.</param>
            <param name="series">The series.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.IsVisible(System.Double,System.Double)">
            <summary>
            Determines whether the specified coordinates is visible.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>
            	<c>true</c> if the specified x is visible; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.IsVisible(Syncfusion.Windows.Forms.Chart.DoubleRange,Syncfusion.Windows.Forms.Chart.DoubleRange)">
            <summary>
            Determines whether the specified ranges is visible.
            </summary>
            <param name="xRange">The x range.</param>
            <param name="yRange">The y range.</param>
            <returns>
            	<c>true</c> if the specified x range is visible; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.GetPoint(System.Double,System.Double)">
            <summary>
            Gets the point.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.GetRectangle(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Gets the rectangle.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.ActualXAxis">
            <summary>
            Gets or sets the actual X axis.
            </summary>
            <value>The actual X axis.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.ActualYAxis">
            <summary>
            Gets or sets the actual Y axis.
            </summary>
            <value>The actual Y axis.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.XRange">
            <summary>
            Gets the visible range of X axis.
            </summary>
            <value>The X range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.YRange">
            <summary>
            Gets the visible range of Y axis.
            </summary>
            <value>The Y range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.Series">
            <summary>
            Gets the series is being drawn.
            </summary>
            <value>The series.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.Chart">
            <summary>
            Gets or sets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.SeriesIndex">
            <summary>
            Gets the index of the series.
            </summary>
            <value>The index of the series.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.IsInvertedAxes">
            <summary>
            Gets or sets a value indicating whether this axes is inverted.
            </summary>
            <value>
            	<c>true</c> if this axes is inverted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.UpdateRegions">
            <summary>
            Gets a value indicating whether regions should be updated.
            </summary>
            <value><c>true</c> if regions should be updated; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.Placement">
            <summary>
            Gets or sets the series position in the depth.
            </summary>
            <value>The placement.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.Bounds">
            <summary>
            Gets or sets the rectangle that represents the bounds of the series that is being drawn.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs.SideBySideInfo">
            <summary>
            Gets or sets the side by side info.
            </summary>
            <value>The side by side info.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D">
            <summary>
            Provides the series render arguments in 2D mode.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D.#ctor(Syncfusion.Windows.Forms.Chart.IChartAreaHost,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRenderArgs"/> class.
            </summary>
            <param name="chart">The <see cref="T:Syncfusion.Windows.Forms.Chart.IChartAreaHost"/>.</param>
            <param name="series">The series.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D.GetPoint(System.Double,System.Double)">
            <summary>
            Gets the point.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D.Graph">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartGraph"/> object.
            </summary>
            <value>The graph.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D.Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D.DepthOffset">
            <summary>
            Gets or sets the depth offset.
            </summary>
            <value>The depth offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D.Is3D">
            <summary>
            Gets or sets a value indicating whether is 3D mode.
            </summary>
            <value><c>true</c> if is 3D mode; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D">
            <summary>
            Provides the series render arguments in 3D mode. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D.#ctor(Syncfusion.Windows.Forms.Chart.IChartAreaHost,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRenderArgs"/> class.
            </summary>
            <param name="chart">The <see cref="T:Syncfusion.Windows.Forms.Chart.IChartAreaHost"/>.</param>
            <param name="series">The series.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D.GetVector(System.Double,System.Double)">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Chart.Vector3D"/> by chart values.
            </summary>
            <param name="x">The X value.</param>
            <param name="y">The Y value.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D.Graph">
            <summary>
            Gets or sets the graph.
            </summary>
            <value>The graph.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D.Z">
            <summary>
            Gets or sets the Z.
            </summary>
            <value>The Z.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D.Depth">
            <summary>
            Gets or sets the depth.
            </summary>
            <value>The depth.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.SplineAreaRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.SplineAreaRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.SplineAreaRenderer.Render(System.Drawing.Graphics)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.SplineAreaRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.SplineAreaRenderer.Render(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="from"></param>
            <param name="count"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.SplineAreaRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="from"></param>
            <param name="count"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.SplineAreaRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws icon.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to render icon.</param>
            <param name="bounds">The bounds of the icon.</param>
            <param name="isShadow">The value indicates that need draw shadow.</param>
            <param name="shadowColor">The <see cref="T:System.Drawing.Color"/> to render shadow.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.SplineAreaRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.StackingBarRenderer">
            <summary>
            The StackingBar chart Renderering class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StackingBarRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.StackingBarRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.StackingBarRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.StepAreaRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StepAreaRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StepAreaRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StepAreaRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StepAreaRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="from"></param>
            <param name="count"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.StepAreaRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.StepAreaRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.StepLineRenderer">
            <summary>
            The StepLine chart Renderering class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StepLineRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.StepLineRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StepLineRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.StepLineRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.StepLineRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.StepLineRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer">
            <summary>
            Summary description for ThreeLineBreakRenderer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer"/> class.
            </summary>
            <param name="series">ChartSeries that will be rendered by this renderer instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.Render(Syncfusion.Windows.Forms.Chart.Graphics3D)">
            <summary>
            In the base <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer"/> it does not do anything. In derived classes this function does
            the rendering.
            </summary>
            <param name="g">The graphics object that is to be used for rendering.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.CalcTreeLineBreak">
            <summary>
            Calculates the tree line break.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.GetRectangle(Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.TLBRectangle)">
            <summary>
            Gets the rectangle.
            </summary>
            <param name="tlbr">The TLBR.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.DrawIcon(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws the icon on the legend.
            </summary>
            <param name="g">Instance of <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">Bounds of icon.</param>
            <param name="isShadow">If is true method draws the shadow.</param>
            <param name="shadowColor"><see cref="T:System.Drawing.Color"/> of shadow.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.TLBRectangle">
            <summary>
            The TLBRectangle structure.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.TLBRectangle.#ctor(Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartPoint,System.Boolean,Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.TLBRectangle"/> struct.
            </summary>
            <param name="fPoint">The f point.</param>
            <param name="sPoint">The s point.</param>
            <param name="negVal">if set to <c>true</c> [neg val].</param>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.TLBRectangle.MinY">
            <summary>
            Gets the min Y.
            </summary>
            <value>The min Y.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.TLBRectangle.MaxY">
            <summary>
            Gets the max Y.
            </summary>
            <value>The max Y.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.TLBRectangle.NegativeValue">
            <summary>
            Gets a value indicating whether [negative value].
            </summary>
            <value><c>true</c> if [negative value]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.TLBRectangle.FirstPoint">
            <summary>
            Gets or sets the first point.
            </summary>
            <value>The first point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.TLBRectangle.SecondPoint">
            <summary>
            Gets or sets the second point.
            </summary>
            <value>The second point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.ThreeLineBreakRenderer.TLBRectangle.Empty">
            <summary>
            Gets the empty.
            </summary>
            <value>The empty.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.TornadoRenderer">
            <summary>
            The Tornado chart Renderering class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.TornadoRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.TornadoRenderer"/> class.
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.TornadoRenderer.DrawChartPoint(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
            Draws the specified point in specified style
            </summary>
            <param name="g">Graphics object</param>
            <param name="point">Chart Point</param>
            <param name="info">Style of the point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.TornadoRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.TornadoRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.TornadoRenderer.FillSpaceType">
            <summary>
            Indicated how much space this type will fill.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.TornadoRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.TornadoRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSegmentComparer">
            <summary>
            Compares the segments by the position.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSegmentComparer.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSegmentComparer"/> class.
            </summary>
            <param name="inversed">if set to <c>true</c> comparering inversed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSegmentComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
            <exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"></see> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.RenderViewer">
            <summary>
            Provides the sorting and rendering of segments.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderViewer.AddSegment(Syncfusion.Windows.Forms.Chart.ChartSegment)">
            <summary>
            Adds the segment.
            </summary>
            <param name="segment">The segment.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderViewer.Add(Syncfusion.Windows.Forms.Chart.ChartSeriesRenderer)">
            <summary>
            Adds segments form the specified render.
            </summary>
            <param name="render">The render.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderViewer.Sort">
            <summary>
            Sorts this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderViewer.View(System.Drawing.Graphics)">
            <summary>
            Draws to the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderViewer.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.RenderViewer.NeedRegionUpdate">
            <summary>
            Gets or sets a value indicating whether need update regions.
            </summary>
            <value><c>true</c> if need update regions; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.RenderViewer.AxisInverted">
            <summary>
            Gets or sets a value indicating whether axis is inverted.
            </summary>
            <value><c>true</c> if axis inverted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.RenderViewer.Regions">
            <summary>
            Gets or sets the regions.
            </summary>
            <value>The regions.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartHScrollBar">
            <summary>
            Represents the horizontal scrollbar.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar">
            <summary>
            Abstract class that implements the basic functionality of <see cref="T:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar"/> interface.
            </summary>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar">
            <summary>
            This interface codifies interaction of scrollbars with the <see cref="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.ChartArea"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.SetOtherVisible(System.Boolean)">
            <summary>
                Informs this scroll bar that it's complementary scroll bar's visibilty has changed.
            </summary>
            <param name="b" type="bool">
                <para>
                Visibility flag.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.SetPosition(System.Drawing.Rectangle)">
            <summary>
                Sets the position of this scroll bar if the scroll bar is contained within the chart.
            </summary>
            <param name="rect" type="System.Drawing.Rectangle">
                <para>
                Bounding rectangle.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.ResetScrollBar">
            <summary>
            Resets the scroll bar.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.ZoomButtonClicked">
            <summary>
                Event that is to be raised when the zoom buttom that is associated with this scroll bar is clicked.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.ValueChanged">
            <summary>
                Event that is to be raised when value of scroll bar changes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.Dimension">
            <summary>
            Returns the dimensions of the scroll bar. That is the width for vertical scroll bars and the height for horizontal ones.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.LargeChange">
            <summary>
             Gets or sets the ccroll bar's large change value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.Maximum">
            <summary>
             Gets or sets the scroll bar's maximum value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.Minimum">
            <summary>
             Gets or sets the scroll bar's minimum value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.ScrollBar">
            <summary>
             Returns the Windows scrollbar instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.ZoomButton">
            <summary>
            Gets the zoom button.
            </summary>
            <value>The zoom button.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.ShouldPosition">
            <summary>
             Indicates whether the chart should attempt to position this scrollbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.SmallChange">
            <summary>
             Gets or sets the scroll bar's small change value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.Value">
            <summary>
             Gets or sets the scroll bar's current value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.Visible">
            <summary>
             Indicates the scroll bar's visibility flag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.ChartArea">
            <summary>
            Used for storing chart area reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar.ChartAxis">
            <summary>
            Used for storing chart area reference.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.m_scrollBar">
            <summary>
            The <see cref="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.ScrollBar"/> instance.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.m_zoomButton">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartZoomButton"/> instance.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.m_otherVisible">
            <summary>
            Indicates whether complementary scrollbar is visible.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.m_visibleInst">
            <summary>
            Indicates the visibility of control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.SetOtherVisible(System.Boolean)">
            <summary>
            Informs this scroll bar that it's complementary scroll bar's visibilty has changed.
            </summary>
            <param name="b">Visibility flag.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.SetPosition(System.Drawing.Rectangle)">
            <summary>
            Sets the position of this scroll bar if the scroll bar is contained within the chart.
            </summary>
            <param name="rect">Bounding rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.CreateScrollBar">
            <summary>
            Creates the scroll bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.OnLayout">
            <summary>
            Arranges controls.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.ResetScrollBar">
            <summary>
            Resets the scrollbar.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.ZoomButtonLocationChanged(System.Object,System.EventArgs)">
            <summary>
            Zooms the button location changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.OnZoomButtonSizeChanged(System.Object,System.EventArgs)">
            <summary>
            Called when zoom button is size changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.OnZoomButtonVisibleChanged(System.Object,System.EventArgs)">
            <summary>
            Called when zoom button is visible changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.OnZoomButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the zoomButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.OnValueChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the ValueChanged event of the scrollbar control.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.LargeChange">
            <summary>
            Gets or sets the ccroll bar's large change value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.Maximum">
            <summary>
            Gets or sets the scroll bar's maximum value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.Minimum">
            <summary>
            Gets or sets the scroll bar's minimum value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.ScrollBar">
            <summary>
            Returns the Windows scrollbar instance.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.ZoomButton">
            <summary>
            Gets the zoom button.
            </summary>
            <value>The zoom button.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.ShouldPosition">
            <summary>
            Indicates whether the chart should attempt to position this scrollbar.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.SmallChange">
            <summary>
            Gets or sets the scroll bar's small change value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.Value">
            <summary>
            Gets or sets the scroll bar's current value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.Visible">
            <summary>
            Gets or sets value indicates visibility of scroll bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.ChartArea">
            <summary>
            Used for storing chart area reference.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.ChartAxis">
            <summary>
            Used for storing chart area reference.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.Dimension">
            <summary>
            Returns the dimensions of the scroll bar. That is the width for vertical scroll bars and the height for horizontal ones.
            </summary>
            <value></value>
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.ZoomButtonClicked">
            <summary>
            Occurs when zoom button is clicked.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBar.ValueChanged">
            <summary>
            Occurs when scroll value is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartHScrollBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartHScrollBar"/> class.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartHScrollBar.CreateScrollBar">
            <summary>
            Creates the scroll bar.
            </summary>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartHScrollBar.OnLayout">
            <summary>
            Arranges controls.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartHScrollBar.ResetScrollBar">
            <summary>
            Resets the scrollbar.
            </summary>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartVScrollBar">
            <summary>
            Represents the vertical scrollbar.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartVScrollBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartVScrollBar"/> class.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartVScrollBar.CreateScrollBar">
            <summary>
            Creates the scroll bar.
            </summary>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartVScrollBar.OnLayout">
            <summary>
            Arranges controls.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartVScrollBar.ResetScrollBar">
            <summary>
            Resets the scrollbar.
            </summary>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartZoomButton">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartZoomButton.#ctor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Scrolling.ChartZoomButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarValueChangedEventArgs">
            <summary>
            Placeholder for additional information. Currently does not hold any additional information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarValueChangedEventArgs.Empty">
            <internalonly/>		
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarValueChangedEventHandler">
            <exclude/>
             <summary>
                 Delegate that is to be used when the chart scroll bar value changes.
                 <seealso cref="T:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar"/>
             </summary>
             <param name="sender" type="object">
                 <para>
                 Sender.
                 </para>
             </param>
             <param name="args" type="Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarValueChangedEventArgs">
                 <para>
                 Argument.
                 </para>
             </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarZoomButtonClickedEventArgs">
            <summary>
            Placeholder for additional information. Currently does not hold any additional information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarZoomButtonClickedEventArgs.Empty">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarZoomButtonClickedEventHandler">
            <exclude/>
             <summary>
                 Delegate that is to be used when the zoom button associated with a chart scroll bar is clicked.
                 <seealso cref="T:Syncfusion.Windows.Forms.Chart.Scrolling.IChartScrollBar"/>
             </summary>
             <param name="sender" type="object">
                 <para>
                 Sender.
                 </para>
             </param>
             <param name="args" type="Syncfusion.Windows.Forms.Chart.Scrolling.ChartScrollBarZoomButtonClickedEventArgs">
                 <para>
                 Argument.
                 </para>
             </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Column.ColumnSpace">
            <summary>
             Gets or sets column space of the each point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Column.ColumnColor">
            <summary>
             Gets or sets columncolor of the column series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Line.LineColor">
            <summary>
             Gets or sets line color of the Line series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Line.LineWidth">
            <summary>
             Gets or sets width of the line.
             Internally Only
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Markers.ShowHighPoint">
            <summary>
            Gets or sets a value indicating whether the High point marker are shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Markers.ShowLowPoint">
            <summary>
            Gets or sets a value indicating whether the Low point marker are shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Markers.ShowStartPoint">
            <summary>
            Gets or sets a value indicating whether the Start point marker are shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Markers.ShowEndPoint">
            <summary>
            Gets or sets a value indicating whether the End point marker are shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Markers.ShowMarker">
            <summary>
            Gets or sets a value indicating whether the marker are shown for all line points.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Markers.ShowNegativePoint">
            <summary>
            Gets or sets a value indicating whether the Negative point marker are shown.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Markers.MarkerColor">
            <summary>
             Gets or sets Markercolor for all points.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Markers.HighPointColor">
            <summary>
             Gets or sets Markercolor of the High point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Markers.LowPointColor">
            <summary>
             Gets or sets Markercolor of the Low point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Markers.StartPointColor">
            <summary>
             Gets or sets Markercolor of the Start point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Markers.EndPointColor">
            <summary>
             Gets or sets Markercolor of the End point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Markers.NegativePointColor">
            <summary>
             Gets or sets Markercolor of the Negative point.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SparkLineSource.GetSourceList(System.Object,Syncfusion.Windows.Forms.Chart.ISparkLine)">
            <summary>
            Convert the object source item to IEnumerable item.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.WinLossRender.DrawSparkWinLoss(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ISparkLine)">
            <summary>
            Renderer the WinLoss type series
            </summary>
            <param name="og">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
            <param name="sparkline"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.WinLossRender.GetInteriorWinLoss(System.Double,Syncfusion.Windows.Forms.Chart.ISparkLine)">
            <summary>
            Get interior BrushInfo for points
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas">
            <summary>
            The BasicStatisticalFormulas class provides the functionality for the Basic Statistical formulas Mean,Median, .
            </summary>
            <remark>
            Statistical formulas help end-users to analyze their information as well as create more meaningful data. Statistical formulas are implemented using the Statistics class and can be organized into three general groups: Statistical Tests, Basic Statistical Functions and Utility functions.Statistical formulas help end-users to analyze their information as well as create more meaningful data. 
            Statistical formulas are implemented using the Statistics class and can be organized into three general groups: Statistical Tests, Basic Statistical Functions and Utility functions.
            </remark>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.Mean(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Calculates mean value of series X values. 
            </summary>
            <param name="series">The name of the Series object that stores the first group's data for which an average is required.</param>
            <returns>Returns a double value that represents the average of all the data points in the given series. </returns>
            <example>
            <p>The following code demonstrate how to get the average of the data points in a series.
            </p>
            <code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ............
            double Mean1=BasicStatisticalFormulas.Mean(series1);
            </code>
            <code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            .............
            Dim Mean1 As Double
            Mean1=BasicStatisticalFormulas.Mean(series1)
            </code>
            </example>
            <remarks>
            <p>Use this method to calculate the mean (i.e. average) of the points stored in a series.</p>
            <p>If the specified input series does not exist in the SeriesCollection at the time of the method call than an exception will be thrown. </p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.Mean(Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            Calculates mean value of series Y values.
            </summary>
            <param name="series">The name of the Series object that stores the first group's data for which an average is required.</param>
            <param name="yIndex">Index of the Y value.</param>
            <returns>
            Returns a double value that represents the average of all the data points in the given series.
            </returns>
            <example>
               <p>The following code demonstrate how to get the average of the data points in a series.
            </p>
               <code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ............
            double Mean1=BasicStatisticalFormulas.Mean(series1, 0);
            </code>
             <code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            .............
            Dim Mean1 As Double
            Mean1=BasicStatisticalFormulas.Mean(series1, 0)
            </code>
            </example>
            <remarks>
                <p>Use this method to calculate the mean (i.e. average) of the points stored in a series.</p>
                <p>If the specified input series does not exist in the SeriesCollection at the time of the method call than an exception will be thrown. </p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.VarianceUnbiasedEstimator(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Calculates variance of series X values. 
            </summary>
            <param name="series">The name of the Series object that stores the group of data. 
            </param>
            <returns>A double that represents the variance within the group of data.
            </returns>
            <example>
            <p>The following Code demonstrate how to gets the VarianceUnBasedEstimator of the data points in a series</p>
            <code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ............
            double VarianceUnBased1= Statistics.BasicStatisticalFormulas.VarianceUnBiasedEstimator(series);
            </code>
            <code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            .............
            Dim VarianceUnBased1 As Double
            VarianceUnBased1=BasicStatisticalFormulas.VarianceUnBiasedEstimator(series)
            </code>
            </example>
            <remarks>
            <p>This method estimates the variance for a sample.</p>
            <p>If the specified input series does not exist in the series collection at the time of the method call than an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.VarianceUnbiasedEstimator(Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            Calculates variance of series Y values.
            </summary>
            <param name="series">The name of the Series object that stores the group of data.</param>
            <param name="yIndex">Index of the Y value.</param>
            <returns>
            A double that represents the variance within the group of data.
            </returns>
            <example>
            	<p>The following Code demonstrate how to gets the VarianceUnBasedEstimator of the data points in a series</p>
            	<code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ............
            double VarianceUnBased1= Statistics.BasicStatisticalFormulas.VarianceUnBiasedEstimator(series, 0);
            </code>
            	<code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            .............
            Dim VarianceUnBased1 As Double
            VarianceUnBased1=BasicStatisticalFormulas.VarianceUnBiasedEstimator(series, 0)
            </code>
            </example>
            <remarks>
            	<p>This method estimates the variance for a sample.</p>
            	<p>If the specified input series does not exist in the series collection at the time of the method call than an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.VarianceBiasedEstimator(Syncfusion.Windows.Forms.Chart.ChartSeries)">
             <summary>
             Calculates variance of series X values. 
             </summary>
             <param name="series">The name of the Series object that stores the group of data. 
            </param>
             <returns>A double that represents the variance within the group of data.
            </returns>
             /// <example>
             <p>The following Code demonstrate how to gets the VarianceBasedEstimator of the data points in a series</p>
             <code lang="C#">
             using Syncfusion.Windows.Forms.Chart.Statistics;
            	............
            	double VarianceBased1= Statistics.BasicStatisticalFormulas.VarianceBiasedEstimator(series);
             </code>
             <code lang="VB">
             Imports Syncfusion.Windows.Forms.Chart.Statistics
            	.............
            	Dim VarianceBased1 As Double
            	VarianceBased1=BasicStatisticalFormulas.VarianceBiasedEstimator(series)
            	</code>
             </example>
             <remarks>
             <p>This method estimates the variance for a sample.</p>
            	<p>If the specified input series does not exist in the series collection at the time of the method call than an exception will be thrown.</p>
             </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.VarianceBiasedEstimator(Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            Calculates variance of series Y values.
            </summary>
            <param name="series">The name of the Series object that stores the group of data.</param>
            <param name="yIndex">Index of the Y value.</param>
            <returns>
            A double that represents the variance within the group of data.
            </returns>
            /// 
            <example>
            	<p>The following Code demonstrate how to gets the VarianceBasedEstimator of the data points in a series</p>
            	<code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ............
            double VarianceBased1= Statistics.BasicStatisticalFormulas.VarianceBiasedEstimator(series, 0);
            </code>
            	<code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            .............
            Dim VarianceBased1 As Double
            VarianceBased1=BasicStatisticalFormulas.VarianceBiasedEstimator(series, 0)
            </code>
            </example>
            <remarks>
            	<p>This method estimates the variance for a sample.</p>
            	<p>If the specified input series does not exist in the series collection at the time of the method call than an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.Variance(Syncfusion.Windows.Forms.Chart.ChartSeries,System.Boolean)">
             <summary>
             Calculates variance of series X values. 
             </summary>
             <param name="series">The name of the Series object that stores the group of data. 
            </param>
             <param name="sampleVariance">True if the data is a sample of a population, false if it is the entire population. </param>
             <returns>A double that represents the variance within the group of data.
            </returns>
             <example>
             <p>The following Code demonstrate how to gets the Variance of the data points in a series</p>
             <code lang="C#">
             using Syncfusion.Windows.Forms.Chart.Statistics;
            	............
            	double Variance1= Statistics.BasicStatisticalFormulas.Variance(series,true);
             </code>
             <code lang="VB">
             Imports Syncfusion.Windows.Forms.Chart.Statistics
            	.............
            	Dim Variance1 As Double
            	Variance1=BasicStatisticalFormulas.Variance(series,true)
            	</code>
             </example>
             <remarks>
             <p>This method estimates the variance for a sample.</p>
            	<p>If the specified input series does not exist in the series collection at the time of the method call than an exception will be thrown.</p>
             </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.Variance(Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32,System.Boolean)">
            <summary>
            Calculates variance of series Y values.
            </summary>
            <param name="series">The name of the Series object that stores the group of data.</param>
            <param name="yIndex">Index of the Y value.</param>
            <param name="sampleVariance">True if the data is a sample of a population, false if it is the entire population.</param>
            <returns>
            A double that represents the variance within the group of data.
            </returns>
            <example>
            	<p>The following Code demonstrate how to gets the Variance of the data points in a series</p>
            	<code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ............
            double Variance1= Statistics.BasicStatisticalFormulas.Variance(series,true);
            </code>
            	<code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            .............
            Dim Variance1 As Double
            Variance1=BasicStatisticalFormulas.Variance(series,true)
            </code>
            </example>
            <remarks>
            	<p>This method estimates the variance for a sample.</p>
            	<p>If the specified input series does not exist in the series collection at the time of the method call than an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.StandardDeviation(Syncfusion.Windows.Forms.Chart.ChartSeries,System.Boolean)">
             <summary>
             Calculates variance of series X values. 
             </summary>
             <param name="series">The name of the Series object that stores the group of data. 
            </param>
             <param name="sampleVariance">True if the data is a sample of a population, false if it is the entire population. </param>
             <returns>A double that represents the Standard Deviation within the group of data.
             </returns>
             <example>
             <p>The following Code demonstrate how to gets the Standard Deviation of the data points in a series</p>
             <code lang="C#">
             using Syncfusion.Windows.Forms.Chart.Statistics;
            	............
            	double Standard1= Statistics.BasicStatisticalFormulas.StandartDeviation(series,false);
             </code>
             <code lang="VB">
             Imports Syncfusion.Windows.Forms.Chart.Statistics
            	.............
            	Dim Standard1 As Double
            	Standard1=BasicStatisticalFormulas.StandartDeviation(series,false)
            	</code>
             </example>
             <remarks>
             <p>This method estimates the Standard Deviation for a sample.</p>
            	<p>If the specified input series does not exist in the series collection at the time of the method call than an exception will be thrown.</p>
             </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.StandardDeviation(Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32,System.Boolean)">
            <summary>
            Calculates variance of series Y values.
            </summary>
            <param name="series">The name of the Series object that stores the group of data.</param>
            <param name="yIndex">Index of the Y value.</param>
            <param name="sampleVariance">True if the data is a sample of a population, false if it is the entire population.</param>
            <returns>
            A double that represents the Standard Deviation within the group of data.
            </returns>
            <example>
            	<p>The following Code demonstrate how to gets the Standard Deviation of the data points in a series</p>
            	<code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ............
            double Standard1= Statistics.BasicStatisticalFormulas.StandardDeviation(series,0,false);
            </code>
            	<code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            .............
            Dim Standard1 As Double
            Standard1=BasicStatisticalFormulas.StandardDeviation(series,0,false)
            </code>
            </example>
            <remarks>
            	<p>This method estimates the Standard Deviation for a sample.</p>
            	<p>If the specified input series does not exist in the series collection at the time of the method call than an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.Covariance(Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries)">
             <summary>
             Calculates covariance of series X values. 
             </summary>
             <param name="series1">The name of the Series object that stores the first group's data. 
            </param>
             <param name="series2"> The name of the Series object that stores the second group's data.
             An exception will be raised if the input series do not have the same number of data points. </param>
             <returns>A double that represents the covariance value between the two groups of data.
            </returns>
             <example>
             <p>The following Code demonstrate how to gets the Covariance of the data points in a series</p>
             <code lang="C#">
             using Syncfusion.Windows.Forms.Chart.Statistics;
            	............
            	double Covariance1= Statistics.BasicStatisticalFormulas.Covariance(series1,series2);
             </code>
             <code lang="VB">
             Imports Syncfusion.Windows.Forms.Chart.Statistics
            	.............
            	Dim Covariance1 As Double
            	Covariance1=BasicStatisticalFormulas.Covariance(series1,series2)
            	</code>
             </example>
             <remarks>
             <p>This method returns the average of the product of deviations of the data points from their respective means.</p>
             <p>Covariance is a measure of the relationship between two ranges of data, and can be used to determine whether two ranges of data move together - that is, whether large values of one set are associated with large values of the other (positive covariance), whether small values of one set are associated with large values of the other (negative covariance), or whether values in both sets are unrelated (covariance near zero).</p>
            	<p>If a specified input series does not exist in the series collection at the time of the method call than an exception will be thrown. An exception will also be raised if the series do not have the same number of data points.</p>
             </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.Covariance(Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            Calculates covariance of series Y values.
            </summary>
            <param name="series1">The name of the Series object that stores the first group's data.</param>
            <param name="series2">The name of the Series object that stores the second group's data.
            An exception will be raised if the input series do not have the same number of data points.</param>
            <param name="yIndex">Index of the Y index.</param>
            <returns>
            A double that represents the covariance value between the two groups of data.
            </returns>
            <example>
            	<p>The following Code demonstrate how to gets the Covariance of the data points in a series</p>
            	<code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ............
            double Covariance1= Statistics.BasicStatisticalFormulas.Covariance(series1,series2, 0);
            </code>
            	<code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            .............
            Dim Covariance1 As Double
            Covariance1=BasicStatisticalFormulas.Covariance(series1,series2, 0)
            </code>
            </example>
            <remarks>
            	<p>This method returns the average of the product of deviations of the data points from their respective means.</p>
            	<p>Covariance is a measure of the relationship between two ranges of data, and can be used to determine whether two ranges of data move together - that is, whether large values of one set are associated with large values of the other (positive covariance), whether small values of one set are associated with large values of the other (negative covariance), or whether values in both sets are unrelated (covariance near zero).</p>
            	<p>If a specified input series does not exist in the series collection at the time of the method call than an exception will be thrown. An exception will also be raised if the series do not have the same number of data points.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.Correlation(Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries)">
             <summary>
             Calculates correlation of series X values. 
             </summary>
             <param name="series1">The name of the Series object that stores the first group's data. 
            </param>
             <param name="series2"> The name of the Series object that stores the second group's data.
             An exception will be raised if the input series do not have the same number of data points. </param>
             <returns>A double that represents the Correlation value between the two groups of data.
             </returns>
             <example>
             <p>The following Code demonstrate how to gets the Correlation of the data points in a series</p>
             <code lang="C#">
             using Syncfusion.Windows.Forms.Chart.Statistics;
            	............
            	double Correlation1= Statistics.BasicStatisticalFormulas.Correlation(series1,series2);
             </code>
             <code lang="VB">
             Imports Syncfusion.Windows.Forms.Chart.Statistics
            	.............
            	Dim Correlation1 As Double
            	Correlation1=BasicStatisticalFormulas.Correlation(series1,series2)
            	</code>
             </example>
             <remarks>
             <p>Correlation measures the relationship between two data sets that are scaled to be independent of the unit of measurement. This correlation method returns the covariance of two data sets divided by the product of their standard deviations, and always ranges from -1 to 1.
             Use correlation to determine whether two ranges of data move together that is, whether large values of one set are associated with large values of the other (positive correlation), whether small values of one set are associated with large values of the other (negative correlation), or whether values in both sets are unrelated (correlation near zero).</p>
             <p>If a specified input series does not exist in the series collection at the time of the method call than an exception will be thrown. An exception will also be raised if the series do not have the same number of data points.</p>
             </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.Correlation(Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            Calculates correlation of series Y values.
            </summary>
            <param name="series1">The name of the Series object that stores the first group's data.</param>
            <param name="series2">The name of the Series object that stores the second group's data.
            An exception will be raised if the input series do not have the same number of data points.</param>
            <param name="yIndex">Index of the Y value.</param>
            <returns>
            A double that represents the Correlation value between the two groups of data.
            </returns>
            <example>
            	<p>The following Code demonstrate how to gets the Correlation of the data points in a series</p>
            	<code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ............
            double Correlation1= Statistics.BasicStatisticalFormulas.Correlation(series1,series2,0);
            </code>
            	<code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            .............
            Dim Correlation1 As Double
            Correlation1=BasicStatisticalFormulas.Correlation(series1,series2,0)
            </code>
            </example>
            <remarks>
            	<p>Correlation measures the relationship between two data sets that are scaled to be independent of the unit of measurement. This correlation method returns the covariance of two data sets divided by the product of their standard deviations, and always ranges from -1 to 1.
            Use correlation to determine whether two ranges of data move together that is, whether large values of one set are associated with large values of the other (positive correlation), whether small values of one set are associated with large values of the other (negative correlation), or whether values in both sets are unrelated (correlation near zero).</p>
            	<p>If a specified input series does not exist in the series collection at the time of the method call than an exception will be thrown. An exception will also be raised if the series do not have the same number of data points.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.Median(Syncfusion.Windows.Forms.Chart.ChartSeries)">
             <summary>
             Calculates Median of series X values. 
             </summary>
             <param name="series">The input series</param>
             <example>
             <p>The following Code demonstrate how to gets the median of the data points in a series</p>
             <code lang="C#">
             using Syncfusion.Windows.Forms.Chart.Statistics;
            	............
            	double Median1= Statistics.BasicStatisticalFormulas.Median(series1);
             </code>
             <code lang="VB">
             Imports Syncfusion.Windows.Forms.Chart.Statistics
            	.............
            	Dim Median1 As Double
            	Median1=BasicStatisticalFormulas.Median(series1)
            	</code>
             </example>
             <remarks>
             <p>Use this method to calculate the median of the points stored in a series.
            	The median is the middle value of a sample set, where half of the members are greater in size and half the members are lesser in size.</p>
            <p>if the specified input series does not exist in the SeriesCollection at the time of the method call than an exception will be thrown.</p>
             </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.Median(Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            Calculates Median of series Y values.
            </summary>
            <param name="series">The input series</param>
            <param name="yIndex">Index of the Y index.</param>
            <returns></returns>
            <example>
            	<p>The following Code demonstrate how to gets the median of the data points in a series</p>
            	<code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ............
            double Median1= Statistics.BasicStatisticalFormulas.Median(series1, 0);
            </code>
            	<code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            .............
            Dim Median1 As Double
            Median1=BasicStatisticalFormulas.Median(series1, 0)
            </code>
            </example>
            <remarks>
            	<p>Use this method to calculate the median of the points stored in a series.
            The median is the middle value of a sample set, where half of the members are greater in size and half the members are lesser in size.</p>
            	<p>if the specified input series does not exist in the SeriesCollection at the time of the method call than an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.ZTest(System.Double,System.Double,System.Double,System.Double,Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Performs Z test on input series. This test assumes that 
            there is some difference between mean values of input series populations.
            Input series are regarded as samples from normally distributed populations 
            with known variances.
            </summary>
            <param name="hypothesizedMeanDifference">Difference between populations means.</param>
            <param name="varianceFirstGroup">Variance of the first series population.</param>
            <param name="varianceSecondGroup">Variance of the second series population.</param>
            <param name="probability">Probability that gives confidence level. (Typically 0.05)</param>
            <param name="firstInputSeries">The name of the series that stores the first group of data..</param>
            <param name="secondInputSeries">The name of the series that stores the second group of data..</param>
            <returns>ZTestResult Class</returns>
            <example>
            <p>The following code demonstrate how to calculate Ztest</p>
            <code lang="C#">
            ZTestResult ztr = BasicStatisticalFormulas.ZTest( Convert.ToDouble(TextBox6.Text.ToString()),sqrtVarianceOfFirstSeries*sqrtVarianceOfFirstSeries,sqrtVarianceOfSecondSeries* sqrtVarianceOfSecondSeries,0.05,series1,series2);
            </code>
            <code lang="VB">
            Dim ztr As ZTestResult = BasicStatisticalFormulas.ZTest(Convert.ToDouble(TextBox6.Text.ToString()), sqrtVarianceOfFirstSeries*sqrtVarianceOfFirstSeries, sqrtVarianceOfSecondSeries*sqrtVarianceOfSecondSeries, 0.05, series1, series2)
            </code> 
            </example>
            <remarks>
            <p>This method performs a Z test for two groups of data, and returns the results using a ZTestResult object.</p>
            <p>Two and only two groups of data must be specified. If either input series does not exist in the series collection at the time of the method call than an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.ZTest(System.Double,System.Double,System.Double,System.Double,Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            Performs Z test on input series. This test assumes that
            there is some difference between mean values of input series populations.
            Input series are regarded as samples from normally distributed populations
            with known variances.
            </summary>
            <param name="hypothesizedMeanDifference">Difference between populations means.</param>
            <param name="varianceFirstGroup">Variance of the first series population.</param>
            <param name="varianceSecondGroup">Variance of the second series population.</param>
            <param name="probability">Probability that gives confidence level. (Typically 0.05)</param>
            <param name="firstInputSeries">The name of the series that stores the first group of data..</param>
            <param name="secondInputSeries">The name of the series that stores the second group of data..</param>
            <param name="yIndex">Index of the Y value.</param>
            <returns>ZTestResult Class</returns>
            <example>
            	<p>The following code demonstrate how to calculate Ztest</p>
            	<code lang="C#">
            ZTestResult ztr = BasicStatisticalFormulas.ZTest( Convert.ToDouble(TextBox6.Text.ToString()),sqrtVarianceOfFirstSeries*sqrtVarianceOfFirstSeries,sqrtVarianceOfSecondSeries* sqrtVarianceOfSecondSeries,0.05,series1,series2, 0);
            </code>
            	<code lang="VB">
            Dim ztr As ZTestResult = BasicStatisticalFormulas.ZTest(Convert.ToDouble(TextBox6.Text.ToString()), sqrtVarianceOfFirstSeries*sqrtVarianceOfFirstSeries, sqrtVarianceOfSecondSeries*sqrtVarianceOfSecondSeries, 0.05, series1, series2, 0)
            </code>
            </example>
            <remarks>
            	<p>This method performs a Z test for two groups of data, and returns the results using a ZTestResult object.</p>
            	<p>Two and only two groups of data must be specified. If either input series does not exist in the series collection at the time of the method call than an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.TTestEqualVariances(System.Double,System.Double,Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Performs T test on input series. This test assumes that 
            there is some difference between mean values of input series populations.
            Input series are regarded as samples from normally distributed populations.
            The population variances are assumed to be equal. This is a key feature of the test, because 
            there is no exact T test for two samples from populations with different variances.
            </summary>
            <param name="hypothesizedMeanDifference">Difference between populations means.</param>
            <param name="probability">Probability that gives confidence level. (Typically 0.05)</param>
            <param name="firstInputSeries">The name of the series that stores the first group of data.</param>
            <param name="secondInputSeries">The name of the series that stores the second group of data.</param>
            <returns> TTestResult class </returns>
            <example>
            <p>The following code demonstrate how to calculate TTest Equal Variance</p>
            <code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ........
            TTestResult ttr = BasicStatisticalFormulas.TTestEqualVariances (0.2, 0.05, series1, series2);
            </code>
            <code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            ........
            Dim ttr As TTestResult = BasicStatisticalFormulas.TTestEqualVariances (0.2, 0.05, series1, series2)
            </code> 
            </example>
            <remarks>
            <p>This method performs a T test for two groups of data, and assumes equal variances between the two groups (i.e. series).</p>
            <p>If either input series does not exist in the series collection at the time of the method call an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.TTestEqualVariances(System.Double,System.Double,Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            Performs T test on input series. This test assumes that
            there is some difference between mean values of input series populations.
            Input series are regarded as samples from normally distributed populations.
            The population variances are assumed to be equal. This is a key feature of the test, because
            there is no exact T test for two samples from populations with different variances.
            </summary>
            <param name="hypothesizedMeanDifference">Difference between populations means.</param>
            <param name="probability">Probability that gives confidence level. (Typically 0.05)</param>
            <param name="firstInputSeries">The name of the series that stores the first group of data.</param>
            <param name="secondInputSeries">The name of the series that stores the second group of data.</param>
            <param name="yIndex">Index of the Y index.</param>
            <returns>TTestResult class</returns>
            <example>
            	<p>The following code demonstrate how to calculate TTest Equal Variance</p>
            	<code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ........
            TTestResult ttr = BasicStatisticalFormulas.TTestEqualVariances (0.2, 0.05, series1, series2, 0);
            </code>
            	<code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            ........
            Dim ttr As TTestResult = BasicStatisticalFormulas.TTestEqualVariances (0.2, 0.05, series1, series2, 0)
            </code>
            </example>
            <remarks>
            	<p>This method performs a T test for two groups of data, and assumes equal variances between the two groups (i.e. series).</p>
            	<p>If either input series does not exist in the series collection at the time of the method call an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.TTestUnEqualVariances(System.Double,System.Double,Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Performs T test on input series. This test assumes that 
            there is some difference between mean values of input series populations.
            Input series are regarded as samples from normally distributed populations.
            The population variances are assumed to be unequal. So this method is not statistically exact,
            but it works well, and sometimes is called robust T test.
            </summary>
            <param name="hypothesizedMeanDifference">Difference between populations means.</param>
            <param name="probability">Probability that gives confidence level. (Typically 0.05)</param>
            <param name="firstInputSeries">The name of the series that stores the first group of data.</param>
            <param name="secondInputSeries">The name of the series that stores the second group of data.</param>
            <returns> TTestResult class </returns>
            <example>
            <p>The following code demonstrate how to calculate TTest UnEqual Variance</p>
            <code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ........
            TTestResult ttr = BasicStatisticalFormulas.TTestUnEqualVariances (0.2, 0.05, series1, series2);
            </code>
            <code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            ........
            Dim ttr As TTestResult = BasicStatisticalFormulas.TTestUnEqualVariances (0.2, 0.05, series1, series2)
            </code> 
            </example>
            <remarks>
            <p>This method performs a T test for two groups of data, and assumes unequal variances between the two groups (i.e. series).</p>
            <p>This analysis tool is referred to as a heteroscedastic t-test, and can be used when the groups under study are distinct. Use a paired test when there is one group before and after a treatment.</p>
            <p>If either input series does not exist in the series collection at the time of the method call an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.TTestUnEqualVariances(System.Double,System.Double,Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            Performs T test on input series. This test assumes that
            there is some difference between mean values of input series populations.
            Input series are regarded as samples from normally distributed populations.
            The population variances are assumed to be unequal. So this method is not statistically exact,
            but it works well, and sometimes is called robust T test.
            </summary>
            <param name="hypothesizedMeanDifference">Difference between populations means.</param>
            <param name="probability">Probability that gives confidence level. (Typically 0.05)</param>
            <param name="firstInputSeries">The name of the series that stores the first group of data.</param>
            <param name="secondInputSeries">The name of the series that stores the second group of data.</param>
            <param name="yIndex">Index of the Y value.</param>
            <returns>TTestResult class</returns>
            <example>
            	<p>The following code demonstrate how to calculate TTest UnEqual Variance</p>
            	<code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ........
            TTestResult ttr = BasicStatisticalFormulas.TTestUnEqualVariances (0.2, 0.05, series1, series2, 0);
            </code>
            	<code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            ........
            Dim ttr As TTestResult = BasicStatisticalFormulas.TTestUnEqualVariances (0.2, 0.05, series1, series2, 0)
            </code>
            </example>
            <remarks>
            	<p>This method performs a T test for two groups of data, and assumes unequal variances between the two groups (i.e. series).</p>
            	<p>This analysis tool is referred to as a heteroscedastic t-test, and can be used when the groups under study are distinct. Use a paired test when there is one group before and after a treatment.</p>
            	<p>If either input series does not exist in the series collection at the time of the method call an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.TTestPaired(System.Double,System.Double,Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Performs T test on input series. This test assumes that 
            there is some difference between mean values of input series populations.
            Input series are regarded as samples from normally distributed populations.
            The population variances are assumed to be unequal. So this method is not statistically exact,
            but it works well, and sometimes is called robust T test.
            </summary>
            <param name="hypothesizedMeanDifference">Difference between populations means.</param>
            <param name="probability">Probability that gives confidence level. (Typically 0.05)</param>
            <param name="firstInputSeries">The name of the series that stores the first group of data.</param>
            <param name="secondInputSeries">The name of the series that stores the second group of data.</param>
            <returns> TTestResult class </returns>
            <example>
            <p>The following code demonstrate how to calculate TTestPaired</p>
            <code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ........
            TTestResult ttr = BasicStatisticalFormulas.TTestPaired(0.2, 0.05, series1, series2);
            </code>
            <code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            ........
            Dim ttr As TTestResult = BasicStatisticalFormulas.TTestPaired (0.2, 0.05, series1, series2)
            </code> 
            </example>
            <remarks>
            <p>This method performs a paired two-sample student's t-test to determine whether a sample's means are distinct. This form of the t-test does not assume that the variances of both populations are equal.</p>
            <p>Use a paired test when there is a natural pairing of observations in the samples, such as a sample group that is tested twice (e.g. before and after an experiment).</p>
            <p>If either input series does not exist in the series collection at the time of the method call an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.TTestPaired(System.Double,System.Double,Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            Performs T test on input series. This test assumes that
            there is some difference between mean values of input series populations.
            Input series are regarded as samples from normally distributed populations.
            The population variances are assumed to be unequal. So this method is not statistically exact,
            but it works well, and sometimes is called robust T test.
            </summary>
            <param name="hypothesizedMeanDifference">Difference between populations means.</param>
            <param name="probability">Probability that gives confidence level. (Typically 0.05)</param>
            <param name="firstInputSeries">The name of the series that stores the first group of data.</param>
            <param name="secondInputSeries">The name of the series that stores the second group of data.</param>
            <param name="yIndex">Index of the Y value.</param>
            <returns>TTestResult class</returns>
            <example>
            	<p>The following code demonstrate how to calculate TTestPaired</p>
            	<code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ........
            TTestResult ttr = BasicStatisticalFormulas.TTestPaired(0.2, 0.05, series1, series2, 0);
            </code>
            	<code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            ........
            Dim ttr As TTestResult = BasicStatisticalFormulas.TTestPaired (0.2, 0.05, series1, series2, 0)
            </code>
            </example>
            <remarks>
            	<p>This method performs a paired two-sample student's t-test to determine whether a sample's means are distinct. This form of the t-test does not assume that the variances of both populations are equal.</p>
            	<p>Use a paired test when there is a natural pairing of observations in the samples, such as a sample group that is tested twice (e.g. before and after an experiment).</p>
            	<p>If either input series does not exist in the series collection at the time of the method call an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.FTest(System.Double,Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Performs F test on input series. This test looks whether first series variance is smaller than second series variance.
            If FValue in FTestResult is bigger than FCriticalValueOneTail than we can't deduce that it is truly smaller.
            The test tests ratio of two variances s1^2/s2^2 which is proved to be distributed 
            according F distribution. The null hypothesis is that variances are equal.
            </summary>
            <param name="probability">Probability that gives confidence level. (Typically 0.05)</param>
            <param name="firstInputSeries">The name of the series that stores the first group of data.</param>
            <param name="secondInputSeries">The name of the series that stores the second group of data.</param>
            <returns> FTestResult class </returns>
            <example>
            <p>The following code demonstrate how to calculate FTest.</p>
            <code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ........
            FTestResult ftr = BasicStatisticalFormulas.FTest(0.05, series1, series2);
            </code>
            <code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            ........
            Dim ftr As FTestResult = BasicStatisticalFormulas.FTest(0.05, series1, series2)
            </code> 
            </example>
            <remarks>
            <p>This method returns the results of the F-test using an FTestResult object.</p>
            <p>FTest performs a two-sample F-test to compare two population variances. For example, it can be used to determine whether the time scores in a swimming meet have a difference in variance for samples from two teams.</p>
            <p>If a specified input series does not exist in the series collection at the time of the method call than an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.FTest(System.Double,Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            Performs F test on input series. This test looks whether first series variance is smaller than second series variance.
            If FValue in FTestResult is bigger than FCriticalValueOneTail than we can't deduce that it is truly smaller.
            The test tests ratio of two variances s1^2/s2^2 which is proved to be distributed
            according F distribution. The null hypothesis is that variances are equal.
            </summary>
            <param name="probability">Probability that gives confidence level. (Typically 0.05)</param>
            <param name="firstInputSeries">The name of the series that stores the first group of data.</param>
            <param name="secondInputSeries">The name of the series that stores the second group of data.</param>
            <param name="yIndex">Index of the y.</param>
            <returns>FTestResult class</returns>
            <example>
            	<p>The following code demonstrate how to calculate FTest.</p>
            	<code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ........
            FTestResult ftr = BasicStatisticalFormulas.FTest(0.05, series1, series2, 0);
            </code>
            	<code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            ........
            Dim ftr As FTestResult = BasicStatisticalFormulas.FTest(0.05, series1, series2, 0)
            </code>
            </example>
            <remarks>
            	<p>This method returns the results of the F-test using an FTestResult object.</p>
            	<p>FTest performs a two-sample F-test to compare two population variances. For example, it can be used to determine whether the time scores in a swimming meet have a difference in variance for samples from two teams.</p>
            	<p>If a specified input series does not exist in the series collection at the time of the method call than an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.Anova(System.Double,Syncfusion.Windows.Forms.Chart.ChartSeries[])">
            <summary>
            Performs Anova (Analysis of variance test) on input series. All series should have the same 
            number of points. The tests null hypothesis assumes that all series means are equal and 
            that all variances of series are also equal. The alternative to null hypothesis is that there 
            is one inequality between means of series. For better understanding of this test, we recommend to read:
            Dowdy, S. M.
            Statistics for research / Shirley Dowdy, Stanley Weardon, Daniel Chilko.
            p. cm. � (Wiley series in probability and statistics; 1345)
            </summary>
            <param name="probability">Probability that gives confidence level. (Typically 0.05)</param>
            <param name="inputSeries">Series array</param>
            <returns> AnovaResult class </returns>
            <example>
            <p>The following code demonstrate how to calculate AnovaTest</p>
            <code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ........
            AnovaResult ar = BasicStatisticalFormulas.Anova(0.5,new ChartSeries[]{ series1, series2, series3} );
            </code>
            <code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            ........
            Dim ar As AnovaResult = BasicStatisticalFormulas.Anova(0.5, New ChartSeries(){ series1, series2, series3})
            </code> 
            </example> 
            <remarks>
            <p>An ANOVA test is used to test the difference between the means of two or more groups of data.</p>
            <p>Two or more groups of data (series) must be specified, and each series must have the same number of data points otherwise an exception will be raised.</p>
            <p>If a specified input series does not exist in the series collection at the time of the method call than an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.Anova(System.Double,Syncfusion.Windows.Forms.Chart.ChartSeries[],System.Int32)">
            <summary>
            Performs Anova (Analysis of variance test) on input series. All series should have the same
            number of points. The tests null hypothesis assumes that all series means are equal and
            that all variances of series are also equal. The alternative to null hypothesis is that there
            is one inequality between means of series. For better understanding of this test, we recommend to read:
            Dowdy, S. M.
            Statistics for research / Shirley Dowdy, Stanley Weardon, Daniel Chilko.
            p. cm. � (Wiley series in probability and statistics; 1345)
            </summary>
            <param name="probability">Probability that gives confidence level. (Typically 0.05)</param>
            <param name="inputSeries">Series array</param>
            <param name="yIndex">Index of the Y value.</param>
            <returns>AnovaResult class</returns>
            <example>
            	<p>The following code demonstrate how to calculate AnovaTest</p>
            	<code lang="C#">
            using Syncfusion.Windows.Forms.Chart.Statistics;
            ........
            AnovaResult ar = BasicStatisticalFormulas.Anova(0.5,new ChartSeries[]{ series1, series2, series3}, 0 );
            </code>
            	<code lang="VB">
            Imports Syncfusion.Windows.Forms.Chart.Statistics
            ........
            Dim ar As AnovaResult = BasicStatisticalFormulas.Anova(0.5, New ChartSeries(){ series1, series2, series3}, 0)
            </code>
            </example>
            <remarks>
            	<p>An ANOVA test is used to test the difference between the means of two or more groups of data.</p>
            	<p>Two or more groups of data (series) must be specified, and each series must have the same number of data points otherwise an exception will be raised.</p>
            	<p>If a specified input series does not exist in the series collection at the time of the method call than an exception will be thrown.</p>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.DifferenceX(Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Calculates new series by substracting corresponding values of second series from firs series. 
            </summary>
            <param name="series1">The name of the series that stores the first group of data.</param>
            <param name="series2">The name of the series that stores the second group of data.</param>
            <returns>Return difference between the two series points</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.BasicStatisticalFormulas.DifferenceY(Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            Calculates new series by substracting corresponding values of second series from firs series.
            </summary>
            <param name="series1">The name of the series that stores the first group of data.</param>
            <param name="series2">The name of the series that stores the second group of data.</param>
            <param name="yIndex">Index of the Y value.</param>
            <returns>
            Return difference between the two series points
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Statistics.ZTestResult">
            <summary>
            The result of statistical Z test is stored in this class.
            If the Z value is closer to 0.0 than ZCriticalValueTwoTail or 
            even ZCriticalValueOneTail, then we can't deduce that D(hypothesized difference) is not 
            good mean value difference. In other case ( ZCriticalValueTwoTail is closer to 0.0
            than ZValue), there is a huge probability that  hypothesized difference D hadn't been 
            chosen correctly.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.ZTestResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Statistics.ZTestResult"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.ZTestResult.FirstSeriesMean">
            <summary>
            Gets first series mean value. Series represents sample from studied population.
            </summary>
            <value>The first series mean.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.ZTestResult.FirstSeriesVariance">
            <summary>
            Gets first series variance. Series represents sample from studied population.
            </summary>
            <value>The first series variance.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.ZTestResult.ProbabilityZOneTail">
            <summary>
            Gets the probability that the random variable has values at the tail, assuming that null hypothesis is true.
            </summary>
            <value>The probability Z one tail.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.ZTestResult.ProbabilityZTwoTail">
            <summary>
            Gets the probability that the random variable has values at the tails, assuming that null hypothesis is true.
            </summary>
            <value>The probability Z two tail.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.ZTestResult.SecondSeriesMean">
            <summary>
            Gets second series mean value. Series represents sample from studied population.
            </summary>
            <value>The second series mean.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.ZTestResult.SecondSeriesVariance">
            <summary>
            Gets second series variance. Series represents sample from studied population.
            </summary>
            <value>The second series variance.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.ZTestResult.ZCriticalValueOneTail">
            <summary>
            Gets critical value of Z which corresponds to Alpha probability.
            The area under normal probability density curve of tail is equal to alpha probability.
            </summary>
            <value>The Z critical value one tail.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.ZTestResult.ZCriticalValueTwoTail">
            <summary>
            Gets critical value of Z which corresponds to Alpha probability.
            The area under normal probability density curve of two symmetrical tails is equal to alpha probability.
            </summary>
            <value>The Z critical value two tail.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.ZTestResult.ZValue">
            <summary>
            Gets calculated z value. ( Value of normally distributed random variable with mean=0, and variance=1 ).
            </summary>
            <value>The Z value.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Statistics.TTestResult">
            <summary>
            The result of statistical T test is stored in this class.
            If the T value is closer to 0.0 than TCriticalValueTwoTail or 
            even TCriticalValueOneTail, then we can't deduce that D(hypothesized difference) is not 
            good mean value difference. In other case ( TCriticalValueTwoTail is closer to 0.0 
            than TValue), there is a huge probability that  hypothesized difference D hadn't been 
            chosen correctly.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.TTestResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Statistics.TTestResult"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.TTestResult.DegreeOfFreedom">
            <summary>
            Gets number of degrees of freedom of T variable student's distribution.
            </summary>
            <value>The degree of freedom.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.TTestResult.FirstSeriesMean">
            <summary>
            Gets first series mean value. Series represents sample from studied population.
            </summary>
            <value>The first series mean.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.TTestResult.FirstSeriesVariance">
            <summary>
            Gets first series variance. Series represents sample from studied population.
            </summary>
            <value>The first series variance.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.TTestResult.ProbabilityTOneTail">
            <summary>
            Gets the probability that the random variable has values at the tail, assuming that null hypothesis is true.
            </summary>
            <value>The probability T one tail.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.TTestResult.ProbabilityTTwoTail">
            <summary>
            Gets the probability that the random variable has values at the tails, assuming that null hypothesis is true.
            </summary>
            <value>The probability T two tail.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.TTestResult.SecondSeriesMean">
            <summary>
            Gets second series mean value. Series represents sample from studied population.
            </summary>
            <value>The second series mean.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.TTestResult.SecondSeriesVariance">
            <summary>
            Gets second series variance. Series represents sample from studied population.
            </summary>
            <value>The second series variance.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.TTestResult.TCriticalValueOneTail">
            <summary>
            Gets critical value of T which corresponds to Alpha probability.
            The area under normal probability density curve of tail is equal to alpha probability.
            </summary>
            <value>The T critical value one tail.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.TTestResult.TCriticalValueTwoTail">
            <summary>
            Gets critical value of T which corresponds to Alpha probability.
            The area under normal probability density curve of two symmetrical tails is equal to alpha probability.
            </summary>
            <value>The T critical value two tail.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.TTestResult.TValue">
            <summary>
            Gets calculated T value. ( Value of normally distributed random variable with mean=0, and variance=1 ).
            </summary>
            <value>The T value.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Statistics.FTestResult">
            <summary>
            The result of statistical F test is stored in this class.
            If the F value is closer to 1.0 than FCriticalValueOneTail, then we can't deduce that first variance 
            is smaller than second. But if F value is bigger than 1.0, then replace the series and run the 
            test again. Maybe second series variance is smaller than first.
            Note: That if the second test also fails, this doesn't automatically prove that your variances
            are equal.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.FTestResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Statistics.FTestResult"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.FTestResult.FirstSeriesMean">
            <summary>
            Gets first series mean value. Series represents sample from studied population.
            </summary>
            <value>The first series mean.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.FTestResult.FirstSeriesVariance">
            <summary>
            Gets first series variance. Series represents sample from studied population.
            </summary>
            <value>The first series variance.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.FTestResult.ProbabilityFOneTail">
            <summary>
            Gets the probability that the random variable has values at the tail, assuming that null hypothesis is true.
            </summary>
            <value>The probability F one tail.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.FTestResult.SecondSeriesMean">
            <summary>
            Gets second series mean value. Series represents sample from studied population.
            </summary>
            <value>The second series mean.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.FTestResult.SecondSeriesVariance">
            <summary>
            Gets second series variance. Series represents sample from studied population.
            </summary>
            <value>The second series variance.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.FTestResult.FCriticalValueOneTail">
            <summary>
            Gets critical value of F which corresponds to Alpha probability.
            The area under normal probability density curve of tail is equal to alpha probability.
            </summary>
            <value>The F critical value one tail.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.FTestResult.FValue">
            <summary>
            Gets calculated F value. ( Value of normally distributed random variable with mean=0, and variance=1 ).
            </summary>
            <value>The F value.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Statistics.AnovaResult">
            <summary>
            Result of Anova test is stored in this class.
            If AnovaResult.FRatio is farther from unity than FCritical value, then the null hypothesis
            (that all means are equal) fails.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.AnovaResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Statistics.AnovaResult"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.AnovaResult.DegreeOfFreedomBetweenGroups">
            <summary>
            Gets degrees of freedom between groups. This is simply a - 1, where a is number of series in anova test.
            </summary>
            <value>The degree of freedom between groups.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.AnovaResult.DegreeOfFreedomTotal">
            <summary>
            Gets total degrees of freedom. This is simply n*a - 1, where a is number of series in anova test, and n is number of points in series.
            </summary>
            <value>The degree of freedom total.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.AnovaResult.DegreeOfFreedomWithinGroups">
            <summary>
            Gets degrees of freedom within groups ( returns a*(n - 1) ).
            </summary>
            <value>The degree of freedom within groups.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.AnovaResult.FCriticalValue">
            <summary>
            Gets critical value of FRatio which corresponds to specified confidence probability.
            </summary>
            <value>The F critical value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.AnovaResult.FRatio">
            <summary>
            Gets FRatio ( ratio of between group variance and within group variance). This ratio should be
            compared with FCritical value, and if it is farther from unity than FCritical value, then the null hypothesis
            (that all means are equal) fails.
            </summary>
            <value>The F ratio.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.AnovaResult.MeanSquareVarianceBetweenGroups">
            <summary>
            Gets mean square variance between groups.
            </summary>
            <value>The mean square variance between groups.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.AnovaResult.MeanSquareVarianceWithinGroups">
            <summary>
            Gets mean square variance within groups.
            </summary>
            <value>The mean square variance within groups.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.AnovaResult.SumOfSquaresBetweenGroups">
            <summary>
            Gets sum of squares between groups.
            </summary>
            <value>The sum of squares between groups.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.AnovaResult.SumOfSquaresTotal">
            <summary>
            Gets total sum of squares.
            </summary>
            <value>The sum of squares total.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Statistics.AnovaResult.SumOfSquaresWithinGroups">
            <summary>
            Gets sum of squares within groups.
            </summary>
            <value>The sum of squares within groups.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions">
            <summary>
            Class contains Gamma, factorial, Beta and other functions used in statistical distributions formulas.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.GammaLn(System.Double)">
            <summary>
            Natural logarithm of gamma function ( for y > 0 ).
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.Gamma(System.Double)">
            <summary>
            Gamma function ( for y > 0 ).
            </summary>
            <param name="y"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.Factorial(System.Int32)">
            <summary>
            Factorial n! ( for n >= 0 ).
            </summary>
            <param name="n"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.FactorialLn(System.Int32)">
            <summary>
            Logarithm of factorial n! ( for n >= 0 ).
            </summary>
            <param name="n"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.Binomial(System.Int32,System.Int32)">
            <summary>
            Binomial coefficient n!/(k!(n-k)!) ( for n >= k >= 0 ).
            </summary>
            <param name="n"></param>
            <param name="k"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.BetaLn(System.Double,System.Double)">
            <summary>
            Logarithm of Beta function.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.Beta(System.Double,System.Double)">
            <summary>
            Beta function.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.NormalDistributionDensity(System.Double,System.Double,System.Double)">
            <summary>
            Returns Normal Distribution density function.
            </summary>
            <param name="x">Value at which the distribution density is evaluated.</param>
            <param name="m">Expected value of distribution (Mean value)</param>
            <param name="sigma">Variance of distribution</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.NormalDistributionDensityLn(System.Double,System.Double,System.Double)">
            <summary>
            Returns Logarithm of Normal Distribution density function.
            </summary>
            <param name="x">Value at which the distribution density is evaluated.</param>
            <param name="m">Expected value of distribution (Mean value)</param>
            <param name="sigma">Variance of distribution</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.Erf(System.Double)">
            <summary>
            Error function.
            </summary>
            <param name="x">.</param>
            <returns>Returns error function.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.InverseNormalDistribution(System.Double)">
            <summary>
            Inverse Normal Distribution function.
            This is rational approximation of Normal Distribution function.
            The absolute value of the relative error is less than 1.15�10-9 in the entire region.
            Lower tail quantile for standard normal distribution function.
            This function returns an approximation of the inverse cumulative
            standard normal distribution function.  I.e., given P, it returns
            an approximation to the X satisfying P = Pr{Z is smaller than X} where Z is a
            random variable from the standard normal distribution.
            </summary>
            <param name="p">Probability at which function is evaluated. p must be in ( 0,1 ) range. </param>
            <returns> Returns Inverse cumulative distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.NormalDistribution(System.Double)">
            <summary>
            Normal Distribution function.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
            <returns> Returns cumulative distribution. ( Returns probability that normally distributed random variable (X - mean)/sigma is smaller than x.).</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.InverseErf(System.Double)">
            <summary>
            Inverse Error function.
            This is rational approximation of erf function.
            The absolute value of the relative error is less than 1.15�10-9 in the entire region.
            </summary>
            <param name="x">value x is in (-1 , 1) range. </param>
            <returns>Returns Value that corresponds to given x. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.GammaCumulativeDistribution(System.Double,System.Double)">
            <summary>
            Returns cumulative gamma distribution. http://en.wikipedia.org/wiki/Gamma_distribution
            ( for x >= 0, a > 0 )
            </summary>
            <param name="a"></param>
            <param name="x"></param>
            <returns>Returns cumulative gamma distribution. (http://en.wikipedia.org/wiki/Gamma_distribution) ( for x >= 0, a > 0 )</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.BetaCumulativeDistribution(System.Double,System.Double,System.Double)">
            <summary>
            Returns cumulative beta distribution. 
            ( for x >= 0, a > 0, b > 0 )
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="x"></param>
            <returns>Returns cumulative beta distribution. http://en.wikipedia.org/wiki/Beta_distribution) ( for x >= 0, a > 0, b > 0 )</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.InverseBetaCumulativeDistribution(System.Double,System.Double,System.Double)">
            <summary>
            Returns inverse cumulative beta distribution. 
            ( for 1 >= p >= 0 , a > 0, b > 0 )
            </summary>
            <param name="a">Beta function parameter </param>
            <param name="b">Beta function parameter</param>
            <param name="p">Probability</param>
            <returns>Returns inverse cumulative beta distribution. http://en.wikipedia.org/wiki/Beta_distribution) ( for p in [0,1], a > 0, b > 0 )</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.TCumulativeDistribution(System.Double,System.Double,System.Boolean)">
            <summary>
            Returns cumulative T distribution. 
            ( for degreeOfFreedom > 0 )
            </summary>
            <param name="tValue"></param>
            <param name="degreeOfFreedom"></param>
            <param name="oneTail"></param>
            <returns>Returns T cumulative distribution. http://en.wikipedia.org/wiki/T_distribution) ( for degreeOfFreedom > 0 )</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.InverseTCumulativeDistribution(System.Double,System.Double,System.Boolean)">
            <summary>
            Inverse cumulative T distribution. 
            ( for degreeOfFreedom > 0 )
            </summary>
            <param name="p">Probability (must be in range [0, 1]. )</param>
            <param name="degreeOfFreedom"></param>
            <param name="oneTail"></param>
            <returns>Inverse T cumulative distribution. http://en.wikipedia.org/wiki/T_distribution) ( for degreeOfFreedom > 0 )</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.FCumulativeDistribution(System.Double,System.Double,System.Double)">
            <summary>
            Returns cumulative F distribution. 
            ( for firstDegreeOfFreedom >= 1 and firstDegreeOfFreedom >= 1 )
            </summary>
            <param name="fValue"></param>
            <param name="firstDegreeOfFreedom"></param>
            <param name="secondDegreeOfFreedom"></param>
            <returns>Returns T cumulative distribution. http://en.wikipedia.org/wiki/F_distribution) ( for degreeOfFreedom > 0 )</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.InverseFCumulativeDistribution(System.Double,System.Double,System.Double)">
            <summary>
            Inverse cumulative F distribution. 
            ( for firstDegreeOfFreedom >= 1 and firstDegreeOfFreedom >= 1 )
            </summary>
            <param name="p">Probability (must be in range [0, 1]. )</param>
            <param name="firstDegreeOfFreedom"></param>
            <param name="secondDegreeOfFreedom"></param>
            <returns>Inverse F cumulative distribution. http://en.wikipedia.org/wiki/F_distribution) ( for firstDegreeOfFreedom >= 1 and firstDegreeOfFreedom >= 1 )</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.GammaCumulativeS(System.Double,System.Double)">
            <summary>
            Gammas the cumulative S.
            </summary>
            <param name="a">A.</param>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.GammaCumulativeCF(System.Double,System.Double)">
            <summary>
            Gammas the cumulative CF.
            </summary>
            <param name="a">A.</param>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.BtaCumulativeCF(System.Double,System.Double,System.Double)">
            <summary>
            Btas the cumulative CF.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Statistics.UtilityFunctions.InverseBtaCumulativeBrent(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Inverses the bta cumulative brent.
            </summary>
            <param name="aa">The aa.</param>
            <param name="bb">The bb.</param>
            <param name="prblty">The prblty.</param>
            <param name="x1">The x1.</param>
            <param name="x2">The x2.</param>
            <param name="tol">The tol.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBaseStyleIdentity">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStyleIdentity.Dispose">
            <summary>
            Releases all resources used by the component.
            </summary>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStyleIdentity.#ctor(Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseStyleIdentity"/> class.
            </summary>
            <param name="styleInfoMap">The style info map.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStyleIdentity.GetBaseStyles(Syncfusion.Styles.IStyleInfo)">
            <summary>
            Returns an array with base styles for the specified style object.
            </summary>
            <param name="thisStyleInfo">The style object.</param>
            <returns>
            An array of style objects that are base styles for the current style object.
            </returns>
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseStyleIdentity.BaseStylesMap">
            <summary>
            Gets the base styles map.
            </summary>
            <value>The base styles map.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo">
            <summary>
            BaseStyles are styles that are used to uniformly affect an arbitrary set of styles that they are applied to.
            BaseStyles are applied to a style by associating them with a style using its BaseStyle property (<see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.BaseStyle"/>).
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo">
            <summary>
            This class contains appearance information for each ChartPoint <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoBase">
            <summary>
            Abstract implementation of StyleInfoBase.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoBase.#ctor(Syncfusion.Styles.StyleInfoIdentityBase,Syncfusion.Styles.StyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoBase"/> class.
            </summary>
            <param name="identity">The identity.</param>
            <param name="store">The store.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoBase.#ctor(Syncfusion.Styles.StyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoBase"/> class.
            </summary>
            <param name="store">The store.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoBase.CacheValues">
            <summary>
            Gets or sets a value indicating whether this instance should cache values
            for resolved base style properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoBase.WeakReferenceChangedListeners">
            <summary>
                A list of listeners that will be referenced using a WeakReference. The listeners
                must implement the Syncfusion.Styles.IStyleChanged interface. When this style
                object Syncfusion.Styles.StyleInfoBase.OnStyleChanged(Syncfusion.Styles.StyleInfoProperty)
                method is called it will then loop through all objects in this list and call
                each objects Syncfusion.Styles.IStyleChanged.StyleChanged(Syncfusion.Styles.StyleChangedEventArgs)
                method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.#cctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.#ctor">
            <summary>
            Overloaded constructor. Initializes a new style object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.#ctor(Syncfusion.Windows.Forms.Chart.ChartStyleInfo)">
            <summary>
            Initializes a new style object and copies all data from an existing style object.
            </summary>
            <param name="style">The style object that contains the original data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.#ctor(Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore)">
            <summary>
            Initializes a new style object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore"/>.
            </summary>
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>.
            All changes made in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore"/> object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.#ctor(Syncfusion.Styles.StyleInfoIdentityBase)">
            <summary>
            Initializes a new style object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.#ctor(Syncfusion.Styles.StyleInfoIdentityBase,Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore)">
            <summary>
            Initializes a new style object and associates it with an existing <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>.
            </param>
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>.
            All changes made in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.CopyFrom(Syncfusion.Styles.IStyleInfo)">
            <summary>
            Copies properties from another style object. This method raises Changing and Changed 
            notifications if the other object differs. (ModifyStyle does not raise these events).
            </summary>
            <param name="iStyle">The style object to be applied on the current object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Dispose">
            <summary>
            Method to dispose ChartStyleInfo object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.CreateSubObjectIdentity(Syncfusion.Styles.StyleInfoProperty)">
            <summary>
            Override this method to create a product-specific identity object for a sub object.
            </summary>
            <param name="sip"></param>
            <returns>
            An identity object for a subobject of this style.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.GetDefaultStyle">
            <summary>
            Override this method to return a default style object for your derived class.
            </summary>
            <returns>A default style object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.WriteXmlSchema(System.Xml.XmlWriter)">
            <summary>
            Serializes this style to XML.
            </summary>
            <param name="xw"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetTextColor">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetBaseStyle">
            <summary>
            Resets the base style.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetFont">
            <summary>
            Resets font information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShouldSerializeFont">
            <summary>
            Should the serialize font.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetBorder">
            <summary>
            Resets line information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShouldSerializeBorder">
            <summary>
            Should the serialize border.
            </summary>
            <returns> True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetInterior">
            <summary>
            Resets interior information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShouldSerializeInterior">
            <summary>
            Should the serialize interior.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetText">
            <summary>
            Resets text information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShouldSerializeText">
            <summary>
            Should the serialize text.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetToolTip">
            <summary>
            Resets ToolTip information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShouldSerializeToolTip">
            <summary>
            Should the serialize tool tip.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetToolTipFormat">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShouldSerializeToolTipFormat">
            <summary>
            Should the serialize tool tip format.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetImages">
            <summary>
            Resets ImageList information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShouldSerializeImages">
            <summary>
            Should the serialize images.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetImageIndex">
            <summary>
            Resets image index information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShouldSerializeImageIndex">
            <summary>
            Should the index of the serialize image.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetSymbol">
            <summary>
            Resets symbol information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShouldSerializeSymbol">
            <summary>
            Should the serialize symbol.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetCallout">
            <summary>
            Resets Callout information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShouldSerializeCallout">
            <summary>
            Should the serialize Callout.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetSystem">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShouldSerializeSystem">
            <summary>
            Should the serialize system.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetName">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetTextOrientation">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShouldSerializeTextOrientation">
            <summary>
            Should the serialize text orientation.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetDisplayShadow">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShouldSerializeDisplayShadow">
            <summary>
            Should the serialize display shadow.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetShadowOffset">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetShadowInterior">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetHighlightOnMouseOver">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetHihglightInterior">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetHighlightInterior">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetDimmedInterior">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetHitTestRadius">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetLabel">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetTextFormat">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetFormat">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetDisplayText">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetPointWidth">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetTextOffset">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetElementBorders">
            <summary>
            Resets border information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetRelatedPoints">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ResetUrl">
            <summary>
            Resets Url information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShouldSerializeUrl">
            <summary>
            Should the serialize Url.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Store">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore"/> object that holds all the data for this style object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Default">
            <summary>
            Returns a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> with default settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.TextShape">
            <summary>
             Gets or sets custom shape in the background of the displaytext. 
             Before use this, enable "DrawTextShape" property of series style.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.TextColor">
            <summary>
            Gets or sets the color of the text that is to be rendered for a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasTextColor">
            <summary>
            Gets a value indicating whether this instance has text color.
            </summary>
            <value>
            	<c>true</c> if this instance has text color; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.BaseStyle">
            <summary>
            Gets or sets the base style with default settings that is to be used 
            for the appearance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.AltTagFormat">
            <summary>
            Gets or sets the alt tag with default settings that is to be used. this is used in ASP.NET chart to define the format of "alt" tag value. 
            for the appearance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasBaseStyle">
            <summary>
            Gets a value indicating whether this instance has base style.
            </summary>
            <value>
            	<c>true</c> if this instance has base style; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.GdipFont">
            <summary>
            Creates or returns a cached GDI+ font generated from font information of
            the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Font"/> object.
            </summary>
            <value>The gdip font.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Font">
            <summary>
            Gets /sets the font that is to be used for drawing text.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasFont">
            <summary>
            Gets a value indicating whether font information has been initialized for the current object.
            </summary>
            <value><c>true</c> if this instance has font; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.GdipPen">
            <summary>
            Creates or returns a cached GDI+ font generated from font information of
            the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Font"/> object.
            </summary>
            <value>The gdip pen.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Border">
            <summary>
            Gets or sets the information that is to be used for drawing lines.
            </summary>
            <value>The border.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasBorder">
            <summary>
            Gets a value indicating whether line information has been initialized for the current object.
            </summary>
            <value>
            	<c>true</c> if this instance has border; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Interior">
            <summary>
            Gets or sets a solid backcolor, gradient or pattern style with both back and forecolor for a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>'s background.
            </summary>
            <value>The interior.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasInterior">
            <summary>
            Gets a value indicating whether interior information has been initialized for the current object.
            </summary>
            <value>
            	<c>true</c> if this instance has interior; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.CustomProperties">
            <summary>
            Returns a collection of custom property objects that have
            at least one initialized value. The primary purpose of this
            collection is to support design-time code serialization of
            custom properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Text">
            <summary>
            Gets or sets the text that is to be associated with a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>. This text will be rendered at a position near the point if
            <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.DisplayText"/> is set to True.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasText">
            <summary>
            Gets a value indicating whether text information has been initialized for the current object.
            </summary>
            <value><c>true</c> if this instance has text; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ToolTip">
            <summary>
            Gets or sets the ToolTip that is to be associated with the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
            <value>The tool tip.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasToolTip">
            <summary>
            Gets a value indicating whether ToolTip information has been initialized for the current object.
            </summary>
            <value>
            	<c>true</c> if this instance has tool tip; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ToolTipFormat">
            <summary>
            Gets or sets the formatting that is to be applied to values that are displayed as ToolTips.
            </summary>
            <value>The tool tip format.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasToolTipFormat">
            <summary>
            Gets a value indicating whether this instance has tool tip format.
            </summary>
            <value>
            	<c>true</c> if this instance has tool tip format; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Images">
            <summary>
            Gets or sets the imagelist that is to be associated with this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>. This property is used in conjunction with the
            <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ImageIndex"/> property to display images associated with this point.
            </summary>
            <value>The images.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasImages">
            <summary>
            Gets a value indicating whether ImageList information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ImageIndex">
            <summary>
            Gets or sets the image index from the associated <see cref="T:System.Windows.Forms.ImageList"/> property.
            </summary>
            <value>The index of the image.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasImageIndex">
            <summary>
            Gets a value indicating whether image index information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Symbol">
            <summary>
            Gets or sets the attributes of the symbol that is to be displayed at this point.
            </summary>
            <value>The symbol.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasSymbol">
            <summary>
            Gets a value indicating whether symbol information has been initialized for the current object.
            </summary>
            <value>
            	<c>true</c> if this instance has symbol; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Callout">
            <summary>
            Gets or sets the attributes of the Callout that is to be displayed at this point.
            </summary>
            <value>The Callout.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasCallout">
            <summary>
            Gets a value indicating whether Callout information has been initialized for the current object.
            </summary>
            <value>
            	<c>true</c> if this instance has Callout; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo._System">
            <summary>
            Gets or sets a value indicating whether [_ system].
            </summary>
            <value><c>true</c> if [_ system]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo._HasSystem">
            <summary>
            Gets a value indicating whether [_ has system].
            </summary>
            <value><c>true</c> if [_ has system]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo._Name">
            <summary>
            Gets or sets the name of the _.
            </summary>
            <value>The name of the _.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.TextOrientation">
            <summary>
            Gets or sets the orientation of text that is to be displayed at this point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasTextOrientation">
            <summary>
            Gets a value indicating whether this instance has text orientation.
            </summary>
            <value>
            	<c>true</c> if this instance has text orientation; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.DisplayShadow">
            <summary>
            Gets a value indicating whether a shadow should be rendered when this point is displayed.
            </summary>
            <value><c>true</c> if [display shadow]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasDisplayShadow">
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShadowOffset">
            <summary>
            Gets or sets the offset that is to be used when a shadow is rendered for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasShadowOffset">
            <summary>
            Gets a value indicating whether this style contains the local value of ShadowOffset property.
            </summary>
            <value>
            	<c>true</c> if this instance contains the local value of ShadowOffset property; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ShadowInterior">
            <summary>
            Gets or sets the interior attributes of the shadow displayed underneath this point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasShadowInterior">
            <summary>
            Gets a value indicating whether this style contains the local value of ShadowInterior property.
            </summary>
            <value>
            	<c>true</c> if this instance contains the local value of ShadowInterior property; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HighlightOnMouseOver">
            <summary>
            Gets a value indicating whether this point should be highlighted when the mouse moves over it.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasHighlightOnMouseOver">
            <summary>
            Gets a value indicating whether this style contains the local value of HighlightOnMouseOver property.
            </summary>
            <value>
            	<c>true</c> if this instance contains the local value of HighlightOnMouseOver property; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HighlightInterior">
            <summary>
            Gets or sets the attributes of the brush that are to be used to highlight this point when the mouse moves over it and <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasHighlightOnMouseOver"/>
            is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.DimmedInterior">
            <summary>
            Gets or sets the attributes of the brush that are to be used to hide this point when the mouse moves over on other point.        
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasHighlightInterior">
            <summary>
            Gets a value indicating whether this style contains the local value of HighlightInterior property.
            </summary>
            <value>
            	<c>true</c> if this instance contains the local value of HighlightInterior property; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasDimmedInterior">
            <summary>
            Gets a value indicating whether this style contains the local value of DimmedInterior property.
            </summary>
            <value>
            	<c>true</c> if this instance contains the local value of DimmedInterior property; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HitTestRadius">
            <summary>
            Controls the circle around this point that would be considered as being within the bounds of this
            point for hit-testing purposes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasHitTestRadius">
            <summary>
            Gets a value indicating whether this style contains the local value of HitTestRadius property.
            </summary>
            <value>
            	<c>true</c> if this instance contains the local value of HitTestRadius property; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Label">
            <summary>
            Gets or sets the Label value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasLabel">
            <summary>
            Gets a value indicating whether this style contains the local value of Label property.
            </summary>
            <value>
            	<c>true</c> if this instance contains the local value of Label property; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.TextFormat">
            <summary>
            Gets or sets the format that is to be applied to values that are displayed as text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasTextFormat">
            <summary>
            Gets a value indicating whether this style contains the local value of TextFormat property.
            </summary>
            <value>
            	<c>true</c> if this instance contains the local value of TextFormat property; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Format">
            <summary>
            Gets or sets the stringformat.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.DisplayText">
            <summary>
            Gets or Sets whether text should be displayed at this point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.DrawTextShape">
            <summary>
            Gets or sets whether text should be draw with shape in the background at this point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasDisplayText">
            <summary>
            Gets a value indicating whether this style contains the local value of DisplayText property.
            </summary>
            <value>
            	<c>true</c> if this instance contains the local value of DisplayText property; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.PointWidth">
            <summary>
            Gets or sets the width of this point relative to the total width available. It is specially useful with Gantt charts to render
            series that overlap.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasPointWidth">
            <summary>
            Gets a value indicating whether this style contains the local value of PointWidth property.
            </summary>
            <value>
            	<c>true</c> if this instance contains the local value of PointWidth property; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.TextOffset">
            <summary>
            Gets or sets the offset of the text from the position of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasTextOffset">
            <summary>
            Gets a value indicating whether this style contains the local value of TextOffset property.
            </summary>
            <value>
            	<c>true</c> if this instance contains the local value of TextOffset property; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.ElementBorders">
            <summary>
            Gets or sets the border settings for elements associated with the chart point. You can specify the inner and outer border. It is currently used
            only by symbols rendered by the ChartPoint.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasElementBorders">
            <summary>
            Gets a value indicating whether this style contains the local value of ElementBorders property.
            </summary>
            <value>
            	<c>true</c> if this instance contains the local value of ElementBorders property; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.RelatedPoints">
            <summary>
            Gets or sets the offset of the text from the position of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasRelatedPoints">
            <summary>
            Gets a value indicating whether this instance has related points.
            </summary>
            <value>
            	<c>true</c> if this instance has related points; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Url">
            <summary>
            Gets or sets the Url that is to be associated with a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>. This Url will be applied to the point if
            EnableUrl and CalcRegion property is set to True.This property is applicable only for ChartWeb.
            </summary>
            <value>The Url.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.HasUrl">
            <summary>
            Gets a value indicating whether Url information has been initialized for the current object.
            </summary>
            <value><c>true</c> if this instance has Url; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name" type="string">
                <para>
                The name of this base style.
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo.System">
            <summary>
            Indicates whether this base style is a system registered base style. System registered base styles are
            preregistered by the charting style system and are needed for the proper functioning of Essential
            Chart.
            </summary>
            <value><c>true</c> if system; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo.HasSystem">
            <summary>
            Gets a value indicating whether this instance has local value of System property.
            </summary>
            <value>
            	<c>true</c> if this instance has local value of System property; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo.Name">
            <summary>
            Gets or sets the name for this base style object.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo.HasName">
            <summary>
            Gets a value indicating whether this instance has name.
            </summary>
            <value><c>true</c> if this instance has name; otherwise, <c>false</c>.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo.BaseStylesMap">
            <summary>
            Gets  ChartBaseStylesMap object. Base styles are registered with and managed by a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap"/> object at the chart level.
            </summary>
            <value>The base styles map.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBorderStyle">
            <summary>
              Specifies the style of a specific point border in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorder"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.NotSet">
            <summary>
              No edge style is set.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.None">
            <summary>
               No border is drawn.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.Dashed">
            <summary>
              Border style that consists of a dashed line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.Dotted">
            <summary>
               Border style that consists of a dotted line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.DashDot">
            <summary>
              Border style that consists of a series of a dash and a dot.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.DashDotDot">
            <summary>
               Border style that consists of a series of a dash and two dots.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.Solid">
            <summary>
               Border style that consists of a solid line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderStyle.Standard">
            <summary>
               Use border as specified in the Chart.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBorderWeight">
            <summary>
                Specifies the weight of a specific point border in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorder"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderWeight.Thin">
            <summary>
               A thin line with 1 pixel.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderWeight.Medium">
            <summary>
             A thin line with dots.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBorderWeight.Thick">
            <summary>
              A thick line with 4 pixels.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBorder">
            <summary>
            The ChartBorder class holds formatting information for the border associated with a point.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.Clone">
            <summary>
            Creates an exact copy of this object.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorder"/> object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.#ctor">
            <overload>
            	Overloaded constructor.
            </overload>
            <summary>
            	Initializes a new instance of the ChartBorder class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.#ctor(Syncfusion.Windows.Forms.Chart.ChartBorderStyle)">
            <summary>
            	Initializes a new instance of the ChartBorder class with the specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderStyle"/>.
            </summary>
            <param name="style">
            	The line style that is to be applied to the border.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.#ctor(Syncfusion.Windows.Forms.Chart.ChartBorderStyle,System.Drawing.Color)">
            <summary>
            	Initializes a new instance of the ChartBorder class with the
            	specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderStyle"/> and
            	<see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="style">
            	A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderStyle"/> that is to be applied to the border.
            </param>
            <param name="color">
            	A <see cref="T:System.Drawing.Color"/> specifying the color of the border.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.#ctor(Syncfusion.Windows.Forms.Chart.ChartBorderStyle,System.Drawing.Color,Syncfusion.Windows.Forms.Chart.ChartBorderWeight)">
            <summary>
            	Initializes a new instance of the ChartBorder class with the
            	specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderStyle"/> and
            	<see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="style">
            	A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderStyle"/> that is to be applied to the border.
            </param>
            <param name="color">
            	A <see cref="T:System.Drawing.Color"/> specifying the color of the border.
            </param>
            <param name="weight">
            	A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderWeight"/> specifying the thickness of the border.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorder"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the ISerializable interface and returns the data needed to serialize the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorder"/>.
            </summary>
            <param name="info">A SerializationInfo object containing the information required to serialize the object.</param>
            <param name="context">A StreamingContext object containing the source and destination of the serialized stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.MakeBlackAndWhite">
            <summary>
            Returns a copy of this border object replacing the color with <see cref="P:System.Drawing.Color.Black"/>.
            </summary>
            <returns>A black colored <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorder"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.Dispose">
            <summary>
            Method to dispose ChartBorder object
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.ToString">
            <summary>
            Returns a compact string representation of the ChartBorder.
            All information in ChartBorder will be encoded.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <overload>
            Overloaded. Overridden. Returns a compact string representation of the ChartBorder.
            All information in ChartBorder will be encoded.
            </overload>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.ToString(System.String)">
            <summary>
            Returns a compact string representation of the ChartBorder.
            All information in ChartBorder will be encoded.
            </summary>
            <param name="format">Format in which string representation should be rendered. "compact" for compact text; default is full text version.</param>
            <returns>The String.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.Equals(System.Object)">
            <summary>
            	Overridden. Returns True if the ChartBorder object passed is equal.
            </summary>
            <param name="o">The object to compare to.</param>
            <returns>
            	True if both are equal; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.op_Equality(Syncfusion.Windows.Forms.Chart.ChartBorder,Syncfusion.Windows.Forms.Chart.ChartBorder)">
            <summary cref="M:Syncfusion.Windows.Forms.Chart.ChartBorder.Equals(System.Object)">
            	The basic == operator.
            </summary>
            <param name="lhs">The left-hand side of the operator.</param>
            <param name="rhs">The right-hand side of the operator.</param>
            <returns>
            	Boolean value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.op_Inequality(Syncfusion.Windows.Forms.Chart.ChartBorder,Syncfusion.Windows.Forms.Chart.ChartBorder)">
            <summary cref="M:Syncfusion.Windows.Forms.Chart.ChartBorder.Equals(System.Object)">
            	The basic != operator.
            </summary>
            <param name="lhs">The left-hand side of the operator.</param>
            <param name="rhs">The right-hand side of the operator.</param>
            <returns>
            	Boolean value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.Compare(Syncfusion.Windows.Forms.Chart.ChartBorder,Syncfusion.Windows.Forms.Chart.ChartBorder)">
            <summary cref="M:Syncfusion.Windows.Forms.Chart.ChartBorder.Equals(System.Object)">
            	The basic == operator.
            </summary>
            <param name="lhs">The left-hand side of the operator.</param>
            <param name="rhs">The right-hand side of the operator.</param>
            <returns>
            	Boolean value.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBorder.GetHashCode">
            <summary>
            Overridden. Returns the hash code for the current ChartBorder instance.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorder.IsEmpty">
            <summary>
            gets whether this ChartBorder is uninitialized.
            </summary>
            <value><c>True</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorder.Style">
            <summary>
            Gets what type of border line style this border has. This value
            comes from the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderStyle"/> enumeration.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorder.Weight">
            <summary>
            Gets the weight of the border the chart.  This value
            comes from the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorderWeight"/>  enumeration.
            </summary>
            <value>The weight.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorder.Color">
            <summary>
            Specifies the color of the chart border. This value
            comes from the <see cref="T:System.Drawing.Color"/>  enumeration.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBorder.Width">
            <summary>
            Gets the width in pixels of the chart border.
            </summary>
            <value>The width.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore.OuterProperty">
            <summary>
            The Outer Property.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore.InnerProperty">
            <summary>
            The Inner Property.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore"/> class.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore.#cctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore.InitializeStaticVariables">
            <summary>
            Internal method to initialize static variables of ChartBordersInfoStore object after disposing it
            </summary>
            <returns>ChartBordersInfoStore</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore.Dispose">
            <summary>
            Method to dispose ChartBordersInfoStore object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore.Clone">
            <summary>
            Creates an exact copy of the current object.
            </summary>
            <returns>
            A <see cref="T:Syncfusion.Styles.StyleInfoStore"/> with same data as the current object.
            </returns>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore.StaticDataStore">
            <summary>
            Static data must be declared static in derived classes (this avoids collisions
            when StyleInfoStore is used in the same project for different types of style
            classes).
            </summary>
            <value>The Static Data Store.</value>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for borders in a symbol. The inner / outer border of
            the symbol can be configured individually with a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBorder"/> value. Borders that
            have not been initialized will inherit default values from a base style.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSubStyleInfoBase">
            <summary>
            Abstract implementation of StyleInfoSubObjectBase.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSubStyleInfoBase.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Styles.StyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoBase"/> class.
            </summary>
            <param name="identity">The identity.</param>
            <param name="store">The store.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSubStyleInfoBase.#ctor(Syncfusion.Styles.StyleInfoStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoBase"/> class.
            </summary>
            <param name="store">The store.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSubStyleInfoBase.CacheValues">
            <summary>
            Gets or sets a value indicating whether this instance should cache values
            for resolved base style properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSubStyleInfoBase.WeakReferenceChangedListeners">
            <summary>
                A list of listeners that will be referenced using a WeakReference. The listeners
                must implement the Syncfusion.Styles.IStyleChanged interface. When this style
                object Syncfusion.Styles.StyleInfoBase.OnStyleChanged(Syncfusion.Styles.StyleInfoProperty)
                method is called it will then loop through all objects in this list and call
                each objects Syncfusion.Styles.IStyleChanged.StyleChanged(Syncfusion.Styles.StyleChangedEventArgs)
                method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/>  instance and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/>.
            All changes made in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.Dispose">
            <summary>
            Method to dispose ChartBordersInfo object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.GetDefaultStyle">
            <summary>
            Overridden. Returns a ChartBordersInfo object with default values.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/> object with default values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.ResetAll">
            <summary>
            Resets the inner and outer border with one command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.ResetInner">
            <summary>
            Resets the inner border.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.ShouldSerializeInner">
            <summary>
            Should the serialize inner.
            </summary>
            <returns>Returns bool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.ResetOuter">
            <summary>
            Resets the outer border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.Default">
            <summary>
            Returns a default <see cref="T:Syncfusion.Windows.Forms.Chart.ChartBordersInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> class
            will return the default border info that this method generates through it's
            overridden version of <see cref="M:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.GetDefaultStyle"/>.
             </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.All">
            <summary>
            Sets the inner and outer border with one command.
            </summary>
            <value>All.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.Inner">
            <summary>
            Gets or sets the inner border.
            </summary>
            <value>The inner.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.HasInner">
            <summary>
            Indicates whether the inner border has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBordersInfo.Outer">
            <summary>
            Gets or sets the outer border.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.FacenameProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Facename"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.SizeProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Size"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.BoldProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Bold"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.ItalicProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Italic"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.UnderlineProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Underline"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.StrikeoutProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Strikeout"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.OrientationProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Orientation"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.UnitProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Unit"/> property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.FontFamilyTemplateProperty">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.FontFamilyTemplate"/> property. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.InitializeStaticVariables">
            <summary>
            Internal method to initialize static variables in ChartFontInfoStore object after disposing it
            </summary>
            <returns>ChartFontInfoStore</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.#ctor">
            <overload>
            Overloaded Contructor.
            </overload>
            <summary>
            Initializes an empty <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor. Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.Clone">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.Dispose">
            <summary>
            Method to dispose ChartFontInfoStore object
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore.StaticDataStore">
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo">
             <summary>
             Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for font settings associated with a point.
             Each font property of the point can be configured individually. <para/>
             Font properties that have not been initialized will inherit default
             values from a base style.
             </summary>
             <example>
             The following code changes font information for a point:
             <code lang="C#">
            
                        this.chart.Series[0].Styles[0].Font.Facename = "Arial";
             </code>
             </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Dispose">
            <summary>
            Clears all resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.#ctor">
            <overload>
            Overloaded constructor.
            </overload>
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Chart.ChartFontInfoStore)">
            <summary>
            Initalizes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/>.
            All changes made in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.SizeInWorldUnit(System.Drawing.Font)">
            <summary>
            Gets the em-size of the specified font object in world-units.
            </summary>
            <param name="font">The font object.</param>
            <returns>The size in world units.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.OnStyleChanged(Syncfusion.Styles.StyleInfoProperty)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.GetDefaultStyle">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetName">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Facename"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeName">
            <summary>
            Indicates whether the Facename property should be serialized
            </summary>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetSize">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Size"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeSize">
            <summary>
            Indicates whether the Size property should be serialized
            </summary>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetOrientation">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Orientation"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeOrientation">
            <summary>
            Indicates whether the Orientation property should be serialized
            </summary>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetBold">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Bold"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeBold">
            <summary>
            Indicates whether the Bold property should be serialized
            </summary>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetItalic">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Italic"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeItalic">
            <summary>
            Indicates whether the Italic property should be serialized
            </summary>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetUnderline">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Underline"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeUnderline">
            <summary>
            Indicates whether the Underline property should be serialized
            </summary>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetStrikeout">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Strikeout"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeStrikeout">
            <summary>
            Indicates whether the Strikeout property should be serialized
            </summary>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetUnit">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Unit"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeUnit">
            <summary>
            Indicates whether the Unit property should be serialized
            </summary>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ResetFontFamilyTemplate">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.FontFamilyTemplate"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.ShouldSerializeFontFamilyTemplate">
            <summary>
            Indicates whether the FontFamily property should be serialized
            </summary>
            <returns></returns>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Default">
            <summary>
            Returns a default <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> class
            will return the default border info that this method generates through its
            overridden version of <see cref="M:Syncfusion.Windows.Forms.Chart.ChartFontInfo.GetDefaultStyle"/>.
             </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.GdipFont">
            <summary>
            Creates or returns a cached GDI+ font generated from font information of
            this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.FontStyle">
            <summary>
            Gets or sets the style information for the font.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Facename">
            <summary>
            Gets or sets the face name of this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasName">
            <summary>
            Indicates whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Facename"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Size">
            <summary>
            Gets or sets the size in pixels of this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasSize">
            <summary>
            Indicates whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Size"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Orientation">
            <summary>
            Gets or sets the orientation of this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasOrientation">
            <summary>
            Indicates whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Orientation"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Bold">
            <summary>
            Indicates whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object is bold.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasBold">
            <summary>
            Indicates whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Bold"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Italic">
            <summary>
            Indicates whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object is italic.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasItalic">
            <summary>
            Indicates whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Italic"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Underline">
            <summary>
            Indicates whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object is underlined.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasUnderline">
            <summary>
            Indicates whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Underline"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Strikeout">
            <summary>
            Indicates whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object
            should draw a horizontal line through the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasStrikeout">
            <summary>
            Indicates whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Strikeout"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Unit">
            <summary>
            Gets or sets the graphics unit for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasUnit">
            <summary>
            Indicates whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.Unit"/> property has been initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.FontFamilyTemplate">
            <summary>
            Gets or sets the font family of this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.HasFontFamilyTemplate">
            <summary>
            Indicates whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartFontInfo.FontFamilyTemplate"/> property has been initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.sd">
            <summary>
            The Static Data class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.ColorProperty">
            <summary>
            The Color Property.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.WidthProperty">
            <summary>
            The Width property.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.AlignmentProperty">
            <summary>
            The Alignment Property.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.DashStyleProperty">
            <summary>
            The DashStyle Property.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.DashPatternProperty">
            <summary>
            The DashPattern Property .
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.InitializeStaticData">
            <summary>
            Internam method to initialize static variables in ChartLineInfoStore object after disposing it
            </summary>
            <returns>ChartLineInfoStore</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore"/> class.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.Dispose">
            <summary>
            Method to dispose ChartlineInfoStore object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.Clone">
            <summary>
            Creates an exact copy of the current object.
            </summary>
            <returns>
            A <see cref="T:Syncfusion.Styles.StyleInfoStore"/> with same data as the current object.
            </returns>
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore.StaticDataStore">
            <summary>
            Static data must be declared static in derived classes (this avoids collisions
            when StyleInfoStore is used in the same project for different types of style
            classes).
            </summary>
            <value></value>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo">
            <summary>
            Provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for border line settings associated with a point.
            Properties that have not been initialized will inherit default
            values from a base style.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLineInfo.m_defaultLine">
            <summary>
            Store default <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLineInfo.m_pen">
            <summary>
            Store pen to draw.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLineInfo.m_updatePen">
            <summary>
            Store value indicates that need recreate pen.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.ResetColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Color"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.ShouldSerializeColor">
            <summary>
            Should the color of the serialize.
            </summary>
            <returns>Returns true whether it should serialize the element else false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.ResetWidth">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Width"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.ShouldSerializeWidth">
            <summary>
            Should the width of the serialize.
            </summary>
            <returns>Returns true whether if it should serialize the element else false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.ResetAlignment">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Alignment"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.ShouldSerializeAlignment">
            <summary>
            Should the serialize alignment.
            </summary>
            <returns>Returns true whether if it should serialize the element else false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.ResetDashStyle">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.DashStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.ShouldSerializeDashStyle">
            <summary>
            Should the serialize dash style.
            </summary>
            <returns>Returns true whether if it should serialize the element else false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.ResetDashPattern">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.DashPattern"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.ShouldSerializeDashPattern">
            <summary>
            Should the serialize dash pattern.
            </summary>
            <returns>
            Returns true whether if it should serialize the element else false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.#cctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.#ctor">
            <summary>
            Overloaded. Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Chart.ChartLineInfoStore)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/>.
            All changes made in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.OnStyleChanged(Syncfusion.Styles.StyleInfoProperty)">
            <summary>
            Notifies the associated identity object that a specific property was changed.
            </summary>
            <param name="sip">Identifies the property to look for.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.GetDefaultStyle">
            <summary>
            Calculate default style.
            </summary>
            <returns>Default style.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>
            A copy of the current object registered with the new owner style object.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.CreateDefault">
            <summary>
            Resets the changes made in the ChartLineInfo class.
            </summary>
            <returns>Returns default ChartLineInfo. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.GetGdipPen">
            <summary>
            Calulates the pen. If <see cref="F:Syncfusion.Windows.Forms.Chart.ChartLineInfo.m_updatePen"/> is set to TRUE create new Pen otherwise return <see cref="F:Syncfusion.Windows.Forms.Chart.ChartLineInfo.m_pen"/>.
            </summary>
            <returns>Pen to draw.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Dispose">
            <summary>
            Method to dispose ChartLineInfo object
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Default">
            <summary>
            Gets a default <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLineInfo"/> to be used with a default style.
            </summary>
            <value>The default.</value>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> class
            will return the default line info that this method generates through its
            overridden version of <see cref="M:Syncfusion.Windows.Forms.Chart.ChartLineInfo.GetDefaultStyle"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.GdipPen">
            <summary>
            Gets pen associated with style.
            </summary>
            <value>The gdip pen.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Color">
            <summary>
            Gets or sets the color of the line. For line based charts it works only when 3D is enabled.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.HasColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Color"/> property has been initialized.
            </summary>
            <value><c>True</c> if this instance has color; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Width">
            <summary>
            Gets or sets the width in pixels of the line represented by this object.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.HasWidth">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Width"/> property has been initialized.
            </summary>
            <value><c>True</c> if this instance has width; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Alignment">
            <summary>
            Gets or sets the pen alignment of the line represented by this object.
            </summary>
            <value>The alignment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.HasAlignment">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.Alignment"/> property has been initialized.
            </summary>
            <value>
               <c>True</c> if this instance has alignment; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.DashStyle">
            <summary>
            Gets or sets the style of the line represented by this object.
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.DashStyle"/>
            </summary>
            <value>The dash style.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.HasDashStyle">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.DashStyle"/> property has been initialized.
            </summary>
            <value>
               <c>True</c> if this instance has dash style; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.DashPattern">
            <summary>
            Gets or sets the dash pattern of the line represented by this object.
            </summary>
            <value>The dash pattern.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.HasDashPattern">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartLineInfo.DashPattern"/> property has been initialized.
            </summary>
            <value>
               <c>True</c> if this instance has dash pattern; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointSymbolInfo">
            <summary>
               For certain chart types such as Gantt charts, it is required to have relationships between points.
               These are called 'Related Points'. This class represents symbol information that links such related points.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointSymbolInfo.#ctor(Syncfusion.Windows.Forms.Chart.ChartSymbolShape,System.Int32,System.Drawing.Color,System.Drawing.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointSymbolInfo"/> class.
            </summary>
            <param name="shape">The shape.</param>
            <param name="imageIndex">Index of the image.</param>
            <param name="color">The color.</param>
            <param name="size">The size.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointSymbolInfo.Shape">
            <summary>
            Gets the shape of the symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointSymbolInfo.ImageIndex">
            <summary>
            Gets the index value of the image that is to be used by the symbol.
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Images"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointSymbolInfo.Color">
            <summary>
            Gets the color of this symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointSymbolInfo.Size">
            <summary>
            Gets the size of this symbol.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.PointsProperty">
            <summary>
            The Points Property.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.ColorProperty">
            <summary>
            The Color Property.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.WidthProperty">
            <summary>
            The Width Property.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.AlignmentProperty">
            <summary>
            The Alignment Property.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.DashStyleProperty">
            <summary>
            The DashStyle Property.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.DashPatternProperty">
            <summary>
            The DashPattern Property.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.StartSymbolProperty">
            <summary>
            The StartSymbol Property.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.EndSymbolProperty">
            <summary>
            The EndSymbol Property.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.BorderProperty">
            <summary>
            The Border Property.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore"/> class.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFontInfoStore"/> from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.Clone">
            <summary>
            Creates an exact copy of the current object.
            </summary>
            <returns>
            A <see cref="T:Syncfusion.Styles.StyleInfoStore"/> with same data as the current object.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.#cctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore.StaticDataStore">
            <summary>
            Static data must be declared static in derived classes (this avoids collisions
            when StyleInfoStore is used in the same project for different types of style
            classes).
            </summary>
            <value>The Static Data.</value>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo">
            <summary>
               For certain chart types such as Gantt charts, it is required to have relationships between points.
               These are called 'Related Points'. This class represents such related points.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Dispose">
            <summary>
            Clears all the resources used by the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/> class.
            </summary>  
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/>.
            All changes made in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>
            A copy of the current object registered with the new owner style object.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetGdipFont">
            <summary>
            Resets the gdip font.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.GetGdipPen">
            <summary>
            Gets the gdip pen.
            </summary>
            <returns>Returns GdipPen object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.OnStyleChanged(Syncfusion.Styles.StyleInfoProperty)">
            <param name="sip"></param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.GetDefaultStyle">
            <summary>
            Override this method to return a default style object for your derived class.
            </summary>
            <returns>A default style object.</returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetPoints">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Points"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ShouldSerializePoints">
            <summary>
            Should the serialize points.
            </summary>
            <returns>True if the instance should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetColor">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Color"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ShouldSerializeColor">
            <summary>
            Should the color of the serialize.
            </summary>
            <returns>True if the instance should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetWidth">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Width"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ShouldSerializeWidth">
            <summary>
            Should the width of the serialize.
            </summary>
            <returns>True if the instance should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetAlignment">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Alignment"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ShouldSerializeAlignment">
            <summary>
            Should the serialize alignment.
            </summary>
            <returns>True if the instance should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetDashStyle">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.DashStyle"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ShouldSerializeDashStyle">
            <summary>
            Should the serialize dash style.
            </summary>
            <returns>True if the instance should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetDashPattern">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.DashPattern"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ShouldSerializeDashPattern">
            <summary>
            Should the serialize dash pattern.
            </summary>
            <returns>True if the instance should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetStartSymbol">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.StartSymbol"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ShouldSerializeStartSymbol">
            <summary>
            Should the serialize start symbol.
            </summary>
            <returns>True if the instance should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetEndSymbol">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.EndSymbol"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ShouldSerializeEndSymbol">
            <summary>
            Should the serialize end symbol.
            </summary>
            <returns>True if the instance should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ResetBorder">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Border"/> property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.ShouldSerializeBorder">
            <summary>
            Should the serialize border.
            </summary>
            <returns>True if the instance should serialize otherwise False.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Default">
            <summary>
            Returns a default <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo"/> that is to be used with a default style.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfo.Default"/> of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> class
            will return the default border info that this method generates through its
            overridden version of <see cref="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.GetDefaultStyle"/>.
             </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.GdipPen">
            <summary>
            Gets the GDI+ pen.
            </summary>
            <value>The GDI+ pen.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Count">
            <summary>
            Gets the number of points.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Points">
            <summary>
            Gets or sets an array of indices of related points.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasPoints">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Points"/> property has been initialized.
            </summary>
            <value>
            	<c>true</c> if this instance has points; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Color">
            <summary>
            Gets or sets the color that is to be used for any visual representation.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasColor">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Color"/> property has been initialized.
            </summary>
            <value><c>true</c> if this instance has color; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Width">
            <summary>
            Gets or sets the width that is to be used for any visual representation.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasWidth">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Width"/> property has been initialized.
            </summary>
            <value><c>true</c> if this instance has width; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Alignment">
            <summary>
            Gets or sets the pen alignment that is to be used for any visual representation.
            </summary>
            <value>The alignment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasAlignment">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Alignment"/> property has been initialized.
            </summary>
            <value>
            	<c>true</c> if this instance has alignment; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.DashStyle">
            <summary>
            Gets or sets the dash style that is to be used for any visual representation.
            </summary>
            <value>The dash style.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasDashStyle">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.DashStyle"/> property has been initialized.
            </summary>
            <value>
            	<c>true</c> if this instance has dash style; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.DashPattern">
            <summary>
            Gets or sets the dash pattern that is to be used for any visual representation.
            </summary>
            <value>The dash pattern.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasDashPattern">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.DashPattern"/> property has been initialized.
            </summary>
            <value>
            	<c>true</c> if this instance has dash pattern; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.StartSymbol">
            <summary>
            Gets or sets the start symbol that is to be used for any visual representation linking this related point with others.
            </summary>
            <value>The start symbol.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasStartSymbol">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.StartSymbol"/> property has been initialized.
            </summary>
            <value>
            	<c>true</c> if this instance has start symbol; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.EndSymbol">
            <summary>
            Gets or sets the end symbol that is to be used for any visual representation linking this related point with others.
            </summary>
            <value>The end symbol.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasEndSymbol">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.EndSymbol"/> property has been initialized.
            </summary>
            <value>
            	<c>true</c> if this instance has end symbol; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Border">
            <summary>
            Gets or sets the border that is to be used for any visual representation linking this related point with others.
            </summary>
            <value>The border.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.HasBorder">
            <summary>
            Gets a value indicating whether the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointInfo.Border"/> property has been initialized.
            </summary>
            <value>
            	<c>true</c> if this instance has border; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo">
            <summary>
            This class contains border information that is to be used for any visual representation linking a related point with others.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.#ctor(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.PenAlignment,System.Drawing.Drawing2D.DashStyle,System.Single[])">
            <summary>
            Overloaded constructor.
            </summary>
            <param name="color" type="System.Drawing.Color">
                <para>
                Color of the border line.
                </para>
            </param>
            <param name="width" type="float">
                <para>
                Width of the line.
                </para>
            </param>
            <param name="alignment" type="System.Drawing.Drawing2D.PenAlignment">
                <para>
                Pen alignment to be used to render the line.
                </para>
            </param>
            <param name="dashStyle" type="System.Drawing.Drawing2D.DashStyle">
                <para>
                Dash style of the line.
                </para>
            </param>
            <param name="dashPattern" type="float[]">
                <para>
                Dash pattern of the line.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.#ctor(System.Drawing.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo"/> class.
            </summary>
            <param name="color">The color.</param>
            <param name="width">The width.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo"/> class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.GetGdipPen">
            <summary>
            Gets the GDI+ pen.
            </summary>
            <returns>Returns the GdipPen.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.GdipPen">
            <summary>
            Gets the GDI+ pen.
            </summary>
            <value>The GDI+ pen.</value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.Color">
            <summary>
            Gets the color of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.Width">
            <summary>
            Gets the width of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.Alignment">
            <summary>
            Gets the pen alignment of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.DashStyle">
            <summary>
            Gets the dash style of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo.DashPattern">
            <summary>
            Gets the dash pattern of the line.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesComposedStylesModel">
            <summary>
            The ChartSeriesComposedStylesModel class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel">
             <summary>
                 This interface represents the 'composed' state of styles for a single series. When composed, styles have all their attributes
                 initialized from their base styles and any other styles that forms a part of their inheritance structure. Composed styles are used
                 by the chart directly.
             </summary>
             <remarks>
            
             </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel.GetOfflineStyle">
            <summary>
                Overloaded. Returns an 'offline' version of the series style. Offline styles do not propagate changes made, back to the data store.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel.GetOfflineStyle(System.Int32)">
            <summary>
            Returns an 'offline' version of the point style. Offline styles do not propagate changes made, back to the data store.
            </summary>
            <param name="index">Index value of the style.</param>
            <returns> Returns ChartStyleInfo object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel.ResetCache">
            <summary>
                Removes any information that is cached.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel.GetBaseStyles(Syncfusion.Styles.IStyleInfo,System.Int32)">
            <summary>
            Looks up base style information for any <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> object.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap"/>
            </summary>
            <param name="chartStyleInfo">The style object for which base style information is to be retrieved.</param>
            <param name="index">The index value of the style.</param>
            <returns>Returns ChartStyleInfo array. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel.ChangeStyle(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
              Changes the style stored at the specified index to be the same as the specified style. Affects the data store.
            </summary>
            <param name="style" type="Syncfusion.Windows.Forms.Chart.ChartStyleInfo">
                <para>
                Style object whose information is to be stored.
                </para>
            </param>
            <param name="index" type="int">
                <para>
                The index value of the style to be changed.
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel.Style">
            <summary>
             Returns the style object that is common to the series (for which this model holds style information).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesComposedStylesModel.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesComposedStylesModel.#ctor(Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesComposedStylesModel"/> class.
            </summary>
            <param name="chartSeries">The chart series.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesComposedStylesModel.GetOfflineStyle">
            <summary>
            Overloaded. Returns an 'offline' version of the series style. Offline styles do not propagate changes made, back to the data store.
            </summary>
            <returns>Returns ChartStyleInfo object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesComposedStylesModel.GetOfflineStyle(System.Int32)">
            <summary>
            Returns an 'offline' version of the point style. Offline styles do not propagate changes made, back to the data store.
            </summary>
            <param name="index">Index value of the style.</param>
            <returns>Returns ChartStyleInfo object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesComposedStylesModel.GetBaseStyles(Syncfusion.Styles.IStyleInfo,System.Int32)">
            <summary>
            Looks up base style information for any <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> object.
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap"/>
            </summary>
            <param name="chartStyleInfo">The style object for which base style information is to be retrieved.</param>
            <param name="index">The index value of the style.</param>
            <returns>Returns ChartStyleInfo array.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesComposedStylesModel.ChangeStyle(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
            Changes the style stored at the specified index to be the same as the specified style. Affects the data store.
            </summary>
            <param name="style">Style object whose information is to be stored.</param>
            <param name="index">The index value of the style to be changed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesComposedStylesModel.ChangeStyle(Syncfusion.Windows.Forms.Chart.ChartStyleInfo)">
            <summary>
            Changes the style.
            </summary>
            <param name="style">The style.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesComposedStylesModel.ResetCache">
            <summary>
            Removes any information that is cached.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesComposedStylesModel.GetStyle(System.Int32,System.Boolean)">
            <summary>
            Gets the style.
            </summary>
            <param name="index">The index.</param>
            <param name="offLine">if set to <c>true</c> [off line].</param>
            <returns>Returns ChartStyleInfo object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesComposedStylesModel.Style">
            <summary>
            Gets the style object that is common to the series (for which this model holds style information).
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesComposedStylesModel.Item(System.Int32)">
            <summary>
            The ChartStyleInfo indexer.
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIndexer">
            <summary>
            Indexer helper class to access individual point styles.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIndexer.#ctor(Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIndexer"/> class.
            </summary>
            <param name="chartSeries">The chart series.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIndexer.Item(System.Int32)">
            <summary>
            Returns the ChartStyleInfo object at the specified index.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesStylesModel">
            <summary>
            The ChartSeriesStylesModel class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel">
            <summary>
               This interface represents the complete style information for a series in the chart.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel.GetStyleAt(System.Int32)">
            <summary>
                Returns the style information at the specified index. This is the actual style information and not composed style information.
            </summary>
            <param name="index" type="int">
                <para>
                The index value of the point for which style information is needed.
                </para>
            </param>
            <returns>
                Style information at the specified index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel.ChangeStyleAt(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
                Changes style information at the specified index.
            </summary>
            <param name="style" type="Syncfusion.Windows.Forms.Chart.ChartStyleInfo">
                <para>
                 Style whose attributes are to be stored.
                </para>
            </param>
            <param name="index" type="int">
                <para>
                 Index value where they need to be stored.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel.ChangeStyle(Syncfusion.Windows.Forms.Chart.ChartStyleInfo)">
            <summary>
                Changes series style information.
            </summary>
            <param name="style" type="Syncfusion.Windows.Forms.Chart.ChartStyleInfo">
                <para>
                Style whose attributes are to be stored in the series style.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel.GetBaseStyles(Syncfusion.Styles.IStyleInfo,System.Int32)">
            <summary>
                Accesses base style information for the specified style.
            </summary>
            <param name="chartStyleInfo" type="Syncfusion.Styles.IStyleInfo">
                <para>
                 Style for which base style information is needed.
                </para>
            </param>
            <param name="index" type="int">
                <para>
                Index value where the style is stored.
                </para>
            </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel.Style">
            <summary>
                Gets the series style information.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel.ComposedStyles">
            <summary>
                Completely composed styles can be accessed using the interface returned by this property.
                Composed styles have all information initialized from base styles and any other styles along their
                inheritance hierarchy.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.IChartSeriesStylesModel.Changed">
            <summary>
            Event that is raised when style information is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesStylesModel.#ctor(Syncfusion.Windows.Forms.Chart.IChartSeriesStylesHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesStylesModel"/> class.
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesStylesModel.GetStyleAt(System.Int32)">
            <summary>
            Returns the style information at the specified index. This is the actual style information and not composed style information.
            </summary>
            <param name="index">The index value of the point for which style information is needed.</param>
            <returns>
            Style information at the specified index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesStylesModel.ChangeStyleAt(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
            Changes style information at the specified index.
            </summary>
            <param name="style">Style whose attributes are to be stored.</param>
            <param name="index">Index value where they need to be stored.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesStylesModel.ChangeStyle(Syncfusion.Windows.Forms.Chart.ChartStyleInfo)">
            <summary>
            Changes series style information.
            </summary>
            <param name="style">Style whose attributes are to be stored in the series style.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesStylesModel.GetBaseStyles(Syncfusion.Styles.IStyleInfo,System.Int32)">
            <summary>
            Accesses base style information for the specified style.
            </summary>
            <param name="styleInfo">Style for which base style information is needed.</param>
            <param name="index">Index value where the style is stored.</param>
            <returns>Returns ChartStyleInfo array.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesStylesModel.RaiseStyleChanged(System.Int32)">
            <summary>
            Raises the style changed.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartSeriesStylesModel.Changed">
            <summary>
            Occurs when model is changed
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesStylesModel.Style">
            <summary>
            Gets the series style information.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSeriesStylesModel.ComposedStyles">
            <summary>
            Gets the ComposedStyles. Completely composed styles can be accessed using the interface returned by this property.
            Composed styles have all information initialized from base styles and any other styles along their
            inheritance hierarchy.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventHandler">
             <summary>
               Delegate that is to be used for events that broadcast changes to <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>.
             </summary>
             <param name="sender" type="object">
                 <para>
            	     Sender.
                 </para>
             </param>
             <param name="args" type="Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs">
                 <para>
                  Argument.
                 </para>
             </param>
             <remarks>
            
             </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs">
            <summary>
            Argument that is to be used in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventHandler"/> delegate.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.InvalidIndex">
            <summary>
            The Invalid Index.
            </summary>
            /// <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.CreateResetEventArgs">
            <summary>
            Creates the Reset typeof of arguments.
            </summary>
            <returns>Returns ChartStyleChangedEventArgs object.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.#ctor(Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.Type,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="xIndex">Index of the x.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.EventType">
            <summary>
                Gets the type of the event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.Index">
            <summary>
                Gets the index value of the changed style.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.Type">
            <summary>
            Specifies the types of changes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.Type.Changed">
            <summary>
            Style has been changed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartStyleChangedEventArgs.Type.Reset">
            <summary>
            Style has been reset to default.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties">
            <summary>
            This class holds arbitrary style information.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.style">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> object that holds and
            gets the data for this custom property object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.#ctor(Syncfusion.Windows.Forms.Chart.ChartStyleInfo)">
            <summary>
            Overloaded. Initializes the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection"/> object
            with a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> that the properties of this
            class will belong to.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> object that holds and
            gets the data for this custom property object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.#ctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection"/> object
            with an empty <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> object. When you later
            set the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.StyleInfo"/> property, the changes in this object
            will be copied over to the new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties._CreateStyleInfoProperty(System.Type,Syncfusion.Styles.StaticData,System.Type,System.String)">
            <summary>
            _s the create style info property.
            </summary>
            <param name="componentType">Type of the component.</param>
            <param name="sd">The sd.</param>
            <param name="type">The type.</param>
            <param name="propertyName">Name of the property.</param>
            <returns>Returns StyleInfoProperty object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.CreateStyleInfoProperty(System.Type,System.Type,System.String)">
            <overload>
            Overloaded. Registers a new custom property.
            </overload>&gt;
            <summary>
            Registers a new custom property.
            </summary>
            <param name="componentType">The type of your derived custom property class.</param>
            <param name="type">The type of the property.</param>
            <param name="propertyName">The name of the property. This must match a property member in your class.</param>
            <returns>A <see cref="T:Syncfusion.Styles.StyleInfoProperty"/> object that you should use for getting and setting
            values.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.CreateStyleInfoProperty(System.Type,System.String)">
            <summary>
            Registers a new custom property.
            </summary>
            <param name="componentType">The type of your derived custom property class.</param>
            <param name="propertyName">The name of the property. This must match a property member in your class.</param>
            <returns>A <see cref="T:Syncfusion.Styles.StyleInfoProperty"/> object that you should use for getting and setting
            values.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.StyleInfo">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> that holds and
            gets the data for this custom property object. When you
            set the <see cref="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties.StyleInfo"/> property all prior changes in this object
            will be copied over to the new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection">
            <summary>
            Implements a collection of custom property objects that have
            at least one initialized value. The primary purpose of this
            collection is to support design-time code serialization of
            custom properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection.#ctor(Syncfusion.Styles.StyleInfoBase)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection"/> with a reference
            to the parent style object.
            </summary>
            <param name="styleInfo"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection.Add(Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties)">
            <summary>
            Copies the initialized properties of the specified custom property
            to the parent style object and attaches the custom property object
            with the parent style object.
            </summary>
            <param name="value">A ChartStyleInfoCustomProperties with
            custom properties.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection.CopyTo(Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomProperties[],System.Int32)">
            <summary>
              <para>Copies the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection"/> elements to a one-dimensional <see cref="T:System.Array"/> at the specified index.</para>
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> which is the destination of the objects from the instance. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.ICollection"/> is greater than the available space from <paramref name="index"/> to the end of the destination <paramref name="array"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            The type of the source <see cref="T:System.Collections.ICollection"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection.Count">
            <summary>
            Gets the number of objects in this collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoCustomPropertiesCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
            <returns>
            An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject">
            <summary>
            <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject"/> is an abstract base class for classes
            to be used as sub-objects in a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>.
            </summary>
            <remarks>
            <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject"/> is derived from <see cref="T:Syncfusion.Styles.StyleInfoBase"/>
            and thus provides the same easy way to provide properties that can inherit values
            from base styles at run-time.<para/>
            The difference is that <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject"/> supports this inheritance
            mechanism as a sub-object from a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/>. A sub-object needs to
            have knowledge about its parent object and be able to walk the base styles from the
            parent object.<para/>
            Examples for implementation of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject"/> is the font
            class in Essential Chart.<para/>
            Programmers can derive their own style classes from <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject"/>
            and add type-safe (and Intelli-sense)
            supported custom properties to the style class.
            <para/>
            See the overview of <see cref="T:Syncfusion.Styles.StyleInfoBase"/> for further discussion about style objects.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Styles.StyleInfoStore)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoStore"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Styles.StyleInfoBase"/>.
            <param name="store">A <see cref="T:Syncfusion.Styles.StyleInfoStore"/> that holds data for this object.</param>
            All changes made in this style object will be saved in the <see cref="T:Syncfusion.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject.#ctor(Syncfusion.Styles.StyleInfoStore)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoStore"/>.
            </summary>
            <param name="store">A <see cref="T:Syncfusion.Styles.StyleInfoStore"/> that holds data for this object.
            All changes made in this style object will be saved in the <see cref="T:Syncfusion.Styles.StyleInfoStore"/> object.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoSubObject.GetChartStyleInfo">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> that this sub-object belongs to.
            </summary>
            <returns>The parent style object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeriesComposedStylesModel,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity"/> class.
            </summary>
            <param name="data">The data.</param>
            <param name="index">The index.</param>
            <param name="offLine">if set to <c>true</c> style is in offline.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity.GetBaseStyles(Syncfusion.Styles.IStyleInfo)">
            <summary>
            Returns an array with base styles for the specified style object.
            </summary>
            <param name="thisStyleInfo">The style object.</param>
            <returns>
            An array of style objects that are base styles for the current style object.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoIdentity.OnStyleChanged(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <summary>
            Occurs when a property in the <see cref="T:Syncfusion.Styles.StyleInfoBase"/> has changed.
            </summary>
            <param name="style">The <see cref="T:Syncfusion.Styles.StyleInfoBase"/> instance that has changed.</param>
            <param name="sip">A <see cref="T:Syncfusion.Styles.StyleInfoProperty"/> that identifies the property to operate on.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore">
            <summary>
            Implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore.#cctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore"/> class.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore.InitializeStaticVariables">
            <summary>
            Internal method to initialize static variables of the object after disposing it
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore.Dispose">
            <summary>
            Method to dispose ChartStyleInfoStore object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Returns clone object of StyleInfoStore.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore.GetSchema">
            <summary>
            Returns the <see cref="T:System.Xml.Schema.XmlSchema"/> specifies the correct store.
            </summary>
            <returns>Returns new instance of XmlSchema object.</returns>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore.StaticData">
            <summary>
            Gets the static data.
            </summary>
            <value>The static data.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleInfoStore.StaticDataStore">
            <summary>
            Static data must be declared static in derived classes (this avoids collisions
            when StyleInfoStore is used in the same project for different types of style
            classes).
            </summary>
            <value></value>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap">
            <summary>
            This class acts as a repository for common styles (base styles). Such styles are registered and held in this repository.
            This enables them to be referenced by their registered names. When changes are made to registered base styles, they are
            propagated through the system.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.Register(Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo)">
            <summary>
                Registers the specified base style with the styles map.
            </summary>
            <param name="style" type="Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo">
                <para>
                The style that is to be registered. The <see cref="P:Syncfusion.Windows.Forms.Chart.ChartBaseStyleInfo.Name"/> property will be used as the registration name.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.Lookup(System.String)">
            <summary>
                Look ups and returns the base style with the specified name.
            </summary>
            <param name="name" type="string">
                <para>
                Name to look for.
                </para>
            </param>
            <returns>
                A base style if look up is successful; NULL otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.Remove(System.String)">
            <summary>
               Removes the base style registered under the specified name from this repository.
            </summary>
            <param name="name" type="string">
                <para>
                 Name of base style to remove.
                </para>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.Clear">
            <summary>
             Remove references to all registered styles.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.GetBaseStyles(Syncfusion.Windows.Forms.Chart.ChartStyleInfo)">
            <summary>
            Gets the base styles.
            </summary>
            <param name="styleInfo">The style info.</param>
            <returns>Returns ChartStyleInfo array.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.GetSubBaseStyles(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,Syncfusion.Windows.Forms.Chart.ChartStyleInfo)">
            <summary>
            Gets the sub base styles.
            </summary>
            <param name="styleInfo">The style info.</param>
            <param name="baseStyleInfo">The base style info.</param>
            <returns>Returns ChartStyleInfo array.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.GetSubBaseStyles(Syncfusion.Windows.Forms.Chart.ChartStyleInfo,Syncfusion.Windows.Forms.Chart.ChartStyleInfo[])">
            <summary>
            Gets the sub base styles.
            </summary>
            <param name="styleInfo">The style info.</param>
            <param name="styles">The styles.</param>
            <returns>Returns ChartStyleInfo array.</returns>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartBaseStylesMap.Item(System.String)">
            <summary>
            Returns the ChartBaseStyleInfo object registered with the specified name.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSymbolShape">
            <summary>
            Specifies the various available symbols that may be displayed at a ChartPoint.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.None">
            <summary>
            No symbol is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Arrow">
            <summary>
            Arrow is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.InvertedArrow">
            <summary>
            Inverted Arrow is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Circle">
            <summary>
            Circle is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Cross">
            <summary>
            Cross is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.HorizLine">
            <summary>
            Horizontal Line is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.VertLine">
            <summary>
            Vertical Line is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Diamond">
            <summary>
            Diamond is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Square">
            <summary>
            Square is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Triangle">
            <summary>
            Triangle is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.InvertedTriangle">
            <summary>
            Inverted triangle is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Hexagon">
            <summary>
            Hexagon is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Pentagon">
            <summary>
            Pentagon is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Star">
            <summary>
            Star is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolShape.Image">
            <summary>
            Image specified in ImageIndex is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomShape.Circle">
            <summary>
            Circle is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomShape.Square">
            <summary>
            Square is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomShape.Hexagon">
            <summary>
            Hexagon is displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomShape.Pentagon">
            <summary>
            Pentagon is displayed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore">
            <summary>
            This class implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.ShapeProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.ImageIndexProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.ColorProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.HighlightColorProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.DimmedColorProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.SizeProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.OffsetProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.MarkerProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.BorderProperty">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore"/> class from a serialization stream.
            </summary>
            <param name="info">An object that holds all the data needed to serialize or deserialize this instance.</param>
            <param name="context">Describes the source and destination of the serialized stream specified by info.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.InitializeStaticData">
            <summary>
            Internal method to initialize static variables of ChartSymbolInfoStore object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.Dispose">
            <summary>
            Method to dispose ChartSymbolInfoStore object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.Clone">
            <summary>
            Creates an exact copy of the current object.
            Base class implementation of this method calls Activator.CreateInstance to achieve the same result.
            I assume calling new directly is more efficient. Otherwise this override is obsolete.
            </summary>
            <returns>
            A <see cref="T:Syncfusion.Styles.StyleInfoStore"/> with same data as the current object.
            </returns>
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore.StaticDataStore">
            <summary>
            Static data must be declared static in derived classes (this avoids collisions
            when StyleInfoStore is used in the same project for different types of style
            classes).
            </summary>
            <value></value>
            <override/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore">
            <summary>
            This class implements the data store for the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore"/> object.
            </summary>
            <seealso cref="T:Syncfusion.Styles.StyleInfoStore"/>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.EnableProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.TextProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.TextOffsetProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.OffsetXProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.OffsetYProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.FontProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.TextFormatProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.PositionProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.ColorProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.TextColorProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.BorderProperty">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.InitializeStaticData">
            <summary>
            Internal method to initialize static variables of ChartCalloutInfoStore object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.Dispose">
            <summary>
            Method to dispose ChartCalloutInfoStore object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.Clone">
            <summary>
            Creates an exact copy of the current object.
            Base class implementation of this method calls Activator.CreateInstance to achieve the same result.
            I assume calling new directly is more efficient. Otherwise this override is obsolete.
            </summary>
            <returns>
            A <see cref="T:Syncfusion.Styles.StyleInfoStore"/> with same data as the current object.
            </returns>
            <override/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore.StaticDataStore">
            <summary>
            Static data must be declared static in derived classes (this avoids collisions
            when StyleInfoStore is used in the same project for different types of style
            classes).
            </summary>
            <value></value>
            <override/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfoStore.ColorProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfoStore.ShapeTypeProperty">
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfoStore.BorderProperty">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfoStore.InitializeStaticVariables">
            <summary>
            Internal method to initialize static variables of this object after disposing it
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfoStore.Dispose">
            <summary>
            Method to dispose ChartCustomShapeInfoStore object
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfoStore.StaticDataStore">
            <summary>
            Static data must be declared static in derived classes (this avoids collisions
            when StyleInfoStore is used in the same project for different types of style
            classes).
            </summary>
            <value></value>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfo.#cctor">
            <summary>
            Initializes the new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfoStore)">
            <summary>
            Initializes a new  instance of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>.
            All changes made in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfo.Dispose">
            <summary>
            Method to dispose ChartCustomShapeInfo object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfo.GetDefaultStyle">
            <summary>
            Returns <see cref="P:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfo.Default"/>.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfo"/> object with default values.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfo.Default">
            <summary>
            Gets a default <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> that is to be used with a default custom shape.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfo.Color">
            <summary>
            Gets or sets the color that is to be used with the symbol.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfo.Type">
            <summary>
            Gets or sets the style of the shape that is to be displayed.
            Default shape is square. 
            It will support the limitted shape(Square, Circle, Hexagon, Pentagon) draw around the custom point
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomShapeInfo.Border">
            <summary>
             Gets or sets border to the custom shape.
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo">
            <summary>
            This class provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for symbols associated with a ChartPoint.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.#cctor">
            <summary>
            Initializes the new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore)">
            <summary>
            Initializes a new  instance of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>.
            All changes made in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ResetShape">
            <summary>
            Resets the symbol style.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ShouldSerializeShape">
            <summary>
            Should the serialize shape.
            </summary>
            <returns>True if the element should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ResetImageIndex">
            <summary>
            Resets the image index.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ShouldSerializeImageIndex">
            <summary>
            Should the index of the serialize image.
            </summary>
            <returns>True if the element should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ResetColor">
            <summary>
            Resets the symbol's color.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ShouldSerializeColor">
            <summary>
            Should the color of the serialize.
            </summary>
            <returns>True if the element should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ResetHighlightColor">
            <summary>
            Resets the color of the highlighted symbol.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ShouldSerializeHighlightColor">
            <summary>
            Shoulds the color of the serialize highlighted symbol.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ResetDimmedColor">
            <summary>
            Resets the color of the dimmed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ShouldSerializeDimmedColor">
            <summary>
            Shoulds the color of the serialize dimmed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ResetSize">
            <summary>
            Resets the size.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ShouldSerializeSize">
            <summary>
            Should the size of the serialize.
            </summary>
            <returns>True if the element should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ResetOffset">
            <summary>
            Resets the offset.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ShouldSerializeOffset">
            <summary>
            Should the serialize offset.
            </summary>
            <returns>True if the element should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ResetBorder">
            <summary>
            Resets line information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ShouldSerializeBorder">
            <summary>
            Should the serialize border.
            </summary>
            <returns>True if the element should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ResetMarker">
            <summary>
            Resets the marker.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Dispose">
            <summary>
            Method to dispose ChartSymbolInfo object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.CreateObject(Syncfusion.Styles.StyleInfoSubObjectIdentity,System.Object)">
            <summary>
            Creates the new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> class.
            </summary>
            <param name="identity">The identity.</param>
            <param name="store">The store.</param>
            <returns>Returns new ChartSymbolInfo instance. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.CreateSubObjectIdentity(Syncfusion.Styles.StyleInfoProperty)">
            <summary>
            Override this method to create a product-specific identity object for a sub object.
            </summary>
            <param name="sip"></param>
            <returns>
            An identity object for a subobject of this style.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>
            A copy of the current object registered with the new owner style object.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.GetDefaultStyle">
            <summary>
            Returns <see cref="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Default"/>.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> object with default values.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Default">
            <summary>
            Gets a default <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/> that is to be used with a default style.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Shape">
            <summary>
            Gets or sets the style of the symbol that is to be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HasShape">
            <summary>
            Gets a value indicating whether the style has been initialized.
            </summary>
            <value><c>true</c> if this instance has shape; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.ImageIndex">
            <summary>
            Gets or sets the image index that is to be used to access the image from the associated <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStyleInfo"/> object's ImageList.
            </summary>
            <value>The index of the image.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HasImageIndex">
            <summary>
            Gets a value indicating whether the ImageIndex has been initialized.
            </summary>
            <value>
            	<c>true</c> if this instance has image index; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Color">
            <summary>
            Gets or sets the color that is to be used with the symbol.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HasColor">
            <summary>
            Gets a value indicating whether the symbol's color has been initialized.
            </summary>
            <value><c>true</c> if this instance has color; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HighlightColor">
            <summary>
            Gets or sets the color of the highlighted symbol.
            </summary>
            <value>The color of the highlighted symbol.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HasHighlightColor">
            <summary>
            Gets a value indicating whether this instance has highlight color.
            </summary>
            <value>
            	<c>true</c> if this instance has highlight color; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.DimmedColor">
            <summary>
            Gets or sets the color of the dimmed symbol.
            </summary>
            <value>The color of the dimmed symbol.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HasDimmedColor">
            <summary>
            Gets a value indicating whether this instance has dimmed color.
            </summary>
            <value>
            	<c>true</c> if this instance has dimmed color; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Size">
            <summary>
            Gets or sets the size of the symbol.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HasSize">
            <summary>
            Gets a value indicating whether the size of the symbol has been initialized.
            </summary>
            <value><c>true</c> if this instance has size; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Offset">
            <summary>
            Gets or sets the offset of the symbol.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HasOffset">
            <summary>
            Gets a value indicating whether the offset of the symbol has been initialized.
            </summary>
            <value>
            	<c>true</c> if this instance has offset; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Border">
            <summary>
            Gets or sets the information that is to be used for drawing border.
            </summary>
            <value>The border.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HasBorder">
            <summary>
            Gets a value indicating whether line information has been initialized for the current object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.Marker">
            <summary>
            Gets or sets the marker of the symbol.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo.HasMarker">
            <summary>
            Indicates whether the marker of the symbol has been initialized.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo">
            <summary>
            This class provides a <see cref="T:Syncfusion.Styles.StyleInfoSubObjectBase"/> object for callout associated with a ChartPoint.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.#cctor">
            <summary>
            Initializes the new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo"/>.
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.#ctor(Syncfusion.Styles.StyleInfoSubObjectIdentity,Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore)">
            <summary>
            Initializes a new  instance of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo"/> object and associates it with an existing <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/>.
            </summary>
            <param name="identity">A <see cref="T:Syncfusion.Styles.StyleInfoSubObjectIdentity"/> that holds the identity for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo"/>.
            <param name="store">A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore"/> that holds data for this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo"/>.
            All changes made in this style object will be saved in the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfoStore"/> object.</param>
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ResetEnable">
            <summary>
            Resets enable calloutr.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ShouldSerializeEnable">
            <summary>
            Should the enable of the serialize.
            </summary>
            <returns>True if the element should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ResetTextOffset">
            <summary>
            Resets TextOffset information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ShouldSerializeTextOffset">
            <summary>
            Should the serialize TextOffset.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ResetOffsetX">
            <summary>
            Resets OffsetX information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ShouldSerializeOffsetX">
            <summary>
            Should the serialize OffsetX.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ResetOffsetY">
            <summary>
            Resets OffsetY information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ShouldSerializeOffsetY">
            <summary>
            Should the serialize OffsetY.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ResetFont">
            <summary>
            Resets Font information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ShouldSerializeFont">
            <summary>
            Should the serialize Font.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ResetDisplayTextAndFormat">
            <summary>
            Resets textFormat information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ShouldSerializeDisplayTextAndFormat">
            <summary>
            Should the serialize textFormat.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ResetPosition">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ShouldSerializePosition">
            <summary>
            Should the serialize text Position.
            </summary>
            <returns>True if the element should serialize otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ResetColor">
            <summary>
            Resets the callout's color.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ShouldSerializeColor">
            <summary>
            Should the color of the serialize.
            </summary>
            <returns>True if the element should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ResetTextColor">
            <summary>
            Resets the callout's text color.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ShouldSerializeTextColor">
            <summary>
            Should the text color of the serialize.
            </summary>
            <returns>True if the element should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ResetBorder">
            <summary>
            Resets line information.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.ShouldSerializeBorder">
            <summary>
            Should the serialize border.
            </summary>
            <returns>True if the element should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.Dispose">
            <summary>
            Method to dispose ChartCalloutInfo object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.CreateObject(Syncfusion.Styles.StyleInfoSubObjectIdentity,System.Object)">
            <summary>
            Creates the new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo"/> class.
            </summary>
            <param name="identity">The identity.</param>
            <param name="store">The store.</param>
            <returns>Returns new ChartCalloutInfo instance. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.CreateSubObjectIdentity(Syncfusion.Styles.StyleInfoProperty)">
            <summary>
            Override this method to create a product-specific identity object for a sub object.
            </summary>
            <param name="sip"></param>
            <returns>
            An identity object for a subobject of this style.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.MakeCopy(Syncfusion.Styles.StyleInfoBase,Syncfusion.Styles.StyleInfoProperty)">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <param name="newOwner">The new owner style object for the copied object.</param>
            <param name="sip">The identifier for this object.</param>
            <returns>
            A copy of the current object registered with the new owner style object.
            </returns>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.GetDefaultStyle">
            <summary>
            Returns <see cref="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.Default"/>.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo"/> object with default values.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.Default">
            <summary>
            Gets a default <see cref="T:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo"/> that is to be used with a default style.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.Enable">
            <summary>
            Gets or sets the boolean value that is to be used with the callout.
            </summary>
            <value>The Enable.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.HasEnable">
            <summary>
            Gets a value indicating whether the callout feature is enabled.
            </summary>
            <value><c>true</c> if this instance has boolean; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.Text">
            <summary>
            This is associated with a Text property and used for internal purpose.
            <see cref="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.Text"/> duplicate for displaytextandformat.
            </summary>
            <value>duplicate value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.TextOffset">
            <summary>
            This is associated with a Text property and used for internal purpose.
            <see cref="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.TextOffset"/> offset for text.
            </summary>
            <value>TextOffset value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.HasTextOffset">
            <summary>
            Gets a value indicating whether TextOffset information has been initialized for the current object.
            </summary>
            <value><c>true</c> if this instance has TextOffset; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.OffsetX">
            <summary>
            This is associated with a Text property and used for internal purpose.
            <see cref="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.OffsetX"/> offset for text.
            </summary>
            <value>OffsetX value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.HasOffsetX">
            <summary>
            Gets a value indicating whether OffsetX information has been initialized for the current object.
            </summary>
            <value><c>true</c> if this instance has OffsetX; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.OffsetY">
            <summary>
            This is associated with a Text property and used for internal purpose.
            <see cref="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.OffsetY"/> offset for text.
            </summary>
            <value>OffsetY value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.HasOffsetY">
            <summary>
            Gets a value indicating whether OffsetY information has been initialized for the current object.
            </summary>
            <value><c>true</c> if this instance has OffsetY; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.Font">
            <summary>
            Gets or sets the font that is to be associated with a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>. This font will be rendered at a position near the point if
            <see cref="!:DisplayText"/> is set to True.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.HasFont">
            <summary>
            Gets a value indicating whether Font information has been initialized for the current object.
            </summary>
            <value><c>true</c> if this instance has text; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.DisplayTextAndFormat">
            <summary>
            Gets or sets the textFormat that is to be associated with a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPoint"/>. This text will be rendered with prefix or sufix text with the format of {0},{1},{2}
            <see cref="!:Callout.DisplayTextAndFormat"/> is set to True.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.HasDisplayTextAndFormat">
            <summary>
            Gets a value indicating whether textFormat information has been initialized for the current object.
            </summary>
            <value><c>true</c> if this instance has textFormat; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.Position">
            <summary>
            Gets or sets the Position of text that is to be displayed at this point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.HasPosition">
            <summary>
            Gets a value indicating whether this instance has text Position.
            </summary>
            <value>
            	<c>true</c> if this instance has text orientation; otherwise, <c>false</c>.
            </value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.HiddenX">
            <summary>
            This is associated with the label position placement on mouse dragging.
            </summary>
            <value>duplicate value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.HiddenY">
            <summary>
            This is associated with the label position placement on mouse dragging.
            </summary>
            <value>duplicate value.</value>
            
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.IsDragged">
            <summary>
            This is associated with the label placement on mouse dragging.
            </summary>
            <value>duplicate value.</value>
            
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.Color">
            <summary>
            Gets or sets the color that is to be used with the callout.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.HasColor">
            <summary>
            Gets a value indicating whether the callout's color has been initialized.
            </summary>
            <value><c>true</c> if this instance has color; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.TextColor">
            <summary>
            Gets or sets the text color that is to be used with the callout.
            </summary>
            <value>The text color.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.HasTextColor">
            <summary>
            Gets a value indicating whether the callout's text color has been initialized.
            </summary>
            <value><c>true</c> if this instance has color; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.Border">
            <summary>
            Gets or sets the information that is to be used for drawing border.
            </summary>
            <value>The border.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCalloutInfo.HasBorder">
            <summary>
            Gets a value indicating whether line information has been initialized for the current object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.GraphProxyEventArgs">
            <summary>
            Represents the data of <see cref="T:Syncfusion.Windows.Forms.Chart.GraphProxyEventHandler"/>.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.GraphProxyEventArgs.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.GraphProxyEventArgs"/> class.
            </summary>
            <param name="properties">The properties.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.GraphProxyEventArgs.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.GraphProxyEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Chart.GraphProxy.GraphInvoke"/> event.
            </summary>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.GraphProxy">
            <summary>
            Represents the proxy of <see cref="T:System.Drawing.Graphics"/> instance.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.GraphProxy.#ctor(System.Drawing.Graphics)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.GraphProxy"/> class.
            </summary>
            <param name="g">The g.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.GraphProxy.Create(System.IntPtr,Syncfusion.Windows.Forms.Chart.GraphProxy@)">
            <summary>
            Creates GraphProxy instance by the specified handle.
            </summary>
            <param name="handle">The handle.</param>
            <param name="proxy">The proxy.</param>
            <returns>Returns Graphics object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.GraphProxy.Create(System.Drawing.Image,Syncfusion.Windows.Forms.Chart.GraphProxy@)">
            <summary>
            Creates GraphProxy instance by the specified <see cref="T:System.Drawing.Image"/>.
            </summary>
            <param name="img">The img.</param>
            <param name="proxy">The proxy.</param>
            <returns>Returns Graphics object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.GraphProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)">
            <summary>
            When overridden in a derived class, invokes the method that is specified in the provided <see cref="T:System.Runtime.Remoting.Messaging.IMessage"></see> on the remote object that is represented by the current instance.
            </summary>
            <param name="msg">A <see cref="T:System.Runtime.Remoting.Messaging.IMessage"></see> that contains a <see cref="T:System.Collections.IDictionary"></see> of information about the method call.</param>
            <returns>
            The message returned by the invoked method, containing the return value and any out or ref parameters.
            </returns>
            <PermissionSet><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="Infrastructure"/></PermissionSet>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.GraphProxy.GraphInvoke">
            <summary>
            Occurs when <see cref="T:System.Drawing.Graphics"/> methods is called.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.Data">
            <summary>
            This class contains the data of geomerty path.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Data.#ctor(System.Drawing.Drawing2D.PathData)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Data"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Data.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Data"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Data.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Data.ParseString(System.String)">
            <summary>
            Parses the string.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Data.PathData">
            <summary>
            Gets the path data.
            </summary>
            <value>The path data.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Data.Path">
            <summary>
            Gets the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
            </summary>
            <value>The path.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Data.DataRegex">
            <summary>
            Gets the data regex.
            </summary>
            <value>The data regex.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.EClipRule">
            <summary>
            Represents the value of ClipRule attribute of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EClipRule.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.EClipRule"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EClipRule.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EClipRule.op_Equality(Syncfusion.Windows.Forms.Chart.SvgBase.EClipRule,Syncfusion.Windows.Forms.Chart.SvgBase.EClipRule)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EClipRule.op_Inequality(Syncfusion.Windows.Forms.Chart.SvgBase.EClipRule,Syncfusion.Windows.Forms.Chart.SvgBase.EClipRule)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EClipRule.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EClipRule.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EClipRule.Nonzero">
            <summary>
            Gets the "Nonzero" value.
            </summary>
            <value>The nonzero.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EClipRule.Evenodd">
            <summary>
            Gets the "Evenodd" value.
            </summary>
            <value>The evenodd.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch">
            <summary>
            Represents the value of FontStretch attribute of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.Parse(System.String)">
            <summary>
            Parses the specified STR.
            </summary>
            <param name="str">The STR.</param>
            <returns>Returns EFontStretch object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.Normal">
            <summary>
            Gets the normal.
            </summary>
            <value>The normal.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.Wider">
            <summary>
            Gets the wider.
            </summary>
            <value>The wider.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.Narrower">
            <summary>
            Gets the narrower.
            </summary>
            <value>The narrower.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.UltraCondensed">
            <summary>
            Gets the ultra condensed.
            </summary>
            <value>The ultra condensed.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.ExtraCondensed">
            <summary>
            Gets the extra condensed.
            </summary>
            <value>The extra condensed.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.Condensed">
            <summary>
            Gets the condensed.
            </summary>
            <value>The condensed.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.SemiCondensed">
            <summary>
            Gets the semi condensed.
            </summary>
            <value>The semi condensed.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.SemiExpanded">
            <summary>
            Gets the semi expanded.
            </summary>
            <value>The semi expanded.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.Expanded">
            <summary>
            Gets the expanded.
            </summary>
            <value>The expanded.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.ExtraExpanded">
            <summary>
            Gets the extra expanded.
            </summary>
            <value>The extra expanded.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStretch.UltraExpanded">
            <summary>
            Gets the ultra expanded.
            </summary>
            <value>The ultra expanded.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStyle">
            <summary>
            Represents the value of FontStyle attribute of SVG DOM.
            </summary>    
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStyle.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStyle"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStyle.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStyle.op_Equality(Syncfusion.Windows.Forms.Chart.SvgBase.EFontStyle,Syncfusion.Windows.Forms.Chart.SvgBase.EFontStyle)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStyle.op_Inequality(Syncfusion.Windows.Forms.Chart.SvgBase.EFontStyle,Syncfusion.Windows.Forms.Chart.SvgBase.EFontStyle)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStyle.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStyle.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStyle.Normal">
            <summary>
            Gets the normal.
            </summary>
            <value>The normal.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStyle.Italic">
            <summary>
            Gets the italic.
            </summary>
            <value>The italic.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontStyle.Oblique">
            <summary>
            Gets the oblique.
            </summary>
            <value>The oblique.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.EFontVariant">
            <summary>
            Represents the value of FontVariant attribute of SVG DOM.
            </summary>    
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontVariant.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.EFontVariant"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontVariant.Normal">
            <summary>
            Gets the normal.
            </summary>
            <value>The normal.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontVariant.SmallCaps">
            <summary>
            Gets the small caps.
            </summary>
            <value>The small caps.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight">
            <summary>
            Represents the value of FontWeight attribute of SVG DOM.
            </summary>    
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.op_Equality(Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight,Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.op_Inequality(Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight,Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.Normal">
            <summary>
            Gets the normal.
            </summary>
            <value>The normal.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.Bold">
            <summary>
            Gets the bold.
            </summary>
            <value>The bold.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.Bolder">
            <summary>
            Gets the bolder.
            </summary>
            <value>The bolder.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.Lighter">
            <summary>
            Gets the lighter.
            </summary>
            <value>The lighter.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.Value100">
            <summary>
            Gets the value100.
            </summary>
            <value>The value100.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.Value200">
            <summary>
            Gets the value200.
            </summary>
            <value>The value200.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.Value300">
            <summary>
            Gets the value300.
            </summary>
            <value>The value300.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.Value400">
            <summary>
            Gets the value400.
            </summary>
            <value>The value400.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.Value500">
            <summary>
            Gets the value500.
            </summary>
            <value>The value500.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.Value600">
            <summary>
            Gets the value600.
            </summary>
            <value>The value600.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.Value700">
            <summary>
            Gets the value700.
            </summary>
            <value>The value700.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.Value800">
            <summary>
            Gets the value800.
            </summary>
            <value>The value800.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EFontWeight.Value900">
            <summary>
            Gets the value900.
            </summary>
            <value>The value900.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.ELengthAdjust">
            <summary>
            Represents the value of LengthAdjust attribute of SVG DOM.
            </summary>    
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.ELengthAdjust.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.ELengthAdjust"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.ELengthAdjust.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.ELengthAdjust.Parse(System.String)">
            <summary>
            Parses the specified STR.
            </summary>
            <param name="str">The STR.</param>
            <returns>Returns ELengthAdjust.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.ELengthAdjust.Spacing">
            <summary>
            Gets the spacing.
            </summary>
            <value>The spacing.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.ELengthAdjust.SpacingAndGlyphs">
            <summary>
            Gets the spacing and glyphs.
            </summary>
            <value>The spacing and glyphs.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.SpreadMethod">
            <summary>
            Specifies the spread methods.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SpreadMethod.pad">
            <summary>
            The pad value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SpreadMethod.reflect">
            <summary>
            The reflect value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SpreadMethod.repeat">
            <summary>
            The repeat value
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.LengthType">
            <summary>
            Specifies the types of length object.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.LengthType.Unknown">
            <summary>
            Unknown length type.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.LengthType.Number">
            <summary>
            Number type of length.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.LengthType.Percentage">
            <summary>
            Percentage type of length.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.LengthType.EMS">
            <summary>
            "EMS" type of length.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.LengthType.EXS">
            <summary>
            "EXS" type of length.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.LengthType.PX">
            <summary>
            "PX" type of length.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.LengthType.CM">
            <summary>
            "CM" type of length.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.LengthType.MM">
            <summary>
            "MM" type of length.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.LengthType.IN">
            <summary>
            "IN" type of length.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.LengthType.PT">
            <summary>
            "PT" type of length.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.LengthType.PC">
            <summary>
            "PC" type of length.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.AngleType">
            <summary>
            Specifies the types of angle object.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.AngleType.UNKNOWN">
            <summary>
            "UNKNOWN" type of angle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.AngleType.UNSPECIFIED">
            <summary>
            "UNSPECIFIED" type of angle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.AngleType.DEG">
            <summary>
            "DEG" type of angle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.AngleType.RAD">
            <summary>
            "RAD" type of angle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.AngleType.GRAD">
            <summary>
            "GRAD" type of angle.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap">
            <summary>
            Represents the value of StrokeLinecap attribute of SVG DOM.
            </summary>    
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap.m_name">
            <summary>
            The Name.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap.Parse(System.String)">
            <summary>
            Parses the specified string.
            </summary>
            <param name="str">The string.</param>
            <returns>Returns EStrokeLinecap.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap.op_Equality(Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap,Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap.op_Inequality(Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap,Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap.Butt">
            <summary>
            Gets the butt.
            </summary>
            <value>The butt.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap.Round">
            <summary>
            Gets the round.
            </summary>
            <value>The round.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinecap.Square">
            <summary>
            Gets the square.
            </summary>
            <value>The square.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin">
            <summary>
            Represents the value of StrokeLinejoin attribute of SVG DOM.
            </summary>    
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin.Parse(System.String)">
            <summary>
            Parses the specified STR.
            </summary>
            <param name="str">The STR.</param>
            <returns>Returns EStrokeLinejoin.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin.op_Equality(Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin,Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin.op_Inequality(Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin,Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin.Miter">
            <summary>
            Gets the miter.
            </summary>
            <value>The miter.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin.Round">
            <summary>
            Gets the round.
            </summary>
            <value>The round.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EStrokeLinejoin.Bevel">
            <summary>
            Gets the bevel.
            </summary>
            <value>The bevel.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.EUnits">
            <summary>
            Represents the value of StrokeLinejoin attribute of SVG DOM.
            </summary>    
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EUnits.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.EUnits"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EUnits.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EUnits.Parse(System.String)">
            <summary>
            Parses the specified string.
            </summary>
            <param name="str">The string.</param>
            <returns>Returns </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EUnits.op_Equality(Syncfusion.Windows.Forms.Chart.SvgBase.EUnits,Syncfusion.Windows.Forms.Chart.SvgBase.EUnits)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EUnits.op_Inequality(Syncfusion.Windows.Forms.Chart.SvgBase.EUnits,Syncfusion.Windows.Forms.Chart.SvgBase.EUnits)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="v1">The v1.</param>
            <param name="v2">The v2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EUnits.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EUnits.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EUnits.UserSpaceOnUse">
            <summary>
            Gets the user space on use.
            </summary>
            <value>The user space on use.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EUnits.ObjectBoundingBox">
            <summary>
            Gets the object bounding box.
            </summary>
            <value>The object bounding box.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.FloatArray">
            <summary>
            Implements the <see cref="T:System.Single"/> array.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.FloatArray.m_array">
            <summary>
            The array float numbers.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.FloatArray.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.FloatArray"/> class.
            </summary>
            <param name="array">The array.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.FloatArray.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.FloatArray"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.FloatArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.FloatArray"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.FloatArray.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.FloatArray.op_Implicit(System.Single[])~Syncfusion.Windows.Forms.Chart.SvgBase.FloatArray">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Single"/> to <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.FloatArray"/>.
            </summary>
            <param name="array">The array.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.FloatArray.ParseString(System.String)">
            <summary>
            Parses the string.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.FloatArray.Array">
            <summary>
            Gets the array.
            </summary>
            <value>The array.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.FloatArray.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Single"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.Length">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Length.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Length"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Length.#ctor(System.Single,Syncfusion.Windows.Forms.Chart.SvgBase.LengthType)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Length"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Length.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Length"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Length.Parse(System.String)">
            <summary>
            Parses the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>Returns SVG.Length.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Length.op_Implicit(System.String)~Syncfusion.Windows.Forms.Chart.SvgBase.Length">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Length"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Length.op_Implicit(System.Int32)~Syncfusion.Windows.Forms.Chart.SvgBase.Length">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Length"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Length.op_Implicit(System.Single)~Syncfusion.Windows.Forms.Chart.SvgBase.Length">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Single"/> to <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Length"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Length.op_Explicit(Syncfusion.Windows.Forms.Chart.SvgBase.Length)~System.Single">
            <summary>
            Performs an explicit conversion from <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Length"/> to <see cref="T:System.Single"/>.
            </summary>
            <param name="length">The length.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Length.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Length.GetValue(System.Single)">
            <summary>
            Gets the value by specified max value.
            </summary>
            <param name="max">The max.</param>
            <returns>Returns maximum value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Length.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Length.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Length.ParseString(System.String)">
            <summary>
            Parses the string.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Length.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Length.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Length.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Length.Empty">
            <summary>
            Gets the empty length.
            </summary>
            <value>The empty length.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Length.Primary">
            <summary>
            Gets the primary string.
            </summary>
            <value>The primary string.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Length.LengthRegex">
            <summary>
            Gets the length regex.
            </summary>
            <value>The length regex.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect">
            <summary>
            Stores the location and size of a rectangle.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect"/> struct.
            </summary>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect"/> struct.
            </summary>
            <param name="primary">The primary.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect.#ctor(Syncfusion.Windows.Forms.Chart.SvgBase.Length,Syncfusion.Windows.Forms.Chart.SvgBase.Length,Syncfusion.Windows.Forms.Chart.SvgBase.Length,Syncfusion.Windows.Forms.Chart.SvgBase.Length)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect.Parse(System.String)">
            <summary>
            Parses the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>Returns the new LengthRect instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect.ParseString(System.String)">
            <summary>
            Parses the string.
            </summary>
            <param name="str">The text.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect.X">
            <summary>
            Gets the X coordinate.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect.Y">
            <summary>
            Gets the Y coordinate.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect.Width">
            <summary>
            Gets the width of rectangle.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect.Height">
            <summary>
            Gets the height of rectangle.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LengthRect.Empty">
            <summary>
            Gets the empty.
            </summary>
            <value>The empty.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor">
            <summary>
            Represents the color object of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor"/> class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor"/> class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor.op_Implicit(System.Drawing.Color)~Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Drawing.Color"/> to <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor"/>.
            </summary>
            <param name="color">The color.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor.op_Implicit(System.String)~Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor"/>.
            </summary>
            <param name="color">The color.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor.ParseString(System.String)">
            <summary>
            Parses the string.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor.Color">
            <summary>
            Gets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor.ColorRegex">
            <summary>
            Gets the color regex.
            </summary>
            <value>The color regex.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor.ColorRegexPercent">
            <summary>
            Gets the color regex percent.
            </summary>
            <value>The color regex percent.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor.Hex6ColorRegex">
            <summary>
            Gets the hex6 color regex.
            </summary>
            <value>The hex6 color regex.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor.Hex3ColorRegex">
            <summary>
            Gets the hex3 color regex.
            </summary>
            <value>The hex3 color regex.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor.IsNone">
            <summary>
            Gets a value indicating whether this instance is none.
            </summary>
            <value><c>true</c> if this instance is none; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.NoneColor.Primaty">
            <summary>
            Gets the primaty value.
            </summary>
            <value>The primaty value.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.Number">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Number.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Number"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Number.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Number"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Number.Parse(System.String)">
            <summary>
            Parses the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Number.op_Implicit(System.String)~Syncfusion.Windows.Forms.Chart.SvgBase.Number">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Number"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Number.op_Implicit(System.Int32)~Syncfusion.Windows.Forms.Chart.SvgBase.Number">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Number"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Number.op_Implicit(System.Single)~Syncfusion.Windows.Forms.Chart.SvgBase.Number">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Single"/> to <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Number"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Number.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Number.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Number.Primary">
            <summary>
            Gets the string value of number.
            </summary>
            <value>The primary.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Number.Empty">
            <summary>
            Gets the empty <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Number"/>.
            </summary>
            <value>The empty.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity">
            <summary>
            Represents the value of Opacity attribute.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity"/> struct.
            </summary>
            <param name="alpha">The alpha.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity"/> struct.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity.op_Implicit(System.Single)~Syncfusion.Windows.Forms.Chart.SvgBase.Opacity">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Single"/> to <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity.op_Implicit(System.Byte)~Syncfusion.Windows.Forms.Chart.SvgBase.Opacity">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Byte"/> to <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity.Parse(System.String)">
            <summary>
            Parses the specified string.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Opacity.Alpha">
            <summary>
            Gets or sets the alpha.
            </summary>
            <value>The alpha.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.PointsArray">
            <summary>
            Represents the points array object of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PointsArray.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.PointsArray"/> class.
            </summary>
            <param name="array">The array.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PointsArray.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.PointsArray"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PointsArray.#ctor(System.Drawing.PointF[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.PointsArray"/> class.
            </summary>
            <param name="points">The points.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PointsArray.FromPointFToFloat(System.Drawing.PointF[])">
            <summary>
            Creates the float array by the specified array of <see cref="T:System.Drawing.PointF"/>.
            </summary>
            <param name="points">The points.</param>
            <returns>Returns Float array from Point array.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.PointsArray.Points">
            <summary>
            Gets the points.
            </summary>
            <value>The points.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.SFont">
            <summary>
            Represents the Font of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.Style">
            <summary>
            Represents the style of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.IFillAttributes">
            <summary>
            Contains the fill members.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IFillAttributes.Fill">
            <summary>
            Gets or sets the color to fill the background.
            </summary>
            <value>The fill.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IFillAttributes.FillOpacity">
            <summary>
            Gets or sets the fill opacity.
            </summary>
            <value>The fill opacity.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.IStrokeAttributes">
            <summary>
            Contains the stroke members.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IStrokeAttributes.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>The stroke.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IStrokeAttributes.StrokeWidth">
            <summary>
            Gets or sets the width of the stroke.
            </summary>
            <value>The width of the stroke.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IStrokeAttributes.StrokeLinecap">
            <summary>
            Gets or sets the stroke line caps.
            </summary>
            <value>The stroke line caps.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IStrokeAttributes.StrokeLinejoin">
            <summary>
            Gets or sets the stroke line join.
            </summary>
            <value>The stroke line join.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IStrokeAttributes.StrokeMiterlimit">
            <summary>
            Gets or sets the stroke miter limit.
            </summary>
            <value>The stroke miter limit.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IStrokeAttributes.StrokeDasharray">
            <summary>
            Gets or sets the stroke dash array.
            </summary>
            <value>The stroke dash array.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IStrokeAttributes.StrokeDashoffset">
            <summary>
            Gets or sets the stroke dash offset.
            </summary>
            <value>The stroke dash offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IStrokeAttributes.StrokeOpacity">
            <summary>
            Gets or sets the stroke opacity.
            </summary>
            <value>The stroke opacity.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.ITransformAttribute">
            <summary>
            Contains the transformation attribute.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.ITransformAttribute.Transform">
            <summary>
            Gets or sets the transform.
            </summary>
            <value>The transform.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.IOpacityAttribute">
            <summary>
            Contains the opacity members.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IOpacityAttribute.Opacity">
            <summary>
            Gets or sets the opacity.
            </summary>
            <value>The opacity.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Style.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Style"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Style.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Style"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Style.Add(System.String,System.Object)">
            <summary>
            Adds the specified attr.
            </summary>
            <param name="attr">The attr.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Style.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Style.GetAttribute(System.Object,System.Object)">
            <summary>
            Gets the attribute.
            </summary>
            <param name="key">The key.</param>
            <param name="defValue">The def value.</param>
            <returns>returns object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Style.SetAttribute(System.Object,System.Object,System.Object)">
            <summary>
            Sets the attribute.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="defValue">The def value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Style.ParseString(System.String)">
            <summary>
            Parses the specified string.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Style.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Style.Divisor">
            <summary>
            Gets the divisor.
            </summary>
            <value>The divisor.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Style.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>The stroke.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Style.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#StrokeWidth">
            <summary>
            Gets or sets the width of the stroke.
            </summary>
            <value>The width of the stroke.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Style.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#StrokeLinecap">
            <summary>
            Gets or sets the stroke line caps.
            </summary>
            <value>The stroke line caps.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Style.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#StrokeLinejoin">
            <summary>
            Gets or sets the stroke line join.
            </summary>
            <value>The stroke line join.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Style.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#StrokeMiterlimit">
            <summary>
            Gets or sets the stroke miter limit.
            </summary>
            <value>The stroke miter limit.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Style.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#StrokeDasharray">
            <summary>
            Gets or sets the stroke dash array.
            </summary>
            <value>The stroke dash array.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Style.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#StrokeDashoffset">
            <summary>
            Gets or sets the stroke dash offset.
            </summary>
            <value>The stroke dash offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Style.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#StrokeOpacity">
            <summary>
            Gets or sets the stroke opacity.
            </summary>
            <value>The stroke opacity.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Style.Syncfusion#Windows#Forms#Chart#SvgBase#IFillAttributes#Fill">
            <summary>
            Gets or sets the color to fill the background.
            </summary>
            <value>The fill.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Style.Syncfusion#Windows#Forms#Chart#SvgBase#IFillAttributes#FillOpacity">
            <summary>
            Gets or sets the fill opacity.
            </summary>
            <value>The fill opacity.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Style.Syncfusion#Windows#Forms#Chart#SvgBase#ITransformAttribute#Transform">
            <summary>
            Gets or sets the transform.
            </summary>
            <value>The transform.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Style.Syncfusion#Windows#Forms#Chart#SvgBase#IOpacityAttribute#Opacity">
            <summary>
            Gets or sets the opacity.
            </summary>
            <value>The opacity.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.SVG">
            <summary>
            Contains the SVG DOM constants (element, attributes names, defined values...).
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_ENTITY">
            <summary>
            The name of "ENTITY" element of XML DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_LINE">
            <summary>
            The name of "line" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_ELLIPSE">
            <summary>
            The name of "ellipse" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_PATH">
            <summary>
            The name of "path" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_POLYGON">
            <summary>
            The name of "polygon" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_POLYLINE">
            <summary>
            The name of "polyline" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_RECT">
            <summary>
            The name of "rect" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_TEXT">
            <summary>
            The name of "text" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_SVG">
            <summary>
            The name of "svg" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_G">
            <summary>
            The name of "g" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_DEFS">
            <summary>
            The name of "defs" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_LINEAR_GRADIENT">
            <summary>
            The name of "linearGradient" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_RADIAL_GRADIENT">
            <summary>
            The name of "radialGradient" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_PATTERN">
            <summary>
            The name of "pattern" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_STOP">
            <summary>
            The name of "stop" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_IMAGE">
            <summary>
            The name of "image" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_CIRCLE">
            <summary>
            The name of "circle" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.NAME_CLIP_PATH">
            <summary>
            The name of "clipPath" element of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_ID">
            <summary>
            The name of "id" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_X">
            <summary>
            The name of "x" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_Y">
            <summary>
            The name of "y" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_WIDTH">
            <summary>
            The name of "width" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_HEIGHT">
            <summary>
            The name of "height" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_X1">
            <summary>
            The name of "x1" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_X2">
            <summary>
            The name of "x2" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_Y1">
            <summary>
            The name of "y1" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_Y2">
            <summary>
            The name of "y2" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_CX">
            <summary>
            The name of "cx" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_RX">
            <summary>
            The name of "rx" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_CY">
            <summary>
            The name of "cy" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_RY">
            <summary>
            The name of "cy" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_R">
            <summary>
            The name of "r" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_FX">
            <summary>
            The name of "fx" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_FY">
            <summary>
            The name of "fy" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_DX">
            <summary>
            The name of "dx" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_DY">
            <summary>
            The name of "dy" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_DATA">
            <summary>
            The name of "d" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_IMAGE">
            <summary>
            The name of "image" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_POINTS">
            <summary>
            The name of "points" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_STYLE">
            <summary>
            The name of "style" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_TEXT_LENGTH">
            <summary>
            The name of "textLength" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_LENGTH_ADJUST">
            <summary>
            The name of "LengthAdjust" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_VERSION">
            <summary>
            The name of "version" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_STROKE">
            <summary>
            The name of "stroke" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_STROKE_WIDTH">
            <summary>
            The name of "stroke-width" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_STROKE_LINECAP">
            <summary>
            The name of "stroke-linecap" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_STROKE_LINEJOIN">
            <summary>
            The name of "stroke-linejoin" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_STROKE_MITERLIMIT">
            <summary>
            The name of "stroke-miterlimit" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_STROKE_DASHARRAY">
            <summary>
            The name of "stroke-dasharray" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_STROKE_OPACITY">
            <summary>
            The name of "stroke-opacity" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_STROKE_DASHOFFSET">
            <summary>
            The name of "stroke-dashoffset" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_ROTATE">
            <summary>
            The name of "rotate" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_FILL">
            <summary>
            The name of "fill" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_FILL_OPACITY">
            <summary>
            The name of "fill-opacity" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_FILL_FULE">
            <summary>
            The name of "fill-rule" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_OFFSET">
            <summary>
            The name of "offset" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_STOP_COLOR">
            <summary>
            The name of "stop-color" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_STOP_OPACITY">
            <summary>
            The name of "stop-opacity" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_SPREAD_METHOD">
            <summary>
            The name of "spreadMethod" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_GRADIENT_UNITS">
            <summary>
            The name of "gradientUnits" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_OPACITY">
            <summary>
            The name of "opacity" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_FONT_FAMILY">
            <summary>
            The name of "font-family" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_FONT_WEIGHT">
            <summary>
            The name of "font-weight" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_FONT_STYLE">
            <summary>
            The name of "font-style" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_FONT_VARIANT">
            <summary>
            The name of "font-variant" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_FONT_STRETCH">
            <summary>
            The name of "font-stretch" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_FONT_SIZE">
            <summary>
            The name of "font-size" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_FONT_SIZE_ADJUST">
            <summary>
            The name of "font-size-adjust" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_TRANSFORM">
            <summary>
            The name of "transform" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_TEXT_DECORATION">
            <summary>
            The name of "text-decoration" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_GRADIENT_TRANSFORM">
            <summary>
            The name of "gradientTransform" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_PATTERN_TRANSFORM">
            <summary>
            The name of "patternTransform" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_VIEW_BOX">
            <summary>
            The name of "viewBox" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_PRESERVE_ASPECT_RATIO">
            <summary>
            The name of "preserveAspectRatio" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_PATTERN_CONTENT_UNITS">
            <summary>
            The name of "patternContentUnits" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_PATTERN_UNITS">
            <summary>
            The name of "patternUnits" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_SHAPE_RENDERING">
            <summary>
            The name of "shape-rendering" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_CLIP_RULE">
            <summary>
            The name of "clip-rule" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_CLIP_PATH">
            <summary>
            The name of "clip-path" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_CLIP_PATH_UNITS">
            <summary>
            The name of "clipPathUnits" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.ATTR_HREF">
            <summary>
            The name of "xlink:href" attribute of SVG DOM.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_NONE">
            <summary>
            The "none" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_M">
            <summary>
            The "M" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_L">
            <summary>
            The "L" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_C">
            <summary>
            The "C" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_H">
            <summary>
            The "H" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_V">
            <summary>
            The "V" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_Q">
            <summary>
            The "Q" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_Z">
            <summary>
            The "Z" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_PAD">
            <summary>
            The "pad" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_URL">
            <summary>
            The "url" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_BOLD">
            <summary>
            The "bold" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_LIGHTER">
            <summary>
            The "lighter" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_100">
            <summary>
            The "100" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_200">
            <summary>
            The "200" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_300">
            <summary>
            The "300" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_400">
            <summary>
            The "400" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_500">
            <summary>
            The "500" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_600">
            <summary>
            The "600" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_700">
            <summary>
            The "700" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_800">
            <summary>
            The "800" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_900">
            <summary>
            The "900" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_BUTT">
            <summary>
            The "butt" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_BEVEL">
            <summary>
            The "bevel" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_MITER">
            <summary>
            The "miter" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_MEDIUM">
            <summary>
            The "medium" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_ROUND">
            <summary>
            The "round" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_SQUARE">
            <summary>
            The "square" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_BOLDER">
            <summary>
            The "bolder" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_ITALIC">
            <summary>
            The "italic" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_NORMAL">
            <summary>
            The "normal" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_WIDER">
            <summary>
            The "wider" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_NARROWER">
            <summary>
            The "narrower" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_NONZERO">
            <summary>
            The "nonzero" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_EVENODD">
            <summary>
            The "evenodd" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_CONDENSED">
            <summary>
            The "condensed" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_SEMI_CONDENSED">
            <summary>
            The "semi-condensed" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_EXTRA_CONDENSED">
            <summary>
            The "extra-condensed" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_ULTRA_CONDENSED">
            <summary>
            The "ultra-condensed" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_EXPANDED">
            <summary>
            The "expanded" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_SEMI_EXPANDED">
            <summary>
            The "semi-expanded" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_EXTRA_EXPANDED">
            <summary>
            The "extra-expanded" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_ULTRA_EXPANDED">
            <summary>
            The "ultra-expanded" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_REPEAT">
            <summary>
            The "reflect" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_REFLECT">
            <summary>
            The "reflect" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_UNDERLINE">
            <summary>
            The "underline" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_CRISP_EDGES">
            <summary>
            The "crispEdges" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_OBJECT_BOUND_BOX">
            <summary>
            The "objectBoundingBox" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_USER_SPACE_ON_USE">
            <summary>
            The "userSpaceOnUse" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_IMAGE_TYPE">
            <summary>
            The "data:;base64," value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_OBLIQUE">
            <summary>
            The "oblique" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_SMALL_CAPS">
            <summary>
            The "small-caps" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_MATRIX">
            <summary>
            The "matrix" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_TRANSLATE">
            <summary>
            The "translate" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_SCALE">
            <summary>
            The "scale" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_ROTATE">
            <summary>
            The "rotate" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_SKEW_X">
            <summary>
            The "skewX" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_SKEW_Y">
            <summary>
            The "skewY" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_SPACING">
            <summary>
            The "spacing" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_SPACING_AND_GLYPHS">
            <summary>
            The "spacingAndGlyphs" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_PERCENT">
            <summary>
            The "%" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_EM">
            <summary>
            The "em" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_EX">
            <summary>
            The "ex" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_PX">
            <summary>
            The "px" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_CM">
            <summary>
            The "cm" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_MM">
            <summary>
            The "mm" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_IN">
            <summary>
            The "in" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_PT">
            <summary>
            The "pt" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_PC">
            <summary>
            The "pc" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_CX">
            <summary>
            The "cx" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_CY">
            <summary>
            The "cy" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_FX">
            <summary>
            The "fx" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_FY">
            <summary>
            The "fy" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_HEX_COLOR">
            <summary>
            The "#" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_RGB_COLOR">
            <summary>
            The "rgb" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_R">
            <summary>
            The "r" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_G">
            <summary>
            The "g" value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.SvgBase.SVG.VALUE_B">
            <summary>
            The "b" value.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.TransformList">
            <summary>
            Contanins the 2D transformation.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.TransformList.#ctor(System.Drawing.Drawing2D.Matrix)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.TransformList"/> class.
            </summary>
            <param name="matrix">The matrix.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.TransformList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.TransformList"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.TransformList.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.TransformList.ParseString(System.String)">
            <summary>
            Parses the string.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.TransformList.Matrix">
            <summary>
            Gets the matrix.
            </summary>
            <value>The matrix.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.Utility">
            <summary>
            Contains the helper methods and properties to parse the SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.GetFloat(System.String)">
            <summary>
            Gets the float.
            </summary>
            <param name="value">The value.</param>
            <returns>Returns Float.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.GetFloat(System.Single)">
            <summary>
            Gets the float.
            </summary>
            <param name="value">The value.</param>
            <returns>Returns Float in String format.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.GetNumber(System.String)">
            <summary>
            Gets the number.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.GetNumbers(System.String)">
            <summary>
            Gets the array of numbers.
            </summary>
            <param name="value">The string.</param>
            <returns>Returns Float array.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.GetGDIPen(Syncfusion.Windows.Forms.Chart.SvgBase.IStrokeAttributes)">
            <summary>
            Gets the GDI+ pen by the stroke attribute of specified element.
            </summary>
            <param name="elem">The elem.</param>
            <returns> Returns Pen</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.SetGDIPen(Syncfusion.Windows.Forms.Chart.SvgBase.IStrokeAttributes,System.Drawing.Pen)">
            <summary>
            Sets the stroke attribute of specified the GDI+ pen.
            </summary>
            <param name="elem">The elem.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.GetGDIBrush(Syncfusion.Windows.Forms.Chart.SvgBase.IFillAttributes,Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument)">
            <summary>
            Gets the GDI+ brush by the fill attribue of specified element.
            </summary>
            <param name="elem">The element.</param>
            <param name="doc">The SVG document.</param>
            <returns>Returns Brush.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.SetGDIBrush(Syncfusion.Windows.Forms.Chart.SvgBase.IFillAttributes,System.Drawing.Brush)">
            <summary>
            Sets the fill attribute by the specified GDI+ brush.
            </summary>
            <param name="elem">The elem.</param>
            <param name="br">The br.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.GetGDIFont(Syncfusion.Windows.Forms.Chart.SvgBase.IFontAttributes)">
            <summary>
            Gets the GDI+ font by the font attributes of element.
            </summary>
            <param name="elem">The elem.</param>
            <returns>Returns GDIFont.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.SetGDIFont(Syncfusion.Windows.Forms.Chart.SvgBase.IFontAttributes,System.Drawing.Font)">
            <summary>
            Sets the font attributes by the specified GDI+ font.
            </summary>
            <param name="elem">The element.</param>
            <param name="font">The font.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.GetIdFromUrl(System.String)">
            <summary>
            Gets the id from URL.
            </summary>
            <param name="ulr">The ulr.</param>
            <returns>Returns url string.</returns>        
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.GetUrlFromId(System.String)">
            <summary>
            Gets the URL from id.
            </summary>
            <param name="id">The id.</param>
            <returns>Returns url string from the ID.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.GetSpecialBrush(Syncfusion.Windows.Forms.Chart.SvgBase.Element)">
            <summary>
            Gets the GDI+ brush (gradient or pattern brush) of elemet fill.
            </summary>
            <param name="elem">The elemet.</param>
            <returns>Returns Brush.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.GetGDIBrush(Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement)">
            <summary>
            Gets the GDI+ brush of elemet fill.
            </summary>
            <param name="elem">The element.</param>
            <returns>Returns GDIPBrush.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.GetGDIPen(Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement)">
            <summary>
            Gets the GDI+ pen of element stroke.
            </summary>
            <param name="elem">The element.</param>
            <returns>Returns Pen.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.FloatFormat">
            <summary>
            Gets the float format.
            </summary>
            <value>The float format.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.NumberChars">
            <summary>
            Gets the number chars.
            </summary>
            <value>The number chars.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.NumberRegex">
            <summary>
            Gets the number regex.
            </summary>
            <value>The number regex.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Utility.UrlRegex">
            <summary>
            Gets the URL regex.
            </summary>
            <value>The URL regex.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.Element">
            <summary>
            Base implementation of <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.IElement"/> interface.
            </summary>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.IElement">
            <summary>
            Base interface of each SVG element.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IElement.Id">
            <summary>
            Gets or sets the element identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IElement.Name">
            <summary>
            Gets the name of element.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IElement.Text">
            <summary>
            Gets or sets the inner text of element.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IElement.OwnerDocument">
            <summary>
            Gets the owner document.
            </summary>
            <value>The owner document.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Element.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Element"/> class.
            </summary>
            <param name="name">The name of element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Element.AddChild(Syncfusion.Windows.Forms.Chart.SvgBase.Element)">
            <summary>
            Adds the child.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Element.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified g.
            </summary>
            <param name="g">The g.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Element.SetDocument(Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument)">
            <summary>
            Sets the document.
            </summary>
            <param name="doc">The <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Element.ParseXml(System.Xml.XmlNode)">
            <summary>
            Parses the XML document.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Element.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Element.WriteXmlAttributes(System.Xml.XmlWriter)">
            <summary>
            Writes the attributes to XML document.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Element.GetAttribute(System.Object,System.Object)">
            <summary>
            Gets the attribute value.
            </summary>
            <param name="key">The key.</param>
            <param name="defValue">The default value.</param>
            <returns>Returns object of the specified key.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Element.SetAttribute(System.Object,System.Object,System.Object)">
            <summary>
            Sets the value of attribute.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Element.CanAddChild(Syncfusion.Windows.Forms.Chart.SvgBase.Element)">
            <summary>
            Determines whether the specified child is allowed to add to the this element.
            </summary>
            <param name="elem">The elem.</param>
            <returns>
            	<c>true</c> if the specified child is allowed to add to the this element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Element.Name">
            <summary>
            Gets the name of element.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Element.Children">
            <summary>
            Gets the inner elements.
            </summary>
            <value>The inner elements.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Element.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Element.Parent">
            <summary>
            Gets the parent element.
            </summary>
            <value>The parent element.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Element.Id">
            <summary>
            Gets or sets the element identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Element.OwnerDocument">
            <summary>
            Gets the owner document.
            </summary>
            <value>The owner document.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Element.Text">
            <summary>
            Gets or sets the inner text of element.
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.Element.ElementsList">
            <summary>
            Represents the indexer of the element children collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Element.ElementsList.#ctor(System.Collections.ArrayList)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Element.ElementsList"/> class.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.Element.ElementsList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Element.ElementsList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.Element"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.Element.ElementsList.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement">
            <summary>
            Implements the all SVG interfaces.
            </summary>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.IStyleAttribute">
            <summary>
            Contains the style attribute.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IStyleAttribute.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.IFontAttributes">
            <summary>
            Contains the font members.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IFontAttributes.FontFamily">
            <summary>
            Gets or sets the font family.
            </summary>
            <value>The font family.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IFontAttributes.FontStyle">
            <summary>
            Gets or sets the font style.
            </summary>
            <value>The font style.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IFontAttributes.FontVariant">
            <summary>
            Gets or sets the font variant.
            </summary>
            <value>The font variant.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IFontAttributes.FontWeight">
            <summary>
            Gets or sets the font weight.
            </summary>
            <value>The font weight.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IFontAttributes.FontStretch">
            <summary>
            Gets or sets the font stretch.
            </summary>
            <value>The font stretch.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IFontAttributes.FontSize">
            <summary>
            Gets or sets the size of the font.
            </summary>
            <value>The size of the font.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IFontAttributes.FontSizeAdjust">
            <summary>
            Gets or sets the font size adjust.
            </summary>
            <value>The font size adjust.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IFontAttributes.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.IViewBoxAttribute">
            <summary>
            Contains the view box attribute.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IViewBoxAttribute.ViewBox">
            <summary>
            Gets or sets the view box.
            </summary>
            <value>The view box.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.IClipingAttribute">
            <summary>
            Contains clipping members.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IClipingAttribute.ClipRule">
            <summary>
            Gets or sets the clip rule.
            </summary>
            <value>The clip rule.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.IClipingAttribute.ClipPath">
            <summary>
            Gets or sets the identifier of clip path.
            </summary>
            <value>The clip path.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement"/> class.
            </summary>
            <param name="name">The name of element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the element and the inner elements to the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.ParseXml(System.Xml.XmlNode)">
            <summary>
            Parses the XML document.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.SetXmlAttribute(System.Xml.XmlAttribute)">
            <summary>
            Sets the XML attribute.
            </summary>
            <param name="attr">The attr.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.DrawSelf(System.Drawing.Graphics)">
            <summary>
            Draws the element to specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>The stroke.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#StrokeWidth">
            <summary>
            Gets or sets the width of the stroke.
            </summary>
            <value>The width of the stroke.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#StrokeLinecap">
            <summary>
            Gets or sets the stroke line caps.
            </summary>
            <value>The stroke line caps.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#StrokeLinejoin">
            <summary>
            Gets or sets the stroke line join.
            </summary>
            <value>The stroke line join.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#StrokeMiterlimit">
            <summary>
            Gets or sets the stroke miter limit.
            </summary>
            <value>The stroke miter limit.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#StrokeDasharray">
            <summary>
            Gets or sets the stroke dash array.
            </summary>
            <value>The stroke dash array.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#StrokeDashoffset">
            <summary>
            Gets or sets the stroke dash offset.
            </summary>
            <value>The stroke dash offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IStrokeAttributes#StrokeOpacity">
            <summary>
            Gets or sets the stroke opacity.
            </summary>
            <value>The stroke opacity.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IFillAttributes#Fill">
            <summary>
            Gets or sets the color to fill the background.
            </summary>
            <value>The fill.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IFillAttributes#FillOpacity">
            <summary>
            Gets or sets the fill opacity.
            </summary>
            <value>The fill opacity.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#ITransformAttribute#Transform">
            <summary>
            Gets or sets the transform.
            </summary>
            <value>The transform.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Style">
            <summary>
            Gets or sets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IFontAttributes#FontFamily">
            <summary>
            Gets or sets the font family.
            </summary>
            <value>The font family.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IFontAttributes#FontStyle">
            <summary>
            Gets or sets the font style.
            </summary>
            <value>The font style.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IFontAttributes#FontVariant">
            <summary>
            Gets or sets the font variant.
            </summary>
            <value>The font variant.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IFontAttributes#FontWeight">
            <summary>
            Gets or sets the font weight.
            </summary>
            <value>The font weight.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IFontAttributes#FontStretch">
            <summary>
            Gets or sets the font stretch.
            </summary>
            <value>The font stretch.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IFontAttributes#FontSize">
            <summary>
            Gets or sets the size of the font.
            </summary>
            <value>The size of the font.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IFontAttributes#FontSizeAdjust">
            <summary>
            Gets or sets the font size adjust.
            </summary>
            <value>The font size adjust.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IFontAttributes#Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IViewBoxAttribute#ViewBox">
            <summary>
            Gets or sets the view box.
            </summary>
            <value>The view box.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IOpacityAttribute#Opacity">
            <summary>
            Gets or sets the opacity.
            </summary>
            <value>The opacity.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IClipingAttribute#ClipRule">
            <summary>
            Gets or sets the clip rule.
            </summary>
            <value>The clip rule.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement.Syncfusion#Windows#Forms#Chart#SvgBase#IClipingAttribute#ClipPath">
            <summary>
            Gets or sets the identifier of clip path.
            </summary>
            <value>The clip path.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.CircleElement">
            <summary>
            Implements the "circle" element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.CircleElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.CircleElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.CircleElement.ParseXml(System.Xml.XmlNode)">
            <summary>
            Parses the XML document.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.CircleElement.DrawSelf(System.Drawing.Graphics)">
            <summary>
            Draws the element to specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.CircleElement.R">
            <summary>
            Gets or sets the radius of circle.
            </summary>
            <value>The radius of circle.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.CircleElement.CX">
            <summary>
            Gets or sets the X coorditane of element center.
            </summary>
            <value>The X coorditane of element center.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.CircleElement.CY">
            <summary>
            Gets or sets the Y coorditane of element center.
            </summary>
            <value>The Y coorditane of element center.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.ClipPathElement">
            <summary>
            Implements the "clipPath" element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.ClipPathElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.ClipPathElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.ClipPathElement.GetResultPath">
            <summary>
            Gets the result path.
            </summary>
            <returns> Returns GraphicsPath object.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.DefsElement">
            <summary>
            Implements the "defs" element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.DefsElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.DefsElement"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.EllipseElement">
            <summary>
            Implements the "ellipse" element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EllipseElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.EllipseElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EllipseElement.FromRectangleF(System.Drawing.RectangleF)">
            <summary>
            Creates the new <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.EllipseElement"/> instance by the specified <see cref="T:System.Drawing.RectangleF"/>.
            </summary>
            <param name="rect">The rect.</param>
            <returns>Returns EllipseElement.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EllipseElement.ParseXml(System.Xml.XmlNode)">
            <summary>
            Parses the XML document.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EllipseElement.FromCoordinates(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.EllipseElement"/> by its location and size.
            </summary>
            <param name="x">The x-location of the element.</param>
            <param name="y">The y-location of the element.</param>
            <param name="width">The width of the element.</param>
            <param name="height">The height of the element.</param>
            <returns>Calculated <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.EllipseElement"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.EllipseElement.DrawSelf(System.Drawing.Graphics)">
            <summary>
            Draws the element to specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EllipseElement.RX">
            <summary>
            Gets or sets the horizontal radius.
            </summary>
            <value>The horizontal radius.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EllipseElement.RY">
            <summary>
            Gets or sets the vertical radius.
            </summary>
            <value>The vertical radius.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EllipseElement.CX">
            <summary>
            Gets or sets the X coordinate of the element center.
            </summary>
            <value>The X coordinate of the element center.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.EllipseElement.CY">
            <summary>
            Gets or sets the Y coordinate of the element center.
            </summary>
            <value>The Y coordinate of the element center.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.GElement">
            <summary>
            Implements the "g" element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.GElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.GElement"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.ImageElement">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.ImageElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.ImageElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.ImageElement.ParseXml(System.Xml.XmlNode)">
            <summary>
            Parses the XML document.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.ImageElement.FromImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.ImageElement"/> instance by the specified <see cref="T:System.Drawing.Image"/>.
            </summary>
            <param name="img">The <see cref="T:System.Drawing.Image"/>.</param>
            <param name="x">The x-location of the element.</param>
            <param name="y">The y-location of the element.</param>
            <param name="width">The width of the element.</param>
            <param name="height">The height of the element.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.ImageElement"/> instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.ImageElement.DrawSelf(System.Drawing.Graphics)">
            <summary>
            Draws the element to specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.ImageElement.Width">
            <summary>
            Gets or sets the element width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.ImageElement.Height">
            <summary>
            Gets or sets the element height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.ImageElement.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
            <value>The X coordinate.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.ImageElement.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
            <value>The Y coordinate.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.ImageElement.HRef">
            <summary>
            Gets or sets the image referance.
            </summary>
            <value>The referance.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement">
            <summary>
            Implements the "LinearGradient" element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement.GetGDIBrush">
            <summary>
            Creates the GDI+ brush.
            </summary>
            <returns>Returns Brush element.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement.FromBrush(System.Drawing.Drawing2D.LinearGradientBrush)">
            <summary>
            Creates the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement"/> element by the specified GDI+ brush.
            </summary>
            <param name="brush">The brush.</param>
            <returns>Returns LinearGradientElement from LinearGradientBrush.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement.ParseXml(System.Xml.XmlNode)">
            <summary>
            Parses the XML document.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the element and the inner elements to the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement.X1">
            <summary>
            Gets or sets the X coordinate of the gradient start.
            </summary>
            <value>The X coordinate of the gradient start.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement.Y1">
            <summary>
            Gets or sets the Y coordinate of the gradient start.
            </summary>
            <value>The Y coordinate of the gradient start.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement.X2">
            <summary>
            Gets or sets the X coordinate of the gradient end.
            </summary>
            <value>The X coordinate of the gradient end.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement.Y2">
            <summary>
            Gets or sets the Y coordinate of the gradient end.
            </summary>
            <value>The Y coordinate of the gradient end.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement.GradientTransform">
            <summary>
            Gets or sets the gradient transform.
            </summary>
            <value>The gradient transform.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement.GradientUnits">
            <summary>
            Gets or sets the gradient units.
            </summary>
            <value>The gradient units.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement.SpreadMethod">
            <summary>
            Gets or sets the spread method.
            </summary>
            <value>The spread method.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LinearGradientElement.HRef">
            <summary>
            Gets or sets the referense of inherited element.
            </summary>
            <value>The referense.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.LineElement">
            <summary>
            Implements the "line" element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LineElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.LineElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LineElement.ParseXml(System.Xml.XmlNode)">
            <summary>
            Parses the XML document.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LineElement.FromPoints(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Creates the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.LineElement"/> from its coords.
            </summary>
            <param name="pt1">The first point.</param>
            <param name="pt2">The second point.</param>
            <returns>
            Created <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.LineElement"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LineElement.FromCoordinates(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.LineElement"/> from its coords.
            </summary>
            <param name="x1">The x-location of the first point.</param>
            <param name="y1">The y-location of the first point.</param>
            <param name="x2">The x-location of the second point.</param>
            <param name="y2">The y-location of the second point.</param>
            <returns>Created <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.LineElement"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.LineElement.DrawSelf(System.Drawing.Graphics)">
            <summary>
            Draws the element to specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LineElement.X1">
            <summary>
            Gets or sets the X coordinate of start point.
            </summary>
            <value>The X coordinate.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LineElement.Y1">
            <summary>
            Gets or sets the Y coordinate of start point.
            </summary>
            <value>The Y coordinate.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LineElement.X2">
            <summary>
            Gets or sets the X coordinate of end point.
            </summary>
            <value>The X coordinate of end point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.LineElement.Y2">
            <summary>
            Gets or sets the Y coordinate of end point.
            </summary>
            <value>The Y coordinate.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.PathElement">
            <summary>
            Impements the "path" element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PathElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.PathElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PathElement.ParseXml(System.Xml.XmlNode)">
            <summary>
            Parses the XML document.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PathElement.DrawSelf(System.Drawing.Graphics)">
            <summary>
            Draws the element to specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.PathElement.D">
            <summary>
            Gets or sets the path data.
            </summary>
            <value>The path data.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement">
            <summary>
            Implements the "pattern" element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement.ParseXml(System.Xml.XmlNode)">
            <summary>
            Parses the XML document.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement.FormTextureBrush(System.Drawing.TextureBrush)">
            <summary>
            Creates the new <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement"/> instance by the specified <see cref="T:System.Drawing.TextureBrush"/>.
            </summary>
            <param name="brush">The <see cref="T:System.Drawing.TextureBrush"/>.</param>
            <returns>Returns PatternElement from TextureBrush.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement.FormHatchBrush(System.Drawing.Drawing2D.HatchBrush)">
            <summary>
            Creates the new <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement"/> instance by the specified <see cref="T:System.Drawing.Drawing2D.HatchBrush"/>.
            </summary>
            <param name="brush">The <see cref="T:System.Drawing.Drawing2D.HatchBrush"/>.</param>
            <returns>Returns PatternElement from HatchBrush.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement.GetGDIBrush">
            <summary>
            Creates the <see cref="T:System.Drawing.Brush"/> instance by the inner elements.
            </summary>
            <returns>Return Brush.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the element and the inner elements to the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement.X">
            <summary>
            Gets or sets the X coordinate of pettern.
            </summary>
            <value>The X coordinate.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement.Y">
            <summary>
            Gets or sets the Y coordinate of pettern.
            </summary>
            <value>The Y coordinate.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement.HRef">
            <summary>
            Gets or sets the reference to a different "pattern" element within the current SVG document fragment.
            </summary>
            <value>The reference.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement.PatternTransform">
            <summary>
            Gets or sets the pattern transform.
            </summary>
            <value>The pattern transform.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement.PatternContentUnits">
            <summary>
            Gets or sets the pattern content units.
            </summary>
            <value>The pattern content units.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.PatternElement.PatternUnits">
            <summary>
            Gets or sets the pattern units.
            </summary>
            <value>The pattern units.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.PolygonElement">
            <summary>
            Implements the "polygon" element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PolygonElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.PolygonElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PolygonElement.ParseXml(System.Xml.XmlNode)">
            <summary>
            Parses the XML document.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PolygonElement.FromPoints(System.Drawing.PointF[])">
            <summary>
            Creates the new <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.PolygonElement"/> instance by the specified points.
            </summary>
            <param name="points">The points.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PolygonElement.DrawSelf(System.Drawing.Graphics)">
            <summary>
            Draws the element to specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.PolygonElement.Points">
            <summary>
            Gets or sets the points.
            </summary>
            <value>The points.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.PolylineElement">
            <summary>
            Implemenets the "polyline" element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PolylineElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.PolylineElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PolylineElement.ParseXml(System.Xml.XmlNode)">
            <summary>
            Parses the XML document.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.PolylineElement.DrawSelf(System.Drawing.Graphics)">
            <summary>
            Draws the element to specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.PolylineElement.Points">
            <summary>
            Gets or sets the points.
            </summary>
            <value>The points.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement">
            <summary>
            Inherited from <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.SuperElement"/> element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement.GetGDIBrush">
            <summary>
            Creates the GDI+ brush.
            </summary>
            <returns>Returns Brush.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement.FromBrush(System.Drawing.Drawing2D.PathGradientBrush)">
            <summary>
            Creates the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement"/> by the specified GDI+ brush.
            </summary>
            <param name="brush">The brush.</param>
            <returns>Returns RadialGradientElement from PathGradientBrush.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement.ParseXml(System.Xml.XmlNode)">
            <summary>
            Parses the XML document.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the element and the inner elements to the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement.CX">
            <summary>
            Gets or sets the X coordinate of gradient center.
            </summary>
            <value>The X coordinate of center.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement.CY">
            <summary>
            Gets or sets the Y coordinate of gradient center.
            </summary>
            <value>The Y coordinate of center.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement.FX">
            <summary>
            Gets or sets the X coordinate of gradient factor.
            </summary>
            <value>The X coordinate of factor.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement.FY">
            <summary>
            Gets or sets the Y coordinate of gradient factor.
            </summary>
            <value>The Y coordinate of factor.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement.R">
            <summary>
            Gets or sets the radius of gradient.
            </summary>
            <value>The radius of gradient.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement.GradientTransform">
            <summary>
            Gets or sets the gradient transform.
            </summary>
            <value>The gradient transform.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement.GradientUnits">
            <summary>
            Gets or sets the gradient units.
            </summary>
            <value>The gradient units.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement.SpreadMethod">
            <summary>
            Gets or sets the spread method.
            </summary>
            <value>The spread method.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.RadialGradientElement.HRef">
            <summary>
            Gets or sets the referense of inherited element.
            </summary>
            <value>The referense.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.RectElement">
            <summary>
            Implements the "rect" element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.RectElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.RectElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.RectElement.FromRectangleF(System.Drawing.RectangleF)">
            <summary>
            Creates the new <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.RectElement"/> instance by the specified <see cref="T:System.Drawing.RectangleF"/>.
            </summary>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/>.</param>
            <returns>Returns RectElement.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.RectElement.ParseXml(System.Xml.XmlNode)">
            <summary>
            Parses the XML document.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.RectElement.FromCoordinates(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.RectElement"/> from given coords.
            </summary>
            <param name="x">The x-location of the element.</param>
            <param name="y">The y-location of the element.</param>
            <param name="width">The width of the element.</param>
            <param name="height">The height of the element.</param>
            <returns>Returns RectElement.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.RectElement.DrawSelf(System.Drawing.Graphics)">
            <summary>
            Draws the element to specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.RectElement.Width">
            <summary>
            Gets or sets the width of element.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.RectElement.Height">
            <summary>
            Gets or sets the height of element.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.RectElement.X">
            <summary>
            Gets or sets the X coordinate of element.
            </summary>
            <value>The X coordinate.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.RectElement.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
            <value>The Y coordinate.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.RectElement.RX">
            <summary>
            Gets or sets the horizonral radius of corners.
            </summary>
            <value>The horizonral radius.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.RectElement.RY">
            <summary>
            Gets or sets the vertical radius of corners.
            </summary>
            <value>The vertical radius.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.StopElement">
            <summary>
            Implemenets the "stop" element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.StopElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.StopElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.StopElement.FromColor(System.Drawing.Color,Syncfusion.Windows.Forms.Chart.SvgBase.Length)">
            <summary>
            Creates the stop element by the specified color and offset.
            </summary>
            <param name="color">The color.</param>
            <param name="offset">The offset.</param>
            <returns>Returns StopElement.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.StopElement.ParseXml(System.Xml.XmlNode)">
            <summary>
            Parses the XML document.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.StopElement.Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.StopElement.StopColor">
            <summary>
            Gets or sets the color of the stop.
            </summary>
            <value>The color of the stop.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.StopElement.StopOpacity">
            <summary>
            Gets or sets the stop opacity.
            </summary>
            <value>The stop opacity.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.SvgElement">
            <summary>
            Implements the "svg" element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.SvgElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgElement.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the element and the inner elements to the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgElement.WriteXmlAttributes(System.Xml.XmlWriter)">
            <summary>
            Writes the attributes to XML document.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgElement.SetClip(System.Drawing.Graphics)">
            <summary>
            Sets the clip.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SvgElement.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SvgElement.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SvgElement.X">
            <summary>
            Gets or sets the X.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SvgElement.Y">
            <summary>
            Gets or sets the Y.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.TextElement">
            <summary>
            Implements the "text" element of SVG DOM.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.TextElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.TextElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.TextElement.DrawSelf(System.Drawing.Graphics)">
            <summary>
            Draws the element to specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.TextElement.ParseXml(System.Xml.XmlNode)">
            <summary>
            Parses the XML document.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.TextElement.X">
            <summary>
            Gets or sets the X coordinate of text.
            </summary>
            <value>The X coordinate .</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.TextElement.Y">
            <summary>
            Gets or sets the Y coordinate of text.
            </summary>
            <value>The Y coordinate.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.TextElement.DX">
            <summary>
            Gets or sets the DX.
            </summary>
            <value>The DX.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.TextElement.DY">
            <summary>
            Gets or sets the DY.
            </summary>
            <value>The DY.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.TextElement.TextLength">
            <summary>
            Gets or sets the length of the text.
            </summary>
            <value>The length of the text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.TextElement.Rotate">
            <summary>
            Gets or sets the angle of rotatation.
            </summary>
            <value>The angle.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.TextElement.LengthAdjust">
            <summary>
            Gets or sets the length adjust.
            </summary>
            <value>The length adjust.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument">
            <summary>
            Represents the SVG document.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument.FindElement(System.String)">
            <summary>
            Finds the element.
            </summary>
            <param name="id">The id.</param>
            <returns>Returns the specific Element for the given id.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument.Save(System.IO.Stream)">
            <summary>
            Saves the SVG document in a stream
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument.Save(System.String)">
            <summary>
            Saves the specified filename.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument.Load(System.String)">
            <summary>
            Loads the specified flianame.
            </summary>
            <param name="flianame">The flianame.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument.FindElement(System.String,Syncfusion.Windows.Forms.Chart.SvgBase.Element)">
            <summary>
            Finds the element.
            </summary>
            <param name="id">The id.</param>
            <param name="elem">The elem.</param>
            <returns>Returns the Element.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument.SaveElement(Syncfusion.Windows.Forms.Chart.SvgBase.Element,System.Xml.XmlNode,System.Xml.XmlDocument)">
            <summary>
            Saves the element.
            </summary>
            <param name="elem">The elem.</param>
            <param name="parent">The parent.</param>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument.LoadElements(System.Xml.XmlElement,Syncfusion.Windows.Forms.Chart.SvgBase.Element)">
            <summary>
            Loads the elements.
            </summary>
            <param name="xmlElement">The XML element.</param>
            <param name="parent">The parent element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument.CanAddChild(Syncfusion.Windows.Forms.Chart.SvgBase.Element)">
            <summary>
            Determines whether the specified child is allowed to add to the this element.
            </summary>
            <param name="elem">The elem.</param>
            <returns>
            	<c>true</c> if the specified child is allowed to add to the this element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument.OptimazeDocument(System.Xml.XmlDocument)">
            <summary>
            Optimazes the document.
            </summary>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument.CreateEntity(System.Xml.XmlNode,System.Int32@)">
            <summary>
            Creates the entity.
            </summary>
            <param name="node">The node.</param>
            <param name="id">The id.</param>
            <returns>Returns the HashTable.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument.SetEntityToNode(System.Xml.XmlNode,System.Collections.Hashtable)">
            <summary>
            Sets the entity to node.
            </summary>
            <param name="node">The node.</param>
            <param name="ents">The ents.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument.CurrentId">
            <summary>
            Gets or sets the current id.
            </summary>
            <value>The current id.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument.Svg">
            <summary>
            Gets the SVG.
            </summary>
            <value>The SVG.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument.Defs">
            <summary>
            Gets the defs.
            </summary>
            <value>The defs.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph">
            <summary>
             Provides methods for drawing primitives to the SVG document.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph"/> class.
            </summary>
            <param name="generateDefault">if set to <c>true</c> create default document.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.DrawDocument(System.Drawing.Graphics)">
            <summary>
            Draws the document to the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.SaveDocument(System.String)">
            <summary>
            Saves the document to the file.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.SaveDocument(System.IO.Stream)">
            <summary>
            Saves the document to the stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.LoadDocument(System.String)">
            <summary>
            Loads the document from the file.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the rectangle.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="x">The x coordinare of rectangle.</param>
            <param name="y">The y coordinare of rectangle.</param>
            <param name="width">The width of rectangle.</param>
            <param name="height">The height of rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the ellipse.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="x">The x coordinare of ellipse.</param>
            <param name="y">The y coordinare of ellipse.</param>
            <param name="width">The width of ellipse.</param>
            <param name="height">The height of ellipse.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws the path.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="gp">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
            <summary>
            Draws the string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The <see cref="T:System.Drawing.Font"/>.</param>
            <param name="br">The <see cref="T:System.Drawing.Brush"/>.</param>
            <param name="x">The x coordinate of text.</param>
            <param name="y">The y coordinate of text.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the line.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="x1">The x coordinate of start point.</param>
            <param name="y1">The y coordinate of start point.</param>
            <param name="x2">The x coordinate of end point.</param>
            <param name="y2">The y coordinate of end point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws the polygon.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="points">The array of <see cref="T:System.Drawing.PointF"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws the lines.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/>.</param>
            <param name="points">The array of <see cref="T:System.Drawing.PointF"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the image.
            </summary>
            <param name="img">The <see cref="T:System.Drawing.Image"/>.</param>
            <param name="x">The x coordinare of image.</param>
            <param name="y">The y coordinare of image.</param>
            <param name="width">The width of image.</param>
            <param name="height">The height of image.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Fills the path.
            </summary>
            <param name="br">The <see cref="T:System.Drawing.Brush"/>.</param>
            <param name="gp">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the rectangle.
            </summary>
            <param name="br">The <see cref="T:System.Drawing.Brush"/>.</param>
            <param name="x">The x coordinare of rectangle.</param>
            <param name="y">The y coordinare of rectangle.</param>
            <param name="width">The width of rectangle.</param>
            <param name="height">The height of rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the ellipse.
            </summary>
            <param name="br">The <see cref="T:System.Drawing.Brush"/>.</param>
            <param name="x">The x coordinare of ellipse.</param>
            <param name="y">The y coordinare of ellipse.</param>
            <param name="width">The width of ellipse.</param>
            <param name="height">The height of ellipse.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the polygon.
            </summary>
            <param name="br">The <see cref="T:System.Drawing.Brush"/>.</param>
            <param name="points">The array of <see cref="T:System.Drawing.PointF"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.TranslateTransform(System.Single,System.Single)">
            <summary>
            Changes the origin of the coordinate system.
            </summary>
            <param name="dx">The horizontal offset.</param>
            <param name="dy">The vertival offset.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.Clear(System.Drawing.Color)">
            <summary>
            Clears the specified color.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Sets the clip.
            </summary>
            <param name="gp">The gp.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.ResetClip">
            <summary>
            Resets the clip.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.SetClip(Syncfusion.Windows.Forms.Chart.SvgBase.IClipingAttribute,System.String)">
            <summary>
            Sets the clip.
            </summary>
            <param name="elem">The elem.</param>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.SetTransform(Syncfusion.Windows.Forms.Chart.SvgBase.ITransformAttribute)">
            <summary>
            Sets the transform.
            </summary>
            <param name="elem">The elem.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.GenerateNewDocument">
            <summary>
            Generates the new document.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.Document">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.SvgDocument"/>.
            </summary>
            <value>The document.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph.Transform">
            <summary>
            Gets or sets the world transformation for this <see cref="T:Syncfusion.Windows.Forms.Chart.SvgBase.SvgGraph"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ToSvg">
            <summary>
            Provides the methods to draw into SVG image.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.GetRealGraphics(System.Drawing.Size)">
            <summary>
            Gets the <see cref="T:System.Drawing.Graphics"/> for SVG by the specified size.
            </summary>
            <param name="size">The size.</param>
            <returns>Returns Graphics object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.SetSize(System.Drawing.Size)">
            <summary>
            Method to set the size for SVG image
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.Save(System.String)">
            <summary>
            Saves SVG document the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.Save(System.IO.Stream)">
            <summary>
            Saves SVG document in the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.CallBackMethod(System.Object,Syncfusion.Windows.Forms.Chart.GraphProxyEventArgs)">
            <summary>
            Handles the <see cref="T:System.Drawing.Graphics"/> methods.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Syncfusion.Windows.Forms.Chart.GraphProxyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.PRXDrawPath(System.Object[])">
            <summary>
            Draws <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
            </summary>
            <param name="prms">The array of parameters.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.PRXFillPath(System.Object[])">
            <summary>
            PRXs the fill path.
            </summary>
            <param name="prms">The array of parameters.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.PRXDrawRectangle(System.Object[])">
            <summary>
            PRXs the draw rectangle.
            </summary>
            <param name="prms">The array of parameters.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.PRXFillRectangle(System.Object[])">
            <summary>
            PRXs the fill rectangle.
            </summary>
            <param name="prms">The array of parameters.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.PRXDrawLine(System.Object[])">
            <summary>
            PRXs the draw line.
            </summary>
            <param name="prms">The array of parameters.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.PRXClear(System.Object[])">
            <summary>
            PRXs the clear.
            </summary>
            <param name="prms">The array of parameters.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.PRXDrawString(System.Object[])">
            <summary>
            PRXs the draw string.
            </summary>
            <param name="prms">The array of parameters.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.PRXDrawEllipse(System.Object[])">
            <summary>
            PRXs the draw ellipse.
            </summary>
            <param name="prms">The array of parameters.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.PRXFillEllipse(System.Object[])">
            <summary>
            PRXs the fill ellipse.
            </summary>
            <param name="prms">The array of parameters.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.PRXDrawPolygon(System.Object[])">
            <summary>
            PRXs the draw polygon.
            </summary>
            <param name="prms">The array of parameters.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.PRXFillPolygon(System.Object[])">
            <summary>
            PRXs the fill polygon.
            </summary>
            <param name="prms">The array of parameters.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.PRXDrawImage(System.Object[])">
            <summary>
            PRXs the draw image.
            </summary>
            <param name="prms">The array of parameters.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.PRXSetClip(System.Object[])">
            <summary>
            PRXs the set clip.
            </summary>
            <param name="prms">The array of parameters.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.PRXResetClip(System.Object[])">
            <summary>
            Resets clip.
            </summary>
            <param name="prms">The array of parameters.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.TryCastToRect(System.Object[],System.Int32,System.Drawing.RectangleF@)">
            <summary>
            Try cast parameters to <see cref="T:System.Drawing.RectangleF"/>, <see cref="T:System.Drawing.Rectangle"/>, <see cref="T:System.Single"/> or <see cref="T:System.Int32"/> type.
            </summary>
            <param name="prms">The array of parameters.</param>
            <param name="offset">The parameter offset.</param>
            <param name="outRect">The output <see cref="T:System.Drawing.RectangleF"/>.</param>
            <returns>Returns true if casting parameters to Rectangle is possible otherwise false. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ToSvg.TryCastToGraphPath(System.Object[],System.Int32,System.Drawing.Drawing2D.GraphicsPath@)">
            <summary>
            Try cast parameters to <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> type.
            </summary>
            <param name="prms">The array of parameters.</param>
            <param name="offset">The offset.</param>
            <param name="gp">The output <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</param>
            <returns>Returns true if casting parameters to GraphicsPath is possible otherwise false.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSetter">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSetter.#ctor(Syncfusion.Windows.Forms.Chart.ChartTemplateSet,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSetter"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="descriptor">The descriptor.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSetter.#ctor(Syncfusion.Windows.Forms.Chart.ChartTemplateSet,System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSetter"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="descriptor">The descriptor.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSetter.Add(Syncfusion.Windows.Forms.Chart.ChartSetter)">
            <summary>
            Adds the specified setter.
            </summary>
            <param name="setter">The setter.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSetter.Remove(Syncfusion.Windows.Forms.Chart.ChartSetter)">
            <summary>
            Removes the specified setter.
            </summary>
            <param name="setter">The setter.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSetter.Apply(System.Object)">
            <summary>
            Applies the specified owner.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSetter.Reset(System.Object)">
            <summary>
            Resets the specified owner.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSetter.Read(System.Xml.XmlElement)">
            <summary>
            Reads the specified element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSetter.Write(System.Xml.XmlElement)">
            <summary>
            Writes the specified element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSetter.Scan(System.Object)">
            <summary>
            Scans the specified owner.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSetter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSetter.ShouldSerializeValue">
            <summary>
            Should the serialize value.
            </summary>
            <returns>True if the element should serialize otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSetter.ResetValue">
            <summary>
            Resets the value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSetter.GetSetter(System.String)">
            <summary>
            Gets the setter.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>Returns ChartSetter.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSetter.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSetter.IsEmptyValue">
            <summary>
            Gets a value indicating whether this instance is empty value.
            </summary>
            <value>
            	<c>true</c> if this instance is empty value; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSetter.IsEmptyChildren">
            <summary>
            Gets a value indicating whether this instance is empty children.
            </summary>
            <value>
            	<c>true</c> if this instance is empty children; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSetter.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSetter.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSetter.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSetter.PropertyDescriptor">
            <summary>
            Gets the property descriptor.
            </summary>
            <value>The property descriptor.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSetter.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSetter.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSetter"/> at the specified index.
            </summary>
            <value>The ChartSetter indexer.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSetter.Item(System.String)">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSetter"/> with the specified property.
            </summary>
            <value>The ChartSetter indexer.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartSetter.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartTemplate">
            <summary>
            Provides the storing of chart properties.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartTemplate"/> class.
            </summary>
            <param name="chartType">Type of the chart.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.Load(Syncfusion.Windows.Forms.Chart.IChartAreaHost,System.IO.Stream)">
            <summary>
            Loads the specified chart.
            </summary>
            <param name="chart">The chart.</param>
            <param name="stream">The stream.</param>
            <returns>Returns ChartTemplate with stored properties.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.Load(Syncfusion.Windows.Forms.Chart.IChartAreaHost,System.String)">
            <summary>
            Loads the specified chart.
            </summary>
            <param name="chart">The chart.</param>
            <param name="filename">The filename.</param>
            <returns>Returns ChartTemplate with stored properties.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.Save(Syncfusion.Windows.Forms.Chart.IChartAreaHost,System.IO.Stream)">
            <summary>
            Saves the specified chart.
            </summary>
            <param name="chart">The chart.</param>
            <param name="stream">The stream.</param>
            <returns>Returns ChartTemplate with stored properties.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.Save(Syncfusion.Windows.Forms.Chart.IChartAreaHost,System.String)">
            <summary>
            Saves the specified chart.
            </summary>
            <param name="chart">The chart.</param>
            <param name="filename">The filename.</param>
            <returns>Returns ChartTemplate with stored properties.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.SetValue(System.String,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="path">The path.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.GetValue(System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="path">The path.</param>
            <returns>Returns object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.Apply(Syncfusion.Windows.Forms.Chart.IChartAreaHost)">
            <summary>
            Applies the specified chart.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.Scan(Syncfusion.Windows.Forms.Chart.IChartAreaHost)">
            <summary>
            Scans the specified chart.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.ScanSeries(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Scans the specified series.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.Reset(Syncfusion.Windows.Forms.Chart.IChartAreaHost)">
            <summary>
            Resets the properties of the specified chart.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.SaveSeries(System.IO.Stream)">
            <summary>
            Saves the series in specified filename.
            </summary>
            <param name="s">The stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.Load(System.String)">
            <summary>
            Loads the specified filename.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.Load(System.IO.Stream)">
            <summary>
            Loads the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.SetPropertiesValue(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Setting Properties value for series.
            </summary>
            <param name="series">series.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.ChangeValueType(System.ComponentModel.PropertyDescriptor,System.String)">
            <summary>
            Changing the valuetype for SeriesProperties.
            </summary>
            <param name="propertyDesc">The PropertyDescriptor.</param>
            <param name="propertyValue">The propertyValue.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.Read(System.Xml.XmlElement)">
            <summary>
            Reads the specified element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.Save(System.String)">
            <summary>
            Saves the specified stream.
            </summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.Save(System.IO.Stream)">
            <summary>
            Saves the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.Generate(System.Type)">
            <summary>
            Generates tree of setters by the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns>Returns ArrayList object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.SelectBy(System.String)">
            <summary>
            Selects the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSetter"/> by property path.
            </summary>
            <param name="path">The path.</param>
            <returns>The ChartSetter object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplate.GetSetter(System.String)">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSetter"/> by the property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>The ChartSetter object.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartTemplate.StoreAllProperties">
            <summary>
            Specifies whether styles applied to points should also be stored in template or not
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartTemplateSet">
            <summary>
            Represents the type of property serialization.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTemplateSet.Simple">
            <summary>
            The value of property can be converted to the <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTemplateSet.Collection">
            <summary>
            The value of property is collection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTemplateSet.SimpleAndCollection">
            <summary>
            The value of property is collection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTemplateSet.Content">
            <summary>
            The property contains sub-properties.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTemplateSet.SimpleBehavior">
            <summary>
            The value of property can be converted to the <see cref="T:System.String"/>. The property of this attribute is not related to appearance.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTemplateSet.CollectionBehavior">
            <summary>
            The value of property is collection. The property of this attribute is not related to appearance.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTemplateSet.SimpleAndCollectionBehavior">
            <summary>
            The value of property is collection. The property of this attribute is not related to appearance.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTemplateSet.ContentBehavior">
            <summary>
            The property contains sub-properties. The property of this attribute is not related to appearance.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartTemplateAttribute">
            <summary>
            The ChartTemplateAttribute class.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplateAttribute.#ctor(Syncfusion.Windows.Forms.Chart.ChartTemplateSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartTemplateAttribute"/> class.
            </summary>
            <param name="setType">Type of the set.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTemplateAttribute.#ctor(Syncfusion.Windows.Forms.Chart.ChartTemplateSet,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartTemplateAttribute"/> class.
            </summary>
            <param name="setType">Type of the set.</param>
            <param name="itemType">Type of the item.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartTemplateAttribute.SetType">
            <summary>
            Gets the type of the property.
            </summary>
            <value>The type of the property.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartTemplateAttribute.ItemType">
            <summary>
            Gets the type of the collection items.
            </summary>
            <value>The type of the item.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.MarkerStyle">
            <summary>
            The MarkerStyle Enumerator.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.MarkerStyle.Rectangle">
            <summary>
            Marker Style will be of Rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.MarkerStyle.Ellipse">
            <summary>
            Marker Style will be of Ellipse.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.MarkerStyle.SmoothRectangle">
            <summary>
            Marker Style will be of SmoothRectangle.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip">
            <summary>
            Defines the fancy tooltip rendered on data points.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.m_hintWindow">
            <summary>
            Store top level form to show toolTop.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.m_info">
            <summary>
            The ChartFancyToolTipInfo instance.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.m_target">
            <summary>
            Store target point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.m_shift">
            <summary>
            Store shift.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.m_drawSymbol">
            <summary>
            Store value indicates that draw symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.m_visible">
            <summary>
            Store value indicates that ToolTip is visible.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.m_clientRectangle">
            <summary>
            Store client rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.m_text">
            <summary>
            Store text property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.#ctor(Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.Init(System.Windows.Forms.Control,Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController)">
            <summary>
            Inits by the specified parent.
            </summary>
            <param name="parent">The parent.</param>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.Show(System.Drawing.PointF)">
            <summary>
            Shows this tooltip by specified parent.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.Hide">
            <summary>
            Hides this tooltip.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.OnHintWindowMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when mouse is moved by hint window.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.Invalidate">
            <summary>
            Invalidates this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.OnToolTipPaint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when [tool tip paint].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.OnParentFormDeactivate(System.Object,System.EventArgs)">
            <summary>
            Called when parent form deactivated.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.GetPath(System.Single,System.Single)">
            <summary>
            Gets the GraphicsPath of current ToolTip.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>GraphicsPath of the current ToolTip.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.GetRectangleF">
            <summary>
            Gets rectangle to draw text.
            </summary>
            <returns>Rectangle to draw text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.GetPathRectangle(System.Single,System.Single)">
            <summary>
            Gets the path rectangle.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>Rectangle GraphicsPath of the current ToolTip.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.GetPathSmoothRectangle(System.Single,System.Single)">
            <summary>
            Gets the path smooth rectangle.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>Smooth rectangle GraphicsPath of the current ToolTip.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.GetPathEllipse(System.Single,System.Single)">
            <summary>
            Gets the path ellipse.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>Ellipse GraphicsPath of the current ToolTip.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.AddSector(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Adds the sector.
            </summary>
            <param name="gp">The gp.</param>
            <param name="rect">The rect.</param>
            <param name="start">The start.</param>
            <param name="angle">The angle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.AutoSize(System.Drawing.Rectangle)">
            <summary>
            Recalculates size and location
            </summary>
            <param name="rect">The rectangle to check bounds.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.GetPrimarySize">
            <summary>
            Gets the  primary size.
            </summary>
            <returns>Primary size of hint.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.GetRadialByReal(System.Single)">
            <summary>
            Converts degrees to radial.
            </summary>
            <param name="angle">The angle to convert.</param>
            <returns>Radial representation of the angle.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.GetSymbolPath">
            <summary>
            Gets the symbol path.
            </summary>
            <returns>GraphicsPath of the ToolTip</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.GetCenterLoaction(System.Drawing.RectangleF,System.Drawing.SizeF)">
            <summary>
            Gets the center loaction.
            </summary>
            <param name="rc">The rc.</param>
            <param name="sz">The sz.</param>
            <returns>Returns the center location point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.DrawText(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Draws the text.
            </summary>
            <param name="g">The graphics content.</param>
            <param name="rc">The rectangle to draw text.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.CalcAlignment(System.Windows.Forms.TabAlignment,System.Drawing.Rectangle)">
            <summary>
            Calculates the alignment.
            </summary>
            <param name="alignment">The current alignment.</param>
            <param name="rect">The rectangle to check alignment.</param>
            <returns>Returns TabAlignment.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.OnInfoChanged(System.Object,System.EventArgs)">
            <summary>
            Called when info was changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.Info">
            <summary>
            Gets the info.
            </summary>
            <value>The info.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.Shift">
            <summary>
            Gets or sets the shift.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip"/> is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTip.SymbolColor">
            <summary>
            Gets or sets the color of the symbol.
            </summary>
            <value>The color of the symbol.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo">
            <summary>
            Contains the appearance properties of fancy tooltip.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.Read(Syncfusion.Windows.Forms.Chart.ChartFancyToolTip)">
            <summary>
            Sets the characteristics of this tooltip same as the input Fancy tooltip 
            </summary>
            <param name="fancyToolTip"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.Write(Syncfusion.Windows.Forms.Chart.ChartFancyToolTip)">
            <summary>
            Sets this characteristics for the input Fancy tooltip
            </summary>
            <param name="fancyToolTip"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.Read(Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo)">
            <summary>
            Sets the characteristics of this tooltip same as the input Fancy tooltip 
            </summary>
            <param name="fancyToolTip"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.Write(Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo)">
            <summary>
            Sets this characteristics for the input Fancy tooltip
            </summary>
            <param name="fancyToolTip"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.OnBorderSettingsChanged(System.Object,System.EventArgs)">
            <summary>
            Called when border settings was changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.RaiseChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the changed event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.Border">
            <summary>
            Gets or sets the information that is used for specifying border properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.Visible">
            <summary>
            Gets or sets a value indicating the visibility of the Fancy tooltip. Default is false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.ResizeInsideSymbol">
            <summary>
            Gets or sets a value indicating the Resize the Inside of Fancy Symbol. Default is false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.Style">
            <summary>
            Gets or Sets MarkerStyle of the tool tip. Default is SmoothRectangle.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.ToTarget">
            <summary>
            Gets or sets the space between the symbol and the marker. Default is 20f.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.Spacing">
            <summary>
            Gets or Sets the interval between the border and the tool tip text. Default is 4f.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.Alignment">
            <summary>
            Gets or Sets the alignment of the tab for the FancyToolTip. Default is Left.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.Angle">
            <summary>
            Gets or Sets the angle of the arrow in the tooltip. Default is 15f.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.BackColor">
            <summary>
            Gets or sets the backcolor for the FancyToolTip. Default is Color.Info.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.ForeColor">
            <summary>
            Gets or sets the forecolor for the FancyToolTip. Default is Color.Black.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.SymbolColor">
            <summary>
            Gets or sets the backcolor for the symbol on FancyToolTip. Default is Color.Red.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.Font">
            <summary>
            Gets or sets the font information of the FancyToolTip.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.CheckLocation">
             <summary>
            Gets or Sets this property. When this property is set to true, the Tool Tip will be auto aligned depending on the size. Default is true.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.SymbolSize">
            <summary>
            Gets or Sets the size of the Symbol associated with the FancyToolTip. Default is (10, 10).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipInfo.Symbol">
            <summary>
            Gets or Sets the symbol associated with the FancyToolTip. Default is Circle.
            </summary>
            <remarks>
            <b>Image</b> symbol isn't work for FancyToolTip.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController">
            <summary>
            The ToolTipController that controls tips visibility, position and style.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController.#ctor(Syncfusion.Windows.Forms.Chart.IChartAreaHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController"/> class.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController.#ctor(Syncfusion.Windows.Forms.Chart.IChartAreaHost,System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController"/> class.
            </summary>
            <param name="chart">The chart.</param>
            <param name="host">The host.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController.RefreshToolTips(System.Drawing.Point)">
            <summary>
            Views the tool tips.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController.GetNearlyPointByX(System.Double,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Gets the nearly point by X.
            </summary>
            <param name="x">The x-coord.</param>
            <param name="series">The series.</param>
            <returns>Nearest point to x-coord in given series</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController.GetTextForToolTip(Syncfusion.Windows.Forms.Chart.ChartSeries,System.Int32)">
            <summary>
            Gets the text for display on tool tip.
            </summary>
            <param name="series">The series.</param>
            <param name="ptIndex">The point to get tool tip.</param>
            <returns>Returns text for tooltip.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController.GetFancyToolTip(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Gets the fancy tool tip.
            </summary>
            <param name="series">The series to get tool tip.</param>
            <returns>Tool tip assosiated with series.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when mouse is moved.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController.OnSeriesListChanged(System.Object,Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs)">
            <summary>
            Handles the Changed event of the Series control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController.OnChartHostInvalidated(System.Object,System.Windows.Forms.InvalidateEventArgs)">
            <summary>
            Handles the Invalidated event of the Parent control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.InvalidateEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController.OnChartHostPaint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when chart host is painting.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController.TextFormat">
            <summary>
            Raised when the text format is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartTextFormatEventHendler">
            <summary>
            Represents the method that handles the <see cref="E:Syncfusion.Windows.Forms.Chart.ChartFancyToolTipController.TextFormat"/> event.
            </summary>
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartTextFormatEventArgs">
            <summary>
            Represents arguments of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartTextFormatEventHendler"/> handler.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartTextFormatEventArgs.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries,Syncfusion.Windows.Forms.Chart.ChartPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartTextFormatEventArgs"/> class.
            </summary>
            <param name="series">The series.</param>
            <param name="point">The point.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartTextFormatEventArgs.Series">
            <summary>
            Gets the series.
            </summary>
            <value>The series.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartTextFormatEventArgs.Point">
            <summary>
            Gets the point.
            </summary>
            <value>The point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartTextFormatEventArgs.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.TrendlineType">
            <summary>
            The Trendline type  Enumerator.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.TrendlineType.Linear">
            <summary>
            Draws linear Trendline.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.TrendlineType.Polynomial">
            <summary>
            Draws Polynomial Trendline
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.TrendlineType.Exponential">
            <summary>
            Draws Exponential Trendline 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.TrendlineType.MovingAverage">
            <summary>
            Draws Moving Average Trendline 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.TrendlineType.Logarithmic">
            <summary>
            Draws Logarithmic Trendline 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.TrendlineType.Power">
            <summary>
            Draws Power Trendline 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Trendline.UpdateElements(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Calculates the Trendline Elements  <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="series">The Chartseries<see cref="!:Series"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Trendline.CheckTrendlineType(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Calculates the Trendline Elements  <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="series">The Chartseries<see cref="!:Series"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Trendline.CalculatePolynomialTrendLine(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Calculate Polynomial Trendline with order
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Trendline.CreatePolynomialSegments(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Create the polynomial segments
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Trendline.GetBezierControlPoints(System.Drawing.PointF,System.Drawing.PointF,System.Double,System.Double,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Returns the controlPoints of the curve
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <param name="ys1"></param>
            <param name="ys2"></param>
            <param name="controlPoint1"></param>
            <param name="controlPoint2"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Trendline.Name">
            <summary>
            Gets or sets the name of the trendline.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Trendline.Color">
            <summary>
            Gets or sets the color of the trendline.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Trendline.Style">
            <summary>
            Gets or sets the trendline style.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Trendline.Width">
            <summary>
            Gets or sets the width of the trendline.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Trendline.Visible">
            <summary>
            Gets or sets the visibility of  trendline.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Trendline.BackwardForecast">
            <summary>
            Gets or sets the Backward Forecast  of the trendline.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Trendline.ForwardForecast">
            <summary>
            Gets or sets the Forward Forecast of the trendline.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Trendline.PolynomialOrder">
            <summary>
            Gets or sets the Polynomial Order in the Polynomial Trendline
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Trendline.Period">
            <summary>
            Gets or sets the Period in the Moving Average Trendline
            </summary>
            
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Trendline.Type">
            <summary>
            Gets or sets the  type of the trendline.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartCustomPoint">
            <summary>
            The ChartCustomPoint class can be used to set text or symbols at a particular point on the chart area.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Dispose">
            <summary>
            Method to dispose ChartCustomPoint object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.AddShape(Syncfusion.Windows.Forms.Chart.DrawShape)">
            <summary>
            Assign the Shape class properties values to custom point to draw in the chartarea
            </summary>
            <param name="shape">The chart custom point shape</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Draw(Syncfusion.Windows.Forms.Chart.ChartArea,Syncfusion.Windows.Forms.Chart.ChartGraph,System.Drawing.PointF)">
            <summary>
            Draws the specified graph.
            </summary>
            <param name="area">The chartarea</param>
            <param name="graph">The graph.</param>
            <param name="point">The point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Draw(Syncfusion.Windows.Forms.Chart.ChartArea,Syncfusion.Windows.Forms.Chart.Graphics3D,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Draws the specified graph.
            </summary>
            <param name="area">The chartarea</param>
            <param name="graph">The graph.</param>
            <param name="point">The point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.OnSettingsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:SettingsChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.OnStyleChanged(System.Object,Syncfusion.Styles.StyleChangedEventArgs)">
            <summary>
            Called when border is changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Syncfusion.Styles.StyleChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.GetTextPoint(System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Gets the text point.
            </summary>
            <param name="basePoint">The base point.</param>
            <param name="textSize">Size of the text.</param>
            <returns>Returns the Text point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.GetShapePoint(System.Drawing.PointF)">
            <summary>
            Gets the Rectangle point.
            </summary>
            <param name="basePoint">The base point.</param>
            <returns>Returns the Rectangle point.</returns>
            
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.SettingsChanged">
            <summary>
            Occurs when settings is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Images">
            <summary>
            Gets or sets the image list to be used.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Border">
            <summary>
            Gets or sets the border information that is to be associated with this custom point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Interior">
            <summary>
            Gets or sets the interior brush information that is to be associated with this custom point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Offset">
            <summary>
            Gets or sets the offset of text that is to be associated with this point, from the rendering position of this point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.PointIndex">
            <summary>
            Gets or sets the index of the point to be followed.
            <seealso cref="F:Syncfusion.Windows.Forms.Chart.ChartCustomPointType.PointFollow"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.SeriesIndex">
            <summary>
            Gets or sets the index of the series that holds the point to be followed.
            <see cref="F:Syncfusion.Windows.Forms.Chart.ChartCustomPointType.PointFollow"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.DateXValue">
            <summary>
            Gets or sets the X value of the custom point when the primary X axis of the chart is DateTime.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.DateYValue">
            <summary>
            Gets or sets the Y value of the custom point when the primary Y axis of the chart is DateTime.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Symbol">
            <summary>
            Gets or sets the symbol information that is to be associated with the custom point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.ShowMarker">
            <summary>
            Gets or sets a value indicating whether marker is visible.
            </summary>
            <value><c>true</c> if marker is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Color">
            <summary>
            Gets or sets the color of the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Font">
            <summary>
            Gets or sets the font of the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Alignment">
            <summary>
            Gets or sets the alignment of the text in relation to the point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.Text">
            <summary>
            Gets or sets the text of the custom point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.YValue">
            <summary>
            Gets or sets the X value of the custom point when the primary X axis of the chart is of type double.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.XValue">
            <summary>
            Gets or sets the Y value of the custom point when the primary Y axis of the chart is of type double.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCustomPoint.CustomType">
            <summary>
            Indicates how the XValue and YValue will be used.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.DrawShape">
            <summary>
            The DrawShape class can be used to set shape to particular custom point on the chart area.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawShape.Dispose">
            <summary>
            Method to dispose DrawShape object
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.DrawShape.Font">
            <summary>
            Gets or sets the font of the text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.DrawShape.Type">
            <summary>
            Gets or sets the style of the shape that is to be displayed.
            Default shape is Square. 
            It will support the limitted shape(Square, Circle, Hexagon, Pentagon) draw around the custom point
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.DrawShape.Text">
            <summary>
            Gets or sets the text of the custom point.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.DrawShape.Color">
            <summary>
             Gets or sets background color to the Shape. 
             Default color is "White"
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.DrawShape.TextColor">
            <summary>
             Gets or sets text color to the custom shape. 
             Default color is "White"
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.DrawShape.Size">
            <summary>
             Gets or sets size to the Shape to draw around the custom points
             Default Size is (50, 50)
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.DrawShape.Border">
            <summary>
             Gets or sets border to the custom shape.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.DrawShape.Position">
            <summary>
            Gets or sets the position of the shape in relation to the point.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor">
            <summary>
            Provides a base class that can be used to design value editors with the drop-down list.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor.GetValues">
            <summary>
            Gets the values.
            </summary>
            <returns>Returns IList.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"></see> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"></see> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"></see> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"></see> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"></see> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"></see> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"></see> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"></see>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor.GetItemText(System.Object)">
            <summary>
            Gets the item text.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor.DropDownListBox">
            <summary>
            Class represent palette drop down user interface.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor.DropDownListBox.#ctor(Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor.DropDownListBox"/> class.
            </summary>
            <param name="editor">The owner.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor.DropDownListBox.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
            Initializes the temporary variables.
            </summary>
            <param name="edSvc">The <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService"/>.</param>
            <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor.DropDownListBox.End">
            <summary>
            Removes the temporary variables.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor.DropDownListBox.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            The OnSelectedIndexChanged method.
            </summary>
            <param name="e">Event object with the details</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor.DropDownListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ListBox.DrawItem"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.DrawItemEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor.DropDownListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ListBox.MeasureItem"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MeasureItemEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor.DropDownListBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor.DropDownListBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyUp"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartDropDownUIEditor.DropDownListBox.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ColorsUIEditor">
            <internalonly/>
            <summary>
            Custom <see cref="T:System.Drawing.Design.UITypeEditor"/> for arrays of <see cref="T:System.Drawing.Color"/> struct.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ColorsUIEditor.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ColorsUIEditor"/> class.
            </summary>
            <param name="type">The data type of the items in the array.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ColorsUIEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Paints a representation of the value of an object using the specified <see cref="T:System.Drawing.Design.PaintValueEventArgs"></see>.
            </summary>
            <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs"></see> that indicates what to paint and where to paint it.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ColorsUIEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates whether the specified context supports painting a representation of an object's value within the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <returns>
            true if <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)"></see> is implemented; otherwise, false.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesTypeEditor">
            <summary>
            Custom <see cref="T:System.Drawing.Design.UITypeEditor"/> for <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesType"/> enumeration.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesTypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Paints a representation of the value of an object using the specified <see cref="T:System.Drawing.Design.PaintValueEventArgs"></see>.
            </summary>
            <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs"></see> that indicates what to paint and where to paint it.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSeriesTypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates whether the specified context supports painting a representation of an object's value within the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <returns>
            true if <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)"></see> is implemented; otherwise, false.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartColorPaletteEditor">
            <summary>
            Custom <see cref="T:System.Drawing.Design.UITypeEditor"/> for <see cref="T:Syncfusion.Windows.Forms.Chart.ChartColorPalette"/> enum.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorPaletteEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Paints a representation of the value of an object using the specified <see cref="T:System.Drawing.Design.PaintValueEventArgs"></see>.
            </summary>
            <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs"></see> that indicates what to paint and where to paint it.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorPaletteEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates whether the specified context supports painting a representation of an object's value within the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <returns>
            true if <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)"></see> is implemented; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartColorPaletteEditor.GetValues">
            <summary>
            Gets the values.
            </summary>
            <returns>Returns IList.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.BrushInfoEditor">
            <summary>
            Provides a <see cref="T:System.Drawing.Design.UITypeEditor"/> for visually picking a <see cref="T:Syncfusion.Drawing.BrushInfo"/>.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.m_brushInfoUI">
            <summary>
            Store UI for edit <see cref="T:Syncfusion.Drawing.BrushInfo"/> value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"></see> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"></see> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"></see> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"></see> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"></see> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"></see> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"></see> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"></see>.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI">
            <summary>
            Represent user interface for edit <see cref="T:Syncfusion.Drawing.BrushInfo"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.m_value">
            <summary>
            Store class for edit brush in property grid.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.m_defValue">
            <summary>
            Store default brush.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.m_edSvc">
            <summary>
            Store <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.#ctor(Syncfusion.Windows.Forms.Chart.BrushInfoEditor)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
            <summary>
            Starts the specified <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService"/>.
            </summary>
            <param name="edSvc">The <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService"/>.</param>
            <param name="value">The value to edit.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.End">
            <summary>
            Ends this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyUp"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.btnOk_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the btnOk control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the btnCancel control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.Interior">
            <summary>
            Class for edit BrushInfo in property grid.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.Interior.m_brush">
            <summary>
            Store brush.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.BrushInfoEditor.BrushInfoUI.Interior.Brush">
            <summary>
            Gets or sets brush.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSymbolShapeEditor">
            <summary>
            Custom <see cref="T:System.Drawing.Design.UITypeEditor"/> for arrays of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolShape"/> enumeration.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolShapeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Paints a representation of the value of an object using the specified <see cref="T:System.Drawing.Design.PaintValueEventArgs"></see>.
            </summary>
            <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs"></see> that indicates what to paint and where to paint it.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolShapeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates whether the specified context supports painting a representation of an object's value within the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <returns>
            true if <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)"></see> is implemented; otherwise, false.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.DrawingMode">
            <summary>
            Specifies the drawing mode of chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.DrawingMode.Simple2D">
            <summary>
            Chart will be painted in 2D mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.DrawingMode.Pseudo3D">
            <summary>
            Chart will be painted in pseudo 3D mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.DrawingMode.Real3D">
            <summary>
            Chart will be painted in real 3D mode.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAreaAxesType">
            <summary>
            Specifies type of coordinate system.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAreaAxesType.None">
            <summary>
            Any coortinate sysytem isn't used.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAreaAxesType.Circular">
            <summary>
            The circular coordinate system is used.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAreaAxesType.Rectangular">
            <summary>
            The rectangular coordinate system is used.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxesLayoutMode">
            <summary>
            Lists the different ways in which multiple axes will be rendered on the same side (X or Y)
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxesLayoutMode.SideBySide">
            <summary>
            Multiple axes will be rendered one after the other, side-by-side.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxesLayoutMode.Stacking">
            <summary>
            Multiple axes will be rendered in parallel.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.None">
            <summary>
            Represents No Skins
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.Office2007Black">
            <summary>
            Represents Office2007Black Skin
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.Office2007Blue">
            <summary>
            Represents Office2007Blue Skin
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.Office2007Silver">
            <summary>
            Represents Office2007Silver Skin
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.Almond">
            <summary>
            Represents Almond Skin
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.Blend">
            <summary>
            Represents Blend Skin
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.Blueberry">
            <summary>
            Represents Blueberry Skin
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.Marble">
            <summary>
            Represents Marble Skin
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.Midnight">
            <summary>
            Represents MidNight Skin
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.Monochrome">
            <summary>
            Represents Monochrome Skin
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.Olive">
            <summary>
            Represents Olive Skin
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.Sandune">
            <summary>
            Represents Sandune Skin
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.Turquoise">
            <summary>
            Represents Turquoise Skin
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.Vista">
            <summary>
            Represents Vista Skin
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.VS2010">
            <summary>
            Represents VS2010 Skin
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.Skins.Metro">
            <summary>
            Represents VS2010 Skin
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPaintFlags">
            <summary>
            Specifies flags that control the elements painting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPaintFlags.Background">
            <summary>
            Indicates visibility of background.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPaintFlags.Border">
            <summary>
            Indicates visibility of border.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPaintFlags.InteractiveCursors">
            <summary>
            Indicates visibility of interactive cursors.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPaintFlags.Axes">
            <summary>
            Indicates visibility of axes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPaintFlags.All">
            <summary>
            All elements will be painted.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAccumulationLabelStyle">
            <summary>
            Lists the options available for rendering the labels in the Pyramid, Funnel, Pie or Doughnut Chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAccumulationLabelStyle.Disabled">
            <summary>
            Labels are not shown.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAccumulationLabelStyle.Inside">
            <summary>
            Labels are rendered inside the pie.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAccumulationLabelStyle.Outside">
            <summary>
            Lables are rendered outside the pie.In funnel or pyramid chart, if the label style is set to outside, then the label placement has be left or right.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAccumulationLabelStyle.OutsideInColumn">
            <summary>
            Labels are rendered outside the pie and in columns.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAccumulationLabelStyle.OutsideInArea">
            <summary>
            Labels are rendered outside the pie and in chart area.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAccumulationLabelPlacement">
            <summary>
            Lists the options for positioning the lables in an accumulation chart (Pyramid or Funnel)
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAccumulationLabelPlacement.Top">
            <summary>
            Renders the label on top of the block, when rendered Inside.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAccumulationLabelPlacement.Bottom">
            <summary>
            Renders the label at the bottom of the block, when rendered Inside.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAccumulationLabelPlacement.Left">
            <summary>
            Renders the label to the left of the block, when rendered Outside.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAccumulationLabelPlacement.Right">
            <summary>
            Renders the label to the right of the block, when rendered Outside.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAccumulationLabelPlacement.Center">
            <summary>
            Renders the label at the center of the block, when rendered Inside.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFigureBase">
            <summary>
            Lists the options in which a pyramid base could be rendered in 3D mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFigureBase.Square">
            <summary>
            Base is a square.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFigureBase.Circle">
            <summary>
            Base is a circle.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartFunnelMode">
            <summary>
            Lists the funnel mode options.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFunnelMode.YIsWidth">
            <summary>
            The specified Y value is used to compute the width of the corresponding block.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartFunnelMode.YIsHeight">
            <summary>
            The specified Y value is used to compute the height of the corresponding block.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPyramidMode">
            <summary>
            Specifies the mode in which the Y values should be interpreted in the Pyramid chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPyramidMode.Linear">
            <summary>
            The Y values are proportional to the length of the sides of the pyramid.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPyramidMode.Surface">
            <summary>
            The Y values are proportional to the surface area of the corresponding blocks.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartUsedSpaceType">
            <summary>
            Specifies how much 3D space will be used by chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartUsedSpaceType.None">
            <summary>
            Chart type doesn't use the 3D space.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartUsedSpaceType.All">
            <summary>
            Chart type uses the all 3D space.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartUsedSpaceType.OneForOne">
            <summary>
            Chart type uses the single layer of 3D space for each series.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartUsedSpaceType.OneForAll">
            <summary>
            Chart type uses the single layer of 3D space for all series with the same type.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartDock">
            <summary>
            Specifies the Docking position of a control.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDock.Left">
            <summary>
            The control will be docked to the Left of its container
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDock.Right">
            <summary>
            The control will be docked to the Right of its container
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDock.Top">
            <summary>
            The control will be docked to the Top of its container
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDock.Bottom">
            <summary>
            The control will be docked to the Bottom of its container
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartDock.Floating">
            <summary>
            The control will not be docked inside the container
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAlignment">
            <summary>
            Specifies the alignment of the control.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAlignment.Near">
            <summary>
            The control will be aligned Near
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAlignment.Center">
            <summary>
            The control will be aligned in the Center
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAlignment.Far">
            <summary>
            The control will be aligned Far
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPlacement">
            <summary>
            Specifies the placement of element by the parent bounds.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPlacement.Inside">
            <summary>
            Elements are located inside the parent.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPlacement.Outside">
            <summary>
            Elements are located outside the parent.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartOrientation">
            <summary>
            Specifies the orientation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartOrientation.Horizontal">
            <summary>
            The chart element is oriented horizontally
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartOrientation.Vertical">
            <summary>
            The chart element is oriented vertically
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSetMode">
            <summary>
            Specifies the mode of drawing the edge labels.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSetMode.None">
            <summary>
            None of the edge label settings will be applied.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSetMode.AutoSet">
            <summary>
            The margin labels will be auto set
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSetMode.UserSet">
            <summary>
            The margin labels will be user set
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.VerticalAlignment">
            <summary>
            Specifies the vertical alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.VerticalAlignment.Top">
            <summary>
            The element will be aligned in Top
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.VerticalAlignment.Center">
            <summary>
            The element will be aligned in Center
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.VerticalAlignment.Bottom">
            <summary>
            The element will be aligned in Bottom 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectionActionEffect">
            <summary>
                Specifies the options to control what happens if chart labels intersect each other due to lack of space. It is used in conjunction with
                <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectionActionEffect.All">
            <summary>
             <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction"/> related changes affect all label text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectionActionEffect.Specific">
            <summary>
             <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction"/> related changes affect only specific labels that may need to be changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType">
            <summary>
             Specifies the representation symbol that is to be used inside the legend box for a series.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.None">
            <summary>
            A visual representation will be none.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.SeriesType">
            <summary>
            A visual representation of the series type will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.SeriesImage">
            <summary>
            The image associated with the series type will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Rectangle">
            <summary>
            A rectangle will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Line">
            <summary>
            A line will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.StraightLine">
            <summary>
            A straight line will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Circle">
            <summary>
            A circle will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Diamond">
            <summary>
            A diamond will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Hexagon">
            <summary>
            A hexagon will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Pentagon">
            <summary>
            A pentagon will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Triangle">
            <summary>
            A triangle will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.InvertedTriangle">
            <summary>
            An inverted triangle will be rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType.Cross">
            <summary>
            A cross will be rendered.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartCustomPointType">
            <summary>
            Specifies the options for how to position a custom point on the chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomPointType.Percent">
            <summary>
            Coordinates of the custom point are taken as a percentage of the chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomPointType.Pixel">
            <summary>
            Coordinates of the custom point are taken to be in pixels.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomPointType.ChartCoordinates">
            <summary>
            Coordinates of the custom point are taken as a percentage of the chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartCustomPointType.PointFollow">
            <summary>
            The custom point will follow the regular point of any series it is assigned to.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction">
            <summary>
             Specifies the options for the action that is to be taken when labels intersect each other.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction.None">
            <summary>
            No special action is taken. Labels may intersect.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction.Wrap">
            <summary>
            When labels would intersect each other, they are wrapped to avoid intersection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction.MultipleRows">
            <summary>
            When labels would intersect each other, they are wrapped into multiple rows to avoid intersection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLabelIntersectAction.Rotate">
            <summary>
            When labels would intersect each other, they are rotated to avoid intersection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartTitleDrawMode">
            <summary>
            The ChartTitleDrawMode enumerator.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTitleDrawMode.None">
            <summary>
            No special mode is taken.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTitleDrawMode.Wrap">
            <summary>
            Wraps title.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTitleDrawMode.Ellipsis">
            <summary>
            Removes the end of trimmed lines, and replaces them with an ellipsis.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartLegendItemType">
            <summary>
                Specifies the actual symbol rendered inside the legend box for a series based on hints / specifications given with
                <see cref="T:Syncfusion.Windows.Forms.Chart.ChartLegendRepresentationType"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.None">
            <summary>
            Visual representation is empty.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Line">
            <summary>
             Visual representation is a line.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Rectangle">
            <summary>
             Visual representation is a rectangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Spline">
            <summary>
             Visual representation is a spline.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Area">
            <summary>
             Visual representation is an area chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.PieSlice">
            <summary>
             Visual representation is a pie slice.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Image">
            <summary>
             Visual representation is an image.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Circle">
            <summary>
             Visual representation is a circle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Diamond">
            <summary>
             Visual representation is a diamond.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Hexagon">
            <summary>
             Visual representation is a hexagon.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Pentagon">
            <summary>
             Visual representation is a pentagon.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Triangle">
            <summary>
             Visual representation is a triangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.InvertedTriangle">
            <summary>
             Visual representation is an inverted triangle.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.Cross">
            <summary>
             Visual representation is a cross.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.SplineArea">
            <summary>
             Visual representation is a spline area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartLegendItemType.StraightLine">
            <summary>
             Visual representation is a Straight area.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartTextPosition">
            <summary>
            Specifies the options for positioning of the Chart's text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextPosition.Top">
            <summary>
             Text is positioned at the top of the chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextPosition.Bottom">
            <summary>
             Text is positioned at the bottom of the chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextPosition.Left">
            <summary>
             Text is positioned to the left of the chart area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextPosition.Right">
            <summary>
             Text is positioned to the right of the chart area.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartValueType">
            <summary>
            Specifies the different values that are natively used.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartValueType.Double">
            <summary>
             Double value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartValueType.DateTime">
            <summary>
             DateTime value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartValueType.Custom">
            <summary>
             Custom value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartValueType.Category">
            <summary>
             Category value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartValueType.Logarithmic">
            <summary>
             Logarithmic value
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseType">
            <summary>
             Specifies the representation classification. Generally used only when you are writing custom renderers.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseType.Single">
            <summary>
            Values are single series rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseType.SideBySide">
            <summary>
             Values are plotted side by side.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseType.Independent">
            <summary>
             Values are independently rendered.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseType.Circular">
            <summary>
            Values are plotted by circular (Radar, Polar).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseType.Other">
            <summary>
             Other non-standard rendering.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseStackingType">
            <summary>
             Specifies the representation classification. Generally used only when you are writing custom renderers.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseStackingType.Stacked">
            <summary>
             Values are stacked.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseStackingType.FullStacked">
            <summary>
             Values are stacked.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesBaseStackingType.NotStacked">
            <summary>
             Values are not stacked.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesSortingType">
            <summary>
             Specifies the different sort axis value types.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesSortingOrder">
            <summary>
             Specifies the different sort direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSeriesType">
            <summary>
             Specifies the different chart types.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Line">
            <summary>
             Line chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Spline">
            <summary>
             Spline chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.RotatedSpline">
            <summary>
             Rotated spline chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Scatter">
            <summary>
             Scatter chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Column">
            <summary>
             Column chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Bar">
            <summary>
             Bar chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Gantt">
            <summary>
             Gantt chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.StackingBar">
            <summary>
             Stacking bar chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Area">
            <summary>
             Area chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.RangeArea">
            <summary>
            Range Area chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.SplineArea">
            <summary>
             Area chart with spline connectors
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.StackingArea">
            <summary>
             Stacking area chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.StackingColumn">
            <summary>
             Stacking column chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.StackingArea100">
            <summary>
             Stacking area chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.StackingBar100">
            <summary>
             Stacking 100% bar chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.StackingColumn100">
            <summary>
             Stacking 100% column chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Pie">
            <summary>
             Pie chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Funnel">
            <summary>
             Funnel chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Pyramid">
            <summary>
             Pyramid chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.HiLo">
            <summary>
             HiLo chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.HiLoOpenClose">
            <summary>
             HiLoOpenClose chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Candle">
            <summary>
             Candle chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Bubble">
            <summary>
             Bubble chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.StepLine">
            <summary>
             StepLine chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.StepArea">
            <summary>
             StepArea chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Radar">
            <summary>
            Radar chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Kagi">
            <summary>
            Kagi chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Renko">
            <summary>
            Renko chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Polar">
            <summary>
            Polar chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.ColumnRange">
            <summary>
            ColumnRange chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.ThreeLineBreak">
            <summary>
            ThreeLineBreak chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.PointAndFigure">
            <summary>
            PointAndFigure chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.BoxAndWhisker">
            <summary>
             BoxAndWhisker chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Histogram">
            <summary>
             Histogram chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Tornado">
            <summary>
             This Chart is mainly used in sensitivity analysis.
             It shows how different random factors can influence
             the prognoses income.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.HeatMap">
            <summary>
            HeatMap chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartSeriesType.Custom">
            <summary>
             Custom chart. Rendering is done by user.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisRangeType">
            <summary>
                Specifies chart axis ranges configuration options.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisRangeType.Auto">
            <summary>
             Bounds are automatically calculated based on values.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisRangeType.Set">
            <summary>
             Bounds and intervals are explicitly set.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartTextOrientation">
            <summary>
             Specifies the orientation of text when rendered with a value point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.UpLeft">
            <summary>
            Text is rendered above and to the left of the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.Up">
            <summary>
             Text is rendered above the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.UpRight">
            <summary>
            Text is rendered above and to the right of the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.Left">
            <summary>
             Text is rendered to the left of the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.Center">
            <summary>
             Text is centered on the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.Right">
            <summary>
             Text is rendered to the right of the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.DownLeft">
            <summary>
            Text is rendered below and to the left of the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.Down">
            <summary>
             Text is rendered below the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.DownRight">
            <summary>
            Text is rendered below and to the right of the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.Smart">
            <summary>
             Text is rendered in a manner that is appropriate for the situation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.RegionUp">
            <summary>
             Text is rendered above the region that represents the point (Example: above the bar in a bar chart).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.RegionDown">
            <summary>
             Text is rendered below the region that represents the point (Example: below the bar in a bar chart).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.RegionCenter">
            <summary>
             Text is centered in the region that represents the point (Example: centered inside the bar in a bar chart).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartTextOrientation.SymbolCenter">
            <summary>
             Text is centered to the symbol if one is associated with the point.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LabelPosition">
            <summary>
             Specifies the Position of Callout data label when rendered with a value point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.LabelPosition.Top">
            <summary>
             Text is rendered above the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.LabelPosition.Left">
            <summary>
             Text is rendered to the left of the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.LabelPosition.Right">
            <summary>
             Text is rendered to the right of the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.LabelPosition.Center">
            <summary>
             Text is centered on the point.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.LabelPosition.Bottom">
            <summary>
             Text is rendered below the point.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartRadarAxisStyle">
            <summary>
            Specifies the style of the radar chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRadarAxisStyle.Polygon">
            <summary>
            Axes are rendered polygonal.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartRadarAxisStyle.Circle">
            <summary>
            Axes are rendered as circles.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartColumnWidthMode">
            <summary>
            Indicates the style of the radar chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColumnWidthMode.RelativeWidthMode">
            <summary>
            The width is specified in ChartPoint.YValues[1] in units of X-Axis range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColumnWidthMode.FixedWidthMode">
            <summary>
            If width of columns aren't given in point YValues[1], in pixels.
            If not specified, the column will be rendered in DefaultWidthMode.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColumnWidthMode.DefaultWidthMode">
            <summary>
            The width of the columns will always be calculated to fill the space between columns.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartColumnDrawMode">
            <summary>
            Specifies the drawing mode of 3D column/bar charts
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColumnDrawMode.InDepthMode">
            <summary>
            Columns are drawn in depth
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColumnDrawMode.PlaneMode">
            <summary>
            Column are drawn side-by-side
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartColumnDrawMode.ClusteredMode">
            <summary>
            Columns are drawn in depth with the same size.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartGanttDrawMode">
            <summary>
            Specifies the mode of drawing the Gantt chart
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartGanttDrawMode.CustomPointWidthMode">
            <summary>
            Plots the Gantt chart as overlapped
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartGanttDrawMode.AutoSizeMode">
            <summary>
            Plots the Gantt chart as side-by-side
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartAxisTickLabelDrawingMode">
            <summary>
            Specifies the modes that is to be used for drawing tick labels on the axis.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisTickLabelDrawingMode.None">
            <summary>
            The ticks and tick labels aren't drawing;
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisTickLabelDrawingMode.AutomaticMode">
            <summary>
            The ticks and tick labels are distributed uniformly along the axis 
            with specified interval.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisTickLabelDrawingMode.UserMode">
            <summary>
            The user can specify the positions of labels and text of labels .
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartAxisTickLabelDrawingMode.BothUserAndAutomaticMode">
            <summary>
            The user can specify the positions of labels and text of labels.
            The Automatic labels are also drawn.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPrintColorMode">
            <summary>
            Specifies how to print content that contains color or shades of gray. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPrintColorMode.GrayScale">
            <summary>
            The series Styles will be in monochrome scale during printing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPrintColorMode.Color">
            <summary>
            The series Styles will be in colored scale during printing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartPrintColorMode.CheckPrinter">
            <summary>
            The printer will be checked if it supports colors. If not then the GrayScale mode will be used.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ScatterConnectType">
            <summary>
            Specifies type of connection between scatter points.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ScatterConnectType.None">
            <summary>
            Connect type will be none. (Scatter chart)
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ScatterConnectType.Line">
            <summary>
            Connect type will be of line (ScatterLine chart)
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ScatterConnectType.Spline">
            <summary>
            Connect type will be spline (ScatterSpline chart)
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartOpenCloseDrawMode">
            <summary>
            Specifies that Open and Close lines are displayed. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartOpenCloseDrawMode.Both">
            <summary>
            Draws both open and close lines.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartOpenCloseDrawMode.Close">
            <summary>
            Draws only Close line
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartOpenCloseDrawMode.Open">
            <summary>
            Draws only Open line
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartHeatMapLayoutStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartHeatMapLayoutStyle.Rectangular">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartHeatMapLayoutStyle.Vertical">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartHeatMapLayoutStyle.Horizontal">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.InteractiveCursorOrientation">
            <summary>
            Specifies the Orientation of Interactive Cursor.
            </summary>    
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.InteractiveCursorOrientation.Horizontal">
            <summary>
            Only Horizontal Cursor gets displayed
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.InteractiveCursorOrientation.Vertical">
            <summary>
            Only Vertical Cursor gets displayed
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.InteractiveCursorOrientation.Both">
            <summary>
            Both the Horizontal and Vertical Cursor gets displayed
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.PartialZoom">
            <summary>
            Specifies are zooming enabled only for single axis.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.PartialZoom.OnlyX">
            <summary>
            Only XAxis zooming
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.PartialZoom.OnlyY">
            <summary>
            Only YAxis zooming
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.PartialZoom.None">
            <summary>
            is not partial zooming
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LineInfo">
            <summary>
            This class holds information on lines rendered as part of the chart's rendering system.
            </summary>
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.GridLineType"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Chart.ChartAxis.LineType"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LineInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.LineInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LineInfo.OnSettingsChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:SettingsChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LineInfo.ResetBackColor">
            <summary>
            Resets the value of BackColor property.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LineInfo.ResetForeColor">
            <summary>
            Resets the value of ForeColor property.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LineInfo.ShouldSerializeBackColor">
            <summary>
            Indicates whether the BackColor should be serialized.
            </summary>
            <returns>Returns true if the element should serialize otherwise false.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LineInfo.ShouldSerializeForeColor">
            <summary>
            Indicates whether the ForeColor property should be serialized
            </summary>
            <returns>Returns true if the element should serialize otherwise false.</returns>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LineInfo.RefreshPen">
            <summary>
            Refreshes the pen.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.LineInfo.SettingsChanged">
            <summary>
            Occurs when properties is changed.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LineInfo.BackColor">
            <summary>
            Gets or sets the backcolor that is to be associated with the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LineInfo.Brush">
            <summary>
             Gets the brush information that is to be used with the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LineInfo.DashStyle">
            <summary>
            Gets or sets the style of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LineInfo.ForeColor">
            <summary>
            Gets or sets the forecolor of the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LineInfo.Pen">
            <summary>
            Gets the pen used to render the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LineInfo.PenType">
            <summary>
            Gets or sets the type of pen that is to be used with the line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.LineInfo.Width">
            <summary>
            Gets or sets the width of the line.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartMarker">
            <summary>
            ChartMarker is used in association with <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>.
            </summary>
            <seealso cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolInfo"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMarker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartMarker"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMarker.Dispose">
            <summary>
            Method to dispose ChartMarker object
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartMarker.LineCap">
            <summary>
            Gets or sets the line cap that is to be used with this marker.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartMarker.LineInfo">
            <summary>
            Gets or sets the line information associated with this marker.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartIndexedValues">
            <summary>
            ChartIndexedValues collects and sorts the X values of series.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIndexedValues.#ctor(Syncfusion.Windows.Forms.Chart.ChartModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartIndexedValues"/> class.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIndexedValues.GetIndex(System.Double)">
            <summary>
            Gets the indexed value by real value.
            </summary>
            <param name="value">The value.</param>
            <returns>Returns the Index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIndexedValues.GetValue(System.Double)">
            <summary>
            Gets the real value by indexed value.
            </summary>
            <param name="index">The index.</param>
            <returns>Returns double value for the given index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIndexedValues.EnsureValuesUpdated">
            <summary>
            Updates this values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartIndexedValues.OnSeriesChanged(System.Object,Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs)">
            <summary>
            Called when series changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartIndexedValues.Count">
            <summary>
            Gets the count of indexed values.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartIndexedValues.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Double"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.DoubleRange">
            <summary>
            Closed range.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.DoubleRange"/> struct.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.op_Addition(Syncfusion.Windows.Forms.Chart.DoubleRange,Syncfusion.Windows.Forms.Chart.DoubleRange)">
            <summary>
            Union operator
            </summary>
            <param name="leftRange">First double range</param>
            <param name="rightRange">Second double range</param>
            <returns>Returns DoubleRange.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.op_Addition(Syncfusion.Windows.Forms.Chart.DoubleRange,System.Double)">
            <summary>
            Union operator
            </summary>
            <param name="range">First double range</param>
            <param name="value">Second double range</param>
            <returns>Returns DoubleRange.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.op_GreaterThan(Syncfusion.Windows.Forms.Chart.DoubleRange,System.Double)">
            <summary>
            Implements the operator &gt;.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.op_LessThan(Syncfusion.Windows.Forms.Chart.DoubleRange,System.Double)">
            <summary>
            Implements the operator &lt;.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.op_GreaterThanOrEqual(Syncfusion.Windows.Forms.Chart.DoubleRange,System.Double)">
            <summary>
            Implements the operator &gt;=.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.op_LessThanOrEqual(Syncfusion.Windows.Forms.Chart.DoubleRange,System.Double)">
            <summary>
            Implements the operator &lt;=.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.op_Equality(Syncfusion.Windows.Forms.Chart.DoubleRange,Syncfusion.Windows.Forms.Chart.DoubleRange)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="leftRange">The left range.</param>
            <param name="rightRange">The right range.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.op_Inequality(Syncfusion.Windows.Forms.Chart.DoubleRange,Syncfusion.Windows.Forms.Chart.DoubleRange)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="leftRange">The left range.</param>
            <param name="rightRange">The right range.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.FromMedian(System.Double,System.Double)">
            <summary>
            Create the <see cref="T:Syncfusion.Windows.Forms.Chart.DoubleRange"/> from the median.
            </summary>
            <param name="median">The median.</param>
            <param name="size">The size.</param>
            <returns>Returns DoubleRange.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.Union(System.Double[])">
            <summary>
            Create range by array of double.
            </summary>
            <param name="values"></param>
            <returns>Returns DoubleRange.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.Union(Syncfusion.Windows.Forms.Chart.DoubleRange,Syncfusion.Windows.Forms.Chart.DoubleRange)">
            <summary>
            Unions the specified left range with right range.
            </summary>
            <param name="leftRange">The left range.</param>
            <param name="rightRange">The right range.</param>
            <returns>Returns DoubleRange.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.Union(Syncfusion.Windows.Forms.Chart.DoubleRange,System.Double)">
            <summary>
            Unions the specified range with value.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>Returns DoubleRange.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.Scale(Syncfusion.Windows.Forms.Chart.DoubleRange,System.Double)">
            <summary>
            Scales the specified range by value.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>Returns DoubleRange.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.Multiply(Syncfusion.Windows.Forms.Chart.DoubleRange,System.Double)">
            <summary>
            Multiplies the specified range by value.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>Returns DoubleRange.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.Inflate(Syncfusion.Windows.Forms.Chart.DoubleRange,System.Double)">
            <summary>
            Inflates the specified range.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>Returns DoubleRange.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.Offset(Syncfusion.Windows.Forms.Chart.DoubleRange,System.Double)">
            <summary>
            Offsets the specified range by value.
            </summary>
            <param name="range">The range.</param>
            <param name="value">The value.</param>
            <returns>Returns DoubleRange.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.Intersect(Syncfusion.Windows.Forms.Chart.DoubleRange,Syncfusion.Windows.Forms.Chart.DoubleRange)">
            <summary>
            Intersects the specified left range.
            </summary>
            <param name="leftRange">The left range.</param>
            <param name="rightRange">The right range.</param>
            <returns>Returns DoubleRange.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.Exclude(Syncfusion.Windows.Forms.Chart.DoubleRange,Syncfusion.Windows.Forms.Chart.DoubleRange,Syncfusion.Windows.Forms.Chart.DoubleRange@,Syncfusion.Windows.Forms.Chart.DoubleRange@)">
            <summary>
            Excludes the specified range.
            </summary>
            <param name="range">The range.</param>
            <param name="excluder">The excluder.</param>
            <param name="leftRange">The left range.</param>
            <param name="rightRange">The right range.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.IsIntersects(Syncfusion.Windows.Forms.Chart.DoubleRange)">
            <summary>
            Checks whether intersection region of two ranges is not empty.
            </summary>
            <param name="range"></param>
            <returns> <b>true</b> if  intersection is not empty</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.IsIntersects(System.Double,System.Double)">
            <summary>
            Checks whether intersection region of two ranges is not empty.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns> true if  intersection is not empty</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.Inside(System.Double)">
            <summary>
            Check the value whether it lies inside the end value or not.
            </summary>
            <param name="value">The value.</param>
            <returns>True if the ChartRanges is not Empty otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.Inside(System.Double,System.Boolean)">
            <summary>
            Insides the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="equal">if set to <c>true</c> value can be equal with range.</param>
            <returns>True if the ChartRanges is not Empty otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.Inside(Syncfusion.Windows.Forms.Chart.DoubleRange)">
            <summary>
            Insides the specified range.
            </summary>
            <param name="range">The range.</param>
            <returns>True if the ChartRanges is not Empty otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.Interpolate(System.Double)">
            <summary>
            Interpolates the specified value.
            </summary>
            <param name="interpolator">The interpolator.</param>
            <returns>Returns Double.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.Extrapolate(System.Double)">
            <summary>
            Extrapolates the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>Returns Double.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DoubleRange.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.DoubleRange.Start">
            <summary>
            Gets the start.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.DoubleRange.End">
            <summary>
            Gets the end.
            </summary>
            <value>The end.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.DoubleRange.Delta">
            <summary>
            Gets the delta.
            </summary>
            <value>The delta.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.DoubleRange.Median">
            <summary>
            Gets the median.
            </summary>
            <value>The median.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.DoubleRange.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.DoubleRange.Empty">
            <summary>
            Gets the empty.
            </summary>
            <value>The empty.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Utils.ChartSeriesTypeImages">
            <summary>
            Contains the icons of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesType"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Utils.ChartSeriesTypeImages.#cctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Chart.Utils.ChartSeriesTypeImages"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Utils.ChartSeriesTypeImages.GetImage(Syncfusion.Windows.Forms.Chart.ChartSeriesType)">
            <summary>
            Gets the icon image by the specified <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesType"/>.
            </summary>
            <param name="type">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSeriesType"/>.</param>
            <returns>Returns Image.</returns>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartStripLineZorder.Over">
            <summary>
            The StripLine will be rendered over chart.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartStripLineZorder.Behind">
            <summary>
            The StripLine will be rendered behind chart.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStripLine">
            <summary>
            This class specifies information on rendering a strip line. A strip line is a horizontal or vertical band rendered on the background of a chart 
            to indicate some areas of interest.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStripLine"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLine.Dispose">
            <summary>
            Method to dispose strip line
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLine.Draw(Syncfusion.Windows.Forms.Chart.ChartGraph,System.Drawing.RectangleF[])">
            <summary>
            Draws the striplines to the specified <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <param name="graph">The ChartGraph<see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="bounds">The array of bounds.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLine.Draw(Syncfusion.Windows.Forms.Chart.Graphics3D,System.Drawing.RectangleF[],System.Single)">
            <summary>
            Draws the specified <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/>.
            </summary>
            <param name="g3d">The <see cref="T:Syncfusion.Windows.Forms.Chart.Graphics3D"/>.</param>
            <param name="bounds">The bounds.</param>
            <param name="z">The Z coordinate of <see cref="T:Syncfusion.Windows.Forms.Chart.ChartStripLine"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLine.CreateStringFormat">
            <summary>
            Creates the string format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLine.CreateVerticalTransform(System.Drawing.RectangleF)">
            <summary>
            Creats the mirrow transform.
            </summary>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartStripLine.RaiseChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartStripLine.Changed">
            <summary>
            Occurs when the properties was changed.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.StartAtAxisPosition">
            <summary>
            Indicates whether the strip line will start at the start of the axis range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Vertical">
            <summary>
            Indicates whether the text of strip line will be drawn vertical.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.TextAlignment">
            <summary>
            Gets or sets the alignment of text that is to be rendered within a strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Font">
            <summary>
            Gets or sets the font with which text associated with this strip line is to be rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.TextColor">
            <summary>
            Gets or sets the color of the text rendered with this strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Text">
            <summary>
            Gets or sets the text associated with this strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.BackImage">
            <summary>
            Gets or sets the background image associated with this strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Interior">
            <summary>
            Gets or sets the interior brush information for this strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Enabled">
            <summary>
            Indicates whether the strip line is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.DateOffset">
            <summary>
            Gets or sets the offset of the strip line if the chart's Primary X axis is of type DateTime and StartAtAxisPosition is True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Offset">
            <summary>
            Gets or sets the offset of the strip line if the chart's Primary X axis is of type double and StartAtAxisPosition is True.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.PeriodDate">
            <summary>
            Gets or sets the period over which this strip line appears when the value is DateTime.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Period">
            <summary>
            Gets or sets the period over which this strip line appears.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.WidthDate">
            <summary>
            Gets or sets the width of each strip line as a TimeSpan.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Width">
            <summary>
            Gets or sets the width of each strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.FixedWidth">
            <summary>
            Gets or sets the fixed width of each strip line. This property value represents real value not range between two Chart Points.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.StartDate">
            <summary>
            Gets or sets the date from which the strip line is to start.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.EndDate">
            <summary>
            Gets or sets the date after which the strip line should not be displayed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.Start">
            <summary>
            Gets or sets the start of this strip line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStripLine.End">
            <summary>
            Gets or sets the end range of this strip line.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.EnumEditComboBox">
            <summary>
            The EnumEditComboBox class.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.EnumEditComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.EnumEditComboBox"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.EnumEditComboBox.OnDropDown(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ComboBox.DropDown"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.EnumEditComboBox.Items">
            <summary>
            Gets an object representing the collection of the items contained in this <see cref="T:System.Windows.Forms.ComboBox"/>.
            </summary>
            <value></value>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.EnumEditComboBox.EnumType">
            <summary>
            Gets or sets the type of the enum.
            </summary>
            <value>The type of the enum.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.EnumEditComboBox.SelectedEnumValue">
            <summary>
            Gets or sets the selected enum value.
            </summary>
            <value>The selected enum value.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.InteriorEditor">
            <summary>
            The InteriorEditor class.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.InteriorEditor.Interior">
            <summary>
            Gets or sets the interior.
            </summary>
            <value>The interior.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.OffsetEditor">
            <summary>
            The OffsetEditor class.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.OffsetEditor.Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.FontEditor">
            <summary>
            The FontEditor class.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.FontEditor.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.TextEditor">
            <summary>
            The TextEditor class.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.TextEditor.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.TextEditor.TextColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.TextEditor.TextFormat">
            <summary>
            Gets or sets the text format.
            </summary>
            <value>The text format.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.TextEditor.TextOffset">
            <summary>
            Gets or sets the text offset.
            </summary>
            <value>The text offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.TextEditor.TextOrientation">
            <summary>
            Gets or sets the text orientation.
            </summary>
            <value>The text orientation.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SymbolEditor">
            <summary>
            The SymbolEditor class.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SymbolEditor.Symbol">
            <summary>
            Gets or sets the symbol.
            </summary>
            <value>The symbol.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartInstanceConverter">
            <summary>
            Default type converter.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartInstanceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartInstanceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
            <exception cref="T:System.ArgumentNullException">The destinationType parameter is null. </exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.IndexRange">
            <summary>
            Specifies a range of indices.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.IndexRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.IndexRange"/> class.
            </summary>
            <param name="from">The first index of range.</param>
            <param name="to">The lase index of range.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IndexRange.From">
            <summary>
            Gets or sets the first index of range.
            </summary>
            <value>From.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.IndexRange.To">
            <summary>
            Gets or sets the last index of range.
            </summary>
            <value>To.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartMarginsConverter">
            <summary>
            Converts instances of other types to and from a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartMargins"/>. 
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMarginsConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartMarginsConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMarginsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"></see> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"></see> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
            <exception cref="T:System.ArgumentNullException">The destinationType parameter is null. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter"></see> is associated with, using the specified context, given a set of property values for the object.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="propertyValues">An <see cref="T:System.Collections.IDictionary"></see> of new property values.</param>
            <returns>
            An <see cref="T:System.Object"></see> representing the given <see cref="T:System.Collections.IDictionary"></see>, or null if the object cannot be created. This method always returns null.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"></see> to create a new value, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <returns>
            true if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"></see> to create a new value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMarginsConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object"></see> that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute"></see> that is used as a filter.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"></see> with the properties that are exposed for this data type, or null if there are no properties.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMarginsConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)"></see> should be called to find the properties of this object; otherwise, false.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartMargins">
            <summary>
            Describes the margins of a frame around a rectangle. 
            Four float values describe the Left, Top, Right, and Bottom sides of the rectangle, respectively. 
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMargins.#ctor">
            <summary>
            Overloaded constructor. Creates a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartMargins"/> instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMargins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.Chart.ChartMargins"/> instance.
            </summary>
            <param name="top">Top.</param>
            <param name="left">Left.</param>
            <param name="bottom">Bottom.</param>
            <param name="right">Right.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMargins.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMargins.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMargins.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMargins.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMargins.OnChanged">
            <summary>
            Called when properties is changed.
            </summary>
            <internalonly/>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Chart.ChartMargins.Changed">
            <summary>
            Occurs when properties is changed.
            </summary>
            <internalonly/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartMargins.Top">
            <summary>
            Gets or sets the top value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartMargins.Left">
            <summary>
            Gets or sets the left value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartMargins.Bottom">
            <summary>
            Gets or sets the bottom value.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartMargins.Right">
            <summary>
            Gets or sets the right value.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartThicknessConverter">
            <summary>
            Converts instances of other types to and from a <see cref="T:Syncfusion.Windows.Forms.Chart.ChartThickness"/>. 
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThicknessConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThicknessConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThicknessConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThicknessConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThicknessConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="propertyValues"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThicknessConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThicknessConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThicknessConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartThickness">
            <summary>
            Describes the thickness of a frame around a rectangle. 
            Four float values describe the Left, Top, Right, and Bottom sides of the rectangle, respectively. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartThickness"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartThickness"/> class.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.op_Equality(Syncfusion.Windows.Forms.Chart.ChartThickness,Syncfusion.Windows.Forms.Chart.ChartThickness)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.op_Inequality(Syncfusion.Windows.Forms.Chart.ChartThickness,Syncfusion.Windows.Forms.Chart.ChartThickness)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.Add(Syncfusion.Windows.Forms.Chart.ChartThickness,Syncfusion.Windows.Forms.Chart.ChartThickness)">
            <summary>
            Adds the specified x to the specified y.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.Inflate(System.Drawing.Rectangle)">
            <summary>
            Inflates the specified rect.
            </summary>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.Inflate(System.Drawing.Size)">
            <summary>
            Inflates the specified size.
            </summary>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.Inflate(System.Drawing.RectangleF)">
            <summary>
            Inflates the specified rect.
            </summary>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.Inflate(System.Drawing.SizeF)">
            <summary>
            Inflates the specified size.
            </summary>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.Deflate(System.Drawing.Rectangle)">
            <summary>
            Deflates the specified rect.
            </summary>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.Deflate(System.Drawing.RectangleF)">
            <summary>
            Deflates the specified rect.
            </summary>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.Deflate(System.Drawing.Size)">
            <summary>
            Deflates the specified size.
            </summary>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.Deflate(System.Drawing.SizeF)">
            <summary>
            Deflates the specified size.
            </summary>
            <param name="size">The size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartThickness.Parse(System.String)">
            <summary>
            Parses the specified text.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartThickness.Left">
            <summary>
            Gets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartThickness.Top">
            <summary>
            Gets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartThickness.Right">
            <summary>
            Gets the right.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartThickness.Bottom">
            <summary>
            Gets the bottom.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartYValueUsage">
            <summary>
            Specifies the usege of Y values.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartYValueUsage.None">
            <summary>
            Point value will not used.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartYValueUsage.YValue">
            <summary>
            This value used Y value for types like Line, Spline, Column...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartYValueUsage.LowValue">
            <summary>
            This value used as low value for types like HiLo, Range...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartYValueUsage.HighValue">
            <summary>
            This value used as high value for types like HiLo, Range...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartYValueUsage.OpenValue">
            <summary>
            This value used as open value for types like HiLoOpenClose, Candle...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartYValueUsage.CloseValue">
            <summary>
            This value used as close value for types like HiLoOpenClose, Candle...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartYValueUsage.ErrorBarValue">
            <summary>
            This value used as error bar value for types like Column, Line...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartYValueUsage.PointSizeValue">
            <summary>
            This value used as size value for types like Column, Bubble...
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry">
            <summary>
            Specifies the registry of 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry.#cctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry"/> class.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry.Dispose">
            <summary>
            Method to dispose ChartPointFormatsRegistry object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry.Register(Syncfusion.Windows.Forms.Chart.ChartSeriesType,Syncfusion.Windows.Forms.Chart.ChartYValueUsage[])">
            <summary>
            Registers the points format for the specified type.
            </summary>
            <param name="type">The type.</param>
            <param name="usages">The usages.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry.OnSeriesTypeChanged(Syncfusion.Windows.Forms.Chart.ChartSeriesType)">
            <summary>
            Called when series type changed.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry.Item(Syncfusion.Windows.Forms.Chart.ChartSeriesType,Syncfusion.Windows.Forms.Chart.ChartYValueUsage)">
            <summary>
            Gets the index of necessary value with the specified type.
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry.Item(Syncfusion.Windows.Forms.Chart.ChartYValueUsage)">
            <summary>
            Gets the index of necessary value.
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry.YIndex">
            <summary>
            Gets the index of the Y value.
            </summary>
            <value>The index of the Y value.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry.ChartPointFormat">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry.ChartPointFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry.ChartPointFormat"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry.ChartPointFormat.#ctor(Syncfusion.Windows.Forms.Chart.ChartYValueUsage[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartPointFormatsRegistry.ChartPointFormat"/> class.
            </summary>
            <param name="usages">The usages.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartZooming">
            <summary>
            This class contains appearance information of interactive zooming.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartZooming.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.ChartZooming"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartZooming.ShouldSerializeInterior">
            <summary>
            Should the serialize interior.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartZooming.Opacity">
            <summary>
            Gets or sets the opacity of zooming selection.
            </summary>
            <value>The opacity.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartZooming.ShowBorder">
            <summary>
            Gets or sets a value indicating whether border is shown.
            </summary>
            <value><c>true</c> if border is shown; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartZooming.Border">
            <summary>
            Gets or sets the information on line drawn during interactive zooming.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartZooming.Interior">
            <summary>
            Gets or sets the interior of zooming selection.
            </summary>
            <value>The <see cref="T:Syncfusion.Drawing.BrushInfo"/> instance.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartCMYKColor">
            <summary>
            Describes the CMYK color.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCMYKColor.ToRGBColor">
            <summary>
            Converts the CMYK color of the RGB.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCMYKColor.FromRBG(System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates the CMYK color by the RBG components.
            </summary>
            <param name="r">The red component.</param>
            <param name="g">The green component.</param>
            <param name="b">The blue component.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCMYKColor.FromCMYK(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates the CMYK color by the CMYK components.
            </summary>
            <param name="c">The C component.</param>
            <param name="m">The M component.</param>
            <param name="y">The Y component.</param>
            <param name="k">The K component.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCMYKColor.ConvertRGBToCMYK(System.Drawing.Color)">
            <summary>
            Converts the RGB to CMYK color.
            </summary>
            <param name="rgbColor">Color of the RGB.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartCMYKColor.ConvertCMYKToRGB(Syncfusion.Windows.Forms.Chart.ChartCMYKColor)">
            <summary>
            Converts the CMYK to RGB color.
            </summary>
            <param name="cmykColor">Color of the cmyk.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCMYKColor.C">
            <summary>
            Gets the C component of color.
            </summary>
            <value>The C component.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCMYKColor.M">
            <summary>
            Gets the M component of color.
            </summary>
            <value>The M component.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCMYKColor.Y">
            <summary>
            Gets the Y component of color.
            </summary>
            <value>The Y component.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartCMYKColor.K">
            <summary>
            Gets the K component of color.
            </summary>
            <value>The K component.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.RenderingHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawPointSymbol(Syncfusion.Windows.Forms.Chart.ChartGraph,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Drawing.PointF)">
            <summary>
            Draws the point symbol.
            </summary>
            <param name="graph">The graph.</param>
            <param name="style">The style.</param>
            <param name="point">The point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawPointSymbol(Syncfusion.Windows.Forms.Chart.ChartGraph,Syncfusion.Windows.Forms.Chart.ChartSymbolShape,System.Drawing.Brush,System.Drawing.Pen,System.Int32,Syncfusion.Windows.Forms.Chart.ChartImageCollection,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draws the point symbol.
            </summary>
            <param name="graph">The graph.</param>
            <param name="shape">The shape.</param>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
            <param name="imgIndex">Index of the img.</param>
            <param name="images">The images.</param>
            <param name="point">The point.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawMarker(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartMarker,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws the marker.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="marker">The marker.</param>
            <param name="p2">The p2.</param>
            <param name="p1">The p1.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawRelatedPointSymbol(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartRelatedPointSymbolInfo,Syncfusion.Windows.Forms.Chart.ChartRelatedPointLineInfo,Syncfusion.Windows.Forms.Chart.ChartImageCollection,System.Drawing.PointF)">
            <summary>
            Draws the related point symbol.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="symbol">The symbol.</param>
            <param name="border">The border.</param>
            <param name="imgList">The img list.</param>
            <param name="pt">The pt.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawPointSymbol(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws the point symbol.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="style">The style.</param>
            <param name="pt">The pt.</param>
            <param name="drawMarker">if set to <c>true</c> marker will be drawn.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawPointSymbol(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Drawing.PointF,System.Boolean,Syncfusion.Drawing.BrushInfo)">
            <summary>
            Draws the point symbol.
            </summary>
            <param name="g">The graphics object.</param>
            <param name="style">The style.</param>
            <param name="pt">The point.</param>
            <param name="drawMarker">if set to <c>true</c> [draw marker].</param>
            <param name="brushInfo">The brush info.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawPointSymbol(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartSymbolShape,Syncfusion.Windows.Forms.Chart.ChartMarker,System.Drawing.Size,System.Drawing.Size,System.Int32,System.Drawing.Brush,System.Drawing.Pen,Syncfusion.Windows.Forms.Chart.ChartImageCollection,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws the point symbol.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
            <param name="symbolShape">The symbol shape.</param>
            <param name="symbolMarker">The symbol marker.</param>
            <param name="symbolSize">Size of the symbol.</param>
            <param name="symbolOffset">The symbol offset.</param>
            <param name="symbolImageIndex">Index of the symbol image.</param>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
            <param name="images">The images.</param>
            <param name="pt">The pt.</param>
            <param name="drawMarker">if set to <c>true</c> marker will be drawn.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawPointSymbol(Syncfusion.Windows.Forms.Chart.ChartGraph,Syncfusion.Windows.Forms.Chart.ChartSymbolShape,Syncfusion.Windows.Forms.Chart.ChartMarker,System.Drawing.Size,System.Drawing.Size,System.Int32,System.Drawing.Brush,System.Drawing.Pen,Syncfusion.Windows.Forms.Chart.ChartImageCollection,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws the point symbol.
            </summary>
            <param name="graph">The graphics.</param>
            <param name="symbolShape">The symbol shape.</param>
            <param name="symbolMarker">The symbol marker.</param>
            <param name="symbolSize">Size of the symbol.</param>
            <param name="symbolOffset">The symbol offset.</param>
            <param name="imgIndex">Index of the img.</param>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
            <param name="images">The images.</param>
            <param name="point">The point.</param>
            <param name="drawMarker">if set to <c>true</c> marker will be drawn.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawImage(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Image)">
            <summary>
            Draw Image symbol.
            </summary>
            <param name="g">The grapics.</param>
            <param name="bounds">Rectangle bound of the Symbol.</param>        
            <param name="image">The image.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawCircle(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Draw Circle symbol.
            </summary>
            <param name="g">The grapics.</param>
            <param name="bounds">Rectangle bound of the Symbol.</param>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawCross(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush)">
            <summary>
            Draw Cross Line symbol.
            </summary>
            <param name="g">The grapics.</param>
            <param name="bounds">Rectangle bound of the Symbol.</param>
            <param name="brush">The brush.</param>        
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawHorizLine(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush)">
            <summary>
            Draw Horizontal Line symbol.
            </summary>
            <param name="g">The grapics.</param>
            <param name="bounds">Rectangle bound of the Symbol.</param>
            <param name="brush">The brush.</param>        
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawVertLine(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush)">
            <summary>
            Draw Vertical Line symbol.
            </summary>
            <param name="g">The grapics.</param>
            <param name="bounds">Rectangle bound of the Symbol.</param>
            <param name="brush">The brush.</param>        
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawDiamond(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Draw Diamond symbol.
            </summary>
            <param name="g">The grapics.</param>
            <param name="bounds">Rectangle bound of the Symbol.</param>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawHexagon(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Draw Hexagon symbol.
            </summary>
            <param name="g">The grapics.</param>
            <param name="bounds">Rectangle bound of the Symbol.</param>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawInvertedTriangle(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Draw inverted triangle symbol.
            </summary>
            <param name="g">The grapics.</param>
            <param name="bounds">Rectangle bound of the Symbol.</param>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawArrow(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Draw Arrow symbol.
            </summary>
            <param name="g">The grapics.</param>
            <param name="bounds">Rectangle bound of the Symbol.</param>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawInvertedArrow(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Draw Inverted Arrow symbol.
            </summary>
            <param name="g">The grapics.</param>
            <param name="bounds">Rectangle bound of the Symbol.</param>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawPentagon(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Draw Pentagon symbol.
            </summary>
            <param name="g">The grapics.</param>
            <param name="bounds">Rectangle bound of the Symbol.</param>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawStar(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Draw Star symbol.
            </summary>
            <param name="g">The grapics.</param>
            <param name="bounds">Rectangle bound of the Symbol.</param>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawSquare(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Draw Square symbol.
            </summary>
            <param name="g">The grapics.</param>
            <param name="bounds">Rectangle bound of the Symbol.</param>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawTriangle(System.Drawing.Graphics,System.Drawing.RectangleF,System.Drawing.Brush,System.Drawing.Pen)">
            <summary>
            Draw Triangle Arrow symbol.
            </summary>
            <param name="g">The grapics.</param>
            <param name="bounds">Rectangle bound of the Symbol.</param>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawText(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Drawing.PointF)">
            <summary>
            Draw text.
            </summary>
            <param name="g">The graphics.</param>
            <param name="style">Style of the text.</param>
            <param name="pt">The point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.DrawText(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Draw text.
            </summary>
            <param name="g">The graphics.</param>
            <param name="style">Style of the text.</param>
            <param name="pt">The point.</param>
            <param name="sz">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.AddTextPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Adds the text path.
            </summary>
            <param name="gp">The gp.</param>
            <param name="g">The g.</param>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="rect">The rect.</param>
            <param name="strFormat">The STR format.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.AddTextPath(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF)">
            <summary>
            Adds the text gepmetry to <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
            </summary>
            <param name="gp">The gp.</param>
            <param name="g">The g.</param>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.GetFontSizeInPixels(System.Drawing.Font,System.Drawing.Graphics)">
            <summary>
            Gets the font size in pixels.
            </summary>
            <param name="font">The font.</param>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.GetFontSizeInPixels(System.Drawing.Font)">
            <summary>
            Gets the font size in pixels.
            </summary>
            <param name="font">The font.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.GetBounds(System.Int32,System.Int32,System.Drawing.RectangleF)">
            <summary>
            Gets the bounds.
            </summary>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
            <param name="bounds">The bounds.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.GetPieBounds(System.Int32,System.Int32,System.Drawing.RectangleF)">
            <summary>
            Gets the individual pie bounds.
            </summary>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
            <param name="bounds">The bounds.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.CreateRoundRect(System.Drawing.RectangleF,System.Drawing.SizeF)">
            <summary>
            Returns the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> by the specified rectangle.
            </summary>
            <param name="rect"><see cref="T:System.Drawing.RectangleF"/> specified rectanle.</param>
            <param name="roundCorner">The radius of corners.</param>
            <returns>The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.CreateRoundRect(System.Drawing.RectangleF,System.Single)">
            <summary>
            Returns the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> by the specified rectangle.
            </summary>
            <param name="rect"><see cref="T:System.Drawing.RectangleF"/> specified rectanle.</param>
            <param name="radius">The radius.</param>
            <returns>The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.CreateRoundRect(System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> by the specified rectangle.
            </summary>
            <param name="rect"><see cref="T:System.Drawing.RectangleF"/> specified rectanle.</param>
            <param name="tlRadius">The tl radius.</param>
            <param name="trRadius">The tr radius.</param>
            <param name="brRadius">The br radius.</param>
            <param name="blRadius">The bl radius.</param>
            <returns>The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.GetRendomBeziersPoints(System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single)">
            <summary>
            Gets the rendom beziers points.
            </summary>
            <param name="pt1">The PT1.</param>
            <param name="pt2">The PT2.</param>
            <param name="evr">The evr.</param>
            <param name="fault">The fault.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.GetRendomBeziersPoints(System.Drawing.PointF,System.Drawing.PointF,System.Int32,System.Single)">
            <summary>
            Gets the rendom beziers points.
            </summary>
            <param name="pt1">The PT1.</param>
            <param name="pt2">The PT2.</param>
            <param name="count">The count.</param>
            <param name="fault">The fault.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.GetWaveBeziersPoints(System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single)">
            <summary>
            Gets the rendom beziers points.
            </summary>
            <param name="pt1">The PT1.</param>
            <param name="pt2">The PT2.</param>
            <param name="evr">The evr.</param>
            <param name="fault">The fault.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.RenderingHelper.GetWaveBeziersPoints(System.Drawing.PointF,System.Drawing.PointF,System.Int32,System.Single)">
            <summary>
            Gets the rendom beziers points.
            </summary>
            <param name="pt1">The PT1.</param>
            <param name="pt2">The PT2.</param>
            <param name="count">The count.</param>
            <param name="fault">The fault.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.DrawingHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawingHelper.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawingHelper.LeprColor(System.Drawing.Color,System.Drawing.Color,System.Double)">
            <summary>
            Interpolates the colors.
            </summary>
            <param name="startColor">The start color.</param>
            <param name="endColor">The end color.</param>
            <param name="interpolator">The interpolator.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawingHelper.ChangeBackColor(Syncfusion.Drawing.BrushInfo,System.Drawing.Color)">
            <summary>
            Clones the specified <see cref="T:Syncfusion.Drawing.BrushInfo"/> and changes <see cref="P:Syncfusion.Drawing.BrushInfo.BackColor"/> property by specified color.
            </summary>
            <param name="brInfo">Source of result.</param>
            <param name="color">Specified color for <see cref="P:Syncfusion.Drawing.BrushInfo.BackColor"/> property.</param>
            <returns>Cloned specified <see cref="T:Syncfusion.Drawing.BrushInfo"/> with the changed <see cref="P:Syncfusion.Drawing.BrushInfo.BackColor"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawingHelper.AddColor(Syncfusion.Drawing.BrushInfo,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="brInfo"></param>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawingHelper.AddColor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="color1"></param>
            <param name="color2"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawingHelper.AddColor(Syncfusion.Drawing.BrushInfo,System.Int32)">
            <summary>
            
            </summary>
            <param name="brInfo"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawingHelper.AddColor(System.Drawing.Color,System.Int32)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawingHelper.MedialColor(Syncfusion.Drawing.BrushInfo,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="brInfo"></param>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawingHelper.MedialColor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="color1"></param>
            <param name="color2"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawingHelper.GetColorFromARGB(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="a"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawingHelper.DrawBorder(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Drawing.Rectangle,System.Windows.Forms.BorderStyle)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="color"></param>
            <param name="width"></param>
            <param name="rect"></param>
            <param name="borderStyle"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawingHelper.BeginTransform(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawingHelper.EndTransform(System.Drawing.Graphics,System.Drawing.Drawing2D.GraphicsContainer)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="cont"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawingHelper.DrawRectangleF(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws  rectangle with given <see cref="T:System.Drawing.Pen"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to render rectangle.</param>
            <param name="p">The <see cref="T:System.Drawing.Pen"/> to draw rectangle.</param>
            <param name="rect">Rectangle bounds to draw.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.DrawingHelper.EllipsesText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Single)">
            <summary>
            Shortens the text.
            </summary>
            <param name="g">The graphics</param>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="width">The width.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.DrawingHelper.CenteredFormat">
            <summary>
            Gets the centered format.
            </summary>
            <value>The centered format.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper">
            <summary>
            Represents the methods for creation of symbols geometry.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.GetBrushItem(Syncfusion.Drawing.BrushInfo,System.Drawing.RectangleF)">
            <summary>
            Gets the brush for specified BrushInfo instance
            </summary>
            <param name="info"></param>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.DrawPointSymbol(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Drawing.Point)">
            <summary>
            Draws the symbol with specified style at specified location
            </summary>
            <param name="g">Graphics instance</param>
            <param name="info">Style information for the symbol</param>
            <param name="location">Location of the symbol</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.FillAndDrawSymbol(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartSymbolShape,System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Brush)">
            <summary>
            Draw filled <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolShape"/> with its border.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to render shape.</param>
            <param name="symbol">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolShape"/> to render.</param>
            <param name="bounds">The bounds of the shape.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/> to draw shape border.</param>
            <param name="brush">The <see cref="T:System.Drawing.Brush"/> to fill symbol.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.DrawSymbol(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartSymbolShape,System.Drawing.Rectangle,System.Drawing.Pen)">
            <summary>
            Draw <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolShape"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to render shape.</param>
            <param name="symbol">The <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolShape"/> to render.</param>
            <param name="bounds">The bounds of the shape.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/> to draw shape.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.FillSymbol(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartSymbolShape,System.Drawing.Rectangle,System.Drawing.Brush)">
            <summary>
            Draw filled <see cref="T:Syncfusion.Windows.Forms.Chart.ChartSymbolShape"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> to render symbol.</param>
            <param name="symbol">The symbol to render.</param>
            <param name="bounds">The bounds to render symbol.</param>
            <param name="brush">The <see cref="T:System.Drawing.Brush"/> to fill the symbol.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.GetPathSymbol(Syncfusion.Windows.Forms.Chart.ChartSymbolShape,System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="symbol"></param>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.GetPathCircle(System.Drawing.RectangleF)">
            <summary>
            Creates circle path for given rectangle.
            </summary>
            <param name="bounds">The rectangle to create path.</param>
            <returns>Circle path.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.GetPathDiamond(System.Drawing.RectangleF)">
            <summary>
            Creates diamond path for given rectangle.
            </summary>
            <param name="bounds">The rectangle to create diamond path.</param>
            <returns>Diamond path.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.GetPathSquare(System.Drawing.RectangleF)">
            <summary>
            Creates square <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for given rectangle.
            </summary>
            <param name="bounds">The rectangle to create path.</param>
            <returns>Square path.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.GetPathTriangle(System.Drawing.RectangleF)">
            <summary>
            Creates triangle <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for given rectangle.
            </summary>
            <param name="bounds">The bounds of the path.</param>
            <returns>Triangle path.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.GetPathInvertedTriangle(System.Drawing.RectangleF)">
            <summary>
            Creates inverted triangle <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for given rectangle.
            </summary>
            <param name="bounds">Bounds of the path.</param>
            <returns>Inverted triangle path.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.GetPathArrow(System.Drawing.RectangleF)">
            <summary>
            Creates Arrow <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for given rectangle.
            </summary>
            <param name="bounds">Bounds of the path.</param>
            <returns>Arrow path.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.GetPathInvertedArrow(System.Drawing.RectangleF)">
            <summary>
            Creates inverted arrow <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for given rectangle.
            </summary>
            <param name="bounds">Bounds of the path.</param>
            <returns>Inverted arrow path.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.GetPathHexagon(System.Drawing.RectangleF)">
            <summary>
            Creates hexagon <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for given rectangle.
            </summary>
            <param name="bounds">The bounds of the hexagon path.</param>
            <returns>Hexagon path.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.GetPathPentagon(System.Drawing.RectangleF)">
            <summary>
            Creates pentagon <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for given rectangle.
            </summary>
            <param name="bounds">The bounds of the path.</param>
            <returns>Pentagon path.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.GetPathCross(System.Drawing.RectangleF)">
            <summary>
            Creates cross <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for given rectangle.
            </summary>
            <param name="bounds">The bounds of the path.</param>
            <returns>Cross path.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.GetPathStar(System.Drawing.RectangleF)">
            <summary>
            Creates star <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for given rectangle.
            </summary>
            <param name="bounds">The bounds of the path.</param>
            <returns>Star path.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.GetPathHorizLine(System.Drawing.RectangleF)">
            <summary>
            Creates horizontal line <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for given rectangle.
            </summary>
            <param name="bounds">The bounds of the path.</param>
            <returns>Horizontal line path.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartSymbolHelper.GetPathVertLine(System.Drawing.RectangleF)">
            <summary>
            Creates vertical line <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for given rectangle.
            </summary>
            <param name="bounds">The bounds of the path.</param>
            <returns>Vertical line path.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.LayoutHelper">
            <summary>
            Contains the layout methods.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LayoutHelper.AlignRectangle(System.Drawing.RectangleF,System.Drawing.SizeF,System.Drawing.ContentAlignment)">
            <summary>
            Aligns the rectangle.
            </summary>
            <param name="bounds">The bounds area.</param>
            <param name="size">The size rectangle.</param>
            <param name="alignment">The alignment.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LayoutHelper.AlignRectangle(System.Drawing.RectangleF,System.Drawing.SizeF,Syncfusion.Windows.Forms.Chart.ChartAlignment,Syncfusion.Windows.Forms.Chart.ChartAlignment)">
            <summary>
            Aligns the rectangle.
            </summary>
            <param name="bounds">The bounds area.</param>
            <param name="size">The size rectangle.</param>
            <param name="horizontal">The horizontal alignment.</param>
            <param name="vertical">The vertical alignment.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LayoutHelper.AlignRectangle(System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.ContentAlignment)">
            <summary>
            Aligns the rectangle.
            </summary>
            <param name="point">The point.</param>
            <param name="size">The size.</param>
            <param name="alignment">The alignment.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.LayoutHelper.AlignRectangle(System.Drawing.PointF,System.Drawing.SizeF,Syncfusion.Windows.Forms.Chart.ChartAlignment,Syncfusion.Windows.Forms.Chart.ChartAlignment)">
            <summary>
            Aligns the rectangle.
            </summary>
            <param name="point">The point.</param>
            <param name="size">The size.</param>
            <param name="horizontal">The horizontal alignment.</param>
            <param name="vertical">The vertical alignment.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartMath">
            <summary>
            Provides constants and static methods for mathematical functions.
            </summary>
            <internalonly/>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartMath.ToRadians">
            <summary>
            A ratio of radials to degrees.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartMath.ToDegrees">
            <summary>
            A ratio of degrees to radials.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartMath.DblPI">
            <summary>
            A double PI.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartMath.HlfPI">
            <summary>
            A half of PI.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Chart.ChartMath.Epsilon">
            <summary>
            A the minimal value of <see cref="T:System.Double"/> (magical number).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.ModAngle(System.Double,System.Double)">
            <summary>
            Mods the angle.
            </summary>
            <param name="angle">The angle.</param>
            <param name="modAngle">The mod angle.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.Round(System.Double,System.Double)">
            <summary>
            Rounds the specified value.
            </summary>
            <param name="value">The value to round.</param>
            <param name="div">The div.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.Round(System.Double,System.Double,System.Boolean)">
            <summary>
            Rounds the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="div">The div.</param>
            <param name="up">if set to <c>true</c> value will be rounded to greater value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.GetTwoClosestPoints(System.Double[],System.Double,System.Int32@,System.Int32@)">
            <summary>
            Gets the indices of two closest points by the specified value.
            </summary>
            <param name="xs">The array of double.</param>
            <param name="point">The specified value.</param>
            <param name="index1">The index of first point.</param>
            <param name="index2">The index of second point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.Bisection(Syncfusion.Windows.Forms.Chart.ChartMath.DoubleFunc,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Computes the bisections by the specified function.
            </summary>
            <param name="fnc">The function handler.</param>
            <param name="x1">The x1.</param>
            <param name="x2">The x2.</param>
            <param name="xAccuracy">The x accuracy.</param>
            <param name="maxIterationCount">The max iteration count.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.SmartBisection(Syncfusion.Windows.Forms.Chart.ChartMath.DoubleFunc,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Computes the bisections by the specified function.
            </summary>
            <param name="fnc">The function handler.</param>
            <param name="x1">The x1.</param>
            <param name="x2">The x2.</param>
            <param name="xAccuracy">The x accuracy.</param>
            <param name="maxIterationCount">The max iteration count.</param>
            <param name="tabulCount">The table count.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.LineSegmentIntersectionPoint(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Computes the point of lines intersection.
            </summary>
            <param name="a">The start point of first line.</param>
            <param name="b">The end point of first line.</param>
            <param name="c">The start point of second line.</param>
            <param name="d">The end point of second line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.Determinant(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Computes the determinant by the specified matrix.
            </summary>
            <param name="p1">The first row of matrix.</param>
            <param name="p2">The second row of matrix.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.RectanlgeIntersectsWithLine(System.Drawing.RectangleF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Indicates whether specified rectangle is intersects with the line.
            </summary>
            <param name="r">The rectangle.</param>
            <param name="a">The start of line.</param>
            <param name="b">The end of line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.RectangleIntersectsWithLine(System.Drawing.RectangleF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Indicates whether specified rectangle is intersects with the line.
            </summary>
            <param name="r">The rectangle.</param>
            <param name="a">The start of line.</param>
            <param name="b">The end of line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.MinMax(System.Double,System.Double,System.Double)">
            <summary>
            Checks whether specified value is inside of specified range.
            </summary>
            <param name="value">The value.</param>
            <param name="min">The minimal value.</param>
            <param name="max">The maximal value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.MinMax(System.Single,System.Single,System.Single)">
            <summary>
            Checks whether specified value is inside of specified range.
            </summary>
            <param name="value">The value.</param>
            <param name="min">The minimal value.</param>
            <param name="max">The maximal value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.MinMax(System.Int32,System.Int32,System.Int32)">
            <summary>
            Checks whether specified value is inside of specified range.
            </summary>
            <param name="value">The value.</param>
            <param name="min">The minimal value.</param>
            <param name="max">The maximal value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.MinMax(System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Mins the max.
            </summary>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.Min(System.Double[])">
            <summary>
            Returns the minimal value from array.
            </summary>
            <param name="values">The array of values.</param>
            <returns>The minimal value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.Max(System.Double[])">
            <summary>
            Returns the maximal value from array.
            </summary>
            <param name="values">The array of values.</param>
            <returns>The maximal value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.RotatedRectangleBounds(System.Drawing.RectangleF,System.Double)">
            <summary>
            Compute the bounds of rotated rectangle.
            </summary>
            <param name="r">The rectangle.</param>
            <param name="angle">The rotation angle.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.LeftCenterRotatedRectangleBounds(System.Drawing.RectangleF,System.Double)">
            <summary>
            Compute the bounds of left-center rotated rectangle.
            </summary>
            <param name="r">The rectangle.</param>
            <param name="angle">The rotation angle.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.CenterRotatedRectangleBounds(System.Drawing.RectangleF,System.Double)">
            <summary>
            Compute the bounds of center rotated rectangle.
            </summary>
            <param name="r">The rectangle.</param>
            <param name="angle">The rotation angle.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.DistanceBetweenPoints(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Calculates distance between two points.
            </summary>
            <param name="p1">The point to calculate distance from.</param>
            <param name="p2">The point to calculate distance to.</param>
            <returns>Distance between to point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.GetPointByAngle(System.Drawing.RectangleF,System.Double,System.Boolean)">
            <summary>
            Gets the point by angle.
            </summary>
            <param name="rect">The rect.</param>
            <param name="angle">The angle.</param>
            <param name="isCircle">if set to <c>true</c> [is circle].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.GetRectByCenter(System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Creates the <see cref="T:System.Drawing.RectangleF"/> by specified center and radius.
            </summary>
            <param name="center">The center.</param>
            <param name="radius">The radius.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.GetCenter(System.Drawing.RectangleF)">
            <summary>
            Returns the center of specified rectangle.
            </summary>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.GetRadius(System.Drawing.RectangleF)">
            <summary>
            Returns the half size of rectangle.
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.CorrectRect(System.Drawing.RectangleF)">
            <summary>
            Corrects the size of the specified rectangle.
            </summary>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.CorrectRect(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates the <see cref="T:System.Drawing.RectangleF"/> by the specified points and corrects the size.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.AddPoint(System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Translates a given <see cref="T:System.Drawing.PointF"/> by a specified <see cref="T:System.Drawing.SizeF"/>.
            </summary>
            <param name="pt">The point.</param>
            <param name="sz">The size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.AddPoint(System.Drawing.PointF,System.Drawing.Size)">
            <summary>
            Translates a given <see cref="T:System.Drawing.PointF"/> by a specified <see cref="T:System.Drawing.Size"/>.
            </summary>
            <param name="pt">The point.</param>
            <param name="sz">The size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.GetNormal(Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D,Syncfusion.Windows.Forms.Chart.Vector3D)">
            <summary>
            Gets the normal.
            </summary>
            <param name="v1">The start point of plane.</param>
            <param name="v2">The v2.</param>
            <param name="v3">The v3.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.SolveQuadraticEquation(System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            solves quadratic equation in form a*x^2 + b*x + c = 0
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <param name="root1"></param>
            <param name="root2"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.SolveQuadraticEquation(System.Single,System.Single,System.Single,System.Single@,System.Single@)">
            <summary>
            solves quadratic equation in form a*x^2 + b*x + c = 0
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <param name="root1"></param>
            <param name="root2"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.InterpolateBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Int32)">
            <summary>
            Interpolates the bezier.
            </summary>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
            <param name="p3">The p3.</param>
            <param name="p4">The p4.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.SplitBezierCurve(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Splits the bezier curve.
            </summary>
            <param name="p0">The start point of curve.</param>
            <param name="p1">The first control point.</param>
            <param name="p2">The second control point.</param>
            <param name="p3">The end point of curve.</param>
            <param name="t0">The interpolator.</param>
            <param name="pb0">The start point of first output curve.</param>
            <param name="pb1">The first control point of first output curve.</param>
            <param name="pb2">The second control point of first output curve.</param>
            <param name="pb3">The end point of first output curve.</param>
            <param name="pe0">The start point of second output curve.</param>
            <param name="pe1">The first control point of second output curve.</param>
            <param name="pe2">The second control point of second output curve.</param>
            <param name="pe3">The end point of second output curve.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartMath.SplitBezierCurve(Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartPoint,System.Double,Syncfusion.Windows.Forms.Chart.ChartPoint@,Syncfusion.Windows.Forms.Chart.ChartPoint@,Syncfusion.Windows.Forms.Chart.ChartPoint@,Syncfusion.Windows.Forms.Chart.ChartPoint@,Syncfusion.Windows.Forms.Chart.ChartPoint@,Syncfusion.Windows.Forms.Chart.ChartPoint@,Syncfusion.Windows.Forms.Chart.ChartPoint@,Syncfusion.Windows.Forms.Chart.ChartPoint@)">
            <summary>
            Splits the bezier curve.
            </summary>
            <param name="p0">The start point of curve.</param>
            <param name="p1">The first control point.</param>
            <param name="p2">The second control point.</param>
            <param name="p3">The end point of curve.</param>
            <param name="t0">The interpolator.</param>
            <param name="pb0">The start point of first output curve.</param>
            <param name="pb1">The first control point of first output curve.</param>
            <param name="pb2">The second control point of first output curve.</param>
            <param name="pb3">The end point of first output curve.</param>
            <param name="pe0">The start point of second output curve.</param>
            <param name="pe1">The first control point of second output curve.</param>
            <param name="pe2">The second control point of second output curve.</param>
            <param name="pe3">The end point of second output curve.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartMath.DoubleFunc">
            <summary>
            Represents the methods of double function.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartPlace">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPlace.#ctor(System.Int32,Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPlace.Add(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPlace.SetSpaceSize(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.ChartPlace.CalculateSpace(Syncfusion.Windows.Forms.Chart.ChartSeriesCollection,System.Boolean,Syncfusion.Windows.Forms.Chart.IChartAreaHost)">
            <summary>
            
            </summary>
            <param name="series"></param>
            <param name="doManyAreas"></param>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPlace.SeriesType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPlace.PlaceIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartPlace.Series">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.Renderers.BoxWhiskerRenderer">
            <summary>
            Provides the rendering of "Box and Whisker" chart type.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.BoxWhiskerRenderer.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.Renderers.BoxWhiskerRenderer"/> class.
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.BoxWhiskerRenderer.DrawChartPoint(System.Drawing.Graphics,Syncfusion.Windows.Forms.Chart.ChartPoint,Syncfusion.Windows.Forms.Chart.ChartStyleInfo,System.Int32)">
            <summary>
            Draws the specified point in specified style
            </summary>
            <param name="g">Graphics object</param>
            <param name="point">Chart Point</param>
            <param name="info">Style of the point</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.BoxWhiskerRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs2D)">
            <summary>
            Renders the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.BoxWhiskerRenderer.Render(Syncfusion.Windows.Forms.Chart.ChartRenderArgs3D)">
            <summary>
            Renders chart by the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.BoxWhiskerRenderer.GetYDataMeasure">
            <summary>
            Measures the X range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.Renderers.BoxWhiskerRenderer.GetStatisticalMedian(System.Double[])">
            <summary>
            Computes the statistical median.
            </summary>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.BoxWhiskerRenderer.RequireYValuesCount">
            <summary>
            Gets count of require Y values of the points.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.Renderers.BoxWhiskerRenderer.RegionDescription">
            <summary>
            Get description of regions.
            </summary>
            <value>The Region Description.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.ChartStyleDialogOptions">
            <summary>
            The ChartStyleDialogOptions class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleDialogOptions.ShowInteriorTab">
            <summary>
            Gets or sets a value indicating whether interior tab is visible.
            </summary>
            <value><c>true</c> if interior tab is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleDialogOptions.ShowBorderTab">
            <summary>
            Gets or sets a value indicating whether border tab is visible.
            </summary>
            <value><c>true</c> if border tab is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleDialogOptions.ShowTextTab">
            <summary>
            Gets or sets a value indicating whether text tab is visible.
            </summary>
            <value><c>true</c> if text tab is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleDialogOptions.ShowSymbolTab">
            <summary>
            Gets or sets a value indicating whether symbol tab is visible.
            </summary>
            <value><c>true</c> if symbol tab is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleDialogOptions.ShowFancyToolTipsTab">
            <summary>
            Gets or sets a value indicating whether fancy tooltips tab is visible.
            </summary>
            <value><c>true</c> if fancy tooltips tab is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.ChartStyleDialogOptions.ShowShadowTab">
            <summary>
            Gets or sets a value indicating whether shadow tab is visible.
            </summary>
            <value><c>true</c> if shadow tab is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm">
            <summary>
            Represents the dialog to edit the series style.
            </summary>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries,System.String,Syncfusion.Drawing.BrushInfo,Syncfusion.Windows.Forms.Chart.ChartStyleDialogOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm"/> class.
            </summary>
            <param name="series">The series.</param>
            <param name="seriesName">Name of the series.</param>
            <param name="seriesInterior">The series interior.</param>
            <param name="options">The options.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.#ctor(Syncfusion.Windows.Forms.Chart.ChartSeries,System.String,Syncfusion.Drawing.BrushInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm"/> class.
            </summary>
            <param name="series">The series.</param>
            <param name="seriesName">Name of the series.</param>
            <param name="seriesInterior">The series interior.</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources that is being used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.SeriesStyleEditorForm_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the SeriesStyleEditorForm control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.TransferValuesFromStyleInfoToControls">
            <summary>
            Transfers the values from style info to controls.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.TransferValuesFromControlsToStyleInfo">
            <summary>
            Transfers the values from controls to style info.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.buttonOK_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonOK control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.borderColorControl_ColorSelected(System.Object,System.EventArgs)">
            <summary>
            Handles the ColorSelected event of the borderColorControl control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.buttonBorderColorReset_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the buttonBorderColorReset control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.bttnResetInterior_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the bttnResetInterior control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Chart.SeriesStyleEditorForm.SeriesStyle">
            <summary>
            Gets the series style.
            </summary>
            <value>The series style.</value>
            <internalonly/>
        </member>
    </members>
</doc>
