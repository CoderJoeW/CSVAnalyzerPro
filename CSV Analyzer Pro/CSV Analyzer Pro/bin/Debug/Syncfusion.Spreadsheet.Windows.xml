<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Spreadsheet.Windows</name>
    </assembly>
    <members>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDate(System.String)">
            <summary>
            Returns the number of days since 01 Jan 1900.
            </summary>
            <param name="argList">Year, month, and day.</param>
            <returns>Number of days.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDatevalue(System.String)">
            <summary>
            Returns the number of days since 01 Jan 1900.
            </summary>
            <param name="argList">Text containing a date.</param>
            <returns>Number of days.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDay(System.String)">
            <summary>
            Returns the day of the serial number date.
            </summary>
            <param name="argList">Serial number date.</param>
            <returns>Day of the given date.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDays360(System.String)">
            <summary>
            Number of days between 2 dates using 360 day year.
            </summary>
            <param name="argList">Serial number date1, serial number date1 and method.</param>
            <returns>Days between the dates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeYearFrac(System.String)">
            <summary>
            returns the fraction of the year represented by the number of whole days between two given dates
            </summary>
            <param name="argList">startDate, endDate, basis (optional)</param>
            <returns>returns the fraction of the year</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDays(System.String)">
            <summary>
            Returns the number of days between two dates.
            </summary>
            <param name="argList">startDate, endDate</param>
            <returns>Returns the number of days</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeEDate(System.String)">
            <summary>
            returns the date of given date after the specific month
            </summary>
            <param name="argList">startDate, months</param>
            <returns>returns the date</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeEOMonth(System.String)">
            <summary>
            Returns the last date of the date after the specific month of given date.
            </summary>
            <param name="argList">startDate, month</param>
            <returns>return the date.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeWeeknum(System.String)">
            <summary>
            Returns the week number of a specific date
            </summary>
            <param name="argList">serial_number,start_day of week (optional)</param>
            1 or omitted - Sunday 
            2 Monday 
            11 Monday 
            12 Tuesday 
            13 Wednesday 
            14 Thursday 
            15 Friday  
            16 Saturday 
            17 Sunday 
            21 Monday 
            <returns>returns the week number</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeISOWeeknum(System.String)">
            <summary>
            Returns ISO week number of the year for a given date
            </summary>
            <param name="argList">date</param>
            <returns>returns ISO week number</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeWorkDay(System.String)">
            <summary>
            returns the date of the given date after the number of working days 
            </summary>
            <param name="argList">startDate, days,  holidays (optional)</param>
            <returns>returns the date</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNetworkDays(System.String)">
            <summary>
            Returns the value of ComputeNetworkDays
            </summary>
            <param name="argList">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNetworkDaysintl(System.String)">
            <summary>
            Returns the number of whole workdays between two dates, week end and holidays are not consider as working days
            </summary>
            <param name="argList">start_date, end_date,weekend (optional), holidays (optional)</param>
            <returns>return the work days</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeWorkDayintl(System.String)">
            <summary>
            Returns the serial number of the given date before or after a specified number of workdays
            </summary>
            <param name="argList">startDate, days, weekend (optional) , holidays (optional)</param>
            <returns>return the serial number of specific date.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeHour(System.String)">
            <summary>
            Returns the hour of the given time.
            </summary>
            <param name="argList">Given time.</param>
            <returns>Hour of given time.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMinute(System.String)">
            <summary>
            Returns the minute of the given time.
            </summary>
            <param name="argList">Given time.</param>
            <returns>Minute of given time.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSecond(System.String)">
            <summary>
            Returns the second of the given time.
            </summary>
            <param name="argList">Given time.</param>
            <returns>Second of given time.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMonth(System.String)">
            <summary>
            Returns the month of the given date.
            </summary>
            <param name="argList">given time</param>
            <returns>Month of given date.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNow(System.String)">
            <summary>
            Returns the current date and time as a date serial number.
            </summary>
            <param name="argList">Parameter Ignored.</param>
            <returns>Current date and time as serial number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeToday(System.String)">
            <summary>
            Returns the current date as a date serial number.
            </summary>
            <param name="argList">Parameter Ignored.</param>
            <returns>Current date as date serial number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeTime(System.String)">
            <summary>
            Returns a fraction of a day.
            </summary>
            <param name="argList">Hour, minute, and second.</param>
            <returns>Fraction of a day.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeTimevalue(System.String)">
            <summary>
            Returns a fraction of a day.
            </summary>
            <param name="argList">Time as a text string.</param>
            <returns>Fraction of a day.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeWeekday(System.String)">
            <summary>
            Day of the week.
            </summary>
            <param name="argList">Serial number date1 and return_type.</param>
            <returns>Days between the dates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeYear(System.String)">
            <summary>
            Returns the year of the given date.
            </summary>
            <param name="argList">Given date.</param>
            <returns>Month of given date.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.BaseToBase(System.String,System.Int32,System.Int32)">
            <summary>
            Calculates the Output to the concerned base.
            </summary>
            <param name="argList">Data to be converted.</param>
            <param name="from">Base of the Given Data</param>
            <param name="to">Base to be obtained.</param>
            <returns>The data concerning to the base in 'to' parameter</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDec2Bin(System.String)">
            <summary>
            Computes the Binary value for the given Decimal Number.
            </summary>
            <param name="argList">Data to be converted.</param>
            <returns>Returns the calculated Binary value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDec2Oct(System.String)">
            <summary>
            Computes the Octal value for the given Decimal Number.
            </summary>
            <param name="argList">data to be converted.</param>
            <returns>Returns the calculated Octal value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDec2Hex(System.String)">
            <summary>
            Computes the Hexadecimal value for the given Decimal Number.
            </summary>
            <param name="argList">Data to be converted.</param>
            <returns>Returns the calculated Hexadecimal value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBin2Oct(System.String)">
            <summary>
            Computes the Octal Number for the given binary NUmber.
            </summary>
            <param name="argList">Input BinaryNumber</param>
            <returns>The resultant Octal Number</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBin2Dec(System.String)">
            <summary>
            Computes the Decimal Number for the given binary NUmber.
            </summary>
            <param name="argList">Input BinaryNumber</param>
            <returns>The resultant Decimal Number</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBin2Hex(System.String)">
            <summary>
            
            </summary>
            <param name="argList"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeHex2Bin(System.String)">
            <summary>
            Computes the Binary value for the given Hexadecimal Data.
            </summary>
            <param name="argList">Data to be converted.</param>
            <returns>Returns the calculated Binary value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeHex2Oct(System.String)">
            <summary>
            Computes the Octal Equivalent for the given Hexadecimal value
            </summary>
            <param name="argList">Data to be converted.</param>
            <returns>The calculated Octal value for the given. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeHex2Dec(System.String)">
            <summary>
            Computes the Decimal Equivalent for the given Hexadecimal value
            </summary>
            <param name="argList">Data to be converted.</param>
            <returns>The calculated Decimal value for the given.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeOct2Bin(System.String)">
            <summary>
            Computes the Binary value for the given Octal Number.
            </summary>
            <param name="argList">Data to be converted.</param>
            <returns>Returns the calculated Binary value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeOct2Hex(System.String)">
            <summary>
            Calculates the Hexadecimal equivalent value for the given Octal value
            </summary>
            <param name="argList">Data to be converted.</param>
            <returns>The Converted Hexadecimal value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeOct2Dec(System.String)">
            <summary>
            Computes the Decimal Equivalent for the given Octal value
            </summary>
            <param name="argList">The Value to be converted to Decimal</param>
            <returns>The calculated value for the given  </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeReal(System.String)">
            <summary>
            Gets the Real part of the given Complex number.
            </summary>
            <param name="argList">Given complex number.</param>
            <returns>Real part of the given complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeImaginary(System.String)">
            <summary>
            Gets the Imaginary part of the given Complex number.
            </summary>
            <param name="argList">Given complex number.</param>
            <returns>Imaginary part of the given complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeImABS(System.String)">
            <summary>
            Returns the absolute value (modulus) of a complex number in x + yi or x + yj text format.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The absolute value (modulus) of given complex number</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeImProduct(System.String)">
            <summary>
            Computes the Product of the given Complex Numbers
            </summary>
            <param name="argList">Input Complex Numbers</param>
            <returns>The multiplied result of the two complex numbers.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeComplex(System.String)">
            <summary>
            Obtains the complex number for the given real and imaginary part.
            </summary>
            <param name="argList">Given real and Imaginary part.</param>
            <returns>The complex number derived from the real and imaginary part.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeImSum(System.String)">
            <summary>
            Computes the sum of two complex number.
            </summary>
            <param name="argList">Parameter that is used for performing sum</param>
            <returns>The calculated sum of the numbers</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeImSub(System.String)">
            <summary>
            Computes the Difference of two complex number.
            </summary>
            <param name="argList">Parameter that is used for performing Subtraction</param>
            <returns>The calculated difference of the numbers</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeImConjugate(System.String)">
            <summary>
            Returns the complex conjugate of a complex number in x + yi or x + yj text format.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The complex conjugate of a complex number in x + yi or x + yj text format.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeImDiv(System.String)">
            <summary>
            Computes the Division of the given Complex Numbers
            </summary>
            <param name="argList">Input Complex Numbers</param>
            <returns>The Divided result of the two complex numbers.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeImSqrt(System.String)">
            <summary>
            Returns the Square Root of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The Square Root of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeImArgument(System.String)">
            <summary>
            Returns the argument  (theta), an angle expressed in radians
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The argument  (theta), an angle expressed in radians</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIMSin(System.String)">
            <summary>
             Returns the IMSin of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMSin of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeImSinH(System.String)">
            <summary>
            Returns the Hyperbolic Sine value of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The Hyperbolic Sine Value of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIMCSC(System.String)">
            <summary>
             Returns the IMCSC of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMCSC of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIMCos(System.String)">
            <summary>
             Returns the IMCos of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMCos of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIMSEC(System.String)">
            <summary>
             Returns the IMSEC of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMSEC of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIMTan(System.String)">
            <summary>
             Returns the IMTan of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMTan of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeImCot(System.String)">
            <summary>
             Returns the IMCot of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMCot of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIMCSCH(System.String)">
            <summary>
             Returns the IMCSCH of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMCSCH of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeImCosH(System.String)">
            <summary>
            Returns the Hyperbolic Cos value of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The Hyperbolic Cos Value of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIMTanH(System.String)">
            <summary>
             Returns the IMTanH of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMTanH of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIMCotH(System.String)">
            <summary>
             Returns the IMCotH of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMCotH of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIMSecH(System.String)">
            <summary>
             Returns the IMSecH of the given Complex Number.
             </summary>
             <param name="argList">Input Complex Number</param>
             <returns>The IMSecH of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIMLOG10(System.String)">
            <summary>
            Returns the LOG10 value of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The Log10 of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIMLOG2(System.String)">
            <summary>
            Returns the Log2 of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The Log2 of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIMLN(System.String)">
            <summary>
            Returns the LOG value of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The Log of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeImEXP(System.String)">
            <summary>
            Returns the Exponent of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The Exponent of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeImPower(System.String)">
            <summary>
            Returns the power of the given Complex Number.
            </summary>
            <param name="argList">Input Complex Number</param>
            <returns>The power of the given Complex Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBitOr(System.String)">
            <summary>
            Computes the Bit OR of the given two numbers.
            </summary>
            <param name="argList">Input Numbersfor which the OR operations has to be performed.</param>
            <returns>Bit OR value of the given two numbers.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBitXor(System.String)">
            <summary>
            Computes the Bit XoR of the given two numbers.
            </summary>
            <param name="argList">Input Numbersfor which the OR operations has to be performed.</param>
            <returns>Bit OR value of the given two numbers.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBitAnd(System.String)">
            <summary>
            Computes the Bit AND of the given two numbers.
            </summary>
            <param name="argList">Input Numbersfor which the AND operations has to be performed.</param>
            <returns>Bit AND value of the given two numbers.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBitLShift(System.String)">
            <summary>
            Computes the Bit Left Shift of the given number.
            </summary>
            <param name="argList">Input Numbersfor which the OR operations has to be performed.</param>
            <returns>Bit Left Shift value of the given number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBitRShift(System.String)">
            <summary>
            Computes the Bit Right Shift of the given number.
            </summary>
            <param name="argList">Input Numbersfor which the Bit Right Shift operations has to be performed.</param>
            <returns>Bit Right Shift value of the given number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeErf(System.String)">
            <summary>
             Returns the error function .
             </summary>
             <param name="argList">Input Number</param>
             <returns>The error function.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeErfCPrecise(System.String)">
            <summary>
             Returns the Complement of error function .
             </summary>
             <param name="argList">Input Number</param>
             <returns>The Complement of error function.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeErfPrecise(System.String)">
            <summary>
             Returns the error function .
             </summary>
             <param name="argList">Input Number</param>
             <returns>The error function.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBesselI(System.String)">
            <summary>
            Return the value of the ComputeBesselI 
            </summary>
            <param name="argList">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.besseli0(System.Double)">
            <summary>
            Return the value of besseli0
            </summary>
            <param name="x">value</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBesselJ(System.String)">
            <summary>
             Returns the BesselJ function of order n of the specified number.
             </summary>
             <param name="argList">Input Number</param>
             <returns>The BesselJ of the Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.j1(System.String)">
            <summary>
            Returns the Bessel function of order 1 of the specified number.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.j0(System.String)">
            <summary>
            Returns the Bessel function of order 0 of the specified number.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBesselY(System.String)">
            <summary>
             Returns the BesselY function of order n of the specified number.
             </summary>
             <param name="argList">Input Number</param>
             <returns>The BesselY of the Number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.y0(System.Double)">
            <summary>
            Returns the Bessel function of the second kind, of order 0 of the specified number.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.y1(System.Double)">
            <summary>
            Returns the Bessel function of the second kind, of order 1 of the specified number.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputebesselK(System.String)">
            <summary>
            Returns the value of ComputebesselK
            </summary>
            <param name="argList">arguments list</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeConversion(System.String)">
            <summary>
            Returns the value of ComputeConversion
            </summary>
            <param name="argList">arguments list</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.LookupCachingClearAll">
            <summary>
            Clears all look up caches used in HLookUp and VLookUp calculations so they will be recreated the
            next time one of these functions is used.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.LookupCachingClearSheet(Syncfusion.Windows.Forms.CellGrid.ICalcData)">
            <summary>
            Returns the value of Clearsheet
            </summary>
            <param name="grd">Icalcdata</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ReloadErrorStrings">
            <summary>
            Use this method to reset internal error strings if you make changes to <see cref="F:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.FormulaErrorStrings"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.Determinant(System.Double[0:,0:],System.Int32)">
            <summary>
            Used to find the determinant internally for matrix function
            </summary>
            <param name="a">double array</param>
            <param name="k">array length</param>
            <returns>double value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.NormalProbabilityDensity(System.Double,System.Double,System.Double)">
            <summary>
            Returns the Probabilitydistribution of the normal distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
            <param name="mean">Mean of the distribution.</param>
            <param name="standardDeviation">Standard deviation of the distribution.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.Cofactor(System.Double[0:,0:],System.Int32,System.Double[0:,0:]@)">
            <summary>
            find the cofactor of matrix
            </summary>
            <param name="num"></param>
            <param name="f">array length</param>
            <param name="inverse">return the inverse matrix</param>
            <returns>return success state</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.Inverse(System.Double[0:,0:],System.Double[0:,0:],System.Int32,System.Double[0:,0:]@)">
            <summary>
            To find the inverse of matrix
            </summary>
            <param name="num">matrix</param>
            <param name="fac">cofactor matrix</param>
            <param name="r">matrix length</param>
            <param name="inverse">Inveser matrix</param>
            <returns>Inverse Matrix</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ChiSquaredProbabilityDensityFunction(System.Double,System.Int32)">
            <summary>
            Chi-squared probability density function.
            </summary>
            <param name="x">The value at which the PDF is evaluated.</param>
            <param name="k">Degress of freedom, or number independent standard normal distributions.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.NormalCumulativeDistributionFunctionInverse(System.Double,System.Double,System.Double)">
             <summary>
             Returns the inverse of the CDF of the normal distribution.
             </summary>
             <param name="p">Cumulative probability of the distribution. 0 &lt;= p &gt;= 1.</param>
            <param name="mean">Mean of the distribution.</param>
             <param name="standardDeviation">Standard deviation of the distribution.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.StandardNormalCumulativeDistributionInverse(System.Double)">
            <summary>
            Returns the inverse of the CDF of the standard normal distribution.
            </summary>
            <param name="p">Cumulative probability of the distribution. p is between 0 and 1.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNpv(System.String)">
            <summary>
            Computes the net present value an investment.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period
            and a list of invested values.</param>
            <returns>Net present value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePmt(System.String)">
            <summary>
            Computes the payment for a loan.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period,
            number of periods, present value, future value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Payment amount.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePpmt(System.String)">
            <summary>
            Computes the principal payment for a period.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period, the period,
            number of periods, present value, future value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Principal payment.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePv(System.String)">
            <summary>
            Computes the present value of an investment.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period,
            number of periods, payment per period, future value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Present value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRate(System.String)">
            <summary>
            Computes the internal rate of return of a series of cash flows.
            </summary>
            <param name="argList">Delimited string containing a range of cells and an initial guess.</param>
            <returns>Internal rate of return.</returns>
            <remarks>
            This IRR calculation uses Newton's method to approximate a root of
                      f(r) = Sum( values[i]/(1+r)^i) = 0
            where the Sum index is i = 1 to the number of values. The algorithm returns a value if
            the relative difference between root approximations is less than 1e-7. It fails if this
            accuracy is not attained in 20 iterations.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSln(System.String)">
            <summary>
            Computes the straight-line depreciation of an asset per period.
            </summary>
            <param name="argList">Delimited string containing the cost,
            salvage value, and life.</param>
            <returns>Depreciation of the asset.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSyd(System.String)">
            <summary>
            Computes the sum of years digits depreciation of an asset per period.
            </summary>
            <param name="argList">Delimited string containing the cost,
            salvage value, life, and period.</param>
            <returns>Depreciation for the requested period.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeVdb(System.String)">
            <summary>
            Computes the variable declining balance of an asset.
            </summary>
            <param name="argList">Delimited string containing the initial cost,
            salvage value, life of asset, period of calculation, and factor.</param>
            <returns>Variable declining balance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDollarDe(System.String)">
            <summary>
            Converts a number to text using currency format.
            </summary>
            <param name="args">Number and the number of digits.</param>
            <returns>Currency format string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDollarFr(System.String)">
            <summary>
            Converts a number to text using currency format.
            </summary>
            <param name="args">Number and the number of digits.</param>
            <returns>Currency format string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDuration(System.String)">
            <summary>
             Returns the weighted average of the present value of the cash flows
            </summary>
            <param name="args">Number and the number of digits</param>
            <returns>Number of years</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeACCRINTM(System.String)">
            <summary>
            Calculates the accrued interest of a security that pays interest at maturity.
            </summary>
            <param name="args">Number and the number of digits</param>
            <returns>Accrued interest</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRRI(System.String)">
            <summary>
            Calculates the equivalent interest rate for the growth of an investment.
            </summary>
            <param name="args">Investment periods, present and future value of the investments.</param>
            <returns>Returns the equivalent interest.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFvschedule(System.String)">
            <summary>
            Returns the future value of an initial principal after applying a series of compound interest rates.
            </summary>
            <param name="args">Number and the number of digits</param>
            <returns>Number of future value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIntrate(System.String)">
            <summary>
             Returns the interest rate for a fully invested security.
            </summary>
            <param name="argList">Number and the number of digits</param>
            <returns>Rate of interest</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDisc(System.String)">
            <summary>
             Returns the discount rate for a security.
            </summary>
            <param name="args">Number and the number of digits</param>
            <returns>Rate of Discount</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFv(System.String)">
            <summary>
            Computes the future value of an investment.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period,
            number of periods, payment per period, present value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Future value of the investment.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIpmt(System.String)">
            <summary>
            Computes the interest payment for a period.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period, the period,
            number of periods, present value, future value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Interest payment.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIrr(System.String)">
            <summary>
            Computes the internal rate of return of a series of cash flows.
            </summary>
            <param name="argList">Delimited string containing a range of cells and an initial guess.</param>
            <returns>Internal rate of return.</returns>
            <remarks>
            This IRR calculation uses Newton's method to approximate a root of
                      f(r) = Sum( values[i]/(1+r)^i) = 0
            where the Sum index is i = 1 to the number of values. The algorithm returns a value if
            the relative difference between root approximations is less than 1e-5. It fails if this
            accuracy is not attained in 20 iterations.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeXirr(System.String)">
            <summary>
             Computes the internal rate of return for a schedule of possibly non-periodic cash flows.
            </summary>
            <param name="argList">A list of two or three arguments. The first argument contains a range of cash flows, the second argument
            contains a list of corresponding date serial number values, and the third argument contains an initial guess at the return value.</param>
            <returns>The internal rate of return.</returns>
            <remarks>The computation uses a root finding algorithm. If the algorithm does not converge to a result within 100 iterations,
            an error is returned. The convergence requirement is an absolute error of 0.000001. The first date must be the earliest date,
            and the dates must be date serial numbers. Also, there must be at least one positive cash flow and at least one negative cash
            flow in the cash flow values.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIspmt(System.String)">
            <summary>
            Computes the simple interest payment.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period, the period,
            number of periods, and present value.</param>
            <returns>Simple interest payment.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMirr(System.String)">
            <summary>
            Computes the modified internal rate of return of a series of cash flows.
            </summary>
            <param name="argList">Delimited string containing a range of cells,
            finance interest rate, and a reinvested interest rate.</param>
            <returns>Modified internal rate of return.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNper(System.String)">
            <summary>
            Computes the number of periods an investment.
            </summary>
            <param name="argList">Delimited string containing the rate as percentage per period,
            payment per period, present value, future value, and payment type (0 = end of period, 1 = start of period).</param>
            <returns>Number of periods.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAddress(System.String)">
            <summary>
            this function used to obtain the address of a cell in a worksheet, given specified row and column numbers
            </summary>
            <param name="argList">The argList contain the row and column postion and type of reference</param>
            <returns>Address of the given row and column</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCell(System.String)">
            <summary>
            Return the information about cell
            </summary>
            <param name="arg">content, reference</param>
            <returns>Cell information</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeInfo(System.String)">
            <summary>
            Returns the current operation environment information
            </summary>
            <param name="argList">Type</param>
            <returns>environment information</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeType(System.String)">
            <summary>
            Returns the interger value for the datatype of given text
            </summary>
            <param name="argList">text</param>
            <returns>integer value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIsFormula(System.String)">
            <summary>
            Return the value of ComputeIsFormula
            </summary>
            <param name="argList">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeHLookUp(System.String)">
            <summary>
            Returns a horizontal table look up value.
            </summary>
            <param name="range">Contains search value, table, return index and match properties.</param>
            <returns>Matching value found in the table.</returns>
            <remarks> For example, =HLOOKUP("Axles",A1:C4,2,TRUE) looks for the exact
            match for Axles in A1:C1 and returns the corresponding value in A2:C2.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMatch(System.String)">
            <summary>
            Finds the index a specified value in a lookup_range.
            </summary>
            <param name="arg">look_value, lookup_range, match_type</param>
            <returns>The relative index of the lookup_value in the lookup_range.</returns>
            <remarks>
            Lookup_range should be a either a single row range or a single column range.
            If match_type is 0, the relative index of the first exact match (ignoring case)
            in the specified range is returned. If match_type is 1, the values in the range
            should be in ascending order, and the index of the largest value less than or
            equal to the lookup_value is returned. If match_type is -1, the values in the range
            should be in descending order, and the index of the smallest value greater than or
            equal to the lookup_value is returned.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GetResultRange(System.String,System.String)">
            <summary>
            Below method is used to returns the cellrange while the lookup vector is cellrange and result vector is cell(eg:=LOOKUP(2,D7:I7,A1)).
            </summary>
            <param name="lookupRange"> lookup vectors value.</param>
            <param name="resultRange"> result vectors value.</param>
            <returns>Returns the cellrange of result vector. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLookUp(System.String)">
            <summary>
            Returns a value from result table either from a one-row or one-column range or from an array 
            </summary>
            <param name="range">Lookup Value, lookup range, result range</param>
            <returns>Matching value found in the table</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeVLookUp(System.String)">
            <summary>
            Returns a vertical table look up value.
            </summary>
            <param name="range">Contains search value, table, return index and match properties.</param>
            <returns>Matching value found in the table.</returns>
            <remarks> For example, =VLOOKUP("Axles",A1:C4,2,TRUE) looks for the exact
            match for Axles in A1:A4 and returns the corresponding value in B1:B4.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLeft(System.String)">
            <summary>
            Returns the left so many characters in the given string.
            </summary>
            <param name="range">Contains the string and the number of characters.</param>
            <returns>A left sub string..</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLen(System.String)">
            <summary>
            Returns the length of the given string.
            </summary>
            <param name="range">Contains the string.</param>
            <returns>An integer length.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMid(System.String)">
            <summary>
            Returns a substring of the given string.
            </summary>
            <param name="range">Contains the original string, start position of the substring,
            and the number of characters in the substring.</param>
            <returns>A substring.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRight(System.String)">
            <summary>
            Returns the right so many characters in the given string.
            </summary>
            <param name="range">Contains the string and the number of characters.</param>
            <returns>A right substring.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.IsSeparatorInTIC(System.String)">
            <summary>
            Returns True if the ParseArgumentSeparator character is included in a string.
            </summary>
            <param name="s">The string to be searched.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GetStringArray(System.String)">
            <summary>
            Returns an array of strings from an argument list.
            </summary>
            <param name="s">A delimited argument list.</param>
            <returns>Array of strings from an argument list.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeConcatenate(System.String)">
            <summary>
            Returns a single character string.
            </summary>
            <param name="range">List of strings to be concatenated.</param>
            <returns>A single string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIndirect(System.String)">
            <summary>
            Returns the reference specified by a text string. References are immediately evaluated to display their contents.
            <para>Syntax: INDIRECT(CellRefString, [IsA1Style])</para>
            </summary>
            <param name="args">Cell reference string.</param>
            <returns>Cell reference.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSubstitute(System.String)">
            <summary>
            In a given string, this method substitutes an occurrence of one string with another string.
            </summary>
            <param name="range">A list of 3 or 4 arguments: the original string, the search string, the
            replacement string, and optionally, an integer representing the occurrence to be replaced.
               </param>
            <returns>The modified string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeText(System.String)">
            <summary>
            Returns a quoted string from a date or number.
            </summary>
            <param name="range">Value to be converted to a string.</param>
            <returns>Quoted string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeTextJoin(System.String)">
            <summary>
            The TEXTJOIN function combines the text from multiple ranges and/or strings, and includes a delimiter you specify between each text value that will be combined. If the delimiter is an empty text string, this function will effectively concatenate the ranges.
            </summary>
            <param name="range">A text string, or array of strings, such as a range of cells.</param>
            <returns>A single string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeConcat(System.String)">
            <summary>
            The CONCAT function combines the text from multiple ranges and/or strings, but it doesn't provide the delimiter or IgnoreEmpty arguments.
            </summary>
            <param name="range">Text item to be joined. A string, or array of strings, such as a range of cells.</param>
            <returns>A single string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeValue(System.String)">
            <summary>
            Returns a number.
            </summary>
            <param name="range">A date or number string.</param>
            <returns>A number in the given string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMod(System.String)">
            <summary>
            Returns the remainder after dividing one number by another.
            </summary>
            <param name="range">Two numbers in a list.</param>
            <returns>The remainder.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeTrunc(System.String)">
            <summary>
            Truncates a number to an integer.
            </summary>
            <param name="range">Value and number of digits.</param>
            <returns>Truncated value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSumProduct(System.String)">
            <summary>
            Returns the sum of the products of corresponding values.
            </summary>
            <param name="range">Two cell ranges.</param>
            <returns>Sum of the products.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDollar(System.String)">
            <summary>
            Converts a number to text using currency format.
            </summary>
            <param name="args">Number and the number of digits.</param>
            <returns>Currency format string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFixed(System.String)">
            <summary>
            Rounds a number to the specified number of decimals, formats the number
            in decimal format using a period and commas, and return the result as text.
            </summary>
            <param name="args">
            Number, number of digits, a flag that prevents from include
            commas in the returned text.
            </param>
            <returns>Formatted number as string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeChoose(System.String)">
            <summary>
            Returns the value at the specified index from a list of values.
            </summary>
            <param name="arg">A string of the form "Index, Value1, Value2,..." in which the term 'Index' denotes the index of the value to be retrieved.</param>
            <returns>The selected value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLower(System.String)">
            <summary>
            Converts text to lowercase.
            </summary>
            <param name="args">Value to convert.</param>
            <returns>Converted string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeUpper(System.String)">
            <summary>
            Converts text to uppercase.
            </summary>
            <param name="args">Value to convert.</param>
            <returns>Converted string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeT(System.String)">
            <summary>
            Returns the string or text referred by the given value.
            </summary>
            <param name="args">value to find the referred text - Required </param>
            <returns>Returns the referred text</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeColumn(System.String)">
            <summary>
            Returns the column index of the passed in cell reference.
            </summary>
            <param name="arg">Contains zero or one argument. If no argument is passed, returns the column index of the
            location of this Column function call, otherwise returns the column index of the passed in cell reference.</param>
            <returns>The column index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRow(System.String)">
            <summary>
            Returns the row index of the passed in cell reference.
            </summary>
            <param name="arg">Contains zero or one argument. If no argument is passed, returns the row index of the
            location of this Row function cell, otherwise returns the row index of the passed in cell reference.</param>
            <returns>The row index.</returns>
            <remarks>
            This method doesn't return an array of row numbers as the array formula entry is not supported in engine. It is another usecase of this library function.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeN(System.String)">
            <summary>
            Returns a number converted from the provided value.
            </summary>
            <param name="args">Value to be converted.</param>
            <returns>A number in string format or an error string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNA(System.String)">
            <summary>
            Returns the error value(#N/A). Used internally.
            </summary>
            <param name="args">empty string.</param>
            <returns>error value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNA">
            <summary>
            Returns the error value (#N/A - value not available).
            </summary>
            <returns>error value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeErrorType(System.String)">
            <summary>
             Returns a number corresponding to the predefined error values(#NULL!, #VALUE!, #REF!, #NAME?, #NUM!, #N/A, "#GETTING_DATA). Returns #N/A if not or any value enclosed within double quotes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeTrim(System.String)">
            <summary>
            Removes all leading and trailing white-space characters.
            </summary>
            <param name="args">Value to trim.</param>
            <returns>
            The string that remains after all leading and trailing white-space characters
            were removed.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIsLogical(System.String)">
            <summary>
            Determines whether the value is a logical value.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True if the value is a logical value, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIsNA(System.String)">
            <summary>
            Determines whether the value is the #NA error value.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True if the value is the #NA error value, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIsErr(System.String)">
            <summary>
            Returns True is the string denotes an error except #N/A.
            </summary>
            <param name="range">Value to be tested.</param>
            <returns>True if the value is an error except #N/A, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIsBlank(System.String)">
            <summary>
            Determines whether the value is empty string.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True if the value is empty, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIsText(System.String)">
            <summary>
            Determines whether the value is string or not.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True if the value is a string, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIsNonText(System.String)">
            <summary>
            Determines whether the value is not a string.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True if the value is not a string, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAnd(System.String)">
            <summary>
            Returns the And of all values treated as logical values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers. Each item in the list is considered True if it is nonzero
            and False if it is zero.</param>
            <returns>A string holding the And of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIFS(System.String)">
            <summary>
            The IFS function checks whether one or more conditions are met and returns a value that corresponds to the first TRUE condition. IFS can take the place of multiple nested IF statements, and is much easier to read with multiple conditions.
            </summary>
            <param name="args">A string holding [Something is True1, Value if True1, [Something is True2, Value if True2],…[Something is True127, Value if True127]</param>
            <returns>Returns a value that corresponds to the first TRUE condition</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSwitch(System.String)">
            <summary>
            The SWITCH function evaluates an expression against a list of values and returns the result corresponding to the first matching value. If there is no match, an optional default value may be returned.
            </summary>
            <param name="args">A string holding expression, value1, result1, [default or value2, result2],…[default or value3, result3]</param>
            <returns>Returns the result corresponding to the first matching value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeOr(System.String)">
            <summary>
            Returns the inclusive Or of all values treated as logical values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers. Each item in the list is considered True if it is nonzero
            and False if it is zero.</param>
            <returns>A string holding the Or of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNot(System.String)">
            <summary>
             Flips the logical value represented by the argument.
            </summary>
            <remarks>
            The argument is
            treated as a logical expression with a non-zero value considered True and a zero value considered False.
            </remarks>
            <param name="args">A string holding either a single argument consisting of a
            cell reference, formula, or number.
            </param>
            <returns>Returns 0 if the argument evaluates to a non-zero value. Otherwise, it returns 1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeOffSet(System.String)">
            <summary>
            Returns a range that is the offset of the reference range by rows and cols.
            </summary>
            <param name="arg">reference, rows, cols, [height], [width]</param>
            <returns>A range offset.</returns>
            <remarks>The returned range is the range passed in through the reference variable offset
            by the number of rows in the rows variable and number of columns in the cols variable. If height and
            width are present in the argument list, they determine the number of rows and columns
            in the returned range. Otherwise, the dimensions of the returned range match the input range.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeTrue(System.String)">
            <summary>
            Returns the logical value True.
            </summary>
            <param name="empty">Empty string.</param>
            <returns>Logical True value string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFalse(System.String)">
            <summary>
            Returns the logical value False.
            </summary>
            <param name="empty">Empty string.</param>
            <returns>Logical False value string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAcos(System.String)">
            <summary>
            Computes angle whose cosine is the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding an angle whose cosine is the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeArabic(System.String)">
            <summary>
            Returns the Arabic value of Raman numeric
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAreas(System.String)">
            <summary>
            Returns the area of the passed in cell reference range
            </summary>
            <param name="arg">Contains one argument - reference</param>
            <returns>area of the passed in cell reference.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAsin(System.String)">
            <summary>
            Computes angle whose sine is the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding an angle whose sine is the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAsinh(System.String)">
            <summary>
            The inverse of Sinh.
            </summary>
            <param name="args">The given value.</param>
            <returns>Result of ASinh(value).</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAtan(System.String)">
            <summary>
            Computes angle whose tangent is the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the tangent of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAtan2(System.String)">
            <summary>
            The ArcTangent of the x and y values.
            </summary>
            <param name="argList">x_value and y_value.</param>
            <returns>Angle whose tangent is y_value/x_value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAtanh(System.String)">
            <summary>
            The inverse of Tanh.
            </summary>
            <param name="args">|Value| &lt; 1.</param>
            <returns>Result of ATanh(value).</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCeiling(System.String)">
            <summary>
            Computes the smallest whole number greater than or equal to the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the smallest whole number greater than or equal to the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCeilingMath(System.String)">
            <summary>
            Returns the RoundUp of the given number to the given significance
            </summary>
            <param name="args">Number, significance, mode</param>
            <returns>RoundUp number</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeColumns(System.String)">
            <summary>
            Returns the number of columns of the passed in cell reference.
            </summary>
            <param name="arg">Contains one argument - reference</param>
            <returns>number of columns.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCombin(System.String)">
            <summary>
            The number of combinations of a given number of items.
            </summary>
            <param name="argList">Number, number_items.</param>
            <returns>The number of combinations.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCombinA(System.String)">
            <summary>
            Returns the value of ComputeCombinA
            </summary>
            <param name="argList">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLog(System.String)">
            <summary>
            Computes the natural logarithm of the value in the argument.
            </summary>
            <param name="argList">A cell reference, formula, or number.</param>
            <returns>A string holding the natural logarithm of the value in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLog10(System.String)">
            <summary>
            Computes the base 10 logarithm of the value in the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the base 10 logarithm of the value in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeExp(System.String)">
            <summary>
            Computes e raised to the value of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the e raised to the value of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSqrtpi(System.String)">
            <summary>
            Returns the square root of product of given number with PI.
            </summary>
            <param name="args">Number</param>
            <returns>Sqrtpi value of given number</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSqrt(System.String)">
            <summary>
            Computes the square root of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the square root of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAbs(System.String)">
            <summary>
            Computes the absolute value of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the absolute value of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCos(System.String)">
            <summary>
            Computes the cosine of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the cosine of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAcosh(System.String)">
            <summary>
            The inverse of Cosh.
            </summary>
            <param name="args">Value >= 1.</param>
            <returns>Result of ACosh(value).</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRand(System.String)">
            <summary>
            Returns an evenly distributed random number &gt;= 0 and &lt; 1.
            </summary>
            <param name="args">Ignored. Can be empty.</param>
            <returns>
            A string holding the random number.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeTan(System.String)">
            <summary>
            Computes the tangent the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the tangent of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeTanh(System.String)">
            <summary>
            Computes the hyperbolic tangent of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the hyperbolic tangent of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.CheckCriteria(System.Char,System.String,System.String)">
            <summary>
            Checks if value of S mets the Criteria or Not.
            </summary>
            <param name="op">Operator</param>
            <param name="s">Cell</param>
            <param name="criteria">The String value to be compared</param>
            <returns> True if Value of S equals Criteria Otherwise False</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.CheckCriteria(System.Char,System.String,System.Double)">
            <summary>
            Checks if value of S mets the Criteria or Not.
            </summary>
            <param name="op">Operator</param>
            <param name="s">Cell</param>
            <param name="compare">The double value to be compare</param>
            <returns> True if Value of S mets Criteria Otherwise returns False</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSumif(System.String)">
            <summary>
            Sums the cells specified by some criteria.
            </summary>
            <param name="argList">The criteria range, the criteria, and the sum range.</param>
            <returns>A string holding the sum.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAsc(System.String)">
            <summary>
            Used to compute the value
            </summary>
            <param name="arg">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAcot(System.String)">
            <summary>
            Returns the arccotangent of a number.
            </summary>
            <param name="argList">A cell reference or number</param>
            <returns>A string containing the arccotangent of a number</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAcoth(System.String)">
            <summary>
            Returns the hyperbolic arccotangent of a number.
            </summary>
            <param name="argList">A cell reference or number</param>
            <returns>A string containing the hyperbolic arccotangent of a number</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAsech(System.String)">
            <summary>
             Returns the archyperbolic secant of an angle.
            </summary>
            <param name="argList">A cell reference or a number</param>
            <returns>A string containing the archyperbolic secant of an angle</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBase(System.String)">
            <summary>
            Retuns the number into text for the given radix base
            </summary>
            <param name="argList"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCosh(System.String)">
            <summary>
            Computes the hyperbolic cosine of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the hyperbolic cosine of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCot(System.String)">
            <summary>
            Returns the hyperbolic cosine of a number.
            </summary>
            <param name="argList">A cell reference or a number</param>
            <returns>A string containing the hyperbolic cosine of a number</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCoth(System.String)">
            <summary>
            Returns the cotangent of an angle.
            </summary>
            <param name="argList">A cell reference or a number</param>
            <returns>A string containing the cotangent of an angle</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCsc(System.String)">
            <summary>
             Returns the cosecant of an angle
            </summary>
            <param name="argList">a cell reference or number</param>
            <returns>A string containing the cosecant of an angle</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCsch(System.String)">
            <summary>
            Returns the hyperbolic cosecant of an angle.
            </summary>
            <param name="argList"></param>
            <returns>A string containing the hyperbolic cosecant of an angle</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDecimal(System.String)">
            <summary>
            Returns the decimal number of the given text to the given base.
            </summary>
            <param name="argList">text,base</param>
            <returns>Decimal number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDegrees(System.String)">
            <summary>
            Converts radians into degrees.
            </summary>
            <param name="args">Value in radians.</param>
            <returns>Degrees for the given radians.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeEven(System.String)">
            <summary>
            Rounds up to larger in magnitude even number.
            </summary>
            <param name="args">Number to be rounded.</param>
            <returns>Rounded even value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFact(System.String)">
            <summary>
            Factorial of a given number.
            </summary>
            <param name="args">The given value, x.</param>
            <returns>Factorial of x.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFactdouble(System.String)">
            <summary>
            Returns the Double factorial value for given number.
            </summary>
            <param name="args">number to find FactDouble</param>
            <returns>FactDouble of given number. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFloor(System.String)">
            <summary>
            Computes the largest whole number less than or equal to the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the largest whole number less than or equal to the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFormulaText(System.String)">
            <summary>
            Return the value of ComputeFormulaText
            </summary>
            <param name="argList">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeGcd(System.String)">
            <summary>
            Returns the largest integer that divide the given numbers without any reminders.
            </summary>
            <param name="range">number1,number2,...</param>
            <returns>Returns the GCD value of given arguments</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeHyperlink(System.String)">
            <summary>
            Create a shortcut for the link / path
            </summary>
            <param name="argList">link,name</param>
            <returns>shortcut name</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeInt(System.String)">
            <summary>
            Returns the integer value.
            </summary>
            <param name="range">Number to be truncated.</param>
            <returns>An integer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIsEven(System.String)">
            <summary>
            Determines whether the value is even or not.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True, if the value is even, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIsNumber(System.String)">
            <summary>
            Determines whether the string contains a number or not.
            </summary>
            <param name="range">String to be tested.</param>
            <returns>True if the string is a number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIsOdd(System.String)">
            <summary>
            Determines whether the value is odd or not.
            </summary>
            <param name="args">Value to be tested.</param>
            <returns>True, if the value is odd, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLcm(System.String)">
            <summary>
            returns the smallest positive integer that is a multiple of all given values.
            </summary>
            <param name="range">Number1,Number2,...</param>
            <returns>The LCM value of given aruments</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLn(System.String)">
            <summary>
            Computes the natural logarithm of the value in the argument.
            </summary>
            <param name="argList">A cell reference, formula, or number.</param>
            <returns>A string holding the natural logarithm of the value in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMdeterm(System.String)">
            <summary>
            Returns the number of columns of the passed in cell reference.
            </summary>
            <param name="arg">Contains one argument - reference</param>
            <returns>number of columns.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMInverse(System.String)">
            <summary>
            Returns the number of columns of the passed in cell reference.
            </summary>
            <param name="arg">Contains one argument - reference</param>
            <returns>number of columns.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMmult(System.String)">
            <summary>
            Returns the number of columns of the passed in cell reference.
            </summary>
            <param name="arg">Contains one argument - reference</param>
            <returns>number of columns.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMround(System.String)">
            <summary>
            Determines the number rounded to the given multiple.
            </summary>
            <param name="argList">Number, Multible both are required</param>
            <returns>Mround value of given number</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMultinomial(System.String)">
            <summary>
            Determines the Multinominal value of given range of numbers.
            </summary>
            <param name="range">Given numbers</param>
            <returns>Multinominal value of given range of numbers.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMUnit(System.String)">
            <summary>
             Returns the number of columns of the passed in cell reference.
             </summary>
             <param name="arg">Contains one argument - reference</param>
             <returns>number of columns.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeOdd(System.String)">
            <summary>
            Rounds up to larger in magnitude odd number.
            </summary>
            <param name="args">Number to be rounded.</param>
            <returns>Rounded odd value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePI(System.String)">
            <summary>
            Returns the number pi.
            </summary>
            <param name="args">Ignored. Can be empty.</param>
            <returns>A string holding the number pi.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePow(System.String)">
            <summary>
            Returns a specified number raised to the specified power.
            </summary>
            <param name="args">String containing two parameters separated by commas:
            the first being base number,
            the second being the exponent.</param>
            <returns>A string holding the value of the base number raised to the exponent.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeProduct(System.String)">
            <summary>
            Returns the product of the arguments in the list.
            </summary>
            <param name="range">List of arguments.</param>
            <returns>Product of the arguments.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeQuotient(System.String)">
            <summary>
            Returns the integer portion of division function.
            </summary>
            <param name="range">numerator, denominator to find the quotient</param>
            <returns>returns integer value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRadians(System.String)">
            <summary>
            Converts degrees into radians.
            </summary>
            <param name="args">Value in degrees.</param>
            <returns>Radians for the given degrees.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRoman(System.String)">
            <summary>
            Returns the arabic numeral to roman in TEXT format
            </summary>
            <param name="argList">Number, Form for style of roman text. 
            0 or omitted Classic. 
            1 More concise.  
            2 More concise.
            3 More concise.
            4 Simplified. 
            TRUE Classic. 
            FALSE Simplified. 
            </param>
            <returns>Retuns the Roman string of given numeric value based on the style form</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRound(System.String)">
            <summary>
            Rounds a number to a specified number of digits.
            </summary>
            <param name="argList">Number and number of digits.</param>
            <returns>Rounded number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRounddown(System.String)">
            <summary>
            Rounds a number to a specified number of digits.
            </summary>
            <param name="argList">Number and number of digits.</param>
            <returns>Rounded number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRoundup(System.String)">
            <summary>
            Rounds a number to a specified number of digits.
            </summary>
            <param name="argList">Number and number of digits.</param>
            <returns>Rounded number.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRows(System.String)">
            <summary>
            Returns the number of rows of the passed in cell reference.
            </summary>
            <param name="arg">Contains one argument.</param>
            <returns>number of rows.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSecant(System.String)">
            <summary>
            Returns the secant of an angle.
            </summary>
            <param name="argList"> A cell reference, or number.</param>
            <returns>A string conaining the secant of an angle</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSecanth(System.String)">
            <summary>
            Returns the hyperbolic secant of an angle.
            </summary>
            <param name="argList">A cell reference, or number</param>
            <returns>A string containing the hyperbolic secant of an angle.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSheet(System.String)">
            <summary>
            return the sheet number of the given value 
            </summary>
            <param name="argList">SheetName or cell or named range </param>
            <returns>sheet number</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSheets(System.String)">
            <summary>
            return the sheet number of the given values 
            </summary>
            <param name="argList">SheetName or cell or named range </param>
            <returns>sheet number</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSign(System.String)">
            <summary>
            Returns a number indicating the sign of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding a number representing the sign of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSin(System.String)">
            <summary>
            Computes the sine of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the sine of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSinh(System.String)">
            <summary>
            Computes the hyperbolic sine of the argument.
            </summary>
            <param name="args">A cell reference, formula, or number.</param>
            <returns>A string holding the hyperbolic sine of the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSum(System.String)">
            <summary>
            Returns the sum of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the sum of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSumIFS(System.String)">
            <summary>
            Returns the sum of all the cells in a range which is statisfy the given multible criteria
            </summary>
            <param name="argList">range of cells, criteria1, average_range1,...</param>
            <returns>returns the sum value of the cells.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSumsq(System.String)">
            <summary>
            Returns the sum of the square of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the sum of the squares of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSumx2my2(System.String)">
            <summary>
            Returns the sum of the differences of squares of the two ranges.
            </summary>
            <param name="range">x_range and y_range.</param>
            <returns>A string holding sum of the differences of squares.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSumx2py2(System.String)">
            <summary>
            Returns the sum of the sums of squares of the two ranges.
            </summary>
            <param name="range">x_range and y_range.</param>
            <returns>A string holding sum of the sums of squares.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSumxmy2(System.String)">
            <summary>
            Returns the sum of the squares of the differences between two ranges.
            </summary>
            <param name="range">x_range and y_range.</param>
            <returns>A string holding sum of the squares of the differences.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeTranspose(System.String)">
            <summary>
            Returns the vertical range of cells as a horizontal range, or vice versa
            </summary>
            <param name="arg">Cell refrences</param>
            <returns>value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeTruncate(System.String)">
            <summary>
            Returns the value of computeTruncate
            </summary>
            <param name="argList">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.Covariance(System.Double[],System.Double[])">
            <summary>
            Returns the sample covariance between two arrays.
            Arrays should be of equal length, and contain more than one element.
            </summary>
            <param name="array1"></param>
            <param name="array2"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.Mean(System.Double[])">
            <summary>
            Returns the mean of an array.
            </summary>
            <param name="array">Array of data for which we are calculating the mean.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.Mean(System.Double[],System.Double)">
            <summary>
            Returns the mean of an array.
            </summary>
            <param name="array">Array of data for which we are calculating the mean.  For time series, the last element (index = n-1), is the most recent.</param>
            <param name="decayFactor">In most applications, the decay factor is between 0 and 1.  Weigth on the last element in array is 1.0, the 2nd to last element d, 3rd to last d^2, ...</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.InverseSumOfGeometricSeries(System.Double,System.Int32)">
            <summary>
            Returns the inverse of the sum of a geometric series of length n, who's first element is 1.
            For decay factor d, S = 1 + d + d^2 + ... + d^(n-1). Return 1/S.
            </summary>
            <param name="decayFactor">Decay factor Typically between -1 adn +1.</param>
            <param name="length">Number of elements in the geometric series, must be positive.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GammaLn(System.Double)">
            <summary>
            Calculates the natural logarithm of gamma function.
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAvedev(System.String)">
            <summary>
            Returns the average deviation of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the average deviation of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAveragea(System.String)">
            <summary>
            Returns the simple average of all values (including text) listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the simple average of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAverageIFS(System.String)">
            <summary>
            Returns the average of all the cells in a range which is statisfy the given multible criteria
            </summary>
            <param name="argList">range of cells, criteria1, average_range1,...</param>
            <returns>returns the average value of the cells.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeChidist(System.String)">
            <summary>
            Returns the chi-squared distribution.
            </summary>
            <param name="argList">x, degrees of freedom.</param>
            <returns>The chi-squared distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeGrowth(System.String)">
            <summary>
            Returns the growth estimate using the exponential curve y = b * m^x that best fits the given points. Only the first two Excel parameters are used.
            </summary>
            <param name="range">Y_range, x_range.</param>
            <returns>returns estimated value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLogestMB(System.Double[],System.Double[],System.Double@,System.Double@)">
            <summary>
            Returns the m and b value used in exponential curve y = b * m^x.
            </summary>
            <param name="y">The set of y-values required in y = b*m^x</param>
            <param name="x">The set of x-values in y = b*m^x</param>
            <param name="b">output of b</param>
            <param name="m">output of m</param>
            <returns>returns calculated b value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeGammaln(System.String)">
            <summary>
            Returns the natural logarithm of the gamma function.
            </summary>
            <param name="argList">The value to be evaluated.</param>
            <returns>The natural logarithm of the gamma function.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeChiinv(System.String)">
            <summary>
            Returns the inverse of the chi-squared distribution.
            </summary>
            <param name="argList">x, degrees of freedom.</param>
            <returns>The inverse of the chi-squared distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeChitest(System.String)">
            <summary>
            Returns the Chi Test for independence.
            </summary>
            <param name="range">Actual_range, expected_range.</param>
            <returns>Result of Chi Test: y-intercept.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNormdist(System.String)">
            <summary>
            Returns the normal distribution.
            </summary>
            <param name="argList">x, mean, standarddev, cumulative.</param>
            <returns>The normal distribution.</returns>
            <remarks>
            Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function. The distribution value
            is computed interactively using Trapezoidal Rule to six to seven significant digits
            or 20 iteration maximum.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNormsDist(System.String)">
            <summary>
            Returns the standard normal cumulative distribution function. The distribution has a mean of 0 (zero) and a standard deviation of one.
            <para>Syntax: NORMSDIST(z)</para>
            </summary>
            <param name="argList">Z is the value for which you want the distribution.</param>
            <returns>Standard normal cumulative distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNorminv(System.String)">
            <summary>
            Returns the inverse of normal distribution.
            </summary>
            <param name="argList">P, mean, standard deviation.</param>
            <returns>Returns x such that normal distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.newnormalinv(System.Double)">
            <remarks>
             Enabled only when ExcelLikeComputations property is set to true.
             </remarks>
             <summary>
             Computes the inverse normal cumulative distribution for the given probability.
             </summary>
             <param name="p">probability</param>
             <returns>a double value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNormsInv(System.String)">
            <summary>
            Returns the inverse of the standard normal cumulative distribution. The distribution has a mean of zero and a standard deviation of one.
            <para>Syntax: NORMSINV(p)</para>
            </summary>
            <param name="argList">p is a probability corresponding to the normal distribution.</param>
            <returns>Inverse of standard normal cumulative distribution.</returns>
            <remarks>
            p should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeConfidence(System.String)">
            <summary>
            Returns a confidence interval radius.
            </summary>
            <param name="argList">Alpha, standard deviation, size.</param>
            <returns>Returns x such that normal distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCorrel(System.String)">
            <summary>
            Returns the correlation coefficient of the two sets of points.
            </summary>
            <param name="range">range1, range2.</param>
            <returns>Correlation coefficient.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCount(System.String)">
            <summary>
            Returns the count of all values (including text) listed in the argument to
            evaluate to a number.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the count of all numerical values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCounta(System.String)">
            <summary>
            Returns the count of all values (including text) listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the count of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCountblank(System.String)">
            <summary>
            Returns the count of blank cells listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the count of blank cells listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCountif(System.String)">
            <summary>
            Counts the cells specified by some criteria.
            </summary>
            <param name="argList">The criteria range, the criteria.</param>
            <returns>Number of cells meeting the criteria.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCountIFFunctions(System.String,System.Boolean)">
            <summary>
            Calculates the CountIF and CountIFS formula
            </summary>
            <param name="argList"> The criteria range, the criteria</param>
            <param name="isCountif"> If true, calculate CountIF formula. Else calculate CountIFS formula.</param>
            <returns>Number of cells meeting the criteria.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCOUNTIFS(System.String)">
            <summary>
            The COUNTIFS function applies criteria to cells across multiple ranges and counts the number of times all criteria are met.
            </summary>
            <param name="argList">The criteria range, the criteria.</param>
            <returns>Number of cells meeting the criteria</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCovar(System.String)">
            <summary>
            Returns the covariance between the two sets of points.
            </summary>
            <param name="range">range1, range2.</param>
            <returns>The covariance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCritbinom(System.String)">
            <summary>
            Returns the smallest value for which the cumulative binomial distribution is greater than or equal to a criterion value.
            </summary>
            <param name="argList">Number of trials, probability, alpha.</param>
            <returns>Returns the critical value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeExpondist(System.String)">
            <summary>
            Returns the exponential distribution.
            </summary>
            <param name="argList">x, lambda, cumulative.</param>
            <returns>The exponential distribution.</returns>
            <remarks>
            Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFdist(System.String)">
            <summary>
            Returns the F (Fisher) probability distribution.
            </summary>
            <param name="argList">x, degreesfreedom1, degreesfreedom2.</param>
            <returns>Returns the F probability distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFinv(System.String)">
            <summary>
            Returns the inverse of F distribution.
            </summary>
            <param name="argList">p, degreesfreedom1, degreesfreedom2.</param>
            <returns>Returns x such that F distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFisher(System.String)">
            <summary>
            Returns the Fisher transformation of the input variable.
            </summary>
            <param name="argList">Input variable x.</param>
            <returns>Fisher transformation of x.</returns>
            <remarks>
            X should be between -1 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFisherinv(System.String)">
            <summary>
            Returns the inverse of Fisher transformation.
            </summary>
            <param name="argList">Input variable y.</param>
            <returns>The value x such that the Fisher transformation y is x.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeForecast(System.String)">
            <summary>
            Returns a forecasted value based on two sets of points using least square fit regression.
            </summary>
            <param name="range">x, rangex, rangey.</param>
            <returns>Forecasted value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeKurt(System.String)">
            <summary>
            Returns the kurtosis of the passed in values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The kurtosis of the data.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLarge(System.String)">
            <summary>
            Returns the Kth largest value in the range.
            </summary>
            <param name="range">range, k.</param>
            <returns>Kth largest value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLognormdist(System.String)">
            <summary>
            Returns the lognormal distribution.
            </summary>
            <param name="argList">x, mean, standarddev.</param>
            <returns>The lognormal distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLoginv(System.String)">
            <summary>
            Returns the inverse of the lognormal distribution.
            </summary>
            <param name="argList">p, mean, standarddev.</param>
            <returns>Returns the value x where the lognormal distribution of x is p.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMaxa(System.String)">
            <summary>
            Returns the maximum value of all values listed in the argument including logical values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the maximum value of all values listed in the argument.</returns>
            <remarks> True is treated as 1; False is treated as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMedian(System.String)">
            <summary>
            Returns the median value in the range.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>Median value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMina(System.String)">
            <summary>
            Returns the minimum value of all values listed in the argument including logical values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of:
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the minimum value of all values listed in the argument.</returns>
            <remarks> True is treated as 1; False is treated as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMode(System.String)">
            <summary>
            Returns the most frequent value in the range.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The most frequent value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNegbinomdist(System.String)">
            <summary>
            Returns the negative binomial distribution.
            </summary>
            <param name="argList">Number of failures, success threshold, probability, cumulative.</param>
            <returns>The negative binomial distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePearson(System.String)">
            <summary>
            Returns the Pearson product moment correlation coefficient.
            </summary>
            <param name="range">Range1, range2.</param>
            <returns>Pearson product.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePercentile(System.String)">
            <summary>
            Returns the percentile position in the range.
            </summary>
            <param name="range">Range, k.</param>
            <returns>Percentile position.</returns>
            <remarks>K is a value between 0 and 1.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePercentrank(System.String)">
            <summary>
            Returns the percentage rank in the range.
            </summary>
            <param name="range">Range, x, significant digits.</param>
            <returns>Percentile position.</returns>
            <remarks>Significant digits are optional, defaulting to 3.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePermut(System.String)">
            <summary>
            The number of permutations of n items taken k at the time.
            </summary>
            <param name="argList">n, k</param>
            <returns>The number of combinations.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePoisson(System.String)">
            <summary>
            Returns the Poisson distribution.
            </summary>
            <param name="argList">x, mean, cumulative</param>
            <returns>Returns the exponential distribution.</returns>
            <remarks>
            Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeProb(System.String)">
            <summary>
            Returns the probability that a value in the given range occurs.
            </summary>
            <param name="range">xrange1, prange2, lowerbound, upperbound.</param>
            <returns>The probability.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeQuartile(System.String)">
            <summary>
            Returns the quartile position in the range.
            </summary>
            <param name="range">Range, q.</param>
            <returns>Percentile position.</returns>
            <remarks>Q is 0, 1, 2, 3, 4.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRank(System.String)">
            <summary>
            Returns the rank of x in the range.
            </summary>
            <param name="range">X, range, order.</param>
            <returns>Rank of x.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRsq(System.String)">
            <summary>
            Returns the square of the Pearson product moment correlation coefficient.
            </summary>
            <param name="range">Range1, range2.</param>
            <returns>Square of the Pearson product.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSkew(System.String)">
            <summary>
            Returns the skewness of a distribution.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>Skewness of a distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSlope(System.String)">
            <summary>
            Returns the slope of the least square fit line through the given points.
            </summary>
            <param name="range">Y_range, x_range.</param>
            <returns>Y-intercept for the given points.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSmall(System.String)">
            <summary>
            Returns the kth smallest value in the range.
            </summary>
            <param name="range">Range, k.</param>
            <returns>Kth smallest value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeStandardize(System.String)">
            <summary>
            Returns a normalized value.
            </summary>
            <param name="argList">X, mean, stddev.</param>
            <returns>Normalized value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeStdev(System.String)">
            <summary>
            Returns the sample standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The sample standard deviation.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeStdeva(System.String)">
            <summary>
            Returns the sample standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The sample standard deviation.</returns>
            <remarks>Treats True as 1; False as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeStdevaP(System.String)">
            <summary>
            Returns the sample standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The sample standard deviation.</returns>
            <remarks>Treats True as 1; False as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeStdevp(System.String)">
            <summary>
            Returns the population standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The population standard deviation.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeStdevpa(System.String)">
            <summary>
            Returns the population standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The population standard deviation.</returns>
            <remarks>Treats True as 1; False as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSteyx(System.String)">
            <summary>
            Returns the standard error of the least square fit line through the given points.
            </summary>
            <param name="range">Y_range, x_range.</param>
            <returns>Standard error.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeTrimmean(System.String)">
            <summary>
            Returns the mean of the range after removing points on either extreme.
            </summary>
            <param name="range">Range, percent.</param>
            <returns>Kth smallest value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeVar(System.String)">
            <summary>
            Returns sample variance of the listed values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The sample variance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeVara(System.String)">
            <summary>
            Returns sample variance of the listed values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The sample variance.</returns>
            <remarks> True is treated as 1; False is treated as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeVarp(System.String)">
            <summary>
            Returns population variance of the listed values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The population variance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeVarpa(System.String)">
            <summary>
            Returns population variance of the listed values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The population variance.</returns>
            <remarks> True is treated as 1; False is treated as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeWeibull(System.String)">
            <summary>
            Returns the Weibull distribution.
            </summary>
            <param name="argList">X, alpha, beta, cumulative.</param>
            <returns>The Weibull distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeZtest(System.String)">
            <summary>
            Returns the one-tailed probability value of a Z test.
            </summary>
            <param name="range">Range, mu, sigma.</param>
            <returns>Kth smallest value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMax(System.String)">
            <summary>
            Returns the maximum value of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the maximum value of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMINIFS(System.String)">
            <summary>
            The MINIFS function returns the minimum value among cells specified by a given set of conditions or criteria.
            </summary>
            <param name="argList">range of cells, criteria1, average_range1,...</param>
            <returns>returns the Minimum value of the cells.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMAXIFS(System.String)">
            <summary>
            The MAXIFS function returns the maximum value among cells specified by a given set of conditions or criteria.
            </summary>
            <param name="argList">range of cells, criteria1, average_range1,...</param>
            <returns>returns the Maximum value of the cells.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSubTotal(System.String)">
            <summary>
            Returns the subtotal of input range(s).
            </summary>
            <param name="args">A list of cell references(seperated by commas)</param>
            <returns>Subtotal of range(s)</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMin(System.String)">
            <summary>
            Returns the minimum value of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the minimum value of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeAvg(System.String)">
            <summary>
            Returns the simple average of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>A string holding the simple average of all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeHarmean(System.String)">
            <summary>
            Returns the harmonic mean of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The harmonic mean all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeHypgeomdist(System.String)">
            <summary>
            Returns the hypergeometric distribution.
            </summary>
            <param name="argList">Number of sample successes, number of sample, number of population successes, number of population.</param>
            <returns>Returns the gamma distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeHypgeomOdist(System.String)">
            <summary>
            Returns the hypergeometric distribution.
            </summary>
            <param name="argList">Number of sample successes, number of sample, number of population successes, number of population.</param>
            <returns>Returns the gamma distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIf(System.String)">
            <summary>
            Conditionally computes one of two alternatives depending upon a logical expression.
            </summary>
            <remarks>
            The first argument is
            treated as a logical expression with a non-zero value considered True and a zero value considered False.
            The value of only one of the alternatives is computed depending upon the logical expression.
            </remarks>
            <param name="args">A string holding a list of three arguments.
            </param>
            <returns>Returns a string holding the second argument if the first argument is True (non-zero). Otherwise, it returns a string holding the third argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIfError(System.String)">
            <summary>
            Returns a value you specify if a formula evaluates to an error
            otherwise, returns the result of the formula.
            </summary>
            <param name="args">String to be tested.</param>
            <returns>Retuns the error string</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIntercept(System.String)">
            <summary>
            Returns the y-intercept of the least square fit line through the given points.
            </summary>
            <param name="range">y_range, x_range.</param>
            <returns>y-intercept for the given points.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBinomdist(System.String)">
            <summary>
            Returns the binomial distribution.
            </summary>
            <param name="argList">Number of successes, number of trials, probability, cumulative.</param>
            <returns>The binomial distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSkewP(System.String)">
            <summary>
            Returns the skewness of a distribution based on a population a characterization of the degree of asymmetry of a distribution around its mean.
            </summary>
            <param name="range"> numbers or names, arrays, or reference that contain numbers</param>
            <returns>Skewness of a distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCovarianceP(System.String)">
            <summary>
            Returns population covariance, the average of the products of deviations for each data point pair in two data sets. 
            </summary>
            <param name="range">range1, range2.</param>
            <returns>The covarianceP</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCovarianceS(System.String)">
            <summary>
            Returns the sample covariance, the average of the products of deviations for each data point pair in two data sets.
            </summary>
            <param name="range">range1, range2.</param>
            <returns>The covariances</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePercentileInc(System.String)">
            <summary>
            Returns the percentile position in the range.
            </summary>
            <param name="range">Range, k.</param>
            <returns>Percentile position.</returns>
            <remarks>K is a value between 0 and 1.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePercentrankExc(System.String)">
            <summary>
            Returns the percentage rank Exc in the range.
            </summary>
            <param name="range">Range, x, significant digits.</param>
            <returns>Percentile position.</returns>
            <remarks>Significant digits are optional, defaulting to 3.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePercentileExc(System.String)">
            <summary>
            Returns the percentile position in the range.
            </summary>
            <param name="range">Range, k.</param>
            <returns>Percentile position.</returns>
            <remarks>K is a value between 0 and 1.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePercentrankInc(System.String)">
            <summary>
            Returns the percentage rank Inc in the range.
            </summary>
            <param name="range">Range, x, significant digits.</param>
            <returns>Percentile position.</returns>
            <remarks>Significant digits are optional, defaulting to 3.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeStdevaS(System.String)">
            <summary>
            Returns the sample standard deviation.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.
            </param>
            <returns>The sample standard deviation.</returns>
            <remarks>Treats True as 1; False as 0.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeVarPAdv(System.String)">
            <summary>
            Returns sample variance of the listed values.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The sample variance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeVarSAdv(System.String)">
            <summary>
            Calculates variance based on the entire population (ignores logical values and text in the population).
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The sample variance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePermutationA(System.String)">
            <summary>
            Returns the number of permutations for a given number of objects (with repetitions) that can be selected from the total objects.
            </summary>
            <param name="argList">n, k</param>
            <returns>The number of combinations.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNormOdist(System.String)">
            <summary>
            Returns the normal distribution for the specified mean and standard deviation. 
            </summary>
            <param name="argList">x, mean, standarddev, cumulative.</param>
            <returns>The normal distribution.</returns>
            <remarks>
            Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNormOinv(System.String)">
            <summary>
            Returns the inverse of the normal cumulative distribution for the specified mean and standard deviation.
            </summary>
            <param name="argList">P, mean, standard deviation.</param>
            <returns>Returns x such that normal distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNormOsODist(System.String)">
            <summary>
            Returns the standard normal cumulative distribution function. The distribution has a mean of 0 (zero) and a standard deviation of one.
            <para>Syntax: NORMSDIST(z)</para>
            </summary>
            <param name="argList">Z is the value for which you want the distribution.</param>
            <returns>Standard normal cumulative distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.StandardNormalProbabilityDensity(System.Double)">
            <summary>
            Returns the PDF of the standard normal distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.StandardNormalCumulativeDistributionFunction(System.Double)">
            <summary>
            Returns the CDF of the standard normal distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.StandardNormalProbabilityDensityFunction(System.Double)">
            <summary>
            Returns the PDF of the standard normal distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.StandardNormalCumulativeDistribution(System.Double)">
            <summary>
            Returns the CDF of the standard normal distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.StandardNormalCumulativeDistributionFunctionInverse(System.Double)">
            <summary>
            Returns the inverse of the CDF of the standard normal distribution.
            </summary>
            <param name="p">Cumulative probability of the distribution. p is between 0 and 1.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNormOsOInv(System.String)">
            <summary>
            Returns the inverse of the standard normal cumulative distribution. The distribution has a mean of zero and a standard deviation of one.
            <para>Syntax: NORMSINV(p)</para>
            </summary>
            <param name="argList">p is a probability corresponding to the normal distribution.</param>
            <returns>Inverse of standard normal cumulative distribution.</returns>
            <remarks>
            p should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeWeiBullODist(System.String)">
            <summary>
            Calculates the Weibull Probability Density Function or the Weibull Cumulative Distribution Function for a supplied set of parameters.
            </summary>
            <param name="argList">x, alpha, beta, cumulative.</param>
            <returns>Returns the calculated weibull distribution.</returns>
            <remarks>
            cumulative =  A logical argument which denotes the type of distribution to be used
            TRUE	   =  Weibull Cumulative Distribution Function
            FALSE	   =  Weibull Probability Density Function
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeExponODist(System.String)">
            <summary>
            Returns the exponential distribution.
            </summary>
            <param name="argList">x, lambda, cumulative.</param>
            <returns>The exponential distribution.</returns>
            <remarks>
            Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GammaInv(System.Double,System.Double,System.Double)">
            <summary>
            Used to calculate the inverse of gamma cummulative distribution
            </summary>
            <param name="p"></param>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GammaInvInitialState(System.Double,System.Double,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Used to calculate the inverse gamma distribution at inital stage.
            </summary>
            <param name="a"></param>
            <param name="p"></param>
            <param name="beginX"></param>
            <param name="beginY"></param>
            <param name="endX"></param>
            <param name="endY"></param>
            <param name="di"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GammaInvMiddleState(System.Double,System.Double,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Used to calculate the inverse gamma distribution at middle stage.
            </summary>
            <param name="a"></param>
            <param name="p"></param>
            <param name="beginX"></param>
            <param name="beginY"></param>
            <param name="endX"></param>
            <param name="endY"></param>
            <param name="di"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GammaInvFinalState(System.Double,System.Double,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Used to calculate the inverse gamma distribution at final stage.
            </summary>
            <param name="a"></param>
            <param name="p"></param>
            <param name="beginX"></param>
            <param name="beginY"></param>
            <param name="endX"></param>
            <param name="endY"></param>
            <param name="di"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GammaInvUpperIncomplete(System.Double,System.Double)">
            <summary>
            Used to calculate the upper incomplete integral of inverse gamma function.
            </summary>
            <param name="a"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GammaLowerIncomplete(System.Double,System.Double)">
            <summary>
            Used to calculate the lower incomplete integral of gamma function.
            </summary>
            <param name="a"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GammaUpperIncomplete(System.Double,System.Double)">
            <summary>
            Used to calculate the upper incomplete integral of gamma function.
            </summary>
            <param name="a"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GammaDistCummulative(System.Double,System.Double,System.Double)">
            <summary>
            Used to calculate the CDF(Cummulative Distribution Function) of Gamma distribution.
            </summary>
            <param name="a">Alpha</param>
            <param name="b">Beta</param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GammaDistProbability(System.Double,System.Double,System.Double)">
            <summary>
            Used to calculate the PDF(Probability Distribution Function) of Gamma distribution.
            </summary>
            <param name="a">Alpha</param>
            <param name="b">Beta</param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeGammadist(System.String)">
            <summary>
            Returns the gamma distribution.
            </summary>
            <param name="argList">X, alpha, beta, cumulative.</param>
            <returns>The gamma distribution.</returns>
            <remarks>
            X, alpha, and beta should be positive real numbers. Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function. The distribution value
            is computed interactively using Trapezoidal Rule to six to seven significant digits
            or 20 iteration maximum.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeGammainv(System.String)">
            <summary>
            Returns the inverse of gamma distribution.
            </summary>
            <param name="argList">p, alpha, beta</param>
            <returns>Returns x such that gamma distribution at x is p.</returns>
            <remarks>
            P, alpha, and beta should be positive real numbers, with p between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeGeomean(System.String)">
            <summary>
            Returns the geometric mean of all values listed in the argument.
            </summary>
            <param name="range">A string holding a list (separated by commas) of
            cell references,
            formulas, or numbers.</param>
            <returns>The geometric mean all values listed in the argument.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeGammaOdist(System.String)">
            <summary>
            Returns the gamma distribution.
            </summary>
            <param name="argList">X, alpha, beta, cumulative.</param>
            <returns>The gamma distribution.</returns>
            <remarks>
            X, alpha, and beta should be positive real numbers. Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function. The distribution value
            is computed interactively using Trapezoidal Rule to six to seven significant digits
            or 20 iteration maximum.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeGammaOinv(System.String)">
            <summary>
            Returns the inverse of gamma distribution.
            </summary>
            <param name="argList">p, alpha, beta</param>
            <returns>Returns x such that gamma distribution at x is p.</returns>
            <remarks>
            P, alpha, and beta should be positive real numbers, with p between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeGammaln0Precise(System.String)">
            <summary>
            Returns the natural logarithm of the gamma function.
            </summary>
            <param name="argList">The value to be evaluated.</param>
            <returns>The natural logarithm of the gamma function.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeTOInv(System.String)">
             <summary>
            Returns the Student's t-distribution. 
             </summary>
             <param name="argList">x, degreesfreedom1.</param>
             <returns>Returns the Student's t-distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.TCumulativeDistributionInverse(System.Double,System.Int32)">
            <summary>
            Returns the inverse of the CDF of the Student's t distribution.
            For k = 3, and 5+ the solution is an approximation. 
            </summary>
            <param name="p">Cumulative probability of the distribution. p is between 0 and 1.</param>
            <param name="k">Degrees of freedom.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.TProbabilityDensity(System.Double,System.Int32)">
            <summary>
            Returns the PDF of Student's t distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
            <param name="k">Degrees of freedom.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.TCumulativeDensity(System.Double,System.Int32)">
            <summary>
            Returns the CDF of Student's t distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
            <param name="k">Degrees of freedom.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFOinvORt(System.String)">
            <summary>
            Returns the inverse of F distribution.
            </summary>
            <param name="argList">p, degreesfreedom1, degreesfreedom2.</param>
            <returns>Returns x such that F distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBinomOInv(System.String)">
            <summary>
            Returns the smallest value for which the cumulative binomial distribution is greater than or equal to a criterion value.
            </summary>
            <param name="argList">Number of trials, probability, alpha.</param>
            <returns>Returns the critical value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLognormOinv(System.String)">
            <summary>
            Returns the inverse of the lognormal distribution.
            </summary>
            <param name="argList">p, mean, standarddev.</param>
            <returns>Returns the value x where the lognormal distribution of x is p.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLognormOdist(System.String)">
            <summary>
            Returns the lognormal distribution.
            </summary>
            <param name="argList">x, mean, standarddev.</param>
            <returns>The lognormal distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeConfidenceOnorm(System.String)">
            <summary>
            Returns a confidence interval radius.
            </summary>
            <param name="argList">Alpha, standard deviation, size.</param>
            <returns>Returns x such that normal distribution at x is p.</returns>
            <remarks>
            P should be between 0 and 1.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeChisqOdistORt(System.String)">
            <summary>
             Returns the chi-squared distribution.
             </summary>
             <param name="argList">x, degrees of freedom.</param>
             <returns>The chi-squared distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFOdist(System.String)">
            <summary>
            Returns the F probability distribution.
            </summary>
            <param name="argList">x, degreesfreedom1, degreesfreedom2.</param>
            <returns>Returns the F probability distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.FProbabilityDensity(System.Double,System.Int32,System.Int32)">
            <summary>
            Returns the PDF of the F distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
            <param name="k1">Degrees of freedom for numerator chi-sqared distribution. k1 > 0.</param>
            <param name="k2">Degrees of freedom for denominator chi-sqared distribution. k2 > 0.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.FCumulativeDensity(System.Double,System.Int32,System.Int32)">
            <summary>
            Returns the CDF of the F distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
            <param name="k1">Degrees of freedom for numerator chi-sqared distribution.</param>
            <param name="k2">Degrees of freedom for denominator chi-sqared distribution.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.BetaFunction(System.Double,System.Double)">
            <summary>
            Euler integral. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GammaFunction(System.Double)">
            <summary>
            Integral from 0 to infinity of e^(-t) * t^(z-1) dt
            </summary>
            <param name="z">If z > 143 the return value will exceed the double.MaxValue. The function will throw an exception.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.RIBetaFunction(System.Double,System.Double,System.Double)">
            <summary>
            To get the CDF of the beta distribution.
            </summary>
            <param name="x"></param>
            <param name="a"></param>
            <param name="b"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.IBetaFunction(System.Double,System.Double,System.Double)">
            <summary>
            Euler integral. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFOdistORt(System.String)">
            <summary>
            Returns the F (Fisher) probability distribution.
            </summary>
            <param name="argList">x, degreesfreedom1, degreesfreedom2.</param>
            <returns>Returns the F probability distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeChisqOdist(System.String)">
            <summary>
            Returns the chi-squared distribution.
            </summary>
            <param name="argList">x, degrees of freedom.</param>
            <returns>The chi-squared distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeChisqOinv(System.String)">
            <summary>
            Returns the inverse of the chi-squared distribution.
            </summary>
            <param name="argList">x, degrees of freedom.</param>
            <returns>The inverse of the chi-squared distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeChisqOTest(System.String)">
            <summary>
            Returns the Chi Test for independence.
            </summary>
            <param name="range">Actual_range, expected_range.</param>
            <returns>Result of Chi Test: y-intercept.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeChisqOinvORt(System.String)">
            <summary>
            Returns the inverse of the chi-squared distribution.
            </summary>
            <param name="argList">x, degrees of freedom.</param>
            <returns>The inverse of the chi-squared distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBinomOdist(System.String)">
            <summary>
            Returns the binomial distribution.
            </summary>
            <param name="argList">Number of successes, number of trials, probability, cumulative.</param>
            <returns>The binomial distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeZOtest(System.String)">
            <summary>
            Returns the one-tailed probability value of a Z test.
            </summary>
            <param name="range">Range, mu, sigma.</param>
            <returns>Kth smallest value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRankOAvg(System.String)">
            <summary>
            Returns the rank of x in the range.
            </summary>
            <param name="range">X, range, order.</param>
            <returns>Rank of x.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRankOEq(System.String)">
            <summary>
            Returns the rank of x in the range.
            </summary>
            <param name="range">X, range, order.</param>
            <returns>Rank of x.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIHDIST(System.String)">
            <summary>
            The Irwin-Hall distribution results from the sum on n independent standard uniform variables
            </summary>
            <param name="range">The value at which to evaluate the distribution.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.IHProbDens(System.Double,System.Int32)">
            <summary>
            The Irwin-Hall distribution results from the sum on n independent standard uniform variables
            </summary>
            <param name="x">The value at which to evaluate the distribution.</param>
            <param name="n">The number of standard uniform variables.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.Combinations(System.Int32,System.Int32)">
            <summary>
            Returns the number of possible combinations of k objects from a set of n object. The order of the chosen objects does not matter.
            </summary>
            <param name="n">Number of objects</param>
            <param name="k">Number of objects chosen</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.Factorial(System.Int32)">
            <summary>
            Returns n! 
            0! = 1,otherwise n! = n * (n-1) * (n-2) * ... * 2 * 1,
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeUnidist(System.String)">
            <summary>
            Returns the PDF of the uniform distribution.
            </summary>
            <param name="argList">Number of successes, number of trials, probability, cumulative.</param>
            <returns>The binomial distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.UniProbDens(System.Double,System.Double,System.Double)">
            <summary>
            Returns the PDF of the uniform distribution.
            </summary>
            <param name="x">Value at which the distribution is evaluated.</param>
            <param name="min">Minimum value of the distribution.</param>
            <param name="max">Maximum value of the distribution.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeQuartileOExc(System.String)">
            <summary>
            Returns the quartile position in the range.
            </summary>
            <param name="range">Range, q.</param>
            <returns>Percentile position.</returns>
            <remarks>Q is 0, 1, 2, 3, 4.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeQuartileOInc(System.String)">
            <summary>
            Returns the quartile position in the range.
            </summary>
            <param name="range">Range, q.</param>
            <returns>Percentile position.</returns>
            <remarks>Q is 0, 1, 2, 3, 4.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNegbinomODist(System.String)">
            <summary>
            Returns the negative binomial distribution.
            </summary>
            <param name="argList">Number of failures, success threshold, probability, cumulative.</param>
            <returns>The negative binomial distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputePoissonODist(System.String)">
            <summary>
            Returns the Poisson distribution.
            </summary>
            <param name="argList">x, mean, cumulative</param>
            <returns>Returns the exponential distribution.</returns>
            <remarks>
            Cumulative should be either
            True if you want to return the value of the distribution function or False
            if you want to return the value of the density function.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeDelta(System.String)">
            <summary>
            Compares the given two values
            </summary>
            <param name="argList">Two Numbers to be compared.</param>
            <returns>Returns the result of the comparision in the form of 0 or 1</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeGestep(System.String)">
            <summary>
            Compares the given two values
            </summary>
            <param name="argList">Two Numbers to be compared.</param>
            <returns>Returns the result of the comparision in the form of 0 or 1</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeBetaDist(System.String)">
            <summary>
            Returns the beta distribution.
            </summary>
            <param name="argList">x, degreesfreedom1, degreesfreedom2.</param>
            <returns>Returns the beta distribution.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.BetaCumulativeDist(System.Double,System.Double,System.Double)">
            <summary>
            Returns the Beta cumulative density function.
            </summary>
            <param name="x">Value of the random variable for which the CDF is beign evaluated. x is between 0 and 1.</param>
            <param name="a">First shape parameter.</param>
            <param name="b">Second shape parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.BetaProbabilityDens(System.Double,System.Double,System.Double)">
            <summary>
            Returns the Beta probability density function.
            </summary>
            <param name="x">Value of the random variable for which the PDF is beign evaluated. x is between 0 and 1.</param>
            <param name="a">Number of trials.</param>
            <param name="b">Number of times the event occurs in n trials.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.TranslateText(System.String,System.String)">
            <summary>
            Return the value of TranslateText
            </summary>
            <param name="input">value</param>
            <param name="languagePair">language</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeCode(System.String)">
            <summary>
            Return the numeric code for first char of text
            </summary>
            <param name="argList">text</param>
            <returns>numeric code</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFindB(System.String)">
            <summary>
            Finds the first occurrence of one string in another string.
            </summary>
            <param name="arg">Conatins two or three arguments. The first argument is the string
            to find. The second string is the string that is being searched. The third argument
            is the start location in the second string for the search.</param>
            <returns>The location of the found string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLeftB(System.String)">
            <summary>
            Returns the left so many characters in the given string.
            </summary>
            <param name="range">Contains the string and the number of characters.</param>
            <returns>A left sub string..</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeJis(System.String)">
            <summary>
            Used to compute the JIS function
            </summary>
            <param name="arg">arguments</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeLenB(System.String)">
            <summary>
            Returns the length of the given string.
            </summary>
            <param name="range">Contains the string.</param>
            <returns>An integer length.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeMidB(System.String)">
            <summary>
            Returns a substring of the given string.
            </summary>
            <param name="range">Contains the original string, start position of the substring,
            and the number of characters in the substring.</param>
            <returns>A substring.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRightB(System.String)">
            <summary>
            Returns the right so many characters in the given string.
            </summary>
            <param name="range">Contains the string and the number of characters.</param>
            <returns>A right substring.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeNumberValue(System.String)">
            <summary>
            Convert the text to number
            </summary>
            <param name="argList">text, </param>
            <returns>decimal separator,group separator </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeProper(System.String)">
            <summary>
            Returns the text like first letter with upper letter  in each word
            </summary>
            <param name="argList">Text</param>
            <returns>proper text</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeReplace(System.String)">
            <summary>
            Replace the part of the text with a new text from orginal text
            </summary>
            <param name="argList">Text,Start index, Number of char to replace, new text </param>
            <returns>replaced string</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeRept(System.String)">
            <summary>
            Returns the number of repeated text
            </summary>
            <param name="argList">text, repeated count</param>
            <returns>text</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeSearchB(System.String)">
            <summary>
            Returns the number of the starting position of the first string from the second string.
            </summary>
            <param name="argList">first strring, second string and starting position</param>
            <returns>index of the string</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeUniChar(System.String)">
            <summary>
            Returns the Unicode char for the respective numeric value
            </summary>
            <param name="argList">Number</param>
            <returns>unicode char</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeUniCode(System.String)">
            <summary>
            Returns the corresponding number code for the first char of string.
            </summary>
            <param name="argList">text</param>
            <returns>numeric code</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeWebService(System.String)">
            <summary>
            Return the XML content of the given document
            </summary>
            <param name="argList">web link</param>
            <returns>XML data</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeEncodeURL(System.String)">
            <summary>
            Returns the encode url of the given text
            </summary>
            <param name="argList">text</param>
            <returns>returns the EncodeURL</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeFilterXml(System.String)">
            <summary>
            Filter the value from XML document
            </summary>
            <param name="argList">XML content</param>
            <returns>value</returns>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.FormulaErrorStrings">
            <summary>
            String array that holds the strings used in error messages within the Formula Engine.
            </summary>
            <remarks>If you want to change the error messages displayed within the Formula Engine,
            you can set the new strings into the appropriate position in the FormulaErrorStrings 
            array. You should assign your new
            strings to the corresponding positions. 
            </remarks>
            <example>Here is the code that shows position of each string in FormulaErrorStrings:
            <code lang="C#">
            	public string[] FormulaErrorStrings = new string[]
            	{
            		"binary operators cannot start an expression",	//0
            		"cannot parse",									//1
            		"bad library",									//2
            		"invalid char in front of",						//3
            		"number contains 2 decimal points",				//4
            		"expression cannot end with an operator",		//5
            		"invalid characters following an operator",		//6
            		"invalid character in number",					//7
            		"mismatched parentheses",						//8
            		"unknown formula name",							//9
            		"requires a single argument",					//10
            		"requires 3 arguments",							//11
            		"invalid Math argument",						//12
            		"requires 2 arguments",							//13
            		"bad index",									//14
            		"too complex",									//15
            		"circular reference: ",							//16
            		"missing formula",								//17
            		"improper formula",								//18
            		"invalid expression",							//19
            		"cell empty"									//20
            		"bad formula",									//21
            		"empty expression",								//22
            		"Virtual Mode required - set UsesVirtualDataSource", //23
            		"mismatched string quotes",                     //24
            		"wrong number of arguments",                    //25
            		"invalid arguments",							//26
            		"iterations do not converge",                   //27
            		"Control named '{0}' is already registered",    //28
                    "Calculation overflow",							//29
                    "missing operand"							    //30
            	};
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.CheckForStringTIC(System.String)">
            <summary>
            This method check "\"in the string and removes if the string contains  "\"\.
            </summary>
            <param name="text"> input string.</param>
            <returns> returns The parsed string value without the "\"\</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.CheckIfScopedRange(System.String,System.String@)">
            <summary>
            Check NameRange scope 
            This metod will helps to find the name range scope.
            </summary>
            <param name="text"></param>
            <param name="scopedRange"></param>
            <returns>True when scope as worksheet level</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.MarkLibraryFormulas(System.String@)">
            <summary>
            Tokenizes all library references.
            </summary>
            <remarks>
            Accepts a string such as Sin(A1+A2), and tokenizes it into
            bqSIN[A1A2a]b which serves as input to ComputedValue.
            </remarks>
            <param name="formula">Formula to be tokenized.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.SetDirty(Syncfusion.Windows.Forms.CellGrid.GridFormulaTag)">
            <summary>
            Marks the underlying formula as dirty, indicating it needs to be recomputed. It does this by setting the Text property to null.
            </summary>
            <param name="tag">The GridFormulaTag to be marked as not computed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GetFormulaArrayBounds(System.String,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Return the value of arraybounds as boolean
            </summary>
            <param name="currentCell">current cell</param>
            <param name="arrayHeight">height</param>
            <param name="arrayWidth">width</param>
            <param name="firstRowIndex">firstrowindex</param>
            <param name="firstColIndex">firstcolumnindex</param>
            <param name="lastRowIndex">lastrowindex</param>
            <param name="lastColIndex">lastcolumnindex</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GetValueFromParentObject(Syncfusion.Windows.Forms.CellGrid.ICalcData,System.Int32,System.Int32)">
            <summary>
            Conditionally gets either the formula value or the cell
            value depending upon whether the requested cell is a FormulaCell.
            </summary>
            <param name="grd">The ICalcData object holding the requested cell.</param>
            <param name="row">Row index of the requested cell.</param>
            <param name="col">Column index of the requested cell.</param>
            <returns>String holding either the cell value or the computed formula value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ComputeIndex(System.String)">
            <summary>
            Returns the value at a specified row and column from within a given range.
            </summary>
            <param name="arg">look_range, row, col</param>
            <returns>The value.</returns>
            <remarks>
            Only the array form of this function is supported.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.FormulaErrorStringCheck(System.String,Syncfusion.Windows.Forms.CellGrid.FormulaEngine.FormulaArgumentType)">
            <summary>
            A method that checks the possible cases for error string(invalid arguments for formula).
            </summary>
            <param name="args">The arguments of formula.</param>
            <param name="argumentType">The formula's argument type.</param>
            <returns>Returns the Error string if formula has invalid arguments </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.IsEmpty(System.String)">
            <summary>
            Helper method used to find whether given string is empty or not.
            </summary>
            <param name="s">string value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.HandleSheetRanges(System.String@,Syncfusion.Windows.Forms.CellGrid.GridSheetFamilyItem)">
             <summary>
             Method handle the sheet range notation.
             </summary>
             Excel supports sheet range notation such as
             = SUM( sheet1:sheet3!A1 ) + Sum( sheet1:sheet3!B1:B4 ).
             For backward compatibility with earlier versions that did
             not support this sheet range notation, you can set
             this SupportsSheetRanges false.
            
             This implementation replaces a sheet range (sheet1:sheet3!B1:B4) with
             list of ranges (sheet1!B1:B4,sheet2!B1:B4,sheet3!B1:B4).
             <param name="text"></param>
             <param name="family"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GetValueFromGrid(System.String,System.Boolean)">
            <summary>
            Returns the value of specified cell in a Grid.
            </summary>
            <param name="cell1">Cell address</param>
            <param name="calculateFormula">If true, compute the formula and returns calculated result. 
            Else, simply returns the value of the cell.</param>
            <returns>value of the cell</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.IsCellReference(System.String)">
            <summary>
            Determines whether the arg is a valid cell name.
            </summary>
            <param name="args">Cell name.</param>
            <returns>True is the arg is a valid cell name, false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GetCellsFromArgs(System.String)">
            <summary>
            Accepts an argument string and returns a string array of cells.
            </summary>
            <remarks>
            Converts arguments in these forms to a string array of individual cells.<para/>
            	A1,A2,B4,C1,...,D8<para/>
            	A1:A5<para/>
            	A1:C5<para/>
            </remarks>
            <param name="args">String containing a cell range.</param>
            <returns>String array of cells.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GetValueFromArg(System.String)">
            <summary>
            Computes the value contained in the argument.
            </summary>
            <remarks>
            This method takes the argument and checks whether it is a 
            parsed formula, raw number, or cell reference like A21.
            The return value is a string that holds the computed value of 
            the passed-in argument.
            </remarks>
            <param name="arg">A parsed formula, raw number, or cell reference.</param>
            <returns>A string with the computed number in it.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.GetValueFromArg(System.String,System.Boolean)">
            <summary>
            Computes the value contained in the argument.
            </summary>
            <remarks>
            This method takes the argument and checks whether it is a 
            parsed formula, raw number, or cell reference like A21.
            The return value is a string that holds the computed value of 
            the passed-in argument.
            </remarks>
            <param name="arg">A parsed formula, raw number, or cell reference.</param>
            <param name="calculateHiddenRange">If False, this method returns the empty 
            string if the arg is a string. If True, this method will return the string value.</param>
            <returns>A string with the arg value in it.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.SplitArgsPreservingQuotedCommas(System.String)">
            <summary>
            Returns an array of argument strings from a single string where the arguments are delimited by <see cref="P:Syncfusion.Calculate.CalcEngine.ParseArgumentSeparator"/>.
            </summary>
            <param name="args">Contains the argument list.</param>
            <returns>A string array of arguments.</returns>
            <remarks>This method properly preserves any quoted strings that contain the <see cref="P:Syncfusion.Calculate.CalcEngine.ParseArgumentSeparator"/> character.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.StripTics(System.String)">
            <summary>
            Removes outer quote marks from a string with no inner quote marks.
            </summary>
            <param name="s">The string with possible outer quote marks.</param>
            <returns>The string with any outer quote marks removed.</returns>
            <remarks>This is a utility method that removes outer quotes on a string.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.MarkNamedRanges(System.String@)">
            <summary>
            Replaces namedranges with their values.
            </summary>
            <remarks>
            Accepts a string such as Sin(SumRange), and tokenizes it into
            bqSIN[A1A4a]b which serves as input to ComputedValue.
            </remarks>
            <param name="argList">argList containing named ranges.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.SetNamedRangeDependency(System.String,System.String)">
            <summary>
            Adds a cell to the DependentNamedRangeCells list.
            </summary>
            <param name="key">The named range.</param>
            <param name="cell1">The cell (such as C11 or AJ232).</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.AddNamedRange(System.String,System.String,System.String)">
            <summary>
            Adds a named range to the namedranges collection.
            </summary>
            <param name="name">The name of the range to be added.</param>
            <param name="range">The range to be added.</param>
            <param name="scope"></param>
            <returns>True if successfully added, False otherwise.</returns>
            <remarks>
            The range should be a string such as A4:C8.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.RemoveNamedRange(System.String)">
            <summary>
            Removes a range from the namedranges collection.
            </summary>
            <param name="name">The name of the range to be removed.</param>
            <returns>True is successfully remove, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.RemoveFunction(System.String)">
            <summary>
            Removes a function from the Function Library.
            </summary>
            <param name="name">The name of the function to be removed.</param>
            <returns>True if successfully removed, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.FormulaEngine"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.CellGrid.FormulaEngine"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.WeekEndType">
            <summary>
            Gets the weekend type
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.UseDatesInCalculations">
            <summary>
            Gets or sets whether dates can be used as operands in calculations. The default value is false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.RethrowParseExceptions">
            <summary>
            Gets / sets whether the engine throws an exception when
            parsing fails with an unknown function error.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.NativeFormats">
            <summary>
            The List holds the formats of a Chinese Language.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.EnableLookupTableCaching">
            <summary>
            Gets or sets whether lookup tables used in the VLookUp and HLookUp functions are cached.
            </summary>
            <remarks>
            Depending upon your use case, caching look up tables can greatly speed up calculations involving HLookUp
            and VLookUp. If you make multiple calls to these functions passing in the same look up tables, and if these
            look up tables are relatively static (don't dynamically change as the look ups are taking place), then caching
            these tables will likely improve performance.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ParseArgumentSeparator">
            <summary>
            A static property that gets/sets character to be recognized by the parsing code as the delimiter for arguments in a named formula's argument list
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ParseDecimalSeparator">
            <summary>
            A static property that gets/sets the character to be recognized by the parsing engine as decimal separator for numbers.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ParseDateTimeSeparator">
            <summary>
            A static property that gets/sets the character to be recognized by the parsing engine as decimal separator for date.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.RethrowLibraryComputationExceptions">
            <summary>
            Gets / sets whether the engine Rethrows any exception
            raised during the computation of a library function.
            </summary>
            <remarks>The default value is false.</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.SupportBlanksInSheetNames">
            <summary>
            Gets or sets whether blanks are treated as significant in sheet names.
            </summary>
            <remarks>
            Earlier versions of FormulaEngine did not support the use of blanks
            in sheet names. (They were treated as insignificant.) The current version
            does treat blanks as significant. If you want to revert to the prior
            treatment of blanks in sheet names, then set this property to false.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.SuspendRefresh">
            <summary>
            Gets or sets whether to suspend recalculation from occurring more than once on RecalculateRange call or any cell value change for better performance. Default value is false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.MaximumRecursiveCalls">
            <summary>
            Specifies the maximum number of recursive calls that can be used to compute a cellvalue.
            </summary>
            <remarks>This property comes into play when you have a calculated formula cell that depends on  
            another calculated formula that depends on another calculated formula and so on. If the 
            'depends on another formula' number exceeds MaximumRecursiveCalls, you will see a Too Complex message
            displayed in the cell. The default value is 100, but you can set it higher or lower depending upon 
            your expected needs. The purpose of the limit is to avoid a circular reference locking up your
            application.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.CalculatingSuspended">
            <summary>
            Indicates whether formulas are immediately calculated as dependent cells are changed.
            </summary>
            <remarks>Use this property to suspend calculations while a series of changes 
            are made to dependent cells either by the user or programmatically. When the changes are 
            complete, set this property to False, and then call Engine.RecalculateRange to recalculate
            the affected range. See the sample in GridCellFormulaModel.CalculatingSuspended.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ForceParsingOfLibraryFunctionArguments">
            <summary>
            Gets or sets whether all function arguments are parsed using FormulaEngine.Parse.
            </summary>
            <remarks>
            If you are using NamedRanges or CurrentRowNotationEnabled inside function arguments, 
            you should set this property 
            to true to make sure the proper substitutions are done on the arguments.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.LibraryFunctions">
            <summary>
            Contains the current library functions.
            </summary>
            <remarks>
            This field gives you direct access to all Library Functions. 
            The function name serves as the hash key, and the function delegate
            serves as the hash value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.CurrentRowNotationEnabled">
            <summary>
            Enables / disables using row = 0 in formulas to represent the current row.
            </summary>
            <remarks> 
            When this property is set True, entering zero as a row in a formula is
            interpreted to be the current row. Using the current row notation allows
            you to sort a column in the grid and maintain the relative formula. 
            After sorting, you do have to call engine.RecalculateRange to allow the
            relative formulas to reset themselves. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.UseCommonLibrary">
            <summary>
            Gets or sets whether you want all grids to share the same collection of library functions.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ExceptionThrown">
            <summary>
            A property that is used to identify whether the exception thrown or not while calculating the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.LibraryComputationException">
            <summary>
            Gets any Exception raised during the computation of a library function
            provided RethrowLibraryComputationExceptions is set true.
            </summary>
            <remarks>
            Use the <see cref="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.LibraryComputationException"/> method to set this property
            to null to indicate that there is no pending library exception within the engine.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.TreatStringsAsZero">
            <summary>
            Gets of sets whether the CalcEngine treats nonempty strings as zeros when they are
            encountered during calculations.
            </summary>
            <remarks>
            The default value is true meaning that if a nonempty string is encountered during an arithmetic operation, it will be treated as zero.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.ExcelLikeComputations">
            <summary>
            A property that gets or sets the calculations of the <see cref="T:Syncfusion.Calculate.CalcEngine"/> computations to mimic the computations of Excel.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.DependentNamedRangeCells">
            <summary>
            Holds hashtables containing cells that depend upon namedranges.
            </summary>
            <remarks>
            The key properties in DependentNamedRangeCells are namedranges. The
            value properties are hashtables.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.NamedRangesSized">
            <summary>
            Holds namedranges in order of string length.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.FormulaParsing">
            <summary>
            Occurs whenever a string needs to be tested to determine whether it should be treated as a formula string and parsed,
            or be treated as a non-formula string. This event allows for preprocessing the unparsed formula.
            </summary>
            <remarks>This event may be raised more than once in the processing of a string into a formula.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.FormulaArgumentType">
            <summary>
            Specifies the options for checking the formula error strings.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.FormulaArgumentType.None">
            <summary>
            Formula contains null arguments. For Example:PI,RANDOM...etc
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.FormulaArgumentType.Range">
            <summary>
            Formula contains range argument. For example:MEDIAN,...etc 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.FormulaArgumentType.TwoTextWithNumber">
            <summary>
            Formula contains two text arguments with Number argument. For example:FIND,SEARCH...etc
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.FormulaArgumentType.TextWithNumber">
            <summary>
            Formula contains number and text arguments. For example:LEFT,RIGHT...etc
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.FormulaArgumentType.Numbers">
            <summary>
            Formula contains number arguments only. For example:ABS,ROUND,ROUNDDOWN,LOG...etc
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.FormulaArgumentType.Text">
            <summary>
            Formula contains text arguments only. For example:ARABIC,CLEAN...etc
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.FormulaEngine.FormulaArgumentType.Date">
            <summary>
            Formula contains Date argument. For example:DISC,...etc
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ValueChangedEventHandler">
            <summary>
            An event handler that represents the method to handle the <see cref="E:Syncfusion.Calculate.CalcSheet.ValueChanged"/>
            event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.CellGrid.ValueChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ValueChangedEventArgs">
            <summary>
            A class containing data for the ICalcData.ValueChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ValueChangedEventArgs.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            The constructor.
            </summary>
            <param name="row">One-based row index for the value.</param>
            <param name="col">One-based col index for the value.</param>
            <param name="value">the value at the specified row,col.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ValueChangedEventArgs.ColIndex">
            <summary>
            A property that gets/sets One-base column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ValueChangedEventArgs.RowIndex">
            <summary>
            A property that gets/sets One-based row index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ValueChangedEventArgs.Value">
            <summary>
            A property that gets/sets the value.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.CalcEngineHelper">
            <summary>
            Used for CalcEngineHelper
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CalcEngineHelper.FromOADate(System.Double)">
            <summary>
            Returns a DateTime equivalent to the specified OLE Automation Date.
            </summary>
            <param name="doubleOLEValue">An OLE Automation Date value.</param>
            <returns>An object that represents the same date and time as d.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CalcEngineHelper.ToOADate(System.DateTime)">
            <summary>
            Converts the value of this instance to the equivalent OLE Automation date.
            </summary>
            <param name="inDateTime"></param>
            <returns>A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.LookupCachingMode">
            <summary>
            Specifies options for caching look up tables in HLookUp and VLookUp functions.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.LookupCachingMode.None">
            <summary>
            No caching is done.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.LookupCachingMode.VLOOKUP">
            <summary>
            Tables will be cached only for VLookUp.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.LookupCachingMode.HLOOKUP">
            <summary>
            Tables will be cached only for HLookUp.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.LookupCachingMode.Both">
            <summary>
            Tables will be cached for both VLookUp and HLookUp.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.LookupCachingMode.OptimizeForMatches">
            <summary>
            Tables will be optimized for searching for exact matches. Set this flag if you expect your searches to find exact matches.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.RangeInfo">
            <summary>
            RangeInfo represents a rectangle array of cells that may contain formulas, strings, or numbers
            that may be referenced by other formulas.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.RangeInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs a RangeInfo instance with the given top, left, bottom and right values.
            </summary>
            <param name="top">Top row index of this range.</param>
            <param name="left">Left column index of this range.</param>
            <param name="bottom">Bottom row index of this range.</param>
            <param name="right">Right column index  of this range.</param>
            <remarks>The range values must be one-based indexes.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.RangeInfo.Cells(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            A method to retrieve a range based on the numeric arguments passed in.
            </summary>
            <param name="top">Top row index of this range.</param>
            <param name="left">Left column index of this range.</param>
            <param name="bottom">Bottom row index of this range.</param>
            <param name="right">Right column index  of this range.</param>
            <returns>A RangeInfo object.</returns>
            <remarks>The range values must be one-based indexes.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.RangeInfo.GetAlphaLabel(System.Int32)">
            <summary>
            GetAlphaLabel is a method that retrieves a string value for the column whose numerical index is passed in.
            </summary>
            <param name="col"> Number index such as 1, 5, 27.</param>
            <returns>Corresponding alphabets label like A, E, AA.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.RangeInfo.Bottom">
            <summary>
            A property that gets/sets the bottom row index of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.RangeInfo.Left">
            <summary>
            A property that gets/sets the left column index of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.RangeInfo.Right">
            <summary>
            A property that gets/sets the right row index of this range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.RangeInfo.Top">
            <summary>
            A property that gets/sets the top row index of this range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ICalcData">
            <summary>
            ICalcData defines the minimal interface that a data object must support in order to use
            this formula engine.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ICalcData.RecalculateCell(System.Int32,System.Int32,System.Boolean)">
            Recalculating the specified formula cell.
            When ever the precedent cell is changed, thats dependecncy should be updated.
            While invalidating the formula cell, it will be recalulated when it have tag as null.
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ICalcData.GetDependentCellValue(System.Int32,System.Int32)">
            <summary>
            Gets the dependent cell value of the specified cell.
            </summary>
            <param name="rowIndex">Row index of the cell</param>
            <param name="colIndex">Column index of the cell</param>
            <returns>retuns the value of the specified cell</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ICalcData.GetValueRowCol(System.Int32,System.Int32)">
            <summary>
            A method that gets the data value from the specified row and column.
            </summary>
            <param name="row">1-based index specifying the row index of the requested value.
            </param>
            <param name="col">1-based index specifying the column index of the requested data.</param>
            <returns>The data value at the given row and column index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ICalcData.SetValueRowCol(System.Object,System.Int32,System.Int32)">
            <summary>
            A method that sets the data value to the specified row and column.
            </summary>
            <param name="value">The value.</param>
            <param name="row">One-based index specifying the row index of the value.</param>
            <param name="col">One-based index specifying the column index of the value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ICalcData.WireParentObject">
            <summary>
            A method that wires the ParentObject after the CalcEngine object is created or when a
            RegisterGridAsSheet call is made.
            </summary>
            <remarks>This method is a callback to the ParentObject so it can have a chance
            to subscribe to any change events it may need to implement ValueChanged properly.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ICalcData.RowCount">
            <summary>
            Gets/Sets the Row count of the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ICalcData.ColumnCount">
            <summary>
            Gets/Sets Column count of the Grid.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ICalcData.ValueChanged">
            <summary>
            Event for value changed
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ISheetData">
            <summary>
            Used in conjunction with <see cref="P:Syncfusion.Calculate.CalcEngine.RowMaxCount"/>.
            </summary>
            <remarks>
            Essential Calculate supports column ranges of the form A:D as in =SUM(A:D) to represent all cells in columns
            A, B, C and D from a ICalcData object. To get a value for the number of rows, the CalcEngine first checks to
            see if the ICalcData object supports the ISheetData interface. If this interface is supported, the row
            count used to determine the range is obtained through this interface. If the ICalcData object does not support
            ISheetData, then the value of <see cref="P:Syncfusion.Calculate.CalcEngine.RowMaxCount"/> is used provided RowMaxCount &gt; 0.
            and the index of  first and last rows and columns
            is used.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ISheetData.GetFirstRow">
            <summary>
            Get the idex of the first row in UsedRange
            </summary>
            <returns> index of first row</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ISheetData.GetLastRow">
            <summary>
            get the index of the last row in UsedRange
            </summary>
            <returns>index of last row</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ISheetData.GetRowCount">
            <summary>
            Gets the row count.
            </summary>
            <returns>Number of rows</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ISheetData.GetFirstColumn">
            <summary>
            Gets the first column index.
            </summary>
            <returns>Index of first column</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ISheetData.GetLastColumn">
            <summary>
            Gets the last column index / column count.
            </summary>
            <returns>Index of last column</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ISheetData.GetColumnCount">
            <summary>
            Gets the column count.
            </summary>
            <returns>Number of columns</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.NamespaceDoc">
            <summary>
            Contains classes to create SfCellGrid and also to perform common user actions such as selection, editing, formatting, etc.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid">
            <summary>
            Represents the <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/> control in which data will be displayed in the form of rows and columns.
            </summary>
            <remarks> This class offers events associated with selection, editing and resizing operations in grid.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid">SfCellGrid</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCreateVisualContainer">
            <summary>
            Initialize new instance for Visual Container
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.GetDisplayText(System.Int32,System.Int32)">
            <summary>
            Used to get the display text of the cell.
            </summary>
            <param name="rowIndex">RowIndex of the cell</param>
            <param name="colIndex">ColumnIndex of the cell</param>
            <returns>Returns the display text</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.GetCellValue(System.Int32,System.Int32)">
            <summary>
            Used to get the value of the cell.
            </summary>
            <param name="rowIndex">RowIndex of the cell</param>
            <param name="colIndex">ColumnIndex of the cell</param>
            <returns>Returns the cell value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCreateGridColumn(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Creates new instance for <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridColumn"/>.
            </summary>
            <returns> An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridColumn"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCreateCopyPaste">
            <summary>
            Creates a new instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste"/>.
            </summary>
            <returns>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Trigger the method when mouse up in visualcontainer.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCreateCurrentCell">
            <summary>
            Creates a new instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell"/>.
            </summary>
            <returns>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.InitializeCellRendererCollection">
            <summary>
            Initializes the GridCellRendererCollection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.WireEvents">
            <summary>
            Wire the events
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.UnWireEvents">
            <summary>
            Unwire the events
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnContainerKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Occurs when key down on <see cref="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.VisualContainer"/>.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCellRequestNavigateEvent(Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs)">
            <summary>
            Helper method to raise Hyperlink Requset Navigate event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs">CellRequestNavigateEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCurrentCellEndEdit(Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellEndEditEventArgs)">
            <summary>
            Helper method to raise Current Cell Begin Edit Event.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>s
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.DeleteValuesFromSelectedRanges">
            <summary>
            Helps to delete the value of cell in a selected ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CanPerformAutoScroll">
            <summary>
            Used to Notify Whether the Auto Scrolling can be performed or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.GetPointerDownRowColumnIndex">
            <summary>
            Used to get the Pointer Down RowColumnIndex
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.GetPointerMoveRowColumnIndex">
            <summary>
            Used to get the Pointer Move RowColumnIndex
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.GetActiveRange">
            <summary>
            Used to get the ActiveRange from the SelectedRanges
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.InvalidateCells(System.Boolean)">
            <summary>
            Invalidate all Cells in a grid.
            </summary>
            <param name="clearStyles">Set this false to avoid resetting the GridStyleInfo</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.InvalidateCell(System.Int32,System.Int32)">
            <summary>
            Invaildates the mentioned cell in the gird.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="colIndex">Index of the column</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.InvalidateCell(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Boolean)">
            <summary>
            Invalidates the mentioned range in the grid.
            </summary>
            <param name="clearStyles">Set this false to avoid resetting the GridStyleInfo of cells in mentioned range</param>
            <param name="range">Specified range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.InvalidateCellBorders(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Invalidates the cell borders in the mentioned range.
            </summary>
            <param name="range">An instance of<see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.InvalidateVisual">
            <summary>
            Invalidates measurement state(layout) of grid
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.InvalidateVisual(System.Boolean)">
            <summary>
            Invalidates measurement state(layout) of grid
            </summary>
            <param name="setLayoutDirty">If true, invalidates layout of each row</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.InvalidateVisual(System.Boolean,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Invalidates measurement state(layout) of grid.
            </summary>
            <param name="setLayoutDirty">If true, invalidates layout of rows in a mentioned range</param>
            <param name="range">Specified range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.InvalidateSelection">
            <summary>
            Invalidates the selection layout alone.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.InvalidateSelection(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Invalidates the specified range of selection layout.
            </summary>
            <param name="range"><see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.ScrollInView(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Scrolls the mentioned cell into view.
            </summary>
            <param name="rowColumnIndex">Coordinates of a cell.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.PointToCellRowColumnIndex(System.Drawing.Point)">
            <summary>
            Gets the RowColumnIndex of the cell under the mentioned location
            </summary>
            <param name="p">X and Y-Coordinates.</param>
            <returns>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.PointToCellRowColumnIndexOutsideCells(System.Drawing.Point,System.Boolean)">
            <summary>
            Gets the RowColumnIndex of the cell under the mentioned location.
            </summary>
            <param name="p">X and Y-Coordinates.</param>
            <param name="allowOutsideLines">Set this true if point can be below corner of last line.</param>
            <returns>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.SetColumnWidth(System.Int32,System.Int32,System.Double)">
            <summary>
            Set the column width
            </summary>
            <param name="startIndex">Starting column index</param>
            <param name="endIndex">End column index</param>
            <param name="width">Width</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.SetRowHeight(System.Int32,System.Int32,System.Double)">
            <summary>
            Set the row height
            </summary>
            <param name="startIndex">Starting row index</param>
            <param name="endIndex">End row index</param>
            <param name="height">Height</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.GetDependentCellValue(System.Int32,System.Int32)">
            <summary>
            Gets the dependent cell value of the specified cell.
            </summary>
            <param name="rowIndex">Row index of the cell</param>
            <param name="colIndex">Column index of the cell</param>
            <returns>retuns the value of the specified cell</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.GetValueRowCol(System.Int32,System.Int32)">
            <summary>
            Returns the formula string if the cell contains a formula, or the value if
            the cell cantains anything other than a formula.
            </summary>
            <param name="row">The row of the cell.</param>
            <param name="col">The column of the cell.</param>
            <returns>The formula string or value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.SetValueRowCol(System.Object,System.Int32,System.Int32)">
            <summary>
            Sets the value of a cell.
            </summary>
            <param name="value">The value to be set.</param>
            <param name="row">The row of the cell.</param>
            <param name="col">The column of the cell.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.WireParentObject">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnValueChanged(System.Int32,System.Int32,System.String)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.ValueChanged"/> event.
            </summary>
            <param name="row">The row of the change.</param>
            <param name="col">The column of the change.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.RecalculateCell(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Recalculating dependency cells of the precedent cell.
            When ever the precedent cell is changed, thats dependecncy should be updated.
            When setting tag as null, that will be recalculate when invalidate the cell.
            </summary>
            <param name="row">Current Cell's row index.</param>
            <param name="col">Current Cell's column index.</param>
            <param name="invaladateCell">True or False.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.InsertRows(System.Int32,System.Int32)">
            <summary>
            Used to insert rows when row count is increased
            </summary>
            <param name="insertAtRowIndex"></param>
            <param name="count"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Used to remove rows when row count is decreased
            </summary>
            <param name="removeAtRowIndex"></param>
            <param name="count"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.InsertColumns(System.Int32,System.Int32)">
            <summary>
            Used to insert columns when column count is increased
            </summary>
            <param name="insertAtColumnIndex"></param>
            <param name="count"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.RemoveColumns(System.Int32,System.Int32)">
            <summary>
            Used to remove columns when column count is increased
            </summary>
            <param name="removeAtColumnIndex"></param>
            <param name="count"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCreateRowHeights">
            <summary>
            Creates RowHeights
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCreateColumnWidths">
            <summary>
            Creates ColumnWidths
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.UpdateFrozenRows(System.Int32)">
            <summary>
            Update the frozen row count if after scroll to freeze or set frozen count without scroll.
            </summary>
            <param name="rowCount">row count for freeze</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.UpdateFrozenColumns(System.Int32)">
            <summary>
            Update the frozen column count if after scroll to freeze or set frozen count without scroll.
            </summary>
            <param name="colCount">column count for freeze</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.ShowHidePopup(System.Boolean)">
            <summary>
            Used to show/hide the popups shown in the grid
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCurrentCellValueChanged(Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValueChangedEventArgs)">
            <summary>
            Occurs when current cell value is changed while is in edit mode
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCurrentCellValidating(Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs)">
            <summary>
            Occurs when current cell is validating
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCurrentCellValidated(Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatedEventArgs)">
            <summary>
            Occurs after the current cell is validated
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCurrentCellActivated(Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatedEventArgs)">
            <summary>
            Occurs after the current cell is activated
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCurrentCellActivating(Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatingEventArgs)">
            <summary>
            Occurs when current cell is activating
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnSelectionChanged(Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangedEventArgs)">
            <summary>
            Occurs after selection is changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnSelectionChanging(Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangingEventArgs)">
            <summary>
            Occuts when the selection is changing
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnResizingColumns(Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingColumnsEventArgs)">
            <summary>
            Helper method to raise Resizing Columns Event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnResizingRows(Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingRowsEventArgs)">
            <summary>
            Helper method to raise Resizing Rows Event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCellCommentOpening(Syncfusion.Windows.Forms.CellGrid.Helpers.CellCommentOpeningEventArgs)">
            <summary>
            Helper method to raise CellCommentOpening event
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCellTooltipOpening(Syncfusion.Windows.Forms.CellGrid.Helpers.CellTooltipOpeningEventArgs)">
            <summary>
            Helper method to raise CellTooltipOpening event
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCellRequestNavigate(Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs)">
            <summary>
            Helper method to raise Hyperlink Requset Navigate event
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCellClick(Syncfusion.Windows.Forms.CellGrid.Helpers.GridCellClickEventArgs)">
            <summary>
            Helper method to raise CellClick event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCurrentCellBeginEdit(Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellBeginEditEventArgs)">
            <summary>
            Helper method to raise Current Cell Begin Edit Event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCurrentCellEditing">
            <summary>
            Occurs after current cell enter into edit mode
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.OnCellContextMenuOpening(Syncfusion.Windows.Forms.CellGrid.Helpers.CellContextMenuOpeningEventArgs)">
            <summary>
            Helper method to raise CellContextMenuOpening Event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.IsCommentEditorOpen">
            <summary>
            Helper methods to find whether comment editor form was opened or not.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.GetCellRect(System.Int32,System.Int32)">
            <summary>
            Get the rect of current cell.
            </summary>
            <param name="rowIndex">current row index</param>
            <param name="columnIndex">current column index</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.UpdateScrollValue">
            <summary>
            Used to update the ScrollBar Value
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.UpdateScrollBars">
            <summary>
            Update the Scrollbar when perform row or column manipulation(Insert, delete, hide, adjust size, etc.).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.VisualContainer">
            <summary>
            Gets the <see cref="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.VisualContainer"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.IsInResizing">
            <summary>
            Gets or sets the value when resizing using touch.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CommentTooltipService">
            <summary>
            Gets or sets the value that indicates comment and tooltip operations.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.IsRowColumnHeaderVisible">
            <summary>
            Gets or Sets True if RowColumnHeader is to be Visible else false
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.AllowCellContextMenu">
            <summary>
            Gets or sets the value whether the cell level Context menu is to be Enabled or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.TouchController">
            <summary>
            Gets or sets the instance of <see cref="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.TouchController"/> which handles the touch interaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CreateGridColumn">
            <summary>
            Gets or sets <see cref="T:System.Func`2"/> to create instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridColumn"/>.
            </summary> 
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.SelectionController">
            <summary>
            Gets or sets the Selection Controller which provides the selection of content when the user drags the pressed
            mouse to an edge of the control.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.SelectionController"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.AutoScroller">
            <summary>
            Gets the auto scroller which provides automatic scrolling of content when the user drags the pressed
            mouse to an edge of the control.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CurrentCell">
            <summary>
            Gets the current cell of the Grid.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.SelectedRanges">
            <summary>
            Gets or sets the collection of selected ranges from grid.
            </summary>
            <value>A collection of selected ranges.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.EditTrigger">
            <summary>
            Gets or Sets a value indicating any of the trigger options will cause cells to enter Edit Mode.
            </summary>
            <value>One of the enum options of EditTrigger.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.EditorSelectionBehavior">
            <summary>
            Gets or sets a value indicating whether editor select all the value or move last position.
            </summary>
            <value>One of the enum options of EditBehavior.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.FormulaEngine">
            <summary>
            Gets the value indicating the instance of <see cref="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.FormulaEngine"/> which is used to perform calculations in grid.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.FormulaEngine"/>. </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CopyPaste">
            <summary>
            Gets the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste"/> class which used to perform clipboard operations(Cut, Copy, Paste).
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.RowCount">
            <summary>
            Gets or sets the number of rowcounts in grid.
            </summary>
            <value>Number of rows.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.ColumnCount">
            <summary>
            Gets or sets the number of columncount in grid.
            </summary>
            <value>Number of columns.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.FrozenRows">
            <summary>
            Gets or sets the number of frozenrows in grid.
            </summary>
            <value>Number of frozenrows.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.FrozenColumns">
            <summary>
            Gets or sets the number of frozencolumns in grid.
            </summary>
            <value>Number of frozencolumns.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.FooterRows">
            <summary>
            Gets or sets the number of footer rows in grid.
            </summary>
            <value>Number of footerrows.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.FooterColumns">
            <summary>
            Gets or sets the number of footer columns in grid.
            </summary>
            <value>Number of footercolumns.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.HeaderRows">
            <summary>
            Gets or sets the number of header rows in grid.
            </summary>
            <value>Number of header rows.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.HeaderColumns">
            <summary>
            Gets or sets the number of header columns in grid.
            </summary>
            <value>Number of header columns.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.DefaultColumnWidth">
            <summary>
            Gets or sets the default columnwidth for grid.
            </summary>
            <value>Width of the column.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.DefaultRowHeight">
            <summary>
            Gets or sets the default rowheight for grid.
            </summary>
            <value>Height of the row.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.RowHeights">
            <summary>
            Gets the collection of rowheights for grid.
            </summary>
            <value>Collection of rowheights.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.ColumnWidths">
            <summary>
            Gets the collection of columnwidths for grid.
            </summary>
            <value>Collection of columnwidths.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.ShowGridLines">
            <summary>
            Gets or sets value indicating whether gridlines shown or not. 
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.GridLineColor">
            <summary>
            Gets or sets the gridline color.
            </summary>
            <value>Color for the Gridline.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.SelectionBorderThickness">
            <summary>
            Gets or sets the thickness of selection border.
            </summary>
            <value>Thickness of the border.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.SelectionBorderBrush">
            <summary>
            Gets or sets the selection border brush.
            </summary>
            <value>Brush for border.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.SelectionBrush">
            <summary>
            Gets or sets the selected area brush.
            </summary>
            <value>Brush for selection.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.AllowGesture">
            <summary>
            Gets or sets whether the gesture is enabled or not.
            </summary>
            <value>Default value is true. If it is false, then it will disable the touch selection, panning, etc.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CoveredCells">
            <summary>
            Gets the coveredcells in the grid.
            </summary>
            <value>Collection of CoveredCells.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.AllowEditing">
            <summary>
            Gets or sets the value indicating whether to allow the editing operation or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.AllowSelection">
            <summary>
            Gets or sets the value indicating whether to allow the selection or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.ColumnResizingController">
            <summary>
             Gets or sets the value for resizing column controller.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.ColumnResizingController"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.RowResizingController">
            <summary>
             Gets or sets the value for resizing row controller.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.RowResizingController"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.AllowRowResize">
            <summary>
            Gets or sets the value indicating whether to allow row resizing or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.AllowColumnResize">
            <summary>
            Gets or sets the value indicating whether to allow column resizing or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.AllowHiddenRowResize">
            <summary>
            Gets or sets the value indicating whether to allow hidden row resizing or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.AllowHiddenColumnResize">
            <summary>
            Gets or sets the value indicating whetherto allow hidden column resizing or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.ShowComment">
            <summary>
            Gets or Sets the value which indicates whether to show the cell comment or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.ShowTooltip">
            <summary>
            Gets or sets the value which indicates whether to show the cell tooltip or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.AllowFloatingCell">
            <summary>
            Gets or sets the value which indicates whether to float the cells or not while displaying the data.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.AllowFloatingCellInEdit">
            <summary>
            /// Gets or sets the value which indicates whether to allow the flood the cells in Edit mode or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.AllowExcelLikeKeyNavigation">
            <summary>
            Get or sets the value which indicates whether to allow editing like Excel. Which means, move the SelectionStart where pressed mouse pointer, move it to end when press Down Arrow key and move it where last placed when press Up Arrow key.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.ScrollRows">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase"/> for rows.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.ScrollColumns">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase"/> for columns.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CellContextMenu">
            <summary>
            Gets or sets the ContextMenu Items for Grid.
            </summary>
            <value>ContextMenu item of Grid.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.AllowEditorsContextMenu">
            <summary>
            Gets or sets the value whether the Editors Context menu is to be Enabled or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.ValueChanged">
            <summary>
            An event raised on the IWorksheet whenever a value changes.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.SelectionChanging">
            <summary>
            Occurs when selection going to be changed
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.SelectionChanged">
            <summary>
            Occurs after the selection is changed 
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CurrentCellActivating">
            <summary>
            Occurs when the current cell going to be activated
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CurrentCellActivated">
            <summary>
            Occurs after the current cell is activated
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CurrentCellBeginEdit">
            <summary>
            Occurs when the current cell enters into edit mode
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CurrentCellEndEdit">
            <summary>
            Occurs when the current cell leaves from edit mode
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CurrentCellValueChanged">
            <summary>
            Occurs when the current cell value gets changed while cell is in edit mode
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CurrentCellValidating">
            <summary>
            Occurs when current cell value going to be validated
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CurrentCellValidated">
            <summary>
            Occurs after the current cell is validated
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CellRequestNavigate">
            <summary>
            Occurs when the current cell request to navigate the URI.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CellClick">
            <summary>
            Occurs when click on the cell.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.ResizingColumns">
            <summary>
            Occurs when perform resizing columns.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.ResizingRows">
            <summary>
            Occurs when perform resizing rows.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CellCommentOpening">
            <summary>
            Occurs when perform cell comment opening.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CellTooltipOpening">
            <summary>
            Occurs when perform cell tooltip opening.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.CellContextMenuOpening">
            <summary>
            Occurs When Context Menu is to be displayed
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.SfCellGrid.PropertyChanged">
            <summary>
            Occurs when property changed
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellBordersPanel.EnsureVerticalBorders">
            <summary>
            Reset index of Vertical CellBorders and its BorderElements on vertical scrolling
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellBordersPanel.EnsureHorizontalBorders">
            <summary>
            Reset index of Horizontal CellBorders and its BorderElements on horizontal scrolling
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellBordersPanel.CreateAndUpdateBorderStyle(System.Drawing.Pen,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create or update a new CellBorder and its BorderElement if doesn't match with adjacent one.
            If border's pen is matched with adjacent BorderElement then combine with that one by adjusting the StartIndex and EndIndex.
            </summary>
            <param name="pen"></param>
            <param name="row"></param>
            <param name="col"></param>
            <param name="isVertical"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellBordersPanel.CreateOrRecycleCellBorders(System.Int32,System.Collections.Generic.List{Syncfusion.Windows.Forms.CellGrid.CellBorders},System.Boolean)">
            <summary>
            Create a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.CellBorders"/> or reuse it from the existing list of <see cref="T:Syncfusion.Windows.Forms.CellGrid.CellBorders"/>.
            </summary>
            <param name="index">Row index or column index of <see cref="T:Syncfusion.Windows.Forms.CellGrid.CellBorders"/></param>
            <param name="cellbordersList">Exsisting <see cref="T:Syncfusion.Windows.Forms.CellGrid.CellBorders"/> list.</param>
            <param name="isVertical"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellBordersPanel.CreateOrRecycleBorderElement(System.Drawing.Pen,System.Int32,System.Int32,System.Collections.Generic.List{Syncfusion.Windows.Forms.CellGrid.BorderElement},System.Boolean)">
            <summary>
            Create a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.BorderElement"/> or reuse it from the existing list of <see cref="T:Syncfusion.Windows.Forms.CellGrid.BorderElement"/>.
            </summary>
            <param name="pen"><see cref="T:System.Drawing.Pen"/> of <see cref="T:Syncfusion.Windows.Forms.CellGrid.BorderElement"/></param>
            <param name="start">Start index</param>
            <param name="end">End index</param>
            <param name="borderElementList">Existing <see cref="T:Syncfusion.Windows.Forms.CellGrid.BorderElement"/> list.</param>
            <param name="isVertical"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellBordersPanel.Dispose">
            <summary>
            Dispose the live instances.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.BorderElement">
            <summary>
            Have border elements  <see cref="P:Syncfusion.Windows.Forms.CellGrid.BorderElement.Pen"/> and information (StartIndex, EndIndex, Length)
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.CellBorders">
            <summary>
            Contains <see cref="T:Syncfusion.Windows.Forms.CellGrid.BorderElement"/> list for particular row index or column index
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellBorders.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.CellBorders"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellBorders.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.CellGrid.CellBorders"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridColumn">
            <summary>
            Holds the information about each and every cell which are in view. It will updates the properties of cell element (GridCell)
            based on the styleInfo. This will triggered from GridRow when updating the cells.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.Disposable">
            <summary>
            This class provides a base class that implements the IDisposable interface
            as suggested in the .NET documentation using the Disposable pattern.
            </summary>
            <remarks>If you derive from this class, you only need to override the protected
            Dispose method and check the disposing parameter.</remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.NonFinalizeDisposable">
            <summary>
            This is a base class for Disposable. It implements the IDisposable interface
            as suggested in the .NET documentation using the Disposable pattern but it does not
            implement a finalizer. If you need finalization you need to derive from Disposable
            or add a finalizer to your derived class and manually call Dispose from the Finalizer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.NonFinalizeDisposable.Dispose">
            <overload>
            Releases all resources used by the Component.
            </overload>
            <summary>
            Releases all resources used by the Component.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.NonFinalizeDisposable.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
            <remarks>See the documentation for the System.ComponentModel.Component class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.Disposable.Finalize">
            <summary>
            <see cref="M:System.Object.Finalize"/>.<para/>
            In C# and C++, finalizers are expressed using destructor syntax.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.#ctor(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridColumn">GridColumn</see> class. 
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.GetRowHeight">
            <summary>
            Used to get the row height
            </summary>
            <returns>Height of the row.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.EnsureFloatingCellSize(System.Collections.Generic.List{Syncfusion.Windows.Forms.CellGrid.GridColumn},System.Drawing.Size,System.Int32)">
            <summary>
            Calculate the floating cell size.
            </summary>
            <param name="elements">A list of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridColumn"/> elements.</param>
            <param name="cellSize">Size of the cell.</param>
            <param name="arrayIndex">Index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.EnsureFloatingCellSizeOnEdit(System.String)">
            <summary>
            Calculate the floating cell size in editing mode.
            </summary>
            <param name="text">Text to be displayed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.GetDisplayTextSize(System.String,System.Drawing.Size,System.Boolean)">
            <summary>
            Calculate the display text size with help of MeasureText() based on cellsize
            And FloatingCellSize if FloatingCellSize is not an empty.
            </summary>
            <param name="text">Display text</param>
            <param name="cellSize">cell size</param>
            <param name="wrapText">true if textwrapping is applied else false</param>
            <returns>Size of the text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.SetTextWrapping(System.Boolean)">
            <summary>
            Set and reset the text wrapping while editing in floating cell.
            </summary>
            <param name="setWrapText">True or false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.GetTextWrapping">
            <summary>
            Get the textwrapping for the specified cell.
            </summary>
            <returns>Returns true, if text is wrapped; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.GetTextAlignment">
            <summary>
            Helper methods to get the horizontal alignment for the text.
            </summary>
            <returns>An instance of <see cref="T:System.Windows.Forms.HorizontalAlignment"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.GetCurrentCellRendererElement">
            <summary>
            Used to get the edit UIElement of the CurrentCell.
            </summary>
            <returns>A UIElement.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.OnUpdateColumn">
            <summary>
            Update the column properties such as renderer, cell type, style info, row index, column index, cell element etc.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.OnRender(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean,System.Boolean)">
            <summary>
            Used to render the borders, text, background, etc. of the <see cref="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.OnRender(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean,System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.OnRenderBackground(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint,System.Drawing.Rectangle)">
            <summary>
            Render the cell background.
            </summary>
            <param name="paint">SpreadsheetPaint object</param>
            <param name="cellRect">Cell rect</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.UpdateCellBorders">
            <summary>
            Update the cell borders of the current cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.UpdateFloatingCellBorders">
            <summary>
            Update the borders of floating cells.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.UpdateBorderStyle(System.Int32,System.Int32,System.Drawing.Pen,System.Boolean)">
            <summary>
            Update the border style for the specified cell or range.
            </summary>
            <param name="rowindex">Row index of the cell.</param>
            <param name="colindex">Column index of the cell.</param>
            <param name="pen">Outline for the cell.</param>
            <param name="isVertical">True or False.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.UpdateColumn">
            <summary>
            Update the column properties such as renderer, row index, column index, cell element etc.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridColumn.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the 
            <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridColumn">GridColumn</see>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">True or False .</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.IsDirty">
            <summary>
            Gets or sets a value indicating whether it needs to be rearranged or not .
            </summary>
            <value>True or False.</value>
            <remarks>Set as true, if this needs to be re arrange.</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.IsBordersDirty">
            <summary>
            Gets or sets a value indicating whether the cell borders need to be updated or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.IsSpannedColum">
            <summary>
            Gets a value indicating whether the cell is covered cell or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.CoveredCellInfo">
            <summary>
            Gets the value of <see cref="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.CoveredCellInfo"/> if this is spanned column.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.CoveredCellInfo"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.IsEditing">
            <summary>
            Gets the value indicating whether the s is in editing mode or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.IsCurrentColumn">
            <summary>
            Returns true if this is current cell
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.CellRowColumnIndex">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/> of the column.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.DisplayText">
            <summary>
            Gets or sets the display text.
            </summary>
            <value>Text to be displayed.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.IsFloatingCell">
            <summary>
            Determines whether cell is FloatingCell or not.
            FloatingCell means, whenever the cell width increased when cell value is exceeds the cellsize by taking next cell width.
            </summary>
            <value>True or false.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.IsFloodCell">
            <summary>
            Determines whether cell is FloodCell or not.
            If any cells are used by floating cell then those cells are denoted as FloodCell and set the width as 0 for it.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.IsAltEnterFloatingCell">
            <summary>
            Determines whether Alt + Enter pressed or not while editing
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.IsFloatingCellHeightChanged">
            <summary>
            Determines whether FloatingCell height is changed or not when flood cell goes to out of view
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.IsFloatingCellEditing">
            <summary>
            Determines whether FloatingCell is in editing mode or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.Renderer">
            <summary>
            Gets or sets the cell renderer.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.Element">
            <summary>
            Gets or sets the Element
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.RowIndex">
            <summary>
            Gets or sets the row index.
            </summary>
            <value>Index of the row.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.ColumnIndex">
            <summary>
            Gets or sets the column index.
            </summary>
            <value>Index of the column.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.IsEnsured">
            <summary>
            Determines whether the column in ensured or not.(i.e., properties are updated on measure override) 
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.ColumnRegion">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion"/> of column.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridColumn.IsVisible">
            <summary>
            Gets or sets the visiblity of the column.
            </summary>
            <value>True or false.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridRow">
            <summary>
            Holds information about a row. Each GridRow contains a VirtualizingRowPanel which is added as children into the VisualContainer.
            Create or reuse the GridColumn(Which contains the cellElement(GridCell) and its information) based on visible cells in this row.
            Those cells will updated when measure or layout is affected.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.#ctor(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.CreateOrRecycleColumnElement(System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion)">
            <summary>
            Create or recycle the column element
            </summary>
            <param name="rowIndex"></param>
            <param name="colIndex"></param>
            <param name="colregion"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.InitializeRow">
            <summary>
            Creates the VirtualizingRowPanel and initialized it.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.GetColumnVisibleLineInfo(System.Int32)">
            <summary>
            Used to get the VisibleLineInfo of the column
            </summary>
            <param name="index">Column index</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.GetGridRow">
            <summary>
            Used to get the GridRow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.OnRowVisibilityChanged">
            <summary>
            Used to changes the visibility of row element.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.GetRowSpanHeight(System.Int32,System.Int32)">
            <summary>
            Used to get the row span height
            </summary>
            <param name="top"></param>
            <param name="bottom"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.GetTopLeftVisibleSpanIndex(Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo,System.Int32@,System.Int32@)">
            <summary>
            Used to get the top and left visible row and columnn index of the covered cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.SetOrRemoveRowSpan(Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo,System.Boolean)">
            <summary>
            Set or remove the rowSpan information.
            </summary>
            <param name="coveredCell"></param>
            <param name="isSpan"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.OnGenerateVisibleCells(System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Used to generate the column elements based on visible cells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.UpdateCells(System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Used to update the column elements based on visiblecolumns information
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.EnsureColumns(System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Used to ensure and update the column elements when horizontal scrolling or width of the layout is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.RemoveColumn(Syncfusion.Windows.Forms.CellGrid.GridColumn)">
            <summary>
            Used to remove the column from ColumnElements list and RowPanel 
            </summary>
            <param name="col"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.RefreshColumns(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Mark the columns as dirty which are in a specified range.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.RefreshAllColumns">
            <summary>
            Mark all columns in a row as dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.UpdateCells">
            <summary>
            Used to update the column elements based on visiblecolumns information
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.EnsureColumns">
            <summary>
            Used to ensure and update the column elements when horizontal scrolling or width of the layout is changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.GenerateVisibleCells">
            <summary>
            Used to generate the column elements based on visible cells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRow"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRow.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRow"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRow.IsSpannedRow">
            <summary>
            Returns true, if this is spanned row
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRow.HaveSpannedCell">
            <summary>
            Returns true, if this has any spanned cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRow.RowSpanHeight">
            <summary>
            Returns the height of row span.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRow.IsEditing">
            <summary>
            Returns true, If this has current cell and current cell is in editing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRow.IsCurrentRow">
            <summary>
            Returns true, if this has current cell
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRow.IsDirty">
            <summary>
            Set as true, if need to re-update the cells in this row.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRow.Element">
            <summary>
            Gets the Panel of this row.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRow.IsVisible">
            <summary>
            Gets or sets the Visibility.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRow.Index">
            <summary>
            Gets or sets the row index
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRow.Region">
            <summary>
            Gets or sets the row region
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRow.IsEnsured">
            <summary>
            Determines whether the row is already ensured or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.VirtualizingRowPanel">
            <summary>
            The cell element (GridCell) for all visible cells in a row have been added as children into this panel.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1">
            <summary>
            A collection with elements derived from type <see cref="T:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase"/>. Internally
            this collection maintains both a List of CellSpanInfoBase and a so called pool. The
            pool allows immediate lookup of cell spans given a cells row and column index. The
            list allows looping through cell spans in the order they were added. CellSpanInfoCollection
            assumes that there is no overlap between cell spans. For any given cell there only 
            at most one cell span must exist. CellSpanInfoCollection is a base class for the
            grids GridCoveredCellInfoCollection.
            </summary>
            <typeparam name="T">The element type of this collection.</typeparam>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.GetCellSpan(System.Int32,System.Int32)">
            <summary>
            Gets the cell span.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
            <returns>The cell span if found; othwerwise null if there is no cell span for the specified row and column.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.OnGetCellSpan(System.Int32,System.Int32,`0@)">
            <summary>
            This virtual method is called form <see cref="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.GetCellSpan(System.Int32,System.Int32)"/>.
            Override this method to return a custom cell span that include
            the specified cells row and column index. In such case you should also return true.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
            <param name="result">The result cell span.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.ResetCache">
            <summary>
            Resets the cached information for last found cell span.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.ResetCellSpan(System.Int32,System.Int32)">
            <summary>
            Resets the cell span and removes it from the collection.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.ResetCellSpan(Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase)">
            <summary>
            Resets the cell span and removes it from the collection.
            </summary>
            <param name="cci">The cci.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.SearchCellSpan(Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase)">
            <summary>
            Searches the cell span.
            </summary>
            <param name="span">The cell span.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.CheckExistCellSpan(Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase)">
            <summary>
            Checks if the cell span exists.
            </summary>
            <param name="span">The cell span.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.InsertRows(System.Int32,System.Int32)">
            <summary>
            Inserts the rows.
            </summary>
            <param name="insertAtRowIndex">Index of the insert at row.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.InsertRows(System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection{`0})">
            <summary>
            Inserts the rows.
            </summary>
            <param name="insertAtRowIndex">Index of the insert at row.</param>
            <param name="count">The count.</param>
            <param name="moveCellsState">State of the move cells.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Removes the rows.
            </summary>
            <param name="removeAtRowIndex">Index of the remove at row.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.RemoveRows(System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection{`0})">
            <summary>
            Removes the rows.
            </summary>
            <param name="removeAtRowIndex">Index of the remove at row.</param>
            <param name="count">The count.</param>
            <param name="moveCellsState">State of the move cells.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.InsertColumns(System.Int32,System.Int32)">
            <summary>
            Inserts the columns.
            </summary>
            <param name="insertAtColumnIndex">Index of the insert at column.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.InsertColumns(System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection{`0})">
            <summary>
            Inserts the columns.
            </summary>
            <param name="insertAtColumnIndex">Index of the insert at column.</param>
            <param name="count">The count.</param>
            <param name="moveCellsState">State of the move cells.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.RemoveColumns(System.Int32,System.Int32)">
            <summary>
            Removes the columns.
            </summary>
            <param name="removeAtColumnIndex">Index of the remove at column.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.RemoveColumns(System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection{`0})">
            <summary>
            Removes the columns.
            </summary>
            <param name="removeAtColumnIndex">Index of the remove at column.</param>
            <param name="count">The count.</param>
            <param name="moveCellsState">State of the move cells.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the collection.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the collection at the specified index. An exception is thrown if
            the cell range overlaps with another cell span in the collection.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the collection.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the collection.</exception>
            <exception cref="T:System.ArgumentNullException">The item is null.</exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the collection item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the collection.</exception>
            <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.Add(`0)">
            <summary>
            Adds an item to the collection. An exception is thrown if
            the cell range overlaps with another cell span in the collection.
            </summary>
            <param name="item">The object to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">The item is null.</exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.Contains(`0)">
            <summary>
            Determines whether the collection contains a specific value.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>
            true if <paramref name="item"/> is found in the collection; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the collection to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from collection. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.-or-<paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.-or-The number of elements in the source collection is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The object to remove from the collection.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the collection; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original collection.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.IsEmpty">
            <summary>
            Gets a value indicating whether this collection is empty.
            </summary>
            <value><c>true</c> if this collection is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the cell span at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
            <value></value>
            <returns>The number of elements contained in the collection.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value></value>
            <returns>this collection is never read-only.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.CellSpanInfo">
            <summary>
            This a base class for spanned ranges such as covered cells and
            cell spanned backgrounds. It contains Top, Left, Bottom and
            Right row and column index for the spanned range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase">
            <summary>
            This a base class for spanned ranges such as covered cells and
            cell spanned backgrounds. It contains Top, Left, Bottom and
            Right row and column index for the spanned range.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase"/> class.
            </summary>
            <param name="top">The top row index.</param>
            <param name="left">The left column index.</param>
            <param name="bottom">The bottom row index.</param>
            <param name="right">The right column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.Contains(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Determines whether the specified cell is inside the span.
            </summary>
            <param name="cellRowColumnIndex">The cell</param>
            <returns>
            true if cell is inside the span; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.ContainsRow(System.Int32)">
            <summary>
            Determines whether the specified row is inside the span.
            </summary>
            <param name="rowIndex">The row index</param>
            <returns>
            true if row is inside the span; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.ContainsColumn(System.Int32)">
            <summary>
            Determines whether the specified column is inside the span.
            </summary>
            <param name="columnIndex">The column index</param>
            <returns>
            true if column is inside the span; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.Contains(System.Int32,System.Int32)">
            <summary>
            Determines whether the specified cell is inside the span.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
            <returns>
            true if cell is inside the span; false otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.CompareTo(Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.ToString">
            <summary>
            Returns a string describing the state of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.Offset(System.Int32,System.Int32)">
            <summary>
            Offsets the span with the specified row and column count.
            </summary>
            <param name="rowCount">The row count.</param>
            <param name="columnCount">The column count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.Offset(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Offsets the span with the specified row and column count.
            </summary>
            <param name="rowCount">The row count.</param>
            <param name="columnCount">The column count.</param>
            <param name="adjustStartIndex">Determines whether adjust starting row and column</param>
            <param name="adjustEndIndex">Determines whether adjust end row and column</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.Top">
            <summary>
            Gets the top row index.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.Left">
            <summary>
            Gets the left column index.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.Bottom">
            <summary>
            Gets the bottom row index.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.Right">
            <summary>
            Gets the right column index.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.Width">
            <summary>
            Gets the number of columns.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.CellSpanInfoBase.Height">
            <summary>
            Gets the number of rows.
            </summary>
            <value>The height.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.CellSpanInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.CellSpanInfo"/> class.
            </summary>
            <param name="top">The top row index.</param>
            <param name="left">The left column index.</param>
            <param name="bottom">The bottom row index.</param>
            <param name="right">The right column index.</param>
            <param name="clipRows">if set to <c>true</c> allow estimates for out of view rows.</param>
            <param name="clipColumns">if set to <c>true</c> allow estimates for out of view columns.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.CellSpanInfo"/> class.
            </summary>
            <param name="top">The top row index.</param>
            <param name="left">The left column index.</param>
            <param name="bottom">The bottom row index.</param>
            <param name="right">The right column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfo.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CellSpanInfo.ToString">
            <summary>
            Returns a string describing the state of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.CellSpanInfo.ClipRows">
            <summary>
            Gets or sets a value indicating whether to allow estimates for out of view rows when calculating
            the height in points for the spanned range.
            </summary>
            <value><c>true</c> if estimates are allowed for out of view rows; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.CellSpanInfo.ClipColumns">
            <summary>
            Gets or sets a value indicating whether to allow estimates for out of view columns when calculating
            the height in points for the spanned range.
            </summary>
            <value><c>true</c> if estimates are allowed for out of view columns; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo">
            <summary>
            Represents a class which holds the range and options for a covered cell. A covered cell is a cell that
            spans over neighbouring cells. All cells in this range are treated as one single cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo"/> class.
            </summary>
            <param name="top">The top row index.</param>
            <param name="left">The left column index.</param>
            <param name="bottom">The bottom row index.</param>
            <param name="right">The right column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo.ToString">
            <summary>
            Returns a string describing the state of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo.SpanWholeRow">
            <summary>
            Gets or sets a value indicating whether the covered cell spans the whole row.
            </summary>
            <value><c>true</c> if the covered cell spans the whole row; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo.SpanWholeColumn">
            <summary>
            Gets or sets a value indicating whether the covered cell spans the whole column.
            </summary>
            <value><c>true</c> if the covered cell spans the whole column; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfoCollection">
            <summary>
            Represents the Class which holds all the information and maintains the operations related with Covered cells.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ICoveredCellsProvider.GetCoveredCell(System.Int32,System.Int32)">
            <summary>
            Gets a covered cell from the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ICoveredCellsProvider"/> that includes
            the specified cells row and column index.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ICoveredCellsProvider.IsEmpty">
            <summary>
            Gets a value indicating if the collection is empty.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfoCollection.#ctor(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfoCollection">CoveredCellInfoCollection</see> class. 
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfoCollection.GetCoveredCell(System.Int32,System.Int32)">
            <summary>
            Gets a covered cell from the CoveredCellsProvider that includes
            the specified cells row and column index.
            </summary>
            <param name="rowIndex">Specified row index.</param>
            <param name="columnIndex">Specified column index.</param>
            <returns>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfoCollection.Find(System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo@)">
            <summary>
            Gets a covered cell from the CoveredCellsProvider includes
            the specified cells row and column index or if there is no covered range for the cell
            the method returns a cell range for the given row and column index.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="columnIndex">Index of the column.</param>
            <param name="coveredRange">The resulting covered range. If there is no covered range for the cell
            this range will return GridRangeInfo.Cell(rowIndex, columnIndex)</param>
            <returns>
            true if a covered cell was found; otherwise false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfoCollection.IsCoveredCell(System.Int32,System.Int32)">
            <summary>
            Retruns true if the given cell is covered cell.
            </summary>
            <param name="rowIndex">Row index of the specified cell.</param>
            <param name="columnIndex">Column index of the specified cell.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfoCollection.Clear(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Clears the covered cells in the given range.
            </summary>
            <param name="range">Specified range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfoCollection.CollectionModified(System.Collections.Generic.List{Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo})">
            <summary>
            Updates the CoveredCells Ranges
            </summary>
            <param name="spanCollection">Collection of CoveredCells</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfoCollection.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfoCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfoCollection.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfoCollection"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfoCollection.Ranges">
            <summary>
            Gets the value indicating the list of selected ranges in grid.
            </summary>
            <value>List of selected ranges.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridQueryCoveredRangeEventHandler">
            <summary>
            Represents the method that handles a <see cref="!:GridModel.QueryCoveredRange"/> event which can be
            marked as handled.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name=" e">A <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridQueryCoveredRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridHandledEventArgs">
            <summary>
            Provides data for a event that can be handled by a subscriber and overrides the event's default behavior.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridEventArgs">
            <summary>
            This is a base class for events of the Syncfusion libraries. It supports writing
            properties in its ToString() method. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridHandledEventArgs.#ctor">
            <summary>
            Overloaded. Initializes a new instance of the GridHandledEventArgs class with the Handled property set to False.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridHandledEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GridHandledEventArgs class with the Handled property set to the given value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.GridHandledEventArgs.Handled">
            <summary>
            Gets or sets whether the event should be handled or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridQueryCoveredRangeEventArgs.#ctor(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <overload>
            Initalizes a new object.
            </overload>
            <summary>
            Initalizes a new object.
            </summary>
            <param name="cellRowColumnIndex">The RowColumn index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridQueryCoveredRangeEventArgs.#ctor(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex,Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo)">
            <summary>
            Initalizes a new object.
            </summary>
            <param name="cellRowColumnIndex">The RowColumn index.</param>
            <param name="range">A <see cref="T:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo"/> that will receive the resulting range for the covered cell.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridQueryCoveredRangeEventArgs.Cell">
            <summary>
            Gets the value indicating the instance of specified cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridQueryCoveredRangeEventArgs.Range">
            <summary>
            A <see cref="T:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo"/> that will receive the resulting range for the covered cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo">
            <summary>
               Defines a range of cells in the grid. Possible range types are: Row(s), Column(s), Cell(s), Table or Empty.
               GridRangeInfo is immutable.
            </summary>
            
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Empty">
            <summary>
              <para>Represents a <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> with its properties left uninitialized and range type set to GridRangeInfoType.Empty.</para>
            </summary>
            <remarks>
              <para>A range is defined by its coordinates and range type. If uninitialized, the range type is GridRangeInfoType.Empty</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.#ctor">
            <overload>
              <para>Initializes a <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object.</para>
            </overload>
            <summary>
              <para>Initializes an empty <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object.</para>
            </summary>
            <remarks>
              <para>This constructor initializes a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object with empty range type.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object.
            </summary>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.CopyAllMembers(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.FromTlhw(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object with the specified bounds.
            </summary>
            <param name="top">
              The row index of the upper-left corner of the cell range.
            </param>
            <param name="left">
              The column index of the upper-left corner of the cell range.
            </param>
            <param name="height">
              Number of rows to span. 
            </param>
            <param name="width">
              Number of columns to span.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Cell(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object for the specified row and column index.
            </summary>
            <param name="row">
              The row index.
            </param>
            <param name="col">
              The column index.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Cells(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object with the specified bounds.
            </summary>
            <param name="top">
              The row index of the upper-left corner of the cell range.
            </param>
            <param name="left">
              The column index of the upper-left corner of the cell range.
            </param>
            <param name="bottom">
              The row index of the bottom-right corner of the cell range.
            </param>
            <param name="right">
              The column index of the bottom-right corner of the cell range.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Row(System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object for the specified row index.
            </summary>
            <param name="rowIndex">
              The row index of the cell range.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Rows(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object for the specified rows.
            </summary>
            <param name="top">
              The top row index of the cell range.
            </param>
            <param name="bottom">
              The botom row index of the cell range.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Col(System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object for the specified column.
            </summary>
            <param name="colIndex">
              The column index of the cell range.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Cols(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object for the specified columns.
            </summary>
            <param name="left">
              The left column index of the cell range.
            </param>
            <param name="right">
              The right column index of the cell range.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.EmptyRange">
            <summary>
            Returns <see cref="F:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Empty"/> that is an empty range.
            </summary>
            <returns>An empty range object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Table">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object for the whole table.
            </summary>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Auto(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object for the specified row and column.
            </summary>
            <param name="rowIndex">
            The row index. -1 to create a range of columns or whole table.
            </param>
            <param name="colIndex">
            The column index. -1 to create a range of rows or whole table.
            </param>
            <remarks>
            If both row and column index are less than zero, a table will be created.
            If row index is less than zero and column index greater or equal to zero, a column range will be created.
            If row index is greater or equal to zero and column index less than zero, a row range will be created.
            Otherwise a cell range is created.
            </remarks>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Auto(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object for the specified rows and columns.
            </summary>
            <param name="top">
            The row index. -1 to create a range of columns or whole table.
            </param>
            <param name="left">
            The column index. -1 to create a range of rows or whole table.
            </param>
            <param name="bottom">
            Bottom row index. 
            </param>
            <param name="right">
            Right column index. 
            </param>
            <remarks>
            If both row and column index are less than zero, a table will be created.
            If row index is less than zero and column index greater or equal to zero, a column range will be created.
            If row index is greater or equal to zero and column index less than zero, a row range will be created.
            Otherwise a cell range is created.
            </remarks>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.GetFirstCell(System.Int32@,System.Int32@)">
            <summary>
            Enumerate through all cells in range object. 
            </summary>
            <param name="top">
            The row index of the upper-left corner of the cell range.
            </param>
            <param name="left">
            The column index of the upper-left corner of the cell range.
            </param>
            <returns>This method returns the first cell in the range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.GetNextCell(System.Int32@,System.Int32@)">
            <overload>
            This method returns the adjacent cell in the range for the given row and column index.
            </overload>
            <summary>
            This method returns the adjacent cell in the range for the given row and column index.
            </summary>
            <param name="nRow">
              The row index.
            </param>
            <param name="nCol">
              The column index.
            </param>
            <returns>
            <see langword="true"/> if an adjacent cell in this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object coud be found; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.GetNextCell(System.Int32@,System.Int32@,System.Boolean)">
            <summary>
            This method returns the adjacent cell in the range for the given row and column index.
            </summary>
            <param name="nRow">
              The row index.
            </param>
            <param name="nCol">
              The column index.
            </param>
            <param name="bSortByRow">
            <see langword="true"/> if the range should be traversed by row; <see langword="false"/> if the range should be traversed by column.
            </param>
            <returns>
            <see langword="true"/> if an adjacent cell in this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object could be found; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.ExpandRange(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Convert column and row ranges into cell ranges with the specified bounds.
            (Could also be done through IntersectRange ... if nFirstRow &gt;= nFirstCol &gt;= 0). 
            </summary>
            /<remarks>
            Column ranges will be converted to cell ranges using nFirstRow and nRowCount. 
            Row ranges will be converted to cell ranges using nFirstCol and nColCount. 
            Column ranges will be converted to cell ranges using all input parameters. 
            </remarks>
            <param name="nFirstRow">Row index for the first non-label cell in grid area.</param>
            <param name="nFirstCol">Column index for the first non-label cell in grid area.</param>
            <param name="nRowCount">Last row in the grid.</param>
            <param name="nColCount">Last column in the grid</param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.OffsetRange(System.Int32,System.Int32)">
            <summary>
            Adjusts the location of this range by the specified amount.
            </summary>
            <param name="rowOffset">Amount of rows to offset the location.</param>
            <param name="colOffset">Amount of columns to offset the location.</param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.IntersectsWith(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
              <para>Determines if this range intersects with <paramref name="range"/>.</para>
            </summary>
            <param name="range">
              The range to test.
            </param>
            <example>
              <para>The following example creates two cell ranges and tests whether they intersect:</para>
              <code lang="C#">
              GridRangeInfo firstRange = new GridRangeInfo(1, 1, 100, 100);
              ...
              </code>
            </example>
            <returns>
              <para><see langword="true"/> if there is any intersection.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Contains(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            <para>Determines if this range fully contains all of <paramref name="range"/>.</para>
            </summary>
            <param name="range">
              The range to test.
            </param>
            <returns>
              <para><see langword="true"/> if range is a subset of this range.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.IntersectRange(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
              <para>Creates a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> with the intersection of itself and the specified <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</para>
            </summary>
            <overload>
              <para>Creates a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> with the intersection of itself and the specified <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</para>
            </overload>
            <param name="range">
              The <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> with which to intersect.
            </param>
            <example>
              <para>The following example creates two <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> objects and creates a <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> with their intersection:</para>
              <code lang="C#">GridRangeInfo firstRange = new GridRangeInfo(0, 0, 100, 100);
              </code>
            </example>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.IntersectRange(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
              <para>Creates a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> with the intersection of two <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> parameters.</para>
            </summary>
            <param name="r1">
              The first <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> with which to intersect.
            </param>
            <param name="r2">
              The second <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> with which to intersect.
            </param>
            <example>
              <para>The following example creates two <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> objects and creates a <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> with their intersection:</para>
              <code lang="C#">GridRangeInfo firstRange = new GridRangeInfo(0, 0, 100, 100);
              </code>
            </example>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.UnionRange(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <overload>
            Creates a <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that represents the union of itself and another range.
            </overload>
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that represents the union of itself and another range.
            </summary>
            <param name="range">
            A range to union.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.UnionRange(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that represents the union of two ranges.
            </summary>
            <param name="r1">
            A range to union.
            </param>
            <param name="r2">
            A range to union.
            </param>
            <returns>The new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that this method creates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Equals(System.Object)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.GetHashCode">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.op_Equality(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.op_Inequality(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Compare(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary cref="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Equals(System.Object)">
            	Compares two range objects and returns if they are both equal. 
            </summary>
            <param name="r1">The left-hand side of the operator.</param>
            <param name="r2">The right-hand side of the operator.</param>
            <returns>
            	bool
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.GetAlphaLabel(System.Int32)">
            <summary>
            Returns a string in the format "A, B, C, ... AA, AB ..." to be used for column labels.
            </summary>
            <param name="nCol">The column index.</param>
            <returns>
              <para>A string that contains the column label for the column index.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.GetNumericLabel(System.Int32)">
            <summary>
            Returns a numeric string in the format to be used for row labels.
            </summary>
            <param name="nRow">The row index.</param>
            <returns>
              <para>A string that contains the row label for the row index.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.ToString">
            <overload>
              <para>Converts the attributes of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> to a human-readable string.</para>
            </overload>
            <summary>
              <para>Converts the attributes of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> to a human-readable string.</para>
            </summary>
            <remarks>
            The generate string will be in the format R#C#, R#, C#, T.<para/>
            An example for a range of cells is "R1C1:R10C20" or "R5C5".<para/>
            An example for a range of rows is "R1:R10" or "R6".<para/>
            An example for a range of columns is "C1:C10" or "C7".<para/>
            An example for a table range is "T".<para/>
            </remarks>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.ToString(System.IFormatProvider)">
            <summary>
              <para>Converts the attributes of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> to a human-readable string.</para>
            </summary>
            <param name="provider">The <see cref="T:System.IFormatProvider"/> to use to format the value. Is ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</para>
            </returns>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.ToString(System.String)">
            <summary>
              <para>Converts the attributes of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> to a human-readable string.</para>
            </summary>
            <param name="format">Ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</para>
            </returns>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.ToString(System.String,System.IFormatProvider)">
            <summary>
              <para>Converts the attributes of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> to a human-readable string.</para>
            </summary>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value. Is ignored.</param>
            <param name="format">Ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</para>
            </returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Parse(System.String)">
            <summary>
            Creates a range object from a string.
            </summary>
            <param name="parseText">The text with text representation of the range.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> with coordinates specifed in the string.</returns>
            <remarks>
            The method parses a string that was previously created with <see cref="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.ToString"/>.
            <para/>
            The string should be in the format R#C#, R#, C#, T.<para/>
            An example for a range of cells is "R1C1:R10C20" or "R5C5".<para/>
            An example for a range of rows is "R1:R10" or "R6".<para/>
            An example for a range of columns is "C1:C10" or "C7".<para/>
            An example for a table range is "T".<para/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.RangeType">
            <summary>
            The <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType"/> of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.IsTable">
            <summary>
              <para><see langword="true"/> if this represents a table.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.IsRows">
            <summary>
              <para><see langword="true"/> if this represents a range of rows.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.IsCols">
            <summary>
              <para><see langword="true"/> if this represents a range of columns.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.IsCells">
            <summary>
              <para><see langword="true"/> if this represents a range of individual cells.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Top">
            <summary>
              The row index of the upper-left corner of the cell range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Left">
            <summary>
              The column index of the upper-left corner of the cell range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Bottom">
            <summary>
              The row index of the bottom-right corner of the cell range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Right">
            <summary>
              The column index of the bottom-right corner of the cell range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.IsEmpty">
            <summary>
              <para>Tests whether this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> has a <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType"/> of Empty.</para>
            </summary>
            <value>
              <para><see langword="true"/> if <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType"/> is Empty; otherwise, <see langword="false"/>.</para>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Width">
            <summary>
              <para>Gets the width of the range defined by this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Height">
            <summary>
              <para>Gets the height of the range defined by this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</para>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo.Info">
            <summary>
            Results of ToString method.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType.Empty">
            <summary>
            Range is empty.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType.Cells">
            <summary>
            Range of cells.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType.Rows">
            <summary>
            Range with rows.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType.Cols">
            <summary>
            Range with columns.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType.Table">
            <summary>
            Range is a whole table.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList">
            <summary>
            A collection of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> objects.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.Empty">
            <summary>
            An empty and Read-only list.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList"/>.
            </overload>
            <summary>
            Initializes a new empty <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.CopyTo(Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList,System.Int32)">
            <summary>
            Copies all range objects into a <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList"/> starting at specified index.
            </summary>
            <param name="rl">The <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList"/> where the values should be copied to.</param>
            <param name="index">The starting index in the destination list.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.Clone">
            <summary>
            Makes an exact copy of the current object.
            </summary>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList"/> with duplicated <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> objects.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.RemoveEmptyRanges">
            <summary>
            Removes any empty ranges from the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.GetRangesContaining(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Searches for ranges in the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList"/> that contain a specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList"/> with ranges that match the criteria.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.GetRangesIntersecting(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Searches for ranges in the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList"/> that intersect with a specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList"/> with ranges that match the criteria.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.GetRangesContained(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Searches for ranges in the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList"/> that are contained in a specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList"/> with ranges that match the criteria.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.GetOuterRange(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Returns a <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that spans over all ranges that intersect with a specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> that contains the original <paramref name="range"/> and
            the outer bounds of all ranges that intersect with <paramref name="range"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.AnyRangeContains(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Determines if a range in the range list contains the specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>True if any range contains the specified range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.AnyRangeIntersects(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Determines if a range in the range list intersects with the specified range.
            </summary>
            <param name="range">The range to be searched for.</param>
            <returns>True if any range contains the specified range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.InsertRows(System.Int32,System.Int32)">
            <summary>
            Updates the range list when rows have been inserted in the grid.
            </summary>
            <param name="row">The row index where rows have been inserted.</param>
            <param name="count">The number of rows that were inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.InsertCols(System.Int32,System.Int32)">
            <summary>
            Updates the range list when columns have been inserted in the grid.
            </summary>
            <param name="col">The column index where columns have been inserted.</param>
            <param name="count">The number of columns that were inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.RemoveRows(System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the range list when rows were removed from the grid.
            </summary>
            <param name="from">The first row index.</param>
            <param name="last">The last row index.</param>
            <param name="maxrow">The new row count in the grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.RemoveCols(System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the range list when columns were removed from the grid.
            </summary>
            <param name="from">The first column index.</param>
            <param name="last">The last column index.</param>
            <param name="maxcol">The new column count in the grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.MoveRows(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the range list when rows were moved in the grid.
            </summary>
            <param name="nFromRow">The first row index.</param>
            <param name="nToRow">The last row index.</param>
            <param name="nDestRow">The destination row index.</param>
            <param name="maxrow">The new row count in the grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.MoveCols(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates the range list when columns were moved in the grid.
            </summary>
            <param name="nFromCol">The first column index.</param>
            <param name="nToCol">The last column index.</param>
            <param name="nDestCol">The destination column index.</param>
            <param name="maxcol">The new column count in the grid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.FilterRangeType(Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType)">
            <summary>
            Returns a range list with ranges that match a specified <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType"/>.
            </summary>
            <param name="filter">The <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType"/> to search for.</param>
            <returns>A <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList"/> with ranges that match the above criteria.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.ExpandRanges(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a range list and convert column and row ranges into cell ranges with the specified bounds.
            </summary>
            <param name="nFirstRow">Row index for the first non-label cell in grid area.</param>
            <param name="nFirstCol">Column index for the first non-label cell in grid area.</param>
            <param name="nRowCount">Last row in the grid.</param>
            <param name="nColCount">Last column in the grid</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList"/> with new <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> objects that this method creates.</returns>
            /<remarks>
            Column ranges will be converted to cell ranges using nFirstRow and nRowCount. 
            Row ranges will be converted to cell ranges using nFirstCol and nColCount. 
            Column ranges will be converted to cell ranges using all input parameters. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.GetColRanges(Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType)">
            <summary>
            Creates a range list with column ranges that match a specified criteria.
            </summary>
            <param name="filter">The filter criteria.</param>
            <returns>The range list with column ranges.</returns>
            <remarks>
            Use <para/>
            rangeList.GetColRanges(GridRangeInfoType.Cells|GridRangeInfoType.Cols);<para/>
            if you want to get column ranges for both ranges that are cells or column ranges.<para/>
            Use <para/>
            rangeList.GetColRanges(GridRangeInfoType.Cols);<para/>
            if you only want to get column ranges and not cell ranges.<para/>
            Neighboring ranges will be combined if they intersect or have the same border (e.g. C4:C5 and C6:C7 will be combined into C4:C7).
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.GetRowRanges(Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType)">
            <summary>
            Creates a range list with row ranges that match a specified criteria.
            </summary>
            <param name="filter">The filter criteria.</param>
            <returns>The range list with row ranges.</returns>
            <remarks>
            Use <para/>
            rangeList.GetRowRanges(GridRangeInfoType.Cells|GridRangeInfoType.Rows);<para/>
            if you want to get row ranges for both ranges that are cells or row ranges.<para/>
            Use <para/>
            rangeList.GetRowRanges(GridRangeInfoType.Rows);<para/>
            if you only want to get row ranges and not cell ranges.<para/>
            Neighboring ranges will be combined if they intersect or have the same border (e.g. R4:R5 and R6:R7 will be combined into R4:R7).
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.Parse(System.String)">
            <summary>
            Creates a range list from a string with comma separated range descriptions.
            </summary>
            <param name="parseText">The text to be parsed.</param>
            <returns>The <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList"/> with range objects described in the string.</returns>
            <remarks>
            The method parses a string that was previously created with <see cref="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.ToString"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.ToString">
            <overload>
              <para>Converts the ranges of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> to a comma separated human-readable string.</para>
            </overload>
            <summary>
              <para>Converts the ranges of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> to a comma separated human-readable string.</para>
            </summary>
            <remarks>
            The generate string will be in the format R#C#, R#, C#, T.<para/>
            An example for a range of cells is "R1C1:R10C20" or "R5C5".<para/>
            An example for a range of rows is "R1:R10" or "R6".<para/>
            An example for a range of columns is "C1:C10" or "C7".<para/>
            An example for a table range is "T".<para/>
            Each range object will be comma separated. For example: "R3:R5,R8:R10,R14:R15".<para/>
            </remarks>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</para>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.ToString(System.IFormatProvider)">
            <summary>
              <para>Converts the ranges of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> to a comma separated human-readable string.</para>
            </summary>
            <param name="provider">The <see cref="T:System.IFormatProvider"/> to use to format the value. Is ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</para>
            </returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.ToString(System.String)">
            <summary>
              <para>Converts the ranges of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> to a comma separated human-readable string.</para>
            </summary>
            <param name="format">Ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</para>
            </returns>
            <genoverload/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.ToString(System.String,System.IFormatProvider)">
            <summary>
              <para>Converts the ranges of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> to a comma separated human-readable string.</para>
            </summary>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value. Is ignored.</param>
            <param name="format">Ignored.</param>
            <returns>
              <para>A string that contains the column and row index of the top-left and bottom-right position of this <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</para>
            </returns>
            <genoverload/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.ActiveRange">
            <summary>
            The last range in the range list.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList.Info">
            <summary>
            Results of ToString method.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellBeginEditEventHandler">
            <summary>
            Represents a method that will handle the CurrentCell BeginEdit Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellBeginEditEventArgs">CurrentCellBeginEditEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellBeginEditEventArgs">
            <summary>
            Represents the class which holds the properties of CurrentCellBeginEdit Event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCancelEventArgs">
            <summary>
            Provides data for a cancellable event. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCancelEventArgs.#ctor">
            <summary>
            Overloaded. Initializes a new instance of the GridCancelEventArgs class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCancelEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GridCancelEventArgs class with the Cancel property set to the given value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCancelEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to allow or cancel the event.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellBeginEditEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellBeginEditEventArgs">CurrentCellBeginEditEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellBeginEditEventArgs.RowcolumnIndex">
            <summary>
            Gets the value of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellEndEditEventHandler">
            <summary>
            Represents a method that will handle the CurrentCell EndEdit event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellEndEditEventArgs">CurrentCellEndEditEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellEndEditEventArgs">
            <summary>
            Represents a class which holds the properties of CurrentCell EndEdit event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellEndEditEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellEndEditEventArgs">CurrentCellEndEditEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellEndEditEventArgs.RowcolumnIndex">
            <summary>
            Gets the value of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventHandler">
            <summary>
            Represents a method that will handle the CurrentCell Validating event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs">CurrentCellValidatingEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs">
            <summary>
            Represents a class which holds the properties of CurrentCell Validating event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs">CurrentCellValidatingEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs.RowcolumnIndex">
            <summary>
            Gets the value of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs.OldValue">
            <summary>
            Gets the old value of the CurrentCell.
            </summary>
            <value>Value of the cell.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs.NewValue">
            <summary>
            Gets the new value of the CurrentCell.
            </summary>
            <value>Value of the cell.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs.IsValid">
            <summary>
            IsValid property used to maintain the currentcell and need to perform whether canceledit or endedit.
            cancel and isvalid properties are working on four differnt cases.
            1.If Cancel=True and IsValid=False then currentcell remains in edit mode.
            2.If Cancel=True and IsValid=True then canceledit and currentcell remains in edit mode.
            3.If Cancel=False and IsValid=False then canceledit and currentcell moved to next cell.
            4.If Cancel=False and IsValid=True then endedit and currentcell moved to next cell.(Default)
            </summary>
            <value>True or False.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatedEventHandler">
            <summary>
            Represents a method that will handle the CurrentCell Validated event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatedEventArgs">CurrentCellValidatedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatedEventArgs">
            <summary>
            Represents a class which holds the properties of CurrentCell Validated event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatedEventArgs">CurrentCellValidatedEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatedEventArgs.RowcolumnIndex">
            <summary>
            Gets the value of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatedEventArgs.OldValue">
            <summary>
            Gets the old value of the CurrentCell.
            </summary>
            <value>Value of the cell.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatedEventArgs.NewValue">
            <summary>
            Gets the new value of the CurrentCell.
            </summary>
            <value>Value of the cell.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValueChangedEventhandler">
            <summary>
            Represents a method that will handle the currentcell value changed event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValueChangedEventArgs">CurrentCellValueChangedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValueChangedEventArgs">
            <summary>
            Represents a class which holds the properties of CurrentCell ValueChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValueChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValueChangedEventArgs">CurrentCellValueChangedEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValueChangedEventArgs.RowcolumnIndex">
            <summary>
            Gets the value of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValueChangedEventArgs.ControlText">
            <summary>
            Gets the control text of the current cell .
            </summary>
            <value>Text in current cell.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatingEventHandler">
            <summary>
            Represents a method that will handle the CurrentCell Activating Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatingEventArgs">CurrentCellActivatingEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatingEventArgs">
            <summary>
            Represents a class which holds the properties of CurrentCell Activating Event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatingEventArgs.CurrentRowColumnIndex">
            <summary>
            Gets the value of current <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatingEventArgs.PreviousRowColumnIndex">
            <summary>
            Gets the value of  previous <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatingEventArgs.ActivationTrigger">
            <summary>
            Gets the value of trigger options .
            </summary>
            <value>One of the options in <see cref="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatingEventArgs.ActivationTrigger"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatedEventHandler">
            <summary>
            Represents a method that will handle the CurrentCell Activated Event
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatedEventArgs">CurrentCellActivatedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatedEventArgs">
            <summary>
            Represents a class which holds the properties of current cell Activated event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatedEventArgs.CurrentRowColumnIndex">
            <summary>
            Gets the value of  current <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatedEventArgs.PreviousRowColumnIndex">
            <summary>
            Gets the value of  previous <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatedEventArgs.ActivationTrigger">
            <summary>
            Gets the value of trigger options .
            </summary>
            <value>One of the options in <see cref="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatedEventArgs.ActivationTrigger"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventHandler">
            <summary>
            Represents a method that will handle the CellRequest Navigate Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs">CellRequestNavigateEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs">
            <summary>
            Represents a class which holds the properties of CellRequest Navigate Event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs">CellRequestNavigateEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>Name.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs.NavigateText">
            <summary>
            Gets or sets the navigation text.
            </summary>
            <value>Navigation text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this event should be handled or not.
            </summary>
            <value>True or false.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs.Range">
            <summary>
            Range in the Grid Where the selection need to be moved.
            </summary>
            <value>Selection range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs.RowColumnIndex">
            <summary>
            Gets or sets the value of current <see cref="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs.RowColumnIndex"/>  .
            </summary>
            <value>An instance of <see cref="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs.RowColumnIndex"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.NamespaceDoc">
            <summary>
            Contains classes and enumerators that simplify the programming with predefined methods and events 
            for common functionalities.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.PrecedenceStyle">
            <summary>
            Specifies the precedence style options.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.PrecedenceStyle.Row">
            <summary>
            Row Style.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.PrecedenceStyle.Column">
            <summary>
            Column Style.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger">
            <summary>
            Specifies the activation trigger options
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger.Mouse">
            <summary>
            Activation by Mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger.Touch">
            <summary>
            Activation by Touch.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger.Pen">
            <summary>
            Activation by Pen.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger.Keyboard">
            <summary>
            Activation by Keyboard.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger.Program">
            <summary>
            Activation by Program.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.EditTrigger">
            <summary>
            Specifies the edit trigger options
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.EditTrigger.OnTap">
            <summary>
            Trigger while single click.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.EditTrigger.OnDoubleTap">
            <summary>
            Trigger while double click.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.EditorSelectionBehavior">
            <summary>
            Specifies the selection behavior options when enter into edit mode
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.EditorSelectionBehavior.SelectAll">
            <summary>
            Select all the cells.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.EditorSelectionBehavior.MoveLast">
            <summary>
            Move to the Last cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CopyPasteOptions">
            <summary>
            Defines copypaste options.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.CopyPasteOptions.All">
            <summary>
            copy the values,formats,formulas
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.CopyPasteOptions.Formats">
            <summary>
            copy the formats such as background,foreground,comments,coveredcells without values
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.CopyPasteOptions.Values">
            <summary>
            copy the cellvalues only
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.CopyPasteOptions.Formulas">
            <summary>
            copy the formulas and cellvalues without formats
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.CopyPasteOptions.Comments">
            <summary>
            copy the comments only without values and formats
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.CopyPasteOptions.Transpose">
            <summary>
            Rotate the row values
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.CopyPasteOptions.ClipboardOnly">
            <summary>
            Copy and paste the text from clipboard without styles
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.AutoScrollOrientation">
            <summary>
            Specifies horizontal or vertical autoscrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.AutoScrollOrientation.None">
            <summary>
            No autoscrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.AutoScrollOrientation.Horizontal">
            <summary>
            Only horizontal autoscrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.AutoScrollOrientation.Vertical">
            <summary>
            Only vertical autoscrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.AutoScrollOrientation.Both">
            <summary>
            Both horizontal and vertical autoscrolling.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridResizeToFitOptions">
            <summary>
            Specifies options for a ResizeColumnsToFit or ResizeRowsToFit method call. <para/>
            The options can be combined.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.GridResizeToFitOptions.None">
            <summary>
            Uses default behavior for resizing cells to fit contents. Ignores covered cells, does shrink size, does not include headers.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.GridResizeToFitOptions.NoShrinkSize">
            <summary>
            Do not shrink size of cells.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.GridResizeToFitOptions.IncludeHeaders">
            <summary>
            Include also row or column header for resizing the cells.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.GridQueryBounds.Height">
            <summary>
            Queries height of cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.GridQueryBounds.Width">
            <summary>
            Queries width of cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ImportMode">
            <summary>
            Specifies the importing mode options 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.ImportMode.Value">
            <summary>
            Combination of style and text
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.ImportMode.Style">
            <summary>
            Import style only from excel
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.ImportMode.Text">
            <summary>
            Import text only without styles
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingReason">
            <summary>
            A <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingReason"/> is used by <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingColumnsEventArgs"/> and <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingRowsEventArgs"/> to give a hint
            about the current state of the user action and reason for this event.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingReason.PointerPressed">
            <summary>
            Indicates user pointer pressed
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingReason.PointerMove">
            <summary>
            Indicates user pointer mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingReason.PointerReleased">
            <summary>
            Indicates user pointer released.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingReason.DoubleTapped">
            <summary>
            Indicates user double tapped
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingReason.Hidden">
            <summary>
            Indicates user whether row or column is hidden or not.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingReason.HitTest">
            <summary>
            Indicates hit test.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridValueEventArgs`1">
            <summary>
            Provides a generic handler for holding simple data.
            </summary>
            <typeparam name="T">A Specific Type</typeparam>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridValueEventArgs`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridValueEventArgs`1"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridValueEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridValueEventArgs`1"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.GridValueEventArgs`1.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRoutedEventHandler">
            <summary>
            Represents a method that will handlw the Grid RoutedEvent.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRoutedEventArgs">GridRoutedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRoutedEventArgs">
            <summary>
            This is a base class for events of the Syncfusion libraries. It supports writing
            properties in its ToString() method. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRoutedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRoutedEventArgs">GridRoutedEventArgs</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRoutedEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRoutedEventArgs">GridRoutedEventArgs</see> class. 
            </summary>
            <param name="source">Source of the event.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRoutedEventArgs.Empty">
            <summary>
            Gets the new routed event of grid.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRoutedEventArgs"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCancelRoutedEventHandler">
            <summary>
            Represents a method that will handle the Grid CancelRouted Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCancelRoutedEventArgs">GridCancelRoutedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCancelRoutedEventArgs">
            <summary>
            Represents a class which holds the properties of Grid CancelRouted Event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCancelRoutedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCancelRoutedEventArgs">GridCancelRoutedEventArgs</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCancelRoutedEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCancelRoutedEventArgs">GridCancelRoutedEventArgs</see> class. 
            </summary>
            <param name="source">Source of the event.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCancelRoutedEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to allow or cancel the event.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCancelEventHandler">
            <summary>
            Represents a method that will handle the Grid CancelEvent.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCancelEventArgs">GridCancelEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellContextMenuOpeningEventArgs">
            <summary>
            Event Handler to Handle the CellContextMenuOpening Event which can be marked as Handled.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.SyncfusionHandledEventArgs.#ctor">
            <summary>
            Overloaded. Initializes a new instance of the SyncfusionHandledEventArgs class with the Handled property set to False.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.SyncfusionHandledEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SyncfusionHandledEventArgs class with the Handled property set to the given value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.SyncfusionHandledEventArgs.Handled">
            <summary>
            Indicates whether the event has been handled and no further processing of the event should happen.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.CellContextMenuOpeningEventArgs.#ctor(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellContextMenuOpeningEventArgs">CellContextMenuOpeningEventArgs</see> class. 
            </summary>
            <param name="cell"></param>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.CellContextMenuOpeningEventArgs.contextmenu">
            <summary>
            Gets or sets the Context Menu items
            </summary>
            <value>An instance of <see cref="T:System.Windows.Forms.ContextMenu"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellContextMenuOpeningEventArgs.Cell">
            <summary>
            Gets or Sets the RowColumnIndex of a cell
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellContextMenuOpeningEventHandler">
            <summary>
            Gets or Sets the Style for a cell.
            Represents the method that handles a QueryContextMenuOpening event...
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeInsertedEventHandler">
            <summary>
            Represents the method that handles the <see cref="!:GridModel.RowsInserted"/> and <see cref="!:GridModel.ColumnsInserted"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeInsertedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeInsertedEventArgs">
            <summary>
            Provides data about the <see cref="!:GridModel.RowsInserted"/> and <see cref="!:GridModel.ColumnsInserted"/> events.
            </summary>
            <remarks>
            GridRangeInsertedEventArgs is a custom event argument class used by the
            <see cref="!:GridModel.RowsInserted"/> and <see cref="!:GridModel.ColumnsInserted"/> events.
            <para/>
            This event is raised by the model to notify all associated views that it has inserted the specified number of rows
            or column into its data store and all associated views should redraw affected display contents.
            <para/>
            The <see cref="P:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.SyncfusionHandledEventArgs.Handled"/> property indicates if all changes were successfully made to the model. If it is
            False, the operation was aborted. However, the view contents need to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeInsertedEventHandler"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeInsertedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeInsertedEventArgs"/>.
            </summary>
            <param name="insertAt">The row or column index where the cells should be inserted before.</param>
            <param name="count">The number of rows or columns.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeInsertedEventArgs.InsertAt">
            <summary>
            Gets the row or column index where the cells should be inserted before.
            </summary>
            <value>The row or column index.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeInsertedEventArgs.Count">
            <summary>
            The number of rows or columns.
            </summary>
            <value>rows or columns count.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeRemovedEventHandler">
            <summary>
            Represents the method that handles <see cref="!:GridModel.RowsRemoved"/> and <see cref="!:GridModel.ColumnsRemoved"/> events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeRemovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeRemovedEventArgs">
            <summary>
            Provides data about the <see cref="!:GridModel.RowsRemoved"/> and <see cref="!:GridModel.ColumnsRemoved"/> events.
            </summary>
            <remarks>
            GridRangeRemovedEventArgs is a custom event argument class used by the
            <see cref="!:GridModel.RowsRemoved"/> and <see cref="!:GridModel.ColumnsRemoved"/> events.
            <para/>
            This event is raised by the model to notify all associated views that it has 
            rearranged the specified rows or columns in its data store and all associated views
            should redraw affected display contents.
            <para/>
            The <see cref="P:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.SyncfusionHandledEventArgs.Handled"/> property indicates if all changes
            were successfully made to the model. If it is false, the operation was aborted. However, the view contents need
            to be redrawn no matter if the operation was successful or not.
            </remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeRemovedEventHandler"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeRemovedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeRemovedEventArgs"/>.
            </summary>
            <param name="removeAt">The row or column index where the cells should be removed.</param>
            <param name="count">The number of rows or columns.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeRemovedEventArgs.RemoveAt">
            <summary>
            Gets or sets the index of the first row or column that was removed.
            </summary>
            <value>Row/Column index.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeRemovedEventArgs.Count">
            <summary>
            The number of rows or columns that are removed.
            </summary>  
            <value>Rows or Columns count.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCutPasteEventHandler">
            <summary>
            Represents the method that handles the<see cref="!:GridModel.ClipboardPaste"/> 
            <see cref="!:GridModel.ClipboardCut"/> 
            <see cref="!:GridModel.ClipboardCopy"/>
            events.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCutPasteEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCutPasteEventArgs">
            <summary>
            Provides data about the <see cref="!:GridModel.CutPaste"/>: 
            <see cref="M:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste.Paste"/>
            <see cref="M:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste.Cut"/>
            <see cref="M:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste.Copy"/>
            events.
            </summary>
            <remarks>
            GridCutPasteEventArgs is a custom event argument class used by the
            <see cref="!:GridModel.CutPaste"/> operations in a <see cref="!:GridModel"/>.
            <para/>
            This event lets you supply your own clipboard formats or add support for pasting additional clipboard content.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCutPasteEventArgs.range">
            <summary>
            Its contain the range of cells cut or copied
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCutPasteEventArgs.#ctor(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCutPasteEventArgs"/> object.
            </summary>
            <param name="range">You can save here a list of ranges that have been copied.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCutPasteEventArgs.Range">
            <summary>
            Gets or sets range list. You can save here a list of ranges that have been copied. This property will only be checked for the
            Copy operation. Can be NULL.
            </summary>
            <value>Copied ranges.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingColumnsEventHandler">
            <summary>
            Represents a method that will handle the Resizing column Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingColumnsEventArgs">ResizingColumnsEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingColumnsEventArgs">
            <summary>
            Represents a class which holds the properties of Resizing ColumnEvent.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingColumnsEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingColumnsEventArgs">ResizingColumnsEventArgs</see> class. 
            </summary>
            <param name="originalSource">Source of the event.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingColumnsEventArgs.ColumnIndex">
            <summary>
            Gets the column index.
            </summary>
            <value>Column index.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingColumnsEventArgs.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingColumnsEventArgs.Reason">
            <summary>
            Gets the reason for this event and hints about the current state of the user action.
            </summary>
            <value>Current state of the event.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingRowsEventHandler">
            <summary>
            Represents a method that will handle the Resizing row Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingRowsEventArgs">ResizingRowsEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingRowsEventArgs">
            <summary>
            Represents a class which holds the properties of Resizing row Event
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingRowsEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingRowsEventArgs">ResizingRowsEventArgs</see> class. 
            </summary>
            <param name="originalSource">Source of the event.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingRowsEventArgs.RowIndex">
            <summary>
            Gets the row index.
            </summary>
            <value>Row index.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingRowsEventArgs.Height">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.ResizingRowsEventArgs.Reason">
            <summary>
            Gets  the reason for this event and hints about the current state of the user action.
            </summary>
            <value>Current state of the event.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellCommentOpeningEventHandler">
            <summary>
            Represents a method that will handle the cell comment opening event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellCommentOpeningEventArgs">CellCommentOpeningEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellCommentOpeningEventArgs">
            <summary>
            Represents a class which holds the properties of cell comment opening event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.CellCommentOpeningEventArgs.#ctor(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellCommentOpeningEventArgs">CellCommentOpeningEventArgs</see> class. 
            </summary>
            <param name="cell">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellCommentOpeningEventArgs.Cell">
            <summary>
            Gets  the value that indicates cell comment index.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellCommentOpeningEventArgs.Comment">
            <summary>
            Gets or sets the cell comment.
            </summary>
            <value>Comment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellCommentOpeningEventArgs.CommentBrush">
            <summary>
            Gets or sets the comment brush.
            </summary>
            <value>An instance of <see cref="T:System.Drawing.Brush"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellCommentOpeningEventArgs.Height">
            <summary>
            Gets or sets the height of the CommentToolTip Popup Window to be displayed
            </summary>
            <value>Height of window.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellCommentOpeningEventArgs.Width">
            <summary>
            Gets or sets the width of the CommentToolTip Popup Window to be displayed
            </summary>
            <value>Width of window.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellTooltipOpeningEventHandler">
            <summary>
            Represents a method that will handle the cell Tooltip opening event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellTooltipOpeningEventArgs">CellTooltipOpeningEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellTooltipOpeningEventArgs">
            <summary>
            Represents a class which holds the properties of Cell Tooltip opening event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellTooltipOpeningEventArgs.Cell">
            <summary>
            Gets or sets the value that indicates cell tooltip index.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellTooltipOpeningEventArgs.Tooltip">
            <summary>
            Gets or sets the cell tooltip message.
            </summary>
            <value>Tool tip message.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.CellTooltipOpeningEventArgs.DataValidationTooltip">
            <summary>
            Gets or sets the cell data validaion tooltip message.
            </summary>
            <value>Tooltip message.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangingEventHandler">
            <summary>
            Represents a method that will handle the Selection changing event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangingEventArgs">SelectionChangingEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangingEventArgs">
            <summary>
            Represents a class which holds the properties of Selection changing event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangingEventArgs.ActiveRange">
            <summary>
            Gets or sets the value of active range .
            </summary>
            <value>Active Range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangingEventArgs.NewRanges">
            <summary>
            Gets or sets the  list of selected new ranges .
            </summary>
            <value>Selected ranges.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangingEventArgs.OldRanges">
            <summary>
            Gets  the  list of selected old ranges .
            </summary>
            <value>Selected ranges.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangingEventArgs.SelectionTrigger">
            <summary>
            Gets the value of trigger options .
            </summary>
            <value>One of the options in <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangedEventHandler">
            <summary>
            Represents a method that will handle the Selection Changed Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangedEventArgs">SelectionChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangedEventArgs">
            <summary>
            Represents a class which holds the properties of Selection changed Event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangedEventArgs.ActiveRange">
            <summary>
            Gets or sets the value of active range .
            </summary>
            <value>Active Range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangedEventArgs.NewRanges">
            <summary>
            Gets  the  list of selected new ranges .
            </summary>
            <value>Selected ranges.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangedEventArgs.OldRanges">
            <summary>
            Gets  the  list of selected old ranges .
            </summary>
            <value>Selected ranges.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangedEventArgs.SelectionTrigger">
            <summary>
            Gets the value of trigger options .
            </summary>
            <value>One of the options in <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCellClickEventHandler">
            <summary>
            Represents a method that will handle the Grid CellClick Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCellClickEventArgs">GridCellClickEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCellClickEventArgs">
            <summary>
            Represents a class which holds the properties of Grid CellClick Event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCellClickEventArgs.#ctor(System.Int32,System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCellClickEventArgs">GridCellClickEventArgs</see> class. 
            </summary>
            <param name="row">Row Index.</param>
            <param name="col">Column Index.</param>
            <param name="args">Argument of Event.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCellClickEventArgs.RowIndex">
            <summary>
            Gets the row index of the cell.
            </summary>
            <value>Row index</value>     
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCellClickEventArgs.ColumnIndex">
            <summary>
            Gets the column index of the cell.
            </summary>
            <value>Column index</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Helpers.GridCellClickEventArgs.OriginalEventArgs">
            <summary>
            Gets the event argument the cell click.
            </summary>
            <value>Event argument.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper">
            <summary>
            Helper class is used for calculating the floating cell size when text size exceeds the cell size
            Calculate the floating cell size based on horizontal alignment like left, right or center and TextWrapping. 
            Set and Reset the flood cells when used by the floating cells. 
            The floating cell size, position and range will be stored in properties where in GridColumn are FloatingCellSize, FloatingCellStartPosition, and FloatingCellRange. 
            Set and reset the clipped region in FloatingCellClippedRegion in GridColumn for clip the floating cell while scrolling. 
            Set the display text size in DisplayTextSize in GridColumn which will be calculated when update the column
            Reset the flood cells. While editing current cell moves to out of view then reset the flood cells
            Based on alignment, Alt+Enter or floating cell height changed while editing when next or previous column goes to out of view, set and reset the floating cell selection border thickness.
            Check the current row column index in flood cell based on mouse point for selection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.EnsureFloatingCellClippedOrgin(System.Collections.Generic.List{Syncfusion.Windows.Forms.CellGrid.GridColumn},Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo)">
            <summary>
            Ensure the floating cells clipped orgin for clip the cells while scrolling
            </summary>
            <param name="items"></param>
            <param name="line"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.ResetFloatingCellOnEndEdit(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Boolean)">
            <summary>
            Reset the floating cell.
            </summary>
            <param name="column"></param>
            <param name="wrapText"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.ResetFloatingCellClippedOrgin(Syncfusion.Windows.Forms.CellGrid.GridColumn)">
            <summary>
            Reset the floating cell clipped orgin
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.GetFloodCellRowColumnIndex(Syncfusion.Windows.Forms.CellGrid.SfCellGrid,System.Drawing.Point)">
            <summary>
            Helper method used for add the selection for flood cell. Because, set the width for flood cells as 0 while arrange.
            Return the Flood cell RowColumnIndex
            </summary>
            <param name="point"> mouse point </param>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.EnsureFloatingCellSize(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Collections.Generic.List{Syncfusion.Windows.Forms.CellGrid.GridColumn},System.Drawing.Size,System.Boolean,System.Windows.Forms.HorizontalAlignment,System.Int32)">
            <summary>
            Calculate the floating cell size for display
            </summary>
            <param name="column"></param>
            <param name="elements"></param>
            <param name="cellSize"></param>
            <param name="textWrapping"></param>
            <param name="textAlignment"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.EnsureFloatingCellSize(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.String,System.Drawing.Size,System.Drawing.Size,System.Boolean,System.Windows.Forms.HorizontalAlignment)">
            <summary>
            Calculate the floating cell size on editing
            </summary>
            <param name="text"></param>
            <param name="column"></param>
            <param name="cellSize"></param>
            <param name="textSize"></param>
            <param name="textWrapping"></param>
            <param name="textAlignment"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.SetDisplayTextSize(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Boolean)">
            <summary>
            Set the text size in GridColumn for floating cells using textBlock. Which is calculated when display element is initialized
            </summary>
            <param name="column"></param>
            <param name="wrapText"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.SetFloatingCell(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Windows.Forms.HorizontalAlignment)">
            <summary>
            Set floating cell range, size and reset unused flood cells when height is changed where width goes to out of view
            </summary>
            <param name="column"></param>
            <param name="alignment"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.InvalidateFloatingCell(Syncfusion.Windows.Forms.CellGrid.GridColumn)">
            <summary>
            Invalidate row panel because some times row panel is not fired. So if floating cells enter the edit mode.
            force to invalidate the row while begin edit.
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.ResetFloatingCell(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Boolean)">
            <summary>
            Reset floating cell size, text size, range and start position
            </summary>
            <param name="column"></param>
            <param name="resetRange"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.ResetFloatingCellsInOutOfView(Syncfusion.Windows.Forms.CellGrid.GridColumn)">
            <summary>
            Reset the flood cells when current cell is goes out of view while editing
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.GetFloatingCell(Syncfusion.Windows.Forms.CellGrid.GridColumn)">
            <summary>
            To Get the Floating Cell from the floodCell
            </summary>
            <param name="floodCell">floodCell</param>
            <returns>returns Floating Cell</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.CalculateFloatingCellSizeOnDisplay(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Drawing.Size,System.Windows.Forms.HorizontalAlignment,System.Boolean,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo@)">
            <summary>
            Calculate the floating cell size based on alignment and wrapping for display
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
            <param name="textWrapping"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.CalculateFloatingCellSizeOnEdit(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Drawing.Size,System.Windows.Forms.HorizontalAlignment,System.Boolean,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo@)">
            <summary>
            Calculate floating cells size based on alignment and text wrapping in editing
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
            <param name="textWrapping"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.CalculateFloatingCellSize(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Drawing.Size,System.Windows.Forms.HorizontalAlignment,System.Boolean)">
            <summary>
             Calculate the floating cells size based on editing or display
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
            <param name="textWrapping"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.CheckCoveredCell(Syncfusion.Windows.Forms.CellGrid.SfCellGrid,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Helper method to find the next column is covered cell or not
            </summary>
            <param name="range"></param>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.CheckFloodCell(Syncfusion.Windows.Forms.CellGrid.GridColumn)">
            <summary>
            Check flood cells in already used for another floating cell.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.CheckFloodCell(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Int32)">
            <summary>
            Check the flood cells where used by another floating cell when reset the floating cell range
            </summary>
            <param name="columnIndex"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.GetFloatingCellSize(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Drawing.Size,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo@)">
            <summary>
            Get floating cell size for center alignment text
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.GetFloatingCellSize(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Drawing.Size,System.Windows.Forms.HorizontalAlignment,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo@)">
            <summary>
            Get floating cell size for left or right alignment text for display
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.GetFloatingCellSizeOnEditInTextWrapping(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Drawing.Size,System.Drawing.Size,System.Windows.Forms.HorizontalAlignment,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo@)">
            <summary>
            Get floating cell size for wrap text applied cell while editing
            </summary>
            <param name="cellSize"></param>
            <param name="textSize"></param>
            <param name="textAlignment"></param>
            <param name="range"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.GetFloatingCellSizeOnEditInCenter(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Drawing.Size,System.Windows.Forms.HorizontalAlignment,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo@)">
            <summary>
            Get floating cells size for center alignment text while editing
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.GetFloatingCellSizeOnEdit(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Drawing.Size,System.Windows.Forms.HorizontalAlignment,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo@)">
            <summary>
            Get floating cell size for left or right alignment text while editing
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.GetFloatingCellSizeOnAltEnter(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Drawing.Size,System.Windows.Forms.HorizontalAlignment,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo@)">
            <summary>
            Calculate the floating cell size when Alt+Enter pressed
            </summary>
            <param name="cellSize"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.SetFloatingCellSizeAndRangeOnEdit(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Drawing.Size,System.Drawing.Size,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Windows.Forms.HorizontalAlignment,System.Boolean)">
            <summary>
            Set the floating cells size and range while editing
            </summary>
            <param name="floatingCellSize"></param>
            <param name="cellSize"></param>
            <param name="floatingCellRange"></param>
            <param name="textAlignment"></param>
            <param name="textWrapping"></param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.SetFloatingCellWidthOnEdit(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Drawing.Size,System.Drawing.Size,System.Windows.Forms.HorizontalAlignment,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Set the floating cell width while editing for left, right and center alignment
            </summary>
            <param name="floatingCellSize"></param>
            <param name="cellSize"></param>
            <param name="floatingCellRange"></param>
            <param name="column"></param>
            <param name="textAlignment"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.SetFloatingCellHeightOnEdit(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Drawing.Size,System.Drawing.Size,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Boolean)">
            <summary>
            Set the floating cell height while editing
            </summary>
            <param name="floatingCellSize"></param>
            <param name="cellSize"></param>
            <param name="floatingCellRange"></param>
            <param name="textWrapping"></param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.SetFloodCells(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Windows.Forms.HorizontalAlignment)">
            <summary>
            Set the flood cells manually while editing, when Alt+Enter pressed. Because, while editing some cells are not set as flood when press Alt+Enter
            For example, editing the floating cell with 3 flood cells then press Alt+Enter, Now the height for that floating cell is increased by check below cell of floating cell in next row and set that cell as flood cell.
            The width and range for floating cell is changed based on FloatingCell, but other two set doesn't set as flood cell. So force to set the those cells as flood cell
            And set flood cells and height changed while editing, when next cell goes to out of view.
            For example, the view contains 15 columns.Now editing in 13th column with 2 flood cells, now floatig cell goes to next row of 13th column with 2 flood cells when find next cell
            Here 13th column of next row only set as flood cells while calculating so need to set the two cells also as flood cell.
            </summary>
            <param name="column"></param>
            <param name="alignment"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.SetFloatingCellRange(Syncfusion.Windows.Forms.CellGrid.GridColumn,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Windows.Forms.HorizontalAlignment)">
            <summary>
            Reset the flood cells when floating cell range is changed, And set the floating cell range
            </summary>
            <param name="range"></param>
            <param name="textAlignment"></param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.SetFloatingCellSizeAndPosition(Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Drawing.Size,System.Drawing.Size,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Set the floating cell position and cells size for arrange in VirtualizingRowPanel
            </summary>
            <param name="floatingCellSize"></param>
            <param name="cellSize"></param>
            <param name="range"></param>
             <param name="column"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.ResetFloodCells(Syncfusion.Windows.Forms.CellGrid.GridColumn,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Windows.Forms.HorizontalAlignment,System.Int32,System.Boolean)">
            <summary>
            Reset the flood cells when changed the floating cell range 
            And when enter begin edit the need to show full range of flood cells based on text size if any cells are used by other floating cells
            Reset the flood cells based on alignment or reset all the range based on given input of resetAll argument
            </summary>
            <param name="range"></param>
            <param name="textAlignment"></param>
            <param name="column"></param>
             <param name="columnIndex"></param>
              <param name="resetAll"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Helpers.GridFloatingCellHelper.ResetFloodCells(Syncfusion.Windows.Forms.CellGrid.GridColumn,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Boolean)">
            <summary>
            Reset the flood cells when compared with previous floating cell range and current range while editing
            </summary>
            <param name="column"></param>
            <param name="prevFloatCellRange"></param>
            <param name="resetAll"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController">
            <summary>
            Provides the base implementation for column resizing operations in SfCellGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.#ctor(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController">ColumnResizingController</see> class. 
            </summary>
            <param name="cellGrid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.HitTest(System.Drawing.Point)">
            <summary>
            Returns True or False based on the visible line on the pointer pressed position.
            </summary>
            <param name="point">Position of the pointer.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.HitTest(System.Drawing.Point,System.Windows.Forms.Cursor@)">
            <summary>
            Returns the visible line where the pointer is pressed.
            </summary>
            <param name="point">Position of the pointer.</param>
            <param name="cursor">Mouse pointer.</param>
            <returns>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.OnPointerMoved(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the pointer moves in SfCellGrid.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.OnPointerPressed(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the pointer is pressed in SfCellGrid.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.OnPointerReleased(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the pointer is released in SfCellGrid.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.DoubleTapped(System.Windows.Forms.MouseEventArgs)">
            <summary>
             Occurs when the pointer double tapped in the cell.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.SetDragLine(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo)">
            <summary>
            Sets the column line while resizing. 
            </summary>
            <param name="dragLine">Visible line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.RenderHiddenColumnBorder(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint,System.Drawing.Rectangle,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Render the hidden line border when hide the column and return false if doesn't draw the hidden border.
            </summary>
            <param name="paint">Paint object</param>
            <param name="cellRect">cellrect of the current column</param>
            <param name="rowColIndex">current row column index</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.OnFrozenColumnChange">
            <summary>
            Set the frozen start index, hide and unhide the out of view lines while set the frozen.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the 
            <see cref="T:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController">ColumnResizingController</see>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.ResizeRowIndex">
            <summary>
            Gets or sets the value which indicates, the column resizing will be perform in which RowIndex when set multiple header rows.
            </summary>
            <value>Row Index.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.HitTestPrecision">
            <summary>
            Gets or sets the value, which is used to get the visible line when mouse over the column line.
            </summary>
            <value>Visible line.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.DragLine">
            <summary>
            Gets or sets the value which indicates column line while resize the column. If drag line, then resizing will not happen.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ColumnResizingController.StartFrozenColumnIndex">
            <summary>
            Gets or sets the first visible column index
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.RowResizingController">
            <summary>
            Provides the base implementation for row resizing operations in SfCellGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.RowResizingController.#ctor(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.RowResizingController">RowResizingController</see> class. 
            </summary>
            <param name="cellgrid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.RowResizingController.HitTest(System.Drawing.Point)">
            <summary>
            Returns True or False based on the visible line on the pointer pressed position.
            </summary>
            <param name="point">Position of the pointer.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.RowResizingController.HitTest(System.Drawing.Point,System.Windows.Forms.Cursor@)">
            <summary>
            Returns the visible line where the pointer is pressed.
            </summary>
            <param name="point">Position of the pointer.</param>
            <param name="cursor">Mouse pointer.</param>
            <returns>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.RowResizingController.OnPointerMoved(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the pointer moves in SfCellGrid.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.RowResizingController.OnPointerPressed(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the pointer is pressed in SfCellGrid.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.RowResizingController.OnPointerReleased(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the pointer is released in SfCellGrid.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.RowResizingController.DoubleTapped(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer is double tapped on the cell.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.RowResizingController.SetDragLine(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo)">
            <summary>
            Sets the row line while resizing. 
            </summary>
            <param name="dragLine">Visible line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.RowResizingController.RenderHiddenRowBorder(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint,System.Drawing.Rectangle,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Render the hidden line border when hide the row and return false if doesn't draw the hidden border.
            </summary>
            <param name="paint">Paint object</param>
            <param name="cellRect">cellrect of the current column</param>
            <param name="rowColIndex">current row column index</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.RowResizingController.OnFrozenRowChange">
            <summary>
            Set the frozen start index, hide and unhide the out of view lines while set the frozen.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.RowResizingController.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.RowResizingController"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.RowResizingController.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the 
            <see cref="T:Syncfusion.Windows.Forms.CellGrid.RowResizingController">RowResizingController</see>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.RowResizingController.ResizeColumnIndex">
            <summary>
            Gets or sets the value which indicates, the row resizing will be perform in which ColumnIndex while setting multiple header columns.
            </summary>
            <value>Column Index.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.RowResizingController.HitTestPrecision">
            <summary>
            Gets or sets the value, which is used to get the visible line when mouse over the row line.
            </summary>
            <value>Visible line.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.RowResizingController.DragLine">
            <summary>
            Gets or sets the value which indicates row line while resize the column. If drag line null, then resizing will not happen.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.RowResizingController.StartFrozenRowIndex">
            <summary>
            Gets or sets the first visible row index
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ResizingHelper">
            <summary>
            Represents a Helper class which maintains the row and column resizing popup operations during Key Navigation.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste">
            <summary>
            All the Clipboard operations such as cut,copy,paste operations within the grid
            or cut,copy,paste the clipboard text from different source such as Excel,Notepad done here.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste.#ctor">
            <summary>
            Initializes the GridCopyPaste 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste.Copy">
            <summary>
            virtual method calls the copyrange method and trigger the events 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste.Cut">
            <summary>
            virtual method calls the copyrange method with cutflag as true and trigger the clipboardcut events
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste.Copy(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Boolean)">
            <summary>
            copy the text into clipboard and copy the cellstyles into gridcelldata based on this 
            information only we have done the paste operation in paste method.
            </summary>
            <param name="copyRange">contains selected copy range</param>
            <param name="needToCut">if the flag is true then cut operation performed else copy operation performed</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste.Paste">
            <summary>
            replace the copied styleinformation into existing cellstyles and add the covered cells based on the copied cells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste.PasteFromClipboard(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            copied the text from the clipboard and stored into the appropriate range of cells in grid
            </summary>
            <param name="range">currenly selected paste range</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCopyPaste.NeedToCut">
            <summary>
            To get or set the cutflag for copy/cut
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridCommentTooltipService">
            <summary>
            Represents a class which holds the operations related with Comment popup and Tooltip popup in SfCellGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCommentTooltipService.#ctor(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCommentTooltipService">GridCommentTooltipService</see> class. 
            </summary>
            <param name="cellgrid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCommentTooltipService.HideTooltipCommentPopup">
            <summary>
            Hide the popup while scrolling
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCommentTooltipService.PointerMoved(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Boolean,System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>
            Show the comment and tooltip popup when mouse is moved.
            </summary>
            <param name="e"></param>
            <param name="gridColumn">Specifies current row column index</param>
            <param name="isComment">The comment popup means its true, else show the tooltip popup</param>
            <param name="mousePosition"></param>
            <param name="arrangerect"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCommentTooltipService.HidePopup(System.Boolean)">
            <summary>
            Hide the comment, DataValidation and tooltip popup
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCommentTooltipService.UpdateDataValidationTooltipPopup(System.Int32,System.Int32)">
            <summary>
            Update the UpdateDataValidation tooltip popup
            </summary>
            <param name="columnIndex"></param>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCommentTooltipService.cellGrid_CurrentCellActivated(System.Object,Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatedEventArgs)">
            <summary>
            Show the DataValidation tooltip.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCommentTooltipService.CheckCommentPosition(System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>
            Check whether current mouse position is in commant path.
            </summary>
            <param name="mousePosition"></param>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCommentTooltipService.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCommentTooltipService"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCommentTooltipService.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCommentTooltipService">GridCommentTooltipService</see>.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.PopupWindow">
            <summary>
            Comment popup and datavalidation poopup are derived from the form.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.PopupWindow.#ctor(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Initialize the required values in the popup window constructor.
            </summary>
            <param name="cellgrid"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.PopupWindow.InitializePopupWindow(System.String)">
            <summary>
            Add the label into the form while initially load the form.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.PopupWindow.UpdatePopupWindow(System.String)">
            <summary>
            Modify the text in the label while popup text applies from datavalidation window.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.PopupWindow.HidePopup">
            <summary>
            Hide the comment or tooltip popup
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.PopupWindow.ShowPopup">
            <summary>
            Show the comment or tooltip popup
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.PopupWindow.SetPopupOffset(System.Double,System.Double)">
            <summary>
            Set the Horizantal and Vertical offsets for popup
            </summary>
            <param name="HOffset">Horizantal offset</param>
            <param name="VOffset">Vertical offset</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.PopupWindow.SetPopupHeightWidth(System.Int32,System.Int32)">
            <summary>
            Sets the Height and width for the Popup
            </summary>
            <param name="Height">Popup Height</param>
            <param name="Width">Popup Width</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.PopupWindow.MeasureWrapText(System.String,System.Drawing.Font,System.Drawing.Size)">
            <summary>
            Set the datavalidation popup window size based on the datavalidation tooltip text.
            </summary>
            <param name="text"></param>
            <param name="font"></param>
            <param name="cellSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.PopupWindow.Dispose">
            <summary>
            Dispose the objects.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.PopupWindow.IsPopupOpen">
            <summary>
            Check whether comment or tooltip popup is open
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.PopupWindow.Child">
            <summary>
            Gets or sets the child element for popup control
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridConditionType">
            <summary>
            Specifies the type of conditon to be used in conditional formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionType.Equal">
            <summary>
            peforms an equal operation to the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionType.NotEqual">
            <summary>
            Performs a NotEquals operation on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionType.LessThan">
            <summary>
            Performs a LessThan operation on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionType.LessThanOrEqual">
            <summary>
            Performs a LessThanOrEqual operation on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionType.GreaterThan">
            <summary>
            Performs a GreatherThan operation on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionType.GreaterThanOrEqual">
            <summary>
            Performs a GreaterThanOrEqual operation on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionType.Between">
            <summary>
            performs a between operation on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionType.NotBetween">
            <summary>
            performs a not between operation on the operands.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionType.Contains">
            <summary>
            performs whether specific text present in the cellvalue or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionType.NotContains">
            <summary>
            performs whether specific text not present in the cellvalue or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionType.BeginsWith">
            <summary>
            Check whether the cellvalue begins with specific text or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionType.EndsWith">
            <summary>
            Check whether the cellvalue Ends with specific text or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionType.Error">
            <summary>
            Check whether the cell is an error cell or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionType.NoError">
            <summary>
            Check whether the cell is error cell or not
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormatType">
            <summary>
            Specifies the type of conditional format
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormatType.CellValue">
            <summary>
            Apply conditional formatting based on cellvalue
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormatType.Formula">
            <summary>
            Apply conditional formatting based on formulavalue
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormatType.Blank">
            <summary>
            Apply conditional formatting if the cell contains no value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormatType.NoBlank">
            <summary>
            Apply conditional formatting if the cell contains any value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormatType.Error">
            <summary>
            Apply conditional formatting if the cell contains error value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormatType.NoError">
            <summary>
            Apply conditional formatting if the cell contains no error
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormatType.SpecificText">
            <summary>
            Apply conditional formatting if the cellvalue match with the specified value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormatType.DatesOccurring">
            <summary>
            Apply the conditional formatting based on dates
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridTimePeriodType">
            <summary>
            specify the timeperiod type when using DatesOccuring conditional format type
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridTimePeriodType.Yesterday">
            <summary>
            Check whether the cellvalu match with yesterday date or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridTimePeriodType.Today">
            <summary>
            Check whether the cellvalu match with today date or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridTimePeriodType.Tomorrow">
            <summary>
            Check whether the cellvalu match with tomorrow date or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridTimePeriodType.InLast7Days">
            <summary>
            Check whether the cellvalu match with last 7 days of date or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridTimePeriodType.LastWeek">
            <summary>
            Check whether the cellvalue lies on last week dates or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridTimePeriodType.ThisWeek">
            <summary>
            Check whether the cellvalu match with current week dates or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridTimePeriodType.NextWeek">
            <summary>
            Check whether the cellvalu match with next week dates or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridTimePeriodType.LastMonth">
            <summary>
            Check whether the cellvalu match with last month dates or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridTimePeriodType.ThisMonth">
            <summary>
            Check whether the cellvalu match with current month date or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridTimePeriodType.NextMonth">
            <summary>
            Check whether the cellvalu match with next month date or not
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridCondition">
            <summary>
            To add the gridcondition in conditionalformat 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCondition.#ctor">
            <summary>
            Default gridcondition type as Equal
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCondition.#ctor(Syncfusion.Windows.Forms.CellGrid.GridConditionType,System.Object)">
            <summary>
            Add the gridcondition with conditintype and condition value
            </summary>
            <param name="conditiontype">specify the gridconditiontype using GridConditionType enum</param>
            <param name="value">specify the condition value to check</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCondition.#ctor(Syncfusion.Windows.Forms.CellGrid.GridConditionType,System.Object,System.Object)">
            <summary>
            Add the gridcondition with two condition value when condition type is between
            </summary>
            <param name="conditiontype">specify the gridconditiontype using GridConditionType enum</param>
            <param name="value1">condition check value1</param>
            <param name="value2">condition check value2</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCondition.#ctor(Syncfusion.Windows.Forms.CellGrid.GridTimePeriodType)">
            <summary>
            create Gridcondition with timeperiodtype when using DatesOccuring conditionformat type
            </summary>
            <param name="timePeriodType">Specify timeperiod type by using GridTimePeriodType enum</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCondition.Value1">
            <summary>
            Gets or sets the condition value1.
            </summary>
            <value>condition value1.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCondition.Value2">
            <summary>
            Gets or sets condition value2
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCondition.ConditionType">
            <summary>
            Gets or sets the gridcondition type
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCondition.TimePeriodType">
            <summary>
            Gets or sets the gridtimeperiod type
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCondition.RowIndex">
            <summary>
            Gets or sets the conditionalformat applyed cell rowindex.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCondition.ColumnIndex">
            <summary>
            Gets or sets the conditionalcormat applyed cell columnindex.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCondition.StartRow">
            <summary>
            Gets or sets first cell rowindex if same conditon applies to multiple cells. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCondition.StartColumn">
            <summary>
            Gets or sets first cell columnindex if same conditon applies to multiple cells. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCondition.Range">
            <summary>
            Gets or sets the conditional formatting range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormat">
            <summary>
            create conditional format for each condition and added it to GridConditionalFormats collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormat.#ctor">
            <summary>
            create the conditionalformat with default conditionalformat type as cellvalue
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormat.#ctor(Syncfusion.Windows.Forms.CellGrid.GridConditionalFormatType)">
            <summary>
            create the conditionalformat with the specified the conditionalformat type
            </summary>
            <param name="conditionalformattype"> sets the conditionalformat type</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormat.#ctor(Syncfusion.Windows.Forms.CellGrid.GridConditionalFormatType,Syncfusion.Windows.Forms.CellGrid.GridConditionType,System.Object)">
            <summary>
            create the conditionalformat with conditionalformattype,conditiontype and value
            </summary>
            <param name="conditionformattype"> sets conditionalformat type</param>
            <param name="conditiontype">sets the conditiontype</param>
            <param name="value">sets the condition value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormat.#ctor(Syncfusion.Windows.Forms.CellGrid.GridConditionalFormatType,Syncfusion.Windows.Forms.CellGrid.GridConditionType,System.Object,System.Object)">
            <summary>
            create the conditionalformat with conditionalformattype,conditiontype,condition value1 and value2
            </summary>
            <param name="conditionalformattype">sets the conditionalformat type</param>
            <param name="conditiontype">sets the conditiontype</param>
            <param name="value1">sets the conditionvalue1</param>
            <param name="value2">sets the condition value2</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormat.#ctor(Syncfusion.Windows.Forms.CellGrid.GridTimePeriodType)">
            <summary>
            create the conditionalformat with timeperiod type
            </summary>
            <param name="timePeriodType">sets the timperiod type</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormat.GetCompileDelegate(Syncfusion.Windows.Forms.CellGrid.SfCellGrid,Syncfusion.Windows.Forms.CellGrid.GridConditionalFormat,System.String,System.Type,System.Boolean@)">
            <summary>
            Gets the compiled delegate.
            </summary>
            <param name="type">condition value type</param>
            <param name="grid"></param>
            <param name="conditionalformat"></param>
            <param name="data"></param>
            <param name="formatflag"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormat.Predicate(System.Linq.Expressions.ParameterExpression,System.String,Syncfusion.Windows.Forms.CellGrid.GridConditionType,System.Object)">
            <summary>
            return predicates based on the condition
            </summary>
            <param name="paramExpression">parameter expression such as cellvalue,formula.</param>
            <param name="propertyName">Name of the Property.</param>
            <param name="conditionType">Type of the condition.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormat.Condition">
            <summary>
            Gets or sets the gridcondition into conditionalformat
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormat.ConditionalFormatType">
            <summary>
            Gets or sets the conditionalformat type into gridconditionalformat
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridConditionalFormats">
            <summary>
            conditionalformats is a collection to hold the multiple conditionalformat
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller">
            <summary>
            Represents a class which handles the  automatic scrolling of content when the user drags the pressed
            mouse to an edge of the control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.CanReleaseMouseCapture(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Retruns true, if needs to release mouse capture.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.CanAutoScroll(System.Drawing.Point)">
            <summary>
            Retruns true, if needs to capture the mouse.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.ResetInsideScrollMargins">
            <summary>
            Resets the <see cref="P:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.InsideScrollMargin"/> property to its default value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.AutoScroll(System.Drawing.Point)">
            <summary>
            Calculates the auto scroll index and scrolls to a particular position in the grid.
            </summary>
            <param name="mousePoint">Position of the mouse.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.RaiseAutoScrollerValueChanged(System.Boolean,System.Boolean,System.Boolean,System.Boolean,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Invokes the AutoScroller Value changed event.
            </summary>
            <param name="isLineUp">true when scrolling direction is up.</param>
            <param name="isLineDown">true when scrolling direction is down.</param>
            <param name="isLineLeft">true when scrolling direction is left.</param>
            <param name="isLineRight">true when scrolling direction is right.</param>
            <param name="rowColumnIndex">scrolling row column index</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.OnAutoScrollingChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.AutoScrollingChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.HandlePointerOperations(Syncfusion.Windows.Forms.CellGrid.GridPointerEventArgs)">
            <summary>
            Handle the pointer/mouse operations
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.IsEnabled">
            <summary>
            Gets or sets the value whether to enable or disable the AutoScroller.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.HorizontalScrollBar">
            <summary>
            Gets the state describing  the horizontal scrollbar.
            </summary>
            <value>The horizontal scrollbar state.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.VerticalScrollBar">
            <summary>
            Gets the state describing for the vertical scroll bar.
            </summary>
            <value>The vertical scroll bar state.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.Orientation">
            <summary>
            Disables or specifies the direction for automatic scrolling when the user drags
            the mouse cursor out of the scrolling area.
            </summary>
            <remarks>
            <list type="">
            <item>ScrollBars.None will disable scrolling.</item>
            <item>ScrollBars.Horizontal will enable horizontal scrolling.</item>
            <item>ScrollBars.Vertical will enable vertical scrolling.</item>
            <item>ScrollBars.Horizontal|ScrollBars.Vertical will enable both horizontal and vertical scrolling.</item>
            </list>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.AutoScrollBounds">
            <summary>
            Gets or sets the outer scrolling area. Typically the client area of the control.
            </summary>
            <value>Outer Scroll area.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.InsideScrollBounds">
            <summary>
            Gets the inside scrolling area. The control will scroll if the user drags
            the mouse outside this area.
            </summary>
            <value>Inside Scroll area.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.InsideScrollMargin">
            <summary>
            Gets or Sets the default margin for the scrolling area when the user moves the mouse to the margin 
            between InsideScrollBounds and AutoScrollBounds
            </summary>
            <value>Margin of Scroll area.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.IntervalTime">
            <summary>
            Gets or sets the timer interval for auto scrolling.
            </summary>
            <value>Time interval.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.AllowScrollingOnOutsideBounds">
            <summary>
            Gets or sets the value that indicates whether perform auto scrolling outside the bounds or inside the scroll margin.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.AutoScrollingChanged">
            <summary>
            Occurs when the AutoScrolling property is changed.
            </summary>
            <remarks>
            If you want to prevent autoscrolling, you should handle this event
            and reset the AutoScrolling property.
            </remarks>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.AutoScrollerValueChanged">
            <summary>
            Occurs when the auto scroller value changed . 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridAutoScroller.AutoScrollerValueChangedEventHandler">
            <summary>
            Represents a method that will handle the AutoScroller Valuechanged Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.AutoScrollerValueChangedEventArgs">AutoScrollerValueChangedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.AutoScrollerValueChangedEventArgs">
             <summary>
            Provides data for the AutoScrollerValueChangedEventHandler event.
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.AutoScrollerValueChangedEventArgs.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Initializes a new instance for AutoScrollerValueChangedEventArgs class with the specified scrolling row column index and scrolling directions
            </summary>
            <param name="isLineUp">true when scrolling direction is Up</param>
            <param name="isLineDown">true when scrolling direction is down</param>
            <param name="isLineLeft">true when scrolling direction is left</param>
            <param name="isLineRight">true when scrolling direction is right</param>
            <param name="rowcol">scrolling row column index</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.AutoScrollerValueChangedEventArgs.RowColumnIndex">
            <summary>
            Gets or Sets the Scroll row column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.AutoScrollerValueChangedEventArgs.IsLineLeft">
            <summary>
            Indicates Scrolling Left
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.AutoScrollerValueChangedEventArgs.IsLineRight">
            <summary>
            Indicates Scrolling Right
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.AutoScrollerValueChangedEventArgs.IsLineUp">
            <summary>
            Indicates Scrolling Up
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.AutoScrollerValueChangedEventArgs.IsLineDown">
            <summary>
            Indicates Scrolling down
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell">
            <summary>
            Represents a class which maintains the information about the current cell of SfCellGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.#ctor(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell">GridCurrentCell</see> class. 
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.BeginEdit(System.Boolean)">
            <summary>
            Begins the editing operation of CurrentCell.
            </summary>
            <param name="forceEdit">Set this true to avoid triggering events.</param>
            <returns>Returns true, if current cell enters into edit mode.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.EndEdit(System.Boolean)">
            <summary>
            Commit and end the editing operation of CurrentCell
            </summary>
            <param name="canCommit">If true, commit the new changes; otherwise revert to old value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.ValidateAndEndEdit">
            <summary>
            Validate and then finish the editing
            1.If Cancel=True and IsValid=False then currentcell remains in edit mode.
            2.If Cancel=True and IsValid=True then canceledit and currentcell remains in edit mode.
            3.If Cancel=False and IsValid=False then canceledit and currentcell moved to next cell.
            4.If Cancel=False and IsValid=True then endedit and currentcell moved to next cell.(Default)
            </summary>
            <returns>Returns true, if successfully finish the editing</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.Validate(System.Boolean@)">
            <summary>
            Validate the CurrentCell in SfCellGrid.
            </summary>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.Refresh">
            <summary>
            Refreshes the Current Range.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.RemoveCurrentCell">
            <summary>
            Remove the CurrentCell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.MoveCurrentCell(System.Int32,System.Int32)">
            <summary>
            Move the CurrentCell to mentioned row and column index.
            </summary>
            <param name="rowIndex">Row index.</param>
            <param name="colIndex">Column index.</param>
            <returns>Returns true, if CurrentCell is moved.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.MoveCurrentCell(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex,System.Boolean)">
            <summary>
            Move the CurrentCell to mentioned row and column index.
            </summary>
            <param name="rowColIndex">RowColumnIndex.</param>
            <param name="forceMove">If true, then suspend all currentcell events while moving.</param>
            <returns>Returns true, if CurrentCell is moved.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.CanMove(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Determines whether to move the focus to next cell or not.
            </summary>
            <param name="rowCol">Coordinates of the cell.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.HasCurrentCellAt(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Determines whether the CurrentCell is at particular RowColumnIndex or not.
            </summary>
            <param name="cellRowColumnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.HandlePointerOperations(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the pointer/mouse operations on CurrentCell
            </summary>
            <param name="e"></param>
            <param name="rowcolIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.HandleKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the key down operation on currentCell
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.HandleKeyNavigation(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Used to Navigate the CurrentCell on KeyDown
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.ScrollInView(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Scroll the Grid to make the CurrentCell is in view
            </summary>
            <param name="rowColumnIndex"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.ProcessPageUpNavigation(System.Boolean)">
            <summary>
            Used to process the key navigation on PageUp.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.ProcessPageDownNavigation(System.Boolean)">
            <summary>
            Used to process the key navigation on PageDown.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.EnsureMovingLeft(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex@)">
            <summary>
            Need to ensure and get the left move row column index when the adjacent is not enabled.
            </summary>
            <param name="moveRowColIndex"></param>
            <returns>Returns false, if need to skip moving current cell</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.EnsureMovingRight(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex@)">
            <summary>
            Need to ensure and get the right move row column index when the adjacent is not enabled.
            </summary>
            <param name="moveRowColIndex"></param>
            <returns>Returns false, if need to skip moving current cell</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.EnsureMovingUp(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex@)">
            <summary>
            Need to ensure and get the up move row column index when the adjacent is not enabled.
            </summary>
            <param name="moveRowColIndex"></param>
            <returns>Returns false, if need to skip moving current cell</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.EnsureMovingDown(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex@)">
            <summary>
            Need to ensure and get the down move row column index when the adjacent is not enabled.
            </summary>
            <param name="moveRowColIndex"></param>
            <returns>Returns false, if need to skip moving current cell</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.GetColumn(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Used to get the GridColumn
            </summary>
            <param name="rowcol"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.ProcessCurrentCell(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex,Syncfusion.Windows.Forms.CellGrid.GridColumn)">
            <summary>
            Process the CurrentCell move.
            </summary>
            <param name="rowcol"></param>
            <param name="gridColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.MoveCurrentCell(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex,Syncfusion.Windows.Forms.CellGrid.GridColumn,System.Boolean,Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Move the CurrentCell
            </summary>
            <param name="rowColIndex"></param>
            <param name="gridColumn"></param>
            <param name="forceMove"></param>
            <param name="activationTrigger"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.RaiseCurrentCellActivatedEvent(Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Raise CurrentCellActivated event
            </summary>
            <param name="activationTrigger"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.RaiseCurrentCellActivatingEvent(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex,Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Raise CurrentCellActiavting event
            </summary>
            <param name="rowColIndex"></param>
            <param name="activationTrigger"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.SelectCurrentCell(System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.GridColumn)">
            <summary>
            Select the CurrentCell and set the current column
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="gridColumn"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.SelectCurrentCell(System.Int32,System.Int32)">
            <summary>
            Select the current cell
            </summary>
            <param name="row"></param>
            <param name="col"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.SetColumn(Syncfusion.Windows.Forms.CellGrid.GridColumn)">
            <summary>
            Set the GridColumn of CurrentCell
            </summary>
            <param name="gridColumn"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.GetMoveRowColumnIndexForEnterNavgation(System.Boolean,Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo)">
            <summary>
            Get the move current cell row column index when press Enter
            </summary>
            <param name="isShiftKey">True if Shift key is pressed otherwise false</param>
            <param name="coveredCell"><see cref="T:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo"/>, if current cell is covered cell otherwise null</param>
            <returns>Return next current cell row column index</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.GetMoveRowColumnIndexForTabNavigation(System.Boolean,Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo)">
            <summary>
            Get the move current cell row column index when press Tab
            </summary>
            <param name="isShiftKey">True if Shift key is pressed otherwise false</param>
            <param name="coveredCell"><see cref="T:Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo"/>, if current cell is covered cell</param>
            <returns>Return next current cell row column index when press Tab</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.GetNextSelectedRange(System.Int32)">
            <summary>
            Get the next selected range and set that range as activate range.
            </summary>
            <param name="nextIndex">index of current range</param>
            <returns>Next range</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.GetPreviousSelectedRange(System.Int32)">
            <summary>
            Get the previous selected range and set that range as activate range.
            </summary>
            <param name="prevIndex">index of current range</param>
            <returns>Previous range</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.GetNextMoveRowColumnIndex(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get the next top left RowColumnIndex if next cell is coveredcell.
            Get the next cell of RowColumnIndex when next cell is coveredcell but not a top left index
            </summary>
            <param name="activeRange">Active range</param>
            <param name="rowIndex">Move rowIndex</param>
            <param name="columnIndex">Move columnIndex</param>
            <param name="isEnterKey">True if enter key is pressed otherwise tab key</param>
            <returns>Next RowColumnIndex</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.GetPreviousMoveRowColumnIndex(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get the previous top left RowColumnIndex if previous cell is coveredcell.
            Get the previous cell of RowColumnIndex when previous cell is coveredcell but not a top left index
            </summary>
            <param name="activeRange">Active range</param>
            <param name="rowIndex"> rowIndex</param>
            <param name="columnIndex">Move columnIndex</param>
            <param name="isEnterKey">True if enter key is pressed otherwise tab key</param>
            <returns>Previous RowColumnIndex</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.GetControlValue">
            <summary>
            Used to get the control value from renderer.
            </summary>
            <returns>Value of the current cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.SetControlValue(System.Object)">
            <summary>
            Used to set the control value to renderer.
            </summary>
            <param name="value">Control value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.SetFocus(System.Boolean)">
            <summary>
            Used to set the focus using renderer.
            </summary>
            <param name="needToFocus">If true, set focus to edit element</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.ShouldGridTryToHandleKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Determines whether renderer handles key down or not.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.ResetCurrentCellState">
            <summary>
            Used to reset the current cell state of the renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.SetCurrentCellState">
            <summary>
            Used to set the CurrentCellState of the Renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.RaiseCurrentCellValidated">
            <summary>
            Raise the CurrentCellValidated event
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.RaiseCurrentCellTextChanged(System.String)">
            <summary>
            Raise CurrentCellTextChanged event
            </summary>
            <param name="changedetext"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.RaiseCurrentCellBeginEditEvent(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Invokes the CurrentCellBeginEdit event.
            </summary>
            <param name="rowColumnIndex">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.RaiseCurrentCellEndEditEvent(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Invokes the CurrentCellEndEdit event.
            </summary>
            <param name="rowColumnIndex">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.NotifyCurrentCellTexChanged(System.String)">
            <summary>
            Used ot notify when currentCell text changed
            </summary>
            <param name="ChangedText"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell"/> class.
            </summary>  
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.IsInMove">
            <summary>
            Gets or sets whether the current cell is in move
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.Column">
            <summary>
            Gets or Sets the of GridColumn of CurrentCell
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.PreviousRowColumnIndex">
            <summary>
            Gets or sets the RowColumnIndex of old CurrentCell
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.IsCurrentCellHidden">
            <summary>
            Returns whether current cell is hidden or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.IsValidated">
            <summary>
            Gets or sets whether the current is Validated or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.IsValidating">
            <summary>
            Gets or sets whether the current cell is in Validating
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.CurrentCellValue">
            <summary>
            Gets or sets the currentcellvalue
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.HasCurrentCellState">
            <summary>
            Returns the current cell state of renderer
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.CellRowColumnIndex">
            <summary>
            Gets the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>  of CurrentCell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.RowIndex">
            <summary>
            Gets the row index of CurrentCell.
            </summary>
            <value>Row index.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.ColumnIndex">
            <summary>
            Gets the column index of CurrentCell.
            </summary>
            <value>Column index.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.Range">
            <summary>
            Gets the current cell range in SfCellGrid.
            </summary>
            <value>Current cell range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.HasCurrentCell">
            <summary>
            Gets the value indicating  whether the Grid has CurrentCell or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.IsModified">
            <summary>
            Gets the value indicating whether the current cell value is modified on editing or not.
            </summary>
             <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell.IsEditing">
            <summary>
            Gets or sets whether the current cell is in editing mode or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ISelectionController">
            <summary>
            An interface to control the selection functionalities of the grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ISelectionController.HandlePointerOperations(Syncfusion.Windows.Forms.CellGrid.GridPointerEventArgs,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the Pointer/Mouse Operations.
            </summary>
            <param name="args"></param>
            <param name="rowColIndex"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ISelectionController.HandleKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown operations
            </summary>
            <param name="args"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ISelectionController.CurrentCell">
            <summary>
            Returns the CurrentCell of the SfCellGrid
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ISelectionController.SelectedRanges">
            <summary>
            Returns the SelectedRanges of the SfCellGrid
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ISelectionController.TouchHitTestPrecision">
            <summary>
            Determines the distance of touch precision point from touch indicator
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridPointerEventArgs">
            <summary>
            Class which represents the mouse pointer operations.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridPointerEventArgs.#ctor(Syncfusion.Windows.Forms.CellGrid.PointerOperation,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridPointerEventArgs">GridPointerEventArgs</see> class. 
            </summary>
            <param name="operation">One of the pointer options while selection. </param>
            <param name="eventArgs">Argument related with pointer.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridPointerEventArgs.Operation">
            <summary>
            Gets the type of PointerOperation. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridPointerEventArgs.OriginalEventArgs">
            <summary>
            Gets the pointer event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.PointerOperation">
            <summary>
            Defines the Mouse pointer operations while selection in SfCellGrid.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.PointerOperation.Pressed">
            <summary>
            Mouse pointer in pressed position.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.PointerOperation.Released">
            <summary>
            Mouse pointer in released position.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.PointerOperation.Tapped">
            <summary>
            Mouse pointer in click position.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.PointerOperation.DoubleTapped">
            <summary>
            Mouse pointer in double click position.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.PointerOperation.Move">
            <summary>
            Mouse pointer in moved state.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.PointerOperation.Exited">
            <summary>
            Mouse pointer in released state.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.PointerOperation.Entered">
            <summary>
            Mouse pointer in Entered state.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.PointerOperation.Wheel">
            <summary>
            Mouse pointer in wheel position.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.SelectionController">
            <summary>
            Represents a class which implements the selection behavior of CellGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.#ctor(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.SelectionController">SelectionController</see> class. 
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.HandlePointerOperations(Syncfusion.Windows.Forms.CellGrid.GridPointerEventArgs,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the Pointer/Mouse Operations in SfCellGrid.
            </summary>
            <param name="args">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridPointerEventArgs"/>.</param>
            <param name="rowcolIndex">Coordinates of a cell.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.HandleKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the KeyDown operations in SfCellGrid.
            </summary>
            <param name="args">An instance of <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.AddSelection(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Adds the selection on mentioned range.
            </summary>
            <param name="range">Range where to extend the selection.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.ClearSelection">
            <summary>
            Clears the selection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.ProcessKeyNavigation(System.Windows.Forms.KeyEventArgs)">
             <summary>
            Used to process the key navigation in SfCellGrid.
             </summary>
             <param name="args">An instance of <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.ProcessShiftKeyNavigation(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Used to process the key navigation when shift key is pressed.
            </summary>
            <param name="args">An instance of <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.ProcessShiftSelection(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Used to process the pointer/touch selection when shift key is pressed.
            </summary>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.ProcessHeaderSelection(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Used to process the pointer/touch selection on Header(whole row/column).
            </summary>
            <param name="e">An instance of <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains data.</param>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.ProcessPointerSelection(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Used to process the pointer/touch normal selection.
            </summary>
            <param name="e">An instance of <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains data.</param>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.ProcessHeaderDragSelection(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Used to process the pointer/touch selection on mouse move over header.
            </summary>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.ProcessDragSelection(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Used to process the pointer/touch selection on mouse move.
            </summary>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.OnPointerPressed(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Occurs when the pointer is pressed in SfCellGrid.
            </summary>
            <param name="e">An instance of <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains data.</param>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.OnPointerMoved(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Occurs when the pointer moves.
            </summary>
            <param name="e">An instance of <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains data.</param>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.OnPointerReleased(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Occurs when the pointer released.
            </summary>
            <param name="e">An instance of <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains data.</param>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.OnTapped(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Occurs when the pointer tapped in the cell.
            </summary>
            <param name="e">An instance of <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains data.</param>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.OnDoubleTapped(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Occurs when the pointer double tapped in the cell.
            </summary>
            <param name="e">An instance of <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains data.</param>
            <param name="rowcolIndex">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.ShowCurrentCell">
            <summary>
            Determines whether to show current cell or not on selection.
            </summary>
            <returns>If true, draws the current cell</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.UpdateLastSelectedRowColIndex(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Used to update the Last Selected RowCoumnIndex while moving current cell
            </summary>
            <param name="rowColumnIndex"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.ClearSelectedCells(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo@,System.Boolean)">
            <summary>
            Used to clear the selected cells.
            </summary>
            <param name="newRange"></param>
            <param name="activeRangeOnly">Set this as true to clear the active range only</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.AddSelectedCells(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Used to add the selected cells
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.AdjustBasedOnCoveredCell(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo@)">
            <summary>
            Adjust the GridRangeInfo based on CoveredCell
            </summary>
            <param name="adjustedRange"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.RaiseSelectionChangingEvent(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo@,Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList,Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Raise Selection Changing event
            </summary>
            <param name="newRange"></param>
            <param name="selectionTrigger"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.RaiseSelectionChangedEvent(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList,Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Raise Selection Changed event
            </summary>
            <param name="newRange"></param>
            <param name="oldRanges"></param>
            <param name="selectionTrigger"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.ScrollFirstBodyCellToView(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex@)">
            <summary>
            Used to scroll the grid when dragging from frozen cell to normal cell
            </summary>
            <param name="rowColIndex"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.WireEvents">
            <summary>
            Wire the Grid and AutoScroller events
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.UnWireEvents">
            <summary>
            Unwire the Grid and AutoScroler events
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.AutoScrollerValueChanged(System.Object,Syncfusion.Windows.Forms.CellGrid.AutoScrollerValueChangedEventArgs)">
            <summary>
            Occurs when the AutoScroller value changed.
            </summary>
            <param name="sender">Soruce of the event.</param>
            <param name="args">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.AutoScrollerValueChangedEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SelectionController"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionController.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the 
            <see cref="T:Syncfusion.Windows.Forms.CellGrid.SelectionController">SelecionController</see>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SelectionController.ShowTouchIndicator">
            <summary>
            Determines whether touch indicator will be shown or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SelectionController.PointerMoveRowColIndex">
            <summary>
            Returns the last pointer move RowColumnIndex
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SelectionController.PointerDownRowColIndex">
            <summary>
            Returns the last pointer move RowColumnIndex
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SelectionController.Grid">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SelectionController.Container">
            <summary>
            Gets the value indicating  the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.VisualContainer"/>.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.VisualContainer"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SelectionController.Column">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridColumn"/> under the current pointer location.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridColumn"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SelectionController.SelectionFrame">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SelectionPanel"/>.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SelectionPanel"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SelectionController.SelectionTrigger">
            <summary>
            Gets the value indicating how the current selection is triggered.
            </summary>
            <value>One of the enum options of Activation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SelectionController.TouchHitTestPrecision">
            <summary>
            Gets or sets the distance of touch precision point from touch indicator.
            </summary>
            <value>Distance of touch precision.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SelectionController.CurrentCell">
             <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell"/>  of the SfCellGrid.
             </summary>
             <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell"/></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SelectionController.SelectedRanges">
            <summary>
            Gets the list of selected ranges in Grid.
            </summary>
            <value>A collection of selected ranges.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.SelectionController.LastSelectedRowColIndex">
            <summary>
            Returns the last selected RowColumnIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.SelectionHelper">
            <summary>
            Helper class which is used to get the mouse pointer position, visible row/column index and handles the key operations.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionHelper.CheckAltKeyPressed">
            <summary>
            Check whether the Alt key is pressed or not.
            </summary>
            <returns>True if the key is pressed; otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionHelper.CheckControlKeyPressed">
            <summary>
            Check whether the Control key is pressed.
            </summary>
            <returns>True if the key is pressed;otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionHelper.CheckShiftKeyPressed">
            <summary>
            Check whether the Shift key is pressed
            </summary>
            <returns>True if the key is pressed;otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionHelper.GetGridColumn(Syncfusion.Windows.Forms.CellGrid.SfCellGrid,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Returns the GridColumn for the given RowColumnIndex
            </summary>
            <param name="rowColumnIndex">Corresponding RowColumnIndex Value</param>
            <param name="cellGrid"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionHelper.GetGridRow(Syncfusion.Windows.Forms.CellGrid.SfCellGrid,System.Int32)">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRow"/> for the given RowIndex in SfCellGrid.
            </summary>
            <param name="cellGrid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</param>
            <param name="rowIndex">Row Index.</param>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRow"/>.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionHelper.GetPointPosition(System.Windows.Forms.MouseEventArgs,System.Windows.Forms.Control)">
            <summary>
            Method which returns the mouse position in SfCellGrid.
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
            <param name="relativeTo">UIElement.</param>
            <returns>Position of the pointer.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionHelper.GetVisibleRowColumnIndex(Syncfusion.Windows.Forms.CellGrid.SfCellGrid,System.Int32,System.Int32)">
            <summary>
            Gets the visible <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/> for given row and column index.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</param>
            <param name="rowIndex">Row Index.</param>
            <param name="columnIndex">Column Index.</param>
            <returns>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionHelper.GetPreviousVisibleRowColumnIndex(Syncfusion.Windows.Forms.CellGrid.SfCellGrid,System.Int32,System.Int32)">
            <summary>
            Get the previous visible <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/> for given row and column index.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</param>
            <param name="rowIndex">Row Index.</param>
            <param name="columnIndex">Column Index.</param>
            <returns>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionHelper.GetPreviousVisibleRowIndex(Syncfusion.Windows.Forms.CellGrid.SfCellGrid,System.Int32)">
            <summary>
            Get the previous visible row index.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</param>
            <param name="rowIndex">Row Index.</param>
            <returns>Row Index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionHelper.GetPreviousVisibleColumnIndex(Syncfusion.Windows.Forms.CellGrid.SfCellGrid,System.Int32)">
            <summary>
            Get the previous visible column index.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</param>
            <param name="colIndex">Column Index.</param>
            <returns>Column Index</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionHelper.GetFirstVisibleRowIndex(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Helper method for find the first visible row index in view.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</param>
            <returns>return the first row index when grid have visible row lines more than header row else returns headerrows.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionHelper.GetFirstVisibleColumnIndex(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Helper method for find the first visible column index in view.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</param>
            <returns>return the first column index when grid have visible columns lines more than header column else returns headercolumns.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollableChildFrame">
            <summary>
            This is a panel which is used as a child panel of VisualContainer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollableChildFrame.#ctor(System.String)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollableChildFrame.MeasureOverride(System.Drawing.Size)">
            <summary>
            Performs the measure related operations for CellsPanel.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollableChildFrame.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Used to make the HitTestVisible as false
            </summary>
            <param name="m"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollableChildFrame.Grid">
            <summary>
            Gets or sets the SfCellGrid
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollableChildFrame.VisualContainer">
            <summary>
            Gets or sets the VisualContainer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionPanel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.SelectionPanel">SelectionPanel</see> class. 
            </summary>
            <param name="name">Name of the panel.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionPanel.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Used to make the HitTestVisible as false
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.SelectionPanel.CurrentCellIntersects">
            <summary>
            Used to Check whether the Current Cell intersected in the Selected Ranges
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.LenComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares 2 strings based on their length.
            </summary>
            <param name="x">String 1.</param>
            <param name="y">String 2.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridFormulaParsingEventHandler">
            <summary>
            Event delegate for the GridFormulaParsing event 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridFormulaParsingEventArgs">
            	this.engine = ((GridCellFormulaModel)gridControl1.CellModels["FormulaCell"]).Engine;
                this.engine.FormulaParsing += new GridFormulaParsingEventHandler(engine_FormulaParsing);
            	
            	//Here is the handler code that adds an = if necessary so any string beginning with +, - or =
                //is treated as a formula.
                  void engine_FormulaParsing(object sender, GridFormulaParsingEventArgs e)
                  {
                      //allow cells starting with + and - to be treated as formula cells.
                      if (e.Text.StartsWith("-"))
                           e.Text = "=" + e.Text;
                      else if (e.Text.StartsWith("+"))
                           e.Text = "=" + e.Text.Substring(1);
                  }         
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridFormulaParsingEventArgs.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridFormulaParsingEventArgs.#ctor(System.String)">
            <summary>
            Holds a reference to the string that is to be parsed..
            </summary>
            <param name="text">The formula that is to be parsed.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridFormulaParsingEventArgs.Text">
            <summary>
            Get or sets the formula about to be parsed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridShowFormulaBehavior">
            <summary>
            Specifies behavior for displaying formula text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridShowFormulaBehavior.WhenEditing">
            <summary>
            Display the formula text only when the cell is actively being edited.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridShowFormulaBehavior.WhenCurrent">
            <summary>
            Display the formula text whenever the cell is the current cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridShowFormulaBehavior.Always">
            <summary>
            Always display the formula text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.GridShowFormulaBehavior.Never">
            <summary>
            Never display the formula text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridFormulaTag.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridFormulaTag.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="formula">The parsed formula.</param>
            <param name="text">The computed value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridFormulaTag.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="formula">The parsed formula.</param>
            <param name="text">The computed value.</param>
            /// <param name="row">The row at which this formula is being parsed.</param>
            <param name="col">The col at which this formula is being parsed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridFormulaTag.ToString">
            <summary>
            Overriden.
            </summary>
            <returns>Displays the parsed formula and computed value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridFormulaTag.Reset">
            <summary>
            Sets Text and Formula to null and ParsedRow and ParsedCol to -1.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridFormulaTag.ResetText">
            <summary>
            Sets Text to null.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridFormulaTag.ResetFormula">
            <summary>
            Sets Text and Formula to null.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridFormulaTag.Formula">
            <summary>
            Gets / sets the parsed formula.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridFormulaTag.ParsedRow">
            <summary>
            Gets the column where the formula was last parsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridFormulaTag.ParsedCol">
            <summary>
            Gets the column where the formula was last parsed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.GridFormulaTag.Text">
            <summary>
            Get / sets text representing the computed value.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.GridSheetFamilyItem">
            <summary>
            Encapsulates the properties that are needed to support multiple families of crossed-referenced grids.
            This class is for internal use only.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridSheetFamilyItem.GetGridModelForToken(System.String)">
            <summary>
            Get GridModel for the given Token.
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridSheetFamilyItem.GetTokenForGridModel(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Get Token for the given GridModel.
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridSheetFamilyItem.GetTokenForSheetName(System.String)">
            <summary>
            Get Token for the given SheetName.
            </summary>
            <param name="sheetName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.GridSheetFamilyItem.GetSheetNameForToken(System.String)">
            <summary>
            Get SheetName for the given Token.
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase"/> objects in the view.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection"/> uses standard <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Add(System.String,Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer)"/> and <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Remove(System.String)"/>
            methods to manipulate the collection.
            Use the Contains method to determine if a specific cell type exists in the collection.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.#ctor(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection">SpreadsheetCellRendererCollection</see> class. 
            </summary>
            <param name="cellgrid">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="N:System.ComponentModel"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Add(System.String,Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer)">
            <summary>
            Add the Renderers to the Renderer dictionary.
            </summary>
            <param name="key">Key to the SpreadsheetCellRenderer Collection.</param>
            <param name="renderer">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Remove(System.String)">
            <summary>
            Remove the Renderer from dictionary for corresponding key value.
            </summary>
            <param name="key">Key to the SpreadsheetCellRenderer Collection.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.ContainsKey(System.String)">
            <summary>
            Checks whether the Renderer Dictionary contains the corresponding renderer Key.
            </summary>
            <param name="key">Key to the SpreadsheetCellRenderer Collection.</param>
            <returns>True if the collection contains the key;otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.ContainsValue(Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer)">
            <summary>
            Checks whether the Renderer Dictionary contains the corresponding renderer.
            </summary>
            <param name="cellRenderer">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase"/>. </param>
            <returns>True if the collection contains specific value; otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.CopyTo(Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer[],System.Int32)">
            <summary>
            Copies the renderer elements of the System.Collections.ICollection to an System.Array, starting at a particular System.Array index.
            </summary>
            <param name="array">Collection of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase"/>.</param>
            <param name="index">Index of the renderer element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Clear">
            <summary>
            Clears the values in Renderer Dictionary.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an
            <see cref="T:System.Array" />, starting at a particular <see
            cref="T:System.Array" /> index.
            </summary>
            <param name="index">The zero-based index in <paramref name="array" /> at which
            copying begins. </param>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is
            the destination of the elements copied from <see
            cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" />
            must have zero-based indexing. </param>
            <filterpriority>2</filterpriority>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is
            multidimensional.-or- The number of elements in the source <see
            cref="T:System.Collections.ICollection" /> is greater than the available space
            from <paramref name="index" /> to the end of the destination <paramref
            name="array" />.-or-The type of the source <see
            cref="T:System.Collections.ICollection" /> cannot be cast automatically to the
            type of the destination <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />
            is less than zero. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is
            null. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.GetEnumerator">
            <summary>
            Returns the Enumerator that iterates through collection for retriving the values.
            </summary>
            <returns>Content of the SpreadsheetCellRenderer collection </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Item(System.String)">
            <summary>
            Gets or sets the value indicating the Indexer which will return the renderer for the corresponding key value.
            </summary>
            <param name="key">An Index of the renderer.</param>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Values">
            <summary>
            Gets the value indicating the renderers in the collection.
            </summary>
            <value>The values in the hashtable.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Keys">
            <summary>
            Gets the value indicating the keys in the renderer collection.
            </summary>
            <value>Keys in the hashtable.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.Count">
            <summary>
            Gets the number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            The number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see
            cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>
            true if access to the <see cref="T:System.Collections.ICollection" /> is
            synchronized (thread safe); otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            An object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1">
            <summary>
            This class implements a cache of UIElement of the given type parameter T. It is used
            by the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1"/> renderer to recycle UIElement 
            elements for cells that were scrolled out of view and delay unloading of UIElements.
            This reduces the number of times the UIElement needs to be created or unloaded and
            instead only the contents of the UIElement will be reinitialized with cell contents. <para/>
            </summary>
            <typeparam name="T">Type of the Element</typeparam>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1.Enqueue(Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer,`0)">
            <summary>
            Enqueues the specified UI element.
            </summary>
            <param name="renderer">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer"/>.</param>
            <param name="uiElement">The UIElement.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1.Dequeue(Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer)">
            <summary>
            Dequeues an UIElement from the specified canvas.
            </summary>
            <param name="renderer">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer"/>.</param>
            <returns>An UIElement</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.VirtualizingCellUIElementBin`1.Item(Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.Queue`1"/> for the specified Renderer.
            </summary>
            <value>An instance of <see cref="T:System.Collections.Generic.Queue`1"/>. </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollableFrame">
            <summary>
            This is a ScrollablePanel which inherits the IScrollableInfo. It handles all the scrolling related actions.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollableFrame.HScrollBar">
            <summary>
            Gets the h scroll bar.
            </summary>
            <value>
            The h scroll bar.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.VisualContainer">
            <summary>
            This is a scrollable visual container which contains the all panels(CellsPanel, BordersPanel, SelectionPanel) of Grid as Children.
            Handles the arrange and measure logic of all elements.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.VisualContainer.IsInZooming">
            <summary>
            Used to skip the auto scrolling and other touch related stuffs while zooming is in progress. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.#ctor(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.PregenerateRows(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Generates the GridRow based on visible rows.
            </summary>
            <param name="visibleRows"></param>
            <param name="visibleColumns"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.CreateOrRecycleRow(System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion)">
            <summary>
            Create or recycle the GridRow
            </summary>
            <param name="rowIndex"></param>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.ArrangeFrozenLines(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint)">
            <summary>
            Used to arrange frozen/header vertical and horizontal lines
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.InitializeChildPanels">
            <summary>
            Initialize and add the child panels.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.MeasureChildPanels(System.Drawing.Size)">
            <summary>
            Measure the child panels.
            </summary>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.ArrangeChildPanels(System.Drawing.Rectangle)">
            <summary>
            Arrange the child panels.
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.CreateSelectionPanel">
            <summary>
            Creates the SelectionPanel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.CreateFormulaRangeSelectionPanel">
            <summary>
            Creates the Formula Range Selection Panel
            </summary>
            <returns>returns new instance for FormulaRange SelectionPanel</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.OnScrollColumns_Changed(System.Object,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollChangedEventArgs)">
            <summary>
            Used to refresh the columns when visiblecolumns collection changed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.InvalidateMeasureInfo">
            <summary>
            Invalidates all the child panels.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.RaiseMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Used to raise the mouse up event.
            </summary>
            <param name="args"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.RaiseMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Used to raise the mouse down event.
            </summary>
            <param name="args"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.RaiseMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Used to raise the mouse move event.
            </summary>
            <param name="args"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.EnsureItems(System.Boolean)">
            <summary>
            Ensure the visible row elements and visible column elements.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.PreGenerateItems">
            <summary>
            Pregenerate the IRowElement based on visiblelines.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.MeasureRows">
            <summary>
            Measure the row elements.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.ArrangeRows(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint)">
            <summary>
            Arrange the row elements.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.EnsureRows(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensure and update the dirty rows and it elements.
            </summary>
            <param name="visibleRows"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.EnsureColumns(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection)">
            <summary>
            Ensure the column elements in all rows
            </summary>
            <param name="visibleColumns"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.FindStartEndIndex(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion,System.Int32@,System.Int32@)">
            <summary>
            Used to find the start and end visible index based on ScrollAxisRegion
            </summary>
            <param name="visibleLines"></param>
            <param name="region"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.InvalidateRowElements(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Invalidate the row elements which are in a specified range.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.InvalidateRowElements">
            <summary>
            Invalidate all row elements.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.RefreshRows(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Mark rows and their columns as dirty which are in a specified range.
            </summary>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.RefreshAllRows">
            <summary>
            Mark all the rows and their columns as dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.RangeToRect(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex,System.Boolean,System.Boolean)">
            <summary>
            For internal use.
            </summary>
            <param name="rowRegion">Scroll axis region for row.</param>
            <param name="columnRegion">Scroll axis region for column.</param>
            <param name="rowcolumn">Cell range.</param>
            <param name="allowEstimatesForOutOfViewRows">If set to true, allows estimate for out of view rows.</param>
            <param name="allowEstimatesForOutOfViewColumns">If set to true, allows estimate for out of view columns.</param>
            <returns>Visible rectangle for the given range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.RangeToRect(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Boolean,System.Boolean)">
            <summary>
            For internal use.
            </summary>
            <param name="rowRegion">Scroll axis region for row.</param>
            <param name="columnRegion">Scroll axis region for column.</param>
            <param name="range">Cell range.</param>
            <param name="allowEstimatesForOutOfViewRows">If set to true, allows estimate for out of view rows.</param>
            <param name="allowEstimatesForOutOfViewColumns">If set to true, allows estimate for out of view columns.</param>
            <returns>Visible rectangle for the given range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.GetClipRect(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion)">
            <summary>
            Gets the clipping bounds for the specified row and column region.
            </summary>
            <param name="rowRegion">The row region.</param>
            <param name="columnRegion">The column region.</param>
            <returns>A <see cref="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.GetClipRect(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion)"/> with clipping bounds.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.VisualContainer.Dispose(System.Boolean)">
            <summary>
            Dispose the live instances.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.NamespaceDoc">
            <summary>
            Contains classes used to dispose the instances and also contains some common event arguments.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.DisposableWithEvent">
            <summary>
            This class provides a base class that implements the IDisposable interface
            as suggested in the .NET documentation using the Disposable pattern. After the
            object was disposed a <see cref="E:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.DisposableWithEvent.Disposed"/> event is raised.
            </summary>
            <remarks>If you derive from this class, you only need to override the protected
            Dispose method and check the disposing parameter.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.DisposableWithEvent.Dispose">
            <overload>
            Releases all resources used by the Component.
            </overload>
            <summary>
            Releases all resources used by the Component.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.DisposableWithEvent.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="T:System.ComponentModel.Component"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.DisposableWithEvent.OnDisposed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.DisposableWithEvent.Disposed"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.DisposableWithEvent.IsDisposed">
            <summary>
            Allows to detect if object is disposed or not. True indicates object is disposed,
            otherwise indicates object is still alive and ready for use.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.DisposableWithEvent.IsDisposing">
            <summary>
            Returns True if object is executing the <see cref="M:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.DisposableWithEvent.Dispose"/> or <see cref="M:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.DisposableWithEvent.Dispose(System.Boolean)"/> method call.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.DisposableWithEvent.Disposed">
            <summary>
            Occurs after the object was disposed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.IDisposedEvent">
            <summary>
            An interface for the <see cref="E:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.IDisposedEvent.Disposed"/> event.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.Collections.ComponentModel.IDisposedEvent.Disposed">
            <summary>
            Occurs when Dispose was called.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.Generic.NamespaceDoc">
            <summary>
            Contains classes and interfaces to maintain the row heights and column widths in a tree structure.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry`1">
            <summary>
            A leaf in the tree with value and optional sort key.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableNode">
            <summary>
            A branch or leaf in the tree.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.ITreeTableNode">
            <summary>
            A branch or leaf in the tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableNode.GetPosition">
            <summary>
            returns the position in the tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableNode.GetCount">
            <summary>
            Returns the number of child nodes (+1 for the current node).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableNode.IsEmpty">
            <summary>
            Indicates whether leaf is empty.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableNode.IsEntry">
            <summary>
            Indicates whether this is a leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableNode.GetLevel">
            <summary>
            Returns the tree level of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableNode.GetMinimum">
            <summary>
            Returns the minimum value (of the leftmost leaf) of the branch in a sorted tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableNode.InvalidateCounterBottomUp(System.Boolean)">
            <summary>
            Walk up parent branches and reset counters.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableNode.InvalidateSummariesBottomUp(System.Boolean)">
            <summary>
            Walk up parent branches and reset summaries.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.ITreeTableNode.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableNode.GetPosition">
            <summary>
            Returns the position in the tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableNode.GetMinimum">
            <summary>
            Returns the minimum value (of the most-left leaf) of the branch in a sorted tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableNode.IsEmpty">
            <summary>
            Indicates whether leaf is empty.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableNode.IsEntry">
            <summary>
            Indicates whether this is a leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableNode.GetCount">
            <summary>
            Returns the number of child nodes (+1 for the current node).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableNode.GetLevel">
            <summary>
            Returns the tree level of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableNode.GetNodeInfo">
            <summary>
            Returns the Debug / text information about the node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableNode.ToString">
            <summary>
            Returns the Debug / text information about the node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableNode.InvalidateCounterBottomUp(System.Boolean)">
            <summary>
            Walks up parent branches and reset counters.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableNode.InvalidateSummariesBottomUp(System.Boolean)">
            <summary>
            Walks up parent branches and reset summaries.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableNode.Tree">
            <summary>
            Gets / sets the tree this node belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableNode.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.ITreeTableEntry">
            <summary>
            A leaf with value and optional sort key.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableEntry.GetSortKey">
            <summary>
            Returns the sort key of this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableEntry.CreateBranch(Syncfusion.Windows.Forms.Collections.TreeTable)">
            <summary>
            Creates a branch that can hold this entry when new leaves are inserted into the tree.
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.ITreeTableEntry.Value">
            <summary>
            Gets / sets the value attached to this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry`1.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the System.ComponentModel.Component class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry`1.GetSortKey">
            <summary>
            Returns the sort key of this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry`1.GetMinimum">
            <summary>
            Returns the minimum value (of the most-left leaf) of the branch in a sorted tree.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry`1.GetCount">
            <summary>
            Returns the number of child nodes (+1 for the current node).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry`1.CreateBranch(Syncfusion.Windows.Forms.Collections.TreeTable)">
            <summary>
            Creates a branch that can hold this entry when new leaves are inserted into the tree.
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry`1.GetNodeInfo">
            <summary>
            Returns the Debug / text information about the node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry`1.IsEntry">
            <summary>
            Indicates whether this is a leaf.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry`1.Value">
            <summary>
            Gets or sets the value attached to this leaf.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1">
            <summary>
            A tree table.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.ITreeTable">
            <summary>
            Tree table interface definition.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTable.BeginInit">
            <summary>
            Optimizes insertion of many elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTable.EndInit">
            <summary>
            Ends optimization of insertion of elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTable.GetNextEntry(Syncfusion.Windows.Forms.Collections.ITreeTableEntry)">
            <summary>
            Optimized access to a subsequent entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTable.GetPreviousEntry(Syncfusion.Windows.Forms.Collections.ITreeTableEntry)">
            <summary>
            Optimized access to a previous entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.ITreeTable.Sorted">
            <summary>
            Indicates whether this is a sorted tree.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.ITreeTable.Comparer">
            <summary>
            A comparer used by sorted trees.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.ITreeTable.Root">
            <summary>
            Returns the root node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.ITreeTable.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1"/>.
            </summary>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.Dispose">
            <summary>
            Disposes of the object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.BeginInit">
            <summary>
            Optimizes insertion of many items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.EndInit">
            <summary>
            Ends optimization of insertion of items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.GetNextEntry(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Optimized access to a subsequent entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.GetPreviousEntry(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Optimized access to the previous entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.Insert(System.Int32,Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the item should be inserted.</param>
            <param name="item">The item to insert. The value must not be a NULL reference (Nothing in Visual Basic). </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.Remove(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="item">The item to remove from the collection. If the value is NULL or the item is not contained
            in the collection, the method will do nothing.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the item to remove. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.IndexOf(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Returns the zero-based index of the occurrence of the item in the collection.
            </summary>
            <param name="item">The item to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based index of the occurrence of the item within the entire collection, if found; otherwise -1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.Add(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Adds a value to the end of the collection.
            </summary>
            <param name="item">The item to be added to the end of the collection. The value must not be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based collection index at which the value has been added.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.Contains(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry{`0})">
            <summary>
            Determines if the item belongs to this collection.
            </summary>
            <param name="item">The object to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic).</param>
            <returns>True if item is found in the collection; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.CopyTo(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEntry{`0}[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the items copied from the  ArrayList. The array must have zero-based indexing. </param>
            <param name="index">The zero-based index in an array at which copying begins. </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.InternalTree">
            <summary>
            The non-generic tree table with actual implementation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.Root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.Sorted">
            <summary>
            Indicates whether thisTree is sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.Comparer">
            <summary>
            Gets or sets the comparer used by sorted trees.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.Item(System.Int32)">
            <summary>
            Gets or sets the item at the zero-based index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.Count">
            <summary>
            Gets the number of items contained in the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value></value>
            <returns>true if the collection is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
            <value></value>
            <returns>true if the collection has a fixed size; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTable`1.IsSynchronized">
            <summary>
            Returns False.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableEnumerator">
            <summary>
            Strongly typed enumerator for <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTable"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEnumerator.#ctor(Syncfusion.Windows.Forms.Collections.ITreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableEnumerator"/>.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEnumerator.Reset">
            <summary>
            Resets the enumerator.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEnumerator.MoveNext">
            <summary>
            Indicates whether to move to the next node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEnumerator.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableEnumerator"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEnumerator.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableEnumerator"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current enumerator.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableEnumerator.Current">
            <summary>
            Returns the current node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEnumerator`1.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableEnumerator`1"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeCollection`1.GetNext(`0)">
            <summary>
            Returns the next item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeCollection`1.GetPrevious(`0)">
            <summary>
            Returns the previous item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeCollection`1.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeCollectionEnumerator`1">
            <summary>
            Enumerator class for items of a <see cref="T:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeCollection`1"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeCollectionEnumerator`1.#ctor(Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeCollection{`0})">
            <summary>
            Initalizes the enumerator and attaches it to the collection.
            </summary>
            <param name="collection">The parent collection to enumerate.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeCollectionEnumerator`1.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeCollectionEnumerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next item of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next item; False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeCollectionEnumerator`1.Current">
            <summary>
            Gets the current item in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry`2">
            <summary>
            A tree leaf with value and summary information.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry">
            <summary>
            A tree leaf with value, sort key and counter information.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry">
            <summary>
            A tree leaf with value and summary information.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableEntry">
            <summary>
            A leaf in the tree with value and optional sort key.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntry.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the System.ComponentModel.Componentclass and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntry.GetSortKey">
            <summary>
            Returns the sort key of this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntry.GetMinimum">
            <summary>
            Returns the minimum value (of the most-left leaf) of the branch in a sorted tree.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntry.GetCount">
            <summary>
            Returns the number of child nodes (+1 for the current node).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntry.CreateBranch(Syncfusion.Windows.Forms.Collections.TreeTable)">
            <summary>
            Creates a branch that can hold this entry when new leaves are inserted into the tree.
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntry.GetNodeInfo">
            <summary>
            Returns the Debug / text information about the node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntry.IsEntry">
            <summary>
            Indicates whether this is a leaf.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableEntry.Value">
            <summary>
            Gets / sets the value attached to this leaf.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.ITreeTableSummaryNode">
            <summary>
            Interface definition for a node that has one or more summaries.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableSummaryNode.GetSummaries(Syncfusion.Windows.Forms.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
            <param name="emptySummaries">The empty summaries.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableSummaryNode.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty in this node and child nodes.
            </summary>
            <param name="notifyEntrySummary">if set to <c>true</c> notify entry summary.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.ITreeTableSummaryNode.HasSummaries">
            <summary>
            Indicates whether node has summaries.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry.CreateBranch(Syncfusion.Windows.Forms.Collections.TreeTable)">
            <summary>
            Creates a branch that can hold this entry when new leaves are inserted into the tree.
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry.GetSummaries(Syncfusion.Windows.Forms.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
            <param name="emptySummaries">The empty summaries.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry.OnGetSummaries(Syncfusion.Windows.Forms.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Called from <see cref="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry.GetSummaries(Syncfusion.Windows.Forms.Collections.ITreeTableEmptySummaryArraySource)"/> when called the first time after summaries were invalidated.
            </summary>
            <param name="emptySummaries">The empty summaries.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry.GetSummaryArraySource">
            <summary>
            Returns the value as <see cref="T:Syncfusion.Windows.Forms.Collections.ITreeTableSummaryArraySource"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry.InvalidateSummariesBottomUp(System.Boolean)">
            <summary>
            Walks up parent branches and reset summaries.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty in this node and child nodes.
            </summary>
            <param name="notifySummaryArraySource">if set to <c>true</c> notify summary array source.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry.TreeTableWithSummary">
            <summary>
            Returns the tree this leaf belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry.HasSummaries">
            <summary>
            Indicates whether the node has summaries.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.ITreeTableCounterNode">
            <summary>
            Interface definition for a node that has counters and summaries.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableCounterNode.GetCounterTotal">
            <summary>
            The total of this node's counter and child nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableCounterNode.GetCounterPosition">
            <summary>
            The cumulative position of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableCounterNode.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty in this node and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry.CreateBranch(Syncfusion.Windows.Forms.Collections.TreeTable)">
            <summary>
            Creates a branch that can hold this entry when new leaves are inserted into the tree.
            </summary>
            <param name="tree"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry.GetCounterPosition">
            <summary>
            Returns the cumulative position of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry.GetCounterSource">
            <summary>
            Returns the value as <see cref="T:Syncfusion.Windows.Forms.Collections.ITreeTableCounterSource"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry.IsCounterDirty">
            <summary>
            Indicates whether the counter was set dirty.
            </summary>
            <returns>True if dirty; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry.GetCounterTotal">
            <summary>
            Returns the total of this node's counter and child nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry.InvalidateCounter">
            <summary>
            Reset cached counter.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry.InvalidateCounterBottomUp(System.Boolean)">
            <summary>
            Invalidates the counter bottom up.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty in this node and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry.TreeTableWithCounter">
            <summary>
            Returns the tree this leaf belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry`2.GetCounterPosition">
            <summary>
            Returns the cumulative position of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry`2.GetCounterTotal">
            <summary>
            Returns the total of this node's counter and child nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry`2.Value">
            <summary>
            Gets or sets the value attached to this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.#ctor(`1,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2"/>.
            </summary>
            <param name="sorted"></param>
             <param name="startPos"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.Dispose">
            <summary>
            Disposes of the object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.BeginInit">
            <summary>
            Optimizes insertion of many items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.EndInit">
            <summary>
            Ends optimization of insertion of items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.GetNextEntry(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Optimized access to a subsequent entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.GetPreviousEntry(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Optimized access to the previous entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.Insert(System.Int32,Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the item should be inserted.</param>
            <param name="item">The item to insert. The value must not be a NULL reference (Nothing in Visual Basic). </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.Remove(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="item">The item to remove from the collection. If the value is NULL or the item is not contained
            in the collection, the method will do nothing.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the item to remove. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.IndexOf(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Returns the zero-based index of the occurrence of the item in the collection.
            </summary>
            <param name="item">The item to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based index of the occurrence of the item within the entire collection, if found; otherwise -1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.Add(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Adds a value to the end of the collection.
            </summary>
            <param name="item">The item to be added to the end of the collection. The value must not be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based collection index at which the value has been added.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.Contains(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Determines if the item belongs to this collection.
            </summary>
            <param name="item">The object to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic).</param>
            <returns>True if item is found in the collection; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.CopyTo(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1}[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the items copied from the  ArrayList. The array must have zero-based indexing. </param>
            <param name="index">The zero-based index in an array at which copying begins. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty.
            </summary>
            <param name="notifySummariesSource">if set to <c>true</c> notify summaries source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.GetSummaries(Syncfusion.Windows.Forms.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty.
            </summary>
            <param name="notifyCounterSource"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.GetCounterTotal">
            <summary>
            Returns the total of all counters in this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.GetStartCounterPosition">
            <summary>
            Returns the starting counter for this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.GetEntryAtCounterPosition(`1,System.Int32)">
            <summary>
            Overloaded. Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.GetEntryAtCounterPosition(`1,System.Int32,System.Boolean)">
            <summary>
            Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <param name="preferLeftMost">Indicates if the leftmost entry should be returned if multiple tree elements have the
            same searchPosition.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.GetNextNotEmptyCounterEntry(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1},System.Int32)">
            <summary>
            Returns the subsequent entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.GetPreviousNotEmptyCounterEntry(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1},System.Int32)">
            <summary>
            Returns the previous entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.GetNextVisibleEntry(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Returns the next entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.GetPreviousVisibleEntry(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounterEntry{`0,`1})">
            <summary>
            Returns the previous entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.InternalTree">
            <summary>
            The internal thisTree table.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.Root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.Sorted">
            <summary>
            Indicates whether thisTree is sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.Comparer">
            <summary>
            Gets or sets the comparer used by sorted trees.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.Item(System.Int32)">
            <summary>
            Gets or sets the item at the zero-based index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.Count">
            <summary>
            Gets the number of items contained in the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value></value>
            <returns>true if the collection is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
            <value></value>
            <returns>true if the collection has a fixed size; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.IsSynchronized">
            <summary>
            Returns False.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithCounter`2.HasSummaries">
            <summary>
            Indicates whether the tree has summaries.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2">
            <summary>
            A collection of items maintained in a binary tree
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.Dispose">
            <summary>
            Disposes of the object and releases internal objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetNext(`0)">
            <summary>
            Returns the next item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetPrevious(`0)">
            <summary>
            Returns the previous item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetEnumerator">
            <summary>
            Returns an enumerator for the entire collection.
            </summary>
            <returns>An Enumerator for the entire collection.</returns>
            <remarks>Enumerators only allow reading the data in the collection. 
            Enumerators cannot be used to modify the underlying collection.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty.
            </summary>
            <param name="notifySummariesSource">if set to <c>true</c> notify summaries source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetSummaries(Syncfusion.Windows.Forms.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty.
            </summary>
            <param name="notifyCounterSource"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetCounterTotal">
            <summary>
            Returns the total of all counters in this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetStartCounterPosition">
            <summary>
            Returns the starting counter for this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetItemAtCounterPosition(`1,System.Int32)">
            <summary>
            Overloaded. Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetItemAtCounterPosition(`1,System.Int32,System.Boolean)">
            <summary>
            Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <param name="preferLeftMost">Indicates if the leftmost entry should be returned if multiple tree elements have the
            same searchPosition.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetNextNotEmptyCounterItem(`0,System.Int32)">
            <summary>
            Returns the subsequent entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetPreviousNotEmptyCounterItem(`0,System.Int32)">
            <summary>
            Returns the previous entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetNextVisibleItem(`0)">
            <summary>
            Returns the next entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.GetPreviousVisibleItem(`0)">
            <summary>
            Returns the previous entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection`2.HasSummaries">
            <summary>
            Indicates whether the tree has summaries.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2">
            <summary>
            Enumerator class for items of a <see cref="T:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2.#ctor(Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollection{`0,`1})">
            <summary>
            Initalizes the enumerator and attaches it to the collection.
            </summary>
            <param name="collection">The parent collection to enumerate.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2.MoveNext">
            <summary>
            Advances the enumerator to the next item of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next item; False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithCounterCollectionEnumerator`2.Current">
            <summary>
            Gets the current item in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummaryEntry`1">
            <summary>
            A tree leaf with value and summary information.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummaryEntry`1.Value">
            <summary>
            Gets or sets the value attached to this leaf.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1"/>.
            </summary>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.Dispose">
            <summary>
            Disposes of the object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.BeginInit">
            <summary>
            Optimizes insertion of many items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.EndInit">
            <summary>
            Ends optimization of insertion of items when thisTree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.GetNextEntry(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Optimized access to a subsequent entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.GetPreviousEntry(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Optimized access to the previous entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.Insert(System.Int32,Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the item should be inserted.</param>
            <param name="item">The item to insert. The value must not be a NULL reference (Nothing in Visual Basic). </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.Remove(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="item">The item to remove from the collection. If the value is NULL or the item is not contained
            in the collection, the method will do nothing.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the item to remove. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.IndexOf(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Returns the zero-based index of the occurrence of the item in the collection.
            </summary>
            <param name="item">The item to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based index of the occurrence of the item within the entire collection, if found; otherwise -1.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.Add(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Adds a value to the end of the collection.
            </summary>
            <param name="item">The item to be added to the end of the collection. The value must not be a NULL reference (Nothing in Visual Basic). </param>
            <returns>The zero-based collection index at which the value has been added.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.Contains(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummaryEntry{`0})">
            <summary>
            Determines if the item belongs to this collection.
            </summary>
            <param name="item">The object to locate in the collection. The value can be a NULL reference (Nothing in Visual Basic).</param>
            <returns>True if item is found in the collection; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.CopyTo(Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummaryEntry{`0}[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the items copied from the  ArrayList. The array must have zero-based indexing. </param>
            <param name="index">The zero-based index in an array at which copying begins. </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty.
            </summary>
            <param name="notifySummariesSource">if set to <c>true</c> notify summaries source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.GetSummaries(Syncfusion.Windows.Forms.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.InternalTree">
            <summary>
            The internal thisTree table.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.Root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.Sorted">
            <summary>
            Indicates whether thisTree is sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.Comparer">
            <summary>
            Gets or sets the comparer used by sorted trees.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.Item(System.Int32)">
            <summary>
            Gets or sets the item at the zero-based index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.Count">
            <summary>
            Gets the number of items contained in the collection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value></value>
            <returns>true if the collection is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
            <value></value>
            <returns>true if the collection has a fixed size; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.IsSynchronized">
            <summary>
            Returns False.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericTreeTableWithSummary`1.HasSummaries">
            <summary>
            Indicates whether the tree has summaries.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1">
            <summary>
            A collection of items maintained in a binary tree
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.Dispose">
            <summary>
            Disposes of the object and releases internal objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.GetNext(`0)">
            <summary>
            Returns the next item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.GetPrevious(`0)">
            <summary>
            Returns the previous item in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator for the entire collection.
            </summary>
            <returns>An Enumerator for the entire collection.</returns>
            <remarks>Enumerators only allow reading the data in the collection. 
            Enumerators cannot be used to modify the underlying collection.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty.
            </summary>
            <param name="notifySummariesSource">if set to <c>true</c> notify summaries source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.GetSummaries(Syncfusion.Windows.Forms.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1.HasSummaries">
            <summary>
            Indicates whether the tree has summaries.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollectionEnumerator`1">
            <summary>
            Enumerator class for items of a <see cref="T:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollection`1"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollectionEnumerator`1.#ctor(Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollection{`0})">
            <summary>
            Initalizes the enumerator and attaches it to the collection.
            </summary>
            <param name="collection">The parent collection to enumerate.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollectionEnumerator`1.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first item in the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollectionEnumerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next item of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next item; False if the enumerator has passed the end of the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.Generic.GenericBinaryTreeWithSummaryCollectionEnumerator`1.Current">
            <summary>
            Gets the current item in the collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.NamespaceDoc">
            <summary>
            Contains classes and interfaces to maintain the row heights and column widths in a balanced tree structure.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableNodeColor">
            <summary>
            Used by TreeTable to balance the tree with algorithm based on Red-Black tree.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Collections.TreeTableNodeColor.Red">
            <summary>
            Red.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Collections.TreeTableNodeColor.Black">
            <summary>
            Black.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.ITreeTableBranch">
            <summary>
            A branch with left and right leaves or branches.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableBranch.SetLeft(Syncfusion.Windows.Forms.Collections.ITreeTableNode,System.Boolean,System.Boolean)">
            <summary>
            Sets the left node.
            </summary>
            <param name="value">The new node.</param>
            <param name="inAddMode">Indicates whether tree-table is in add-mode.</param>
            <param name="isSortedTree">Indicates whether tree-table is sorted.</param>
            <remarks>
            Call this method instead of simply setting <see cref="P:Syncfusion.Windows.Forms.Collections.ITreeTableBranch.Left"/> property if you want
            to avoid the round-trip call to check whether the tree is in add-mode
            or if tree-table is sorted.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableBranch.SetRight(Syncfusion.Windows.Forms.Collections.ITreeTableNode,System.Boolean)">
            <summary>
            Sets the right node.
            </summary>
            <param name="value">The new node.</param>
            <param name="inAddMode">Specifies if tree-table is in add-mode.</param>
            <remarks>
            Call this method instead of simply setting <see cref="P:Syncfusion.Windows.Forms.Collections.ITreeTableBranch.Right"/> property if you want
            to avoid the round-trip call to check whether the tree is in add-mode
            or if tree-table is sorted.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableBranch.GetLeftB">
            <summary>
            Returns the left branch cast to ITreeTableBranch.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableBranch.GetRightB">
            <summary>
            Returns the right branch cast to ITreeTableBranch.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableBranch.GetEntryPositionOfChild(Syncfusion.Windows.Forms.Collections.ITreeTableNode)">
            <summary>
            Returns the position in the tree table of the specified child node.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableBranch.InvalidateCountBottomUp">
            <summary>
            Sets this object's child node Count dirty and
            marks parent nodes' child node Count dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableBranch.InvalidateCountTopDown">
            <summary>
            Sets this object's child node Count dirty and steps
            through all child branches and marks their child node Count dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableBranch.InvalidateMinimumBottomUp">
            <summary>
            Sets this object's child node Minimum dirty and
            marks parent nodes' child node Minimum dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableBranch.InvalidateMinimumTopDown">
            <summary>
            Sets this object's child node Minimum dirty and steps
            through all child branches and marks their child node Minimum dirty.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.ITreeTableBranch.Left">
            <summary>
            Gets / sets the left node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.ITreeTableBranch.Right">
            <summary>
            Gets / sets the right node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.ITreeTableBranch.Color">
            <summary>
            Gets / sets the Red-Black tree color.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableBranch">
            <summary>
            A branch in a tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableBranch.#ctor(Syncfusion.Windows.Forms.Collections.TreeTable)">
            <summary>
            Initializes a new branch.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableBranch.GetMinimum">
            <summary>
            Returns the minimum value (of the most-left leaf) of the branch in a sorted tree.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableBranch.GetLeftB">
            <summary>
            Returns the left node cast to ITreeTableBranch.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableBranch.GetRightB">
            <summary>
            Returns the right node cast to ITreeTableBranch.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableBranch.SetLeft(Syncfusion.Windows.Forms.Collections.ITreeTableNode,System.Boolean,System.Boolean)">
            <summary>
            Sets the left node.
            </summary>
            <param name="value">The new node.</param>
            <param name="inAddMode">Indicates whether tree-table is in add-mode.</param>
            <param name="isSorted">Indicates whether tree-table is sorted.</param>
            <remarks>
            Call this method instead of simply setting <see cref="P:Syncfusion.Windows.Forms.Collections.TreeTableBranch.Left"/> property if you want
            to avoid the round-trip call to check whether the tree is in add-mode
            or if tree-table is sorted.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableBranch.SetRight(Syncfusion.Windows.Forms.Collections.ITreeTableNode,System.Boolean)">
            <summary>
            Sets the right node.
            </summary>
            <param name="value">The new node.</param>
            <param name="inAddMode">Indicates whether tree-table is in add-mode.</param>
            <remarks>
            Call this method instead of simply setting <see cref="P:Syncfusion.Windows.Forms.Collections.TreeTableBranch.Right"/> property if you want
            to avoid the round-trip call to check whether the tree is in add-mode
            or if tree-table is sorted.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableBranch.GetEntryPositionOfChild(Syncfusion.Windows.Forms.Collections.ITreeTableNode)">
            <summary>
            Returns the position in the tree table of the specific child node.
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableBranch.GetCount">
            <summary>
            Returns the number of child nodes (+1 for the current node).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableBranch.IsEntry">
            <summary>
            Indicates whether this is a leaf.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableBranch.InvalidateCountBottomUp">
            <summary>
            Sets this object's child node count dirty and
            walks up parent nodes and marks their child node count dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableBranch.InvalidateCountTopDown">
            <summary>
            Sets this object's child node count dirty and steps
            through all child branches and marks their child node count dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableBranch.InvalidateMinimumBottomUp">
            <summary>
            Sets this object's child node minimum dirty and
            marks parent nodes' child node minimum dirty.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableBranch.InvalidateMinimumTopDown">
            <summary>
            Sets this object's child node minimum dirty and steps
            through all child branches and marks their child node minimum dirty.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableBranch.Color">
            <summary>
            Gets / sets Red-Black tree algorithm helper.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableBranch.Left">
            <summary>
            Gets / sets the left leaf or branch.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableBranch.Right">
            <summary>
            Gets / sets the right tree or branch.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableEmpty">
            <summary>
            An empty node.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.ITreeTableSource">
            <summary>
            This object owns a <see cref="T:Syncfusion.Windows.Forms.Collections.ITreeTable"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableSource.GetTreeTable">
            <summary>
            Returns a reference to an inner tree table.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTable">
            <summary>
            A tree table.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
            <remarks>See the documentation for the <see cref="N:System.ComponentModel"/> class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.#ctor(System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTable"/>.
            </summary>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.SetNodeAt(System.Int32,Syncfusion.Windows.Forms.Collections.ITreeTableNode)">
            <summary>
            Sets the node at the specified index.
            </summary>
            <param name="index">Index value where the node is to be inserted.</param>
            <param name="value">Value of the node that is to be inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.GetPreviousEntry(Syncfusion.Windows.Forms.Collections.ITreeTableEntry)">
            <summary>
            Optimized access to the previous entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.GetNextEntry(Syncfusion.Windows.Forms.Collections.ITreeTableEntry)">
            <summary>
            Optimized access to a subsequent entry.
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.Insert(System.Int32,Syncfusion.Windows.Forms.Collections.ITreeTableNode)">
            <summary>
            Inserts a node at the specified index.
            </summary>
            <param name="index">Index value where the node is to be inserted.</param>
            <param name="value">Value of the node to insert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.Remove(Syncfusion.Windows.Forms.Collections.ITreeTableNode)">
            <summary>
            Removes the specified node.
            </summary>
            <param name="value">Node value to look for and remove.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.ResetCache">
            <summary>
            Resets the cache.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.Contains(Syncfusion.Windows.Forms.Collections.ITreeTableNode)">
            <summary>
            Indicates whether the node belongs to this tree.
            </summary>
            <param name="value">Node value to search for.</param>
            <returns>True if node belongs to this tree; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.IndexOf(Syncfusion.Windows.Forms.Collections.ITreeTableNode)">
            <summary>
            Returns the position of a node.
            </summary>
            <param name="value">Node value to look for.</param>
            <returns>Index of the node if found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.Add(Syncfusion.Windows.Forms.Collections.ITreeTableNode)">
            <summary>
            Appends a node.
            </summary>
            <param name="value">Node value to append.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.BeginInit">
            <summary>
            Optimizes insertion of many elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.EndInit">
            <summary>
            Ends optimization of insertion of elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.AddSorted(Syncfusion.Windows.Forms.Collections.ITreeTableNode)">
            <summary>
            Adds a node into a sorted tree.
            </summary>
            <param name="value">Node value to add.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.AddIfNotExists(System.Object,Syncfusion.Windows.Forms.Collections.ITreeTableEntry)">
            <summary>
            Adds a node in a sorted tree only if no node with the same value has not been added yet.
            </summary>
            <param name="key"></param>
            <param name="value">Node value to add.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.IndexOfKey(System.Object)">
            <summary>
            Finds a node in a sorted tree.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.FindKey(System.Object)">
            <summary>
            Finds a node in a sorted tree that matches the specified key.
            </summary>
            <param name="key">The key to search.</param>
            <returns>The node; NULL if not found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.FindHighestSmallerOrEqualKey(System.Object)">
            <summary>
            Finds the node in a sorted tree is just one entry ahead of the
            node with the specified key. It searches for the largest possible
            key that is smaller than the specified key.
            </summary>
            <param name="key">The key to search.</param>
            <returns>The node; NULL if not found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.RemoveAt(System.Int32)">
            <summary>
            Removes a node at the specified position.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a node at the specified index.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the node with the specified value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.System#Collections#IList#Contains(System.Object)">
            <summary>
            Indicates whether the node belongs to this tree.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.Clear">
            <summary>
            Clears all nodes in the tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the index of the specified node.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds the specified node to the tree.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.GetCount">
            <summary>
            Returns the number of leaves.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the element from this collection into an array.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">The starting index in thedestination array.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.CopyTo(Syncfusion.Windows.Forms.Collections.ITreeTableNode[],System.Int32)">
            <summary>
            Copies the elements from this collection into an array.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">The starting index in the destination array.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTable.GetEnumerator">
            <summary>
            Returns a <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableEnumerator"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTable.Comparer">
            <summary>
            Gets / sets the comparer used by sorted trees.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTable.Tag">
            <summary>
            Gets / sets the tag that can be associated with this object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTable.Sorted">
            <summary>
            Indicates whether tree is sorted.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTable.Root">
            <summary>
            Gets / sets the root node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTable.Item(System.Int32)">
            <summary>
            Gets / sets an item at the specified index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTable.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTable.IsReadOnly">
            <summary>
            Indicates whether the tree is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTable.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets / sets the item with the specified index.
            </summary>
            <param name="index">Index value of the item.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTable.IsFixedSize">
            <summary>
            Indicates whether the nodes can be added or removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTable.IsSynchronized">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTable.Count">
            <summary>
            Returns the number of leaves.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTable.SyncRoot">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.ITreeTableEntrySource">
            <summary>
            An object that holds an <see cref="T:Syncfusion.Windows.Forms.Collections.ITreeTableEntry"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.ITreeTableEntrySource.Entry">
            <summary>
            Gets a reference to the <see cref="T:Syncfusion.Windows.Forms.Collections.ITreeTableEntry"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection">
            <summary>
            A collection of <see cref="T:Syncfusion.Windows.Forms.Collections.ITreeTableEntrySource"/> objects
            that are internally using a <see cref="T:Syncfusion.Windows.Forms.Collections.ITreeTable"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.#ctor">
            <summary>
            Overloaded. Initializes a new <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.#ctor(System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.#ctor(Syncfusion.Windows.Forms.Collections.ITreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.BeginInit">
            <summary>
            Optimizes insertion of many elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.EndInit">
            <summary>
            Ends optimization of insertion of elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.Contains(Syncfusion.Windows.Forms.Collections.ITreeTableEntrySource)">
            <summary>
            Indicates whether object belongs to this collection.
            </summary>
            <param name="value">The value of the object.</param>
            <returns>True if object belongs to the collection; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.IndexOf(Syncfusion.Windows.Forms.Collections.ITreeTableEntrySource)">
            <summary>
            Returns the position of a object in the collection.
            </summary>
            <param name="value">The value of the object.</param>
            <returns>The position of the object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.CopyTo(Syncfusion.Windows.Forms.Collections.ITreeTableEntrySource[],System.Int32)">
            <summary>
            Copies the contents of the collection to an array.
            </summary>
            <param name="array">Destination array.</param>
            <param name="index">Starting index of the destination array.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.GetEnumerator">
            <summary>
            Returns a strongly typed enumerator.
            </summary>
            <returns>A strongly types enumerator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Collections.ITreeTableEntrySource)">
            <summary>
            Inserts an object at the specified index.
            </summary>
            <param name="index">Index value where the object is to be inserted.</param>
            <param name="value">Value of the object to insert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.Add(Syncfusion.Windows.Forms.Collections.ITreeTableEntrySource)">
            <summary>
            Appends an object.
            </summary>
            <param name="value">The value of the object to append.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.Remove(Syncfusion.Windows.Forms.Collections.ITreeTableEntrySource)">
            <summary>
            Removes the object.
            </summary>
            <param name="value">The value of the object to remove.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a node at the specified index.
            </summary>
            <param name="index">Index value of the node to remove.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts the object at the specified index.
            </summary>
            <param name="index">Index value of the object to insert.</param>
            <param name="value">Value of the object to insert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified object.
            </summary>
            <param name="value">Value of the object to remove.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Indicate whether the specified object belongs to this collection.
            </summary>
            <param name="value">Object value to look for.</param>
            <returns>True if object belongs to the collection; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.Clear">
            <summary>
            Clears all nodes in the tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Returns the index of the specified object.
            </summary>
            <param name="value">Value of the object.</param>
            <returns>Index value of the object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds the specified object to the collection.
            </summary>
            <param name="value">Value of the object to add.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies elements to destination array.
            </summary>
            <param name="array">Destination array.</param>
            <param name="index">Starting index of the destination array.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator.
            </summary>
            <returns>Enumerator.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.IsInitializing">
            <summary>
            Indicates whether BeginInit was called.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.Item(System.Int32)">
            <summary>
            Gets / sets an <see cref="T:Syncfusion.Windows.Forms.Collections.ITreeTableEntrySource"/> at a specific position.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.IsReadOnly">
            <summary>
            Indicates whether tree is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets / sets the item at the specified index.
            </summary>
            <param name="index">Index of the item.</param>
            <returns>The item at the specified index.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.IsFixedSize">
            <summary>
            Indicates whether the nodes can be added or removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.IsSynchronized">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection.Count">
            <summary>
            Returns the number of objects in this collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollectionEnumerator">
            <summary>
            A strongly typed enumerator for the <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollectionEnumerator.#ctor(Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollection)">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollectionEnumerator"/>.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollectionEnumerator.Reset">
            <summary>
            Resets the enumerator.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollectionEnumerator.MoveNext">
            <summary>
            Indicates whether to move to the next object in the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollectionEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current enumerator.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableEntrySourceCollectionEnumerator.Current">
            <summary>
            Returns the current <see cref="T:Syncfusion.Windows.Forms.Collections.ITreeTableEntrySource"/> object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.ITreeTableCounterSource">
            <summary>
            Interface definition for an object that has counters.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableCounterSource.GetCounter">
            <summary>
            Returns the counter object with counters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableCounterSource.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty in this object and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableCounterSource.InvalidateCounterBottomUp">
            <summary>
            Marks all counters dirty in this object and parent nodes.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.ITreeTableCounter">
            <summary>
            Interface definition for a counter object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableCounter.Combine(Syncfusion.Windows.Forms.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Combines this counter object with another counter and returns a new object. A cookie can specify
            a specific counter type.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableCounter.Compare(Syncfusion.Windows.Forms.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Compares this counter with another counter. A cookie can specify
            a specific counter type.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableCounter.IsEmpty(System.Int32)">
            <summary>
            Indicates whether the counter object is empty. A cookie can specify
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns>
            	<c>true</c> if the specified cookie is empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableCounter.GetValue(System.Int32)">
            <summary>
            Returns the integer value of the counter. A cookie specifies
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.ITreeTableCounter.Kind">
            <summary>
            Gets the Counter Kind.
            </summary>
            <value>The kind.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableCounterCookies">
            <summary>
            Default counter cookies for identifying counter types.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Collections.TreeTableCounterCookies.CountAll">
            <summary>
            All counters.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Collections.TreeTableCounterCookies.CountVisible">
            <summary>
            Visible Counter.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter">
            <summary>
            A counter that counts objects that are marked "Visible".
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter.Empty">
            <summary>
            Returns an empty TreeTableVisibleCounter that represents zero visible elements.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter.#ctor(System.Double)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter"/> with a specified number of visible elements.
            </summary>
            <param name="visibleCount">The visible count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter.GetVisibleCount">
            <summary>
            Returns the visible count.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter.GetValue(System.Int32)">
            <summary>
            Returns the integer value of the counter. A cookie specifies
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter.Syncfusion#Windows#Forms#Collections#ITreeTableCounter#Combine(Syncfusion.Windows.Forms.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Combines one tree object with another and returns the new object.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter.CreateCounter">
            <summary>
            Factory method creates a new counter object of the same type as this object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter.OnCombineCounters(Syncfusion.Windows.Forms.Collections.ITreeTableCounter,Syncfusion.Windows.Forms.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Called to combine the values of two counter objects. Results are saved back into this counter object.
            A cookie can filter the operation to a limited set of counter types.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="cookie">The cookie.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter.Combine(Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter,System.Int32)">
            <summary>
            Combines the counter values of this counter object with the values of another counter object
            and returns a new counter object.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter.Compare(Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter,System.Int32)">
            <summary>
            Compares this counter with another counter. A cookie can specify
            a specific counter type.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter.IsEmpty(System.Int32)">
            <summary>
            Indicates whether the counter object is empty. A cookie can specify
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns>
            	<c>true</c> if the specified cookie is empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter.Kind">
            <summary>
            The Counter Kind.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterBranch">
            <summary>
            A tree table branch with a counter.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryBranch">
            <summary>
            A tree table branch with a counter.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryBranch.#ctor(Syncfusion.Windows.Forms.Collections.TreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryBranch"/>.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryBranch.GetLeftC">
            <summary>
            Returns the left branch node cast to ITreeTableSummaryNode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryBranch.GetRightC">
            <summary>
            Returns the right branch node cast to ITreeTableSummaryNode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryBranch.GetSummaries(Syncfusion.Windows.Forms.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
            <param name="emptySummaries">The empty summaries.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryBranch.InvalidateSummariesBottomUp(System.Boolean)">
            <summary>
            Walks up parent branches and reset summaries.
            </summary>
            <param name="notifyParentRecordSource"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryBranch.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty in this node and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryBranch.TreeTableWithSummary">
            <summary>
            Returns the tree this branch belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryBranch.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryBranch.HasSummaries">
            <summary>
            Indicates whether this node has summaries.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterBranch.#ctor(Syncfusion.Windows.Forms.Collections.TreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterBranch"/>.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterBranch.GetCounterPositionOfChild(Syncfusion.Windows.Forms.Collections.ITreeTableNode)">
            <summary>
            Returns the cumulative counter position object of a child node with all counter values.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterBranch.GetLeftC">
            <summary>
            Returns the left branch node cast to ITreeTableCounterNode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterBranch.GetRightC">
            <summary>
            Returns the right branch node cast to ITreeTableCounterNode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterBranch.GetCounterTotal">
            <summary>
            Returns the total of this node's counter and child nodes (cached).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterBranch.GetCounterPosition">
            <summary>
            Returns the cumulative position of this node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterBranch.InvalidateCounterBottomUp(System.Boolean)">
            <summary>
            Invalidates the counter bottom up.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterBranch.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty in this node and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterBranch.TreeTableWithCounter">
            <summary>
            Returns the tree this branch belongs to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterBranch.Parent">
            <summary>
            Gets / sets the parent branch.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter">
            <summary>
            A balanced tree with <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry"/> entries.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary">
            <summary>
            A balanced tree with <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry"/> entries.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary.#ctor(System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary"/>.
            </summary>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary.InvalidateSummariesTopDown(System.Boolean)">
            <summary>
            Marks all summaries dirty.
            </summary>
            <param name="notifySummariesSource">if set to <c>true</c> notify summaries source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary.GetSummaries(Syncfusion.Windows.Forms.Collections.ITreeTableEmptySummaryArraySource)">
            <summary>
            Returns an array of summary objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary.Insert(System.Int32,Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry)">
            <summary>
            Inserts a <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry"/> object at the specified index.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary.Remove(Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry)">
            <summary>
            Removes an object from the tree.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary.Contains(Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry)">
            <summary>
            Indicates whether an object belongs to the tree.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary.IndexOf(Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry)">
            <summary>
            Returns the index of an object in the tree.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary.Add(Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry)">
            <summary>
            Appends an object.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary.CopyTo(Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEntry[],System.Int32)">
            <summary>
            Copies the elements of this tree to an array.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary.GetEnumerator">
            <summary>
            Returns a strongly typed enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary.HasSummaries">
            <summary>
            Indicates whether the tree has summaries.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary.Item(System.Int32)">
            <summary>
            Gets / sets a TreeTableWithSummaryEntry.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.#ctor(Syncfusion.Windows.Forms.Collections.ITreeTableCounter,System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter"/>.
            </summary>
            <param name="startPos"></param>
            <param name="sorted"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.EndInit">
            <summary>
            Ends optimization of insertion of elements when tree is initialized for the first time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty.
            </summary>
            <param name="notifyCounterSource"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.GetCounterTotal">
            <summary>
            Returns the total of all counters in this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.GetStartCounterPosition">
            <summary>
            Returns the starting counter for this tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.GetEntryAtCounterPosition(Syncfusion.Windows.Forms.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Overloaded. Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.GetEntryAtCounterPosition(Syncfusion.Windows.Forms.Collections.ITreeTableCounter,System.Int32,System.Boolean)">
            <summary>
            Returns an entry at the specified counter position. A cookie defines the type of counter.
            </summary>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <param name="preferLeftMost">Indicates if the leftmost entry should be returned if multiple tree elements have the
            same searchPosition.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.GetEntryAtCounterPosition(Syncfusion.Windows.Forms.Collections.ITreeTableCounter,Syncfusion.Windows.Forms.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Gets the entry at counter position.
            </summary>
            <param name="start">The start.</param>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.GetEntryAtCounterPosition(Syncfusion.Windows.Forms.Collections.ITreeTableCounter,Syncfusion.Windows.Forms.Collections.ITreeTableCounter,System.Int32,System.Boolean)">
            <summary>
            Gets the entry at counter position.
            </summary>
            <param name="start">The start.</param>
            <param name="searchPosition">The search position.</param>
            <param name="cookie">The cookie.</param>
            <param name="preferLeftMost">if set to <c>true</c> prefer left most.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.GetNextNotEmptyCounterEntry(Syncfusion.Windows.Forms.Collections.ITreeTableEntry,System.Int32)">
            <summary>
            Returns the subsequent entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.GetPreviousNotEmptyCounterEntry(Syncfusion.Windows.Forms.Collections.ITreeTableEntry,System.Int32)">
            <summary>
            Returns the previous entry in the collection for which the specific counter is not empty.
            A cookie defines the type of counter.
            </summary>
            <param name="current">The current.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.GetNextVisibleEntry(Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry)">
            <summary>
            Returns the next entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.GetPreviousVisibleEntry(Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry)">
            <summary>
            Returns the previous entry in the collection for which CountVisible counter is not empty.
            </summary>
            <param name="current">The current.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.Insert(System.Int32,Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry)">
            <summary>
            Inserts a <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry"/> object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.Remove(Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry)">
            <summary>
            Removes an object from the tree.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.Contains(Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry)">
            <summary>
            Indicates whether an entry belongs to the tree.
            </summary>
            <param name="value">The entry.</param>
            <returns>
            	<c>true</c> if tree contains the specified entry; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.IndexOf(Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry)">
            <summary>
            Returns the position of an object in the tree.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.Add(Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry)">
            <summary>
            Appends an object.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.CopyTo(Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEntry[],System.Int32)">
            <summary>
            Copies the elements of this tree to an array.
            </summary>
            <param name="array">The array.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.GetEnumerator">
            <summary>
            Returns a strongly typed enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter.Item(System.Int32)">
            <summary>
            Gets / sets a TreeTableWithCounterEntry.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEnumerator">
            <summary>
            A strongly typed enumerator for the <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEnumerator.#ctor(Syncfusion.Windows.Forms.Collections.TreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEnumerator"/>.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableWithCounterEnumerator.Current">
            <summary>
            Returns the current <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableWithCounter"/> object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounterSource">
            <summary>
            An object that counts objects that are marked "Visible". It implements
            the ITreeTableCounterSource interface and creates a <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounterSource.#ctor(System.Double)">
            <summary>
            Initializes the object with visible count.
            </summary>
            <param name="visibleCount">The visible count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounterSource.InvalidateCounterBottomUp">
            <summary>
            Marks all counters dirty in this object and parent nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounterSource.GetCounter">
            <summary>
            Returns the counter object with counters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounterSource.InvalidateCounterTopDown(System.Boolean)">
            <summary>
            Marks all counters dirty in this object and child nodes.
            </summary>
            <param name="notifyCounterSource">if set to <c>true</c> notify counter source.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.ITreeTableSummary">
            <summary>
            Interface definition for a summary object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableSummary.Combine(Syncfusion.Windows.Forms.Collections.ITreeTableSummary)">
            <summary>
            Combines this summary information with another object's summary and returns a new object.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.ITreeTableEmptySummaryArraySource">
            <summary>
            Provides a <see cref="M:Syncfusion.Windows.Forms.Collections.ITreeTableEmptySummaryArraySource.GetEmptySummaries"/> method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableEmptySummaryArraySource.GetEmptySummaries">
            <summary>
            Gets an array of summary objects.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.ITreeTableSummaryArraySource">
            <summary>
            Interface definition for an object that has summaries.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableSummaryArraySource.GetSummaries(Syncfusion.Windows.Forms.Collections.ITreeTableEmptySummaryArraySource,System.Boolean@)">
            <summary>
            Returns an array of summary objects.
            </summary>
            <param name="emptySummaries">An array of empty summary objects.</param>
            <param name="changed">Returns True if summaries were recalculated; False if already cached.</param>
            <returns>An array of summary objects.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableSummaryArraySource.InvalidateSummariesTopDown">
            <summary>
            Marks all summaries dirty in this object and child nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableSummaryArraySource.InvalidateSummariesBottomUp">
            <summary>
            Marks all summaries dirty in this object and parent nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.ITreeTableSummaryArraySource.InvalidateSummary">
            <summary>
            Marks all summaries dirty in this object only.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEnumerator">
            <summary>
            A strongly typed enumerator for the <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary"/> collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEnumerator.#ctor(Syncfusion.Windows.Forms.Collections.TreeTable)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEnumerator"/>.
            </summary>
            <param name="tree"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Collections.TreeTableWithSummaryEnumerator.Current">
            <summary>
            Returns the current <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableWithSummary"/> object.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.NamespaceDoc">
            <summary>
            Contains classes and interfaces that manange the scrolling, hidden ranges, height, width and 
            position of each row and column.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection">
            <summary>
            A collection of entities for which distances need to be counted. The
            collection provides methods for mapping from a distance position to
            an entity and vice versa.<para/>
            For example, in a scrollable grid control you have rows with different heights. 
            Use this collection to determine the total height for all rows in the grid,
            quickly detemine the row index for a given point and also quickly determine
            the point at which a row is displayed. This also allows a mapping between the 
            scrollbars value and the rows or columns associated with that value.
            </summary>
            <remarks>
            DistanceCounterCollection uses a high-water mark technique for allocating
            objects up to the modified entry with the highest index. When you modify 
            the size of an entry the collection ensures that that objects are allocated 
            for all entries up to the given index. Entries that are after the modified 
            entry are assumed to have the DefaultSize and will not be allocated. 
            <para/>
            The best-case scenario is when all lines have the same DefaultSize. In such
            case the internal collection remains completely empty and will not cause 
            any overhead. This makes DistanceCounterCollection also an attractive solution
            for the scenario where all entries have the same size (e.g. a databound grid
            where all rows have same height).
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection">
            <summary>
            A collection of entities for which distances need to counted. The
            collection provides methods for mapping from a distance position to
            an entity and vice versa.<para/>
            For example, in a scrollable grid control you have rows with different heights. 
            Use this collection to determine the total height for all rows in the grid,
            quickly detemine the row index for a given point and also quickly determine
            the point at which a row is displayed. This also allows a mapping between the 
            scrollbars value and the rows or columns associated with that value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Hides a specified range of entities (lines, rows or colums)
            </summary>
            <param name="from">The index for the first entity&gt;</param>
            <param name="to">The raw index for the last entity</param>
            <param name="distance">The distance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.ResetRange(System.Int32,System.Int32)">
            <summary>
            Resets the range by restoring the default distance
            for all entries in the specified range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.GetNextVisibleIndex(System.Int32)">
            <summary>
            Skip subsequent entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.GetPreviousVisibleIndex(System.Int32)">
            <summary>
            Skip previous entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.IndexOfCumulatedDistance(System.Double)">
            <summary>
            Gets the index of an entity in this collection for which
            the cumulated count of previous distances is greater or equal
            the specified cumulatedDistance. (e.g. return row index for
            pixel position).
            </summary>
            <param name="cumulatedDistance">The cumulated count of previous distances.</param>
            <returns>The entity index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.GetCumulatedDistanceAt(System.Int32)">
            <summary>
            Gets the cumulated count of previous distances for the
            entity at the specifiec index. (e.g. return pixel position
            for a row index).
            </summary>
            <param name="index">The entity index.</param>
            <returns>The cumulated count of previous distances for the
            entity at the specifiec index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.SetNestedDistances(System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Assigns a collection with nested entities to an item.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedCollection">The nested collection.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.GetNestedDistances(System.Int32)">
            <summary>
            Gets the nested entities at a given index. If the index does not hold
            a mested distances collection the method returns null.
            </summary>
            <param name="index">The index.</param>
            <returns>The nested collection or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.GetNextScrollValue(System.Double)">
            <summary>
            Gets the distance position of the next entity after a given point. 
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.GetPreviousScrollValue(System.Double)">
            <summary>
            Gets the distance position of the entity preceeding a given point. If the point
            is in between entities the starting point of the matching entity
            is returned.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.GetAlignedScrollValue(System.Double)">
            <summary>
            Gets the aligned scroll value which is the starting point of the entity
            found at the given distance position.
            </summary>
            <param name="point">The point.</param>
            <returns>The starting point of the entity.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.ConnectWithParent(Syncfusion.Windows.Forms.Collections.ITreeTableCounterSource)">
            <summary>
            Connects a nested distance collection with a parent.
            </summary>
            <param name="treeTableCounterSource">The nested tree table visible counter source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.Insert(System.Int32,System.Int32)">
            <summary>
            Insert entities in the collection.
            </summary>
            <param name="insertAt">Insert position.</param>
            <param name="count">The number of entities to be inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.Remove(System.Int32,System.Int32)">
            <summary>
            Removes enities from the collection.
            </summary>
            <param name="removeAt">Index of the first entity to be removed.</param>
            <param name="count">The number of entities to be removed.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.Count">
            <summary>
            The raw number of entities (lines, rows or columns).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.DefaultDistance">
            <summary>
            The default distance (row height or column width) an entity spans 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.TotalDistance">
            <summary>
            The total distance all entities span (e.g. total height of all rows in grid)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection.Item(System.Int32)">
            <summary>
            Gets or sets the distance for an entity.
            </summary>
            <param name="index">The index for the entity</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.#ctor">
            <summary>
            Constructs the class and initializes the internal tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Hides a specified range of entities (lines, rows or colums)
            </summary>
            <param name="from">The index for the first entity&gt;</param>
            <param name="to">The raw index for the last entity</param>
            <param name="distance">The distance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.SetNestedDistances(System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Assigns a collection with nested entities to an item.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedCollection">The nested collection.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.GetNestedDistances(System.Int32)">
            <summary>
            Gets the nested entities at a given index. If the index does not hold
            a mested distances collection the method returns null.
            </summary>
            <param name="index">The index.</param>
            <returns>The nested collection or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.GetNextScrollValue(System.Double)">
            <summary>
            Gets the distance position of the next entity after a given point. 
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.GetPreviousScrollValue(System.Double)">
            <summary>
            Gets the distance position of the entity preceeding a given point. If the point
            is in between entities the starting point of the matching entity
            is returned.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.GetAlignedScrollValue(System.Double)">
            <summary>
            Gets the aligned scroll value which is the starting point of the entity
            found at the given distance position.
            </summary>
            <param name="point">The point.</param>
            <returns>The starting point of the entity.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.ConnectWithParent(Syncfusion.Windows.Forms.Collections.ITreeTableCounterSource)">
            <summary>
            Connects a nested distance collection with a parent.
            </summary>
            <param name="nestedTreeTableVisibleCounterSource">The nested tree table visible counter source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.ResetRange(System.Int32,System.Int32)">
            <summary>
            Resets the range by restoring the default distance
            for all entries in the specified range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.GetNextVisibleIndex(System.Int32)">
            <summary>
            Skip subsequent entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.GetPreviousVisibleIndex(System.Int32)">
            <summary>
            Skip previous entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.IndexOfCumulatedDistance(System.Double)">
            <summary>
            Gets the index of an entity in this collection for which
            the cumulated count of previous distances is greater or equal
            the specified cumulatedDistance. (e.g. return row index for
            pixel position).
            </summary>
            <param name="cumulatedDistance">The cumulated count of previous distances.</param>
            <returns>The entity index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.GetCumulatedDistanceAt(System.Int32)">
            <summary>
            Gets the cumulated count of previous distances for the
            entity at the specifiec index. (e.g. return pixel position
            for a row index).
            </summary>
            <param name="index">The entity index.</param>
            <returns>The cumulated count of previous distances for the
            entity at the specifiec index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.Insert(System.Int32,System.Int32)">
            <summary>
            Insert entities in the collection.
            </summary>
            <param name="insertAt">Insert position.</param>
            <param name="count">The number of entities to be inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.Remove(System.Int32,System.Int32)">
            <summary>
            Removes enities from the collection.
            </summary>
            <param name="removeAt">Index of the first entity to be removed.</param>
            <param name="count">The number of entities to be removed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.Count">
            <summary>
            The raw number of entities (lines, rows or columns).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.DefaultDistance">
            <summary>
            The default distance (row height or column width) an entity spans 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.TotalDistance">
            <summary>
            The total distance all entities span (e.g. total height of all rows in grid)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.Item(System.Int32)">
            <summary>
            Gets or sets the distance for an entity.
            </summary>
            <param name="index">The index for the entity</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource">
            <summary>
            An object that maintains a collection of nested distances and wires
            it to a parent distance collection. The object is used by the 
            DistanceCounterCollection.SetNestedDistances method to associated
            the nested distances with an index in the parent collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.#ctor(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource"/> class.
            </summary>
            <param name="parentDistances">The parent distances.</param>
            <param name="nestedDistances">The nested distances.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.InvalidateCounterBottomUp">
            <summary>
            Marks all counters dirty in this object and parent nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.GetCounter">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter"/> object with counters.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.Entry">
            <summary>
            Gets or sets the counter entry.
            </summary>
            <value>The entry.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.ParentDistances">
            <summary>
            Gets the parent distances.
            </summary>
            <value>The parent distances.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection.NestedTreeTableVisibleCounterSource.NestedDistances">
            <summary>
            Gets the nested distances.
            </summary>
            <value>The nested distances.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset">
            <summary>
            A collection of entities that is shared with a parent collection for which distances
            need to counted. The collection only is a subset for a specific range in
            the parent distance collection.
            <para/>
            When you change the size of an element in this collection the change will
            also be reflected in the parent collection and vice versa.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistancesHost">
            <summary>
            An object that implements the <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistancesHost.Distances"/> property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistancesHost.Distances">
            <summary>
            Gets or sets the distances.
            </summary>
            <value>The distances.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.#ctor(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset"/> class.
            </summary>
            <param name="trackedParentCollection">The parent collection for which a subset is "tracked".</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.Clear">
            <summary>
            Restores the distances in the parent collection for this subset to their default distance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Hides a specified range of entities (lines, rows or colums)
            </summary>
            <param name="from">The index for the first entity&gt;</param>
            <param name="to">The raw index for the last entity</param>
            <param name="distance"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.ResetRange(System.Int32,System.Int32)">
            <summary>
            Resets the range by restoring the default distance
            for all entries in the specified range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.GetNextVisibleIndex(System.Int32)">
            <summary>
            Skip subsequent entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.GetPreviousVisibleIndex(System.Int32)">
            <summary>
            Skip previous entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.IndexOfCumulatedDistance(System.Double)">
            <summary>
            Gets the index of an entity in this collection for which
            the cumulated count of previous distances is greater or equal
            the specified cumulatedDistance. (e.g. return row index for
            pixel position).
            </summary>
            <param name="cumulatedDistance">The cumulated count of previous distances.</param>
            <returns>The entity index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.GetCumulatedDistanceAt(System.Int32)">
            <summary>
            Gets the cumulated count of previous distances for the
            entity at the specifiec index. (e.g. return pixel position
            for a row index).
            </summary>
            <param name="index">The entity index.</param>
            <returns>
            The cumulated count of previous distances for the
            entity at the specifiec index.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.SetNestedDistances(System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Assigns a collection with nested entities to an item.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedCollection">The nested collection.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.GetNestedDistances(System.Int32)">
            <summary>
            Gets the nested entities at a given index. If the index does not hold
            a mested distances collection the method returns null.
            </summary>
            <param name="index">The index.</param>
            <returns>The nested collection or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.GetNextScrollValue(System.Double)">
            <summary>
            Gets the distance position of the next entity after a given point.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.GetPreviousScrollValue(System.Double)">
            <summary>
            Gets the distance position of the entity preceeding a given point. If the point
            is in between entities the starting point of the matching entity
            is returned.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.GetAlignedScrollValue(System.Double)">
            <summary>
            Gets the aligned scroll value which is the starting point of the entity
            found at the given distance position.
            </summary>
            <param name="point">The point.</param>
            <returns>The starting point of the entity.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.ConnectWithParent(Syncfusion.Windows.Forms.Collections.ITreeTableCounterSource)">
            <summary>
            This method is not supported for DistanceCounterSubset.
            </summary>
            <param name="treeTableCounterSource">The nested tree table visible counter source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.Insert(System.Int32,System.Int32)">
            <summary>
            Insert entities in the collection.
            </summary>
            <param name="insertAt">Insert position.</param>
            <param name="count">The number of entities to be inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.Remove(System.Int32,System.Int32)">
            <summary>
            Removes enities from the collection.
            </summary>
            <param name="removeAt">Index of the first entity to be removed.</param>
            <param name="count">The number of entities to be removed.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.Start">
            <summary>
            Gets or sets the starting index of this collection in the parent collection.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.End">
            <summary>
            Gets or sets the ending index of this collection in the parent collection.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.Count">
            <summary>
            The raw number of entities (lines, rows or columns).
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.DefaultDistance">
            <summary>
            The default distance (row height or column width) an entity spans
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.TotalDistance">
            <summary>
            The total distance all entities span (e.g. total height of all rows in grid)
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterSubset.Item(System.Int32)">
            <summary>
            Gets or sets the distance for an entity.
            </summary>
            <value></value>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection">
            <summary>
            A collection of entities for which distances need to be counted. The
            collection provides methods for mapping from a distance position to
            an entity and vice versa.<para/>
            For example, in a scrollable grid control you have rows with different heights. 
            Use this collection to determine the total height for all rows in the grid,
            quickly detemine the row index for a given point and also quickly determine
            the point at which a row is displayed. This also allows a mapping between the 
            scrollbars value and the rows or columns associated with that value.
            </summary>
            <remarks>
            DistanceCounterCollection internally uses ranges for allocating
            objects up to the modified entry with the highest index. When you modify 
            the size of an entry the collection ensures that that objects are allocated 
            for all entries up to the given index. Entries that are after the modified 
            entry are assumed to have the DefaultSize and will not be allocated. 
            <para/>
            Ranges will only be allocated for those lines that have different sizes.
            If you do for example only change the size of line 100 to be 10 then the collection
            will internally create two ranges: Range 1 from 0-99 with DefaultSize and
            Range 2 from 100-100 with size 10. This approach makes this collection
            work very efficient with grid scenarios where often many rows have
            the same height.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.Empty">
            <summary>
            Returns an empty collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.#ctor(System.Double)">
            <summary>
            Constructs the class and initializes the internal tree.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.SetNestedDistances(System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Assigns a collection with nested entities to an item.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedCollection">The nested collection.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.GetNestedDistances(System.Int32)">
            <summary>
            Gets the nested entities at a given index. If the index does not hold
            a mested distances collection the method returns null.
            </summary>
            <param name="index">The index.</param>
            <returns>The nested collection or null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.GetNextScrollValue(System.Double)">
            <summary>
            Gets the distance position of the next entity after a given point. 
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.GetPreviousScrollValue(System.Double)">
            <summary>
            Gets the distance position of the entity preceeding a given point. If the point
            is in between entities the starting point of the matching entity
            is returned.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.GetAlignedScrollValue(System.Double)">
            <summary>
            Gets the aligned scroll value which is the starting point of the entity
            found at the given distance position.
            </summary>
            <param name="point">The point.</param>
            <returns>The starting point of the entity.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.ConnectWithParent(Syncfusion.Windows.Forms.Collections.ITreeTableCounterSource)">
            <summary>
            Connects a nested distance collection with a parent.
            </summary>
            <param name="treeTableCounterSource">The nested tree table visible counter source.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.GetNextVisibleIndex(System.Int32)">
            <summary>
            Skip subsequent entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.GetPreviousVisibleIndex(System.Int32)">
            <summary>
            Skip previous entities for which the distance is 0.0 and return the next entity.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.IndexOfCumulatedDistance(System.Double)">
            <summary>
            Gets the index of an entity in this collection for which
            the cumulated count of previous distances is greater or equal
            the specified cumulatedDistance. (e.g. return row index for
            pixel position).
            </summary>
            <param name="cumulatedDistance">The cumulated count of previous distances.</param>
            <returns>The entity index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.GetCumulatedDistanceAt(System.Int32)">
            <summary>
            Gets the cumulated count of previous distances for the
            entity at the specifiec index. (e.g. return pixel position
            for a row index).
            </summary>
            <param name="index">The entity index.</param>
            <returns>The cumulated count of previous distances for the
            entity at the specifiec index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Hides a specified range of entities (lines, rows or colums)
            </summary>
            <param name="from">The index for the first entity&gt;</param>
            <param name="to">The raw index for the last entity</param>
            <param name="distance">The distance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.ResetRange(System.Int32,System.Int32)">
            <summary>
            Resets the range by restoring the default distance
            for all entries in the specified range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.Insert(System.Int32,System.Int32)">
            <summary>
            Insert entities in the collection.
            </summary>
            <param name="insertAt">Insert position.</param>
            <param name="count">The number of entities to be inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.Insert(System.Int32,System.Int32,System.Double)">
            <summary>
            Insert entities in the collection.
            </summary>
            <param name="insertAt">Insert position.</param>
            <param name="count">The number of entities to be inserted.</param>
            <param name="distance">The distance to be set.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.Remove(System.Int32,System.Int32)">
            <summary>
            Removes enities from the collection.
            </summary>
            <param name="removeAt">Index of the first entity to be removed.</param>
            <param name="count">The number of entities to be removed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceCounterCollection"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.Count">
            <summary>
            The raw number of entities (lines, rows or columns).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.DefaultDistance">
            <summary>
            The default distance (row height or column width) an entity spans 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.TotalDistance">
            <summary>
            The total distance all entities span (e.g. total height of all rows in grid)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.Item(System.Int32)">
            <summary>
            Gets or sets the distance for an entity.
            </summary>
            <param name="index">The index for the entity</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource">
            <summary>
            An object that maintains a collection of nested distances and wires
            it to a parent distance collection. The object is used by the 
            DistanceCounterCollection.SetNestedDistances method to associated
            the nested distances with an index in the parent collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounterSource">
            <summary>
            An object that counts objects that are marked "Visible". It implements
            the ITreeTableCounterSource interface and creates a <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounterSource.#ctor(System.Double,System.Int32)">
            <summary>
            Initializes the object with visible count.
            </summary>
            <param name="visibleCount">The visible count.</param>
            <param name="lineCount">The line count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounterSource.ToString">
            <summary>
            Returns a string describing the state of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounterSource.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounterSource.SingleLineDistance">
            <summary>
            Gets or sets the distance of a single line.
            </summary>
            <value>The single line distance.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.#ctor(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounterEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource"/> class.
            </summary>
            <param name="parentDistances">The parent distances.</param>
            <param name="nestedDistances">The nested distances.</param>
            <param name="entry">The entry.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.InvalidateCounterBottomUp">
            <summary>
            Marks all counters dirty in this object and parent nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.GetCounter">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Collections.TreeTableVisibleCounter"/> object with counters.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.Entry">
            <summary>
            Gets or sets the counter entry.
            </summary>
            <value>The entry.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.ParentDistances">
            <summary>
            Gets the parent distances.
            </summary>
            <value>The parent distances.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceRangeCounterCollection.NestedDistanceCounterCollectionSource.NestedDistances">
            <summary>
            Gets the nested distances.
            </summary>
            <value>The nested distances.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounterKind">
            <summary>
            A collection of integers used to specify various counter kinds.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounterKind.CountAll">
            <summary>
            All counters.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounterKind.Distance">
            <summary>
            Visible Counter.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounterKind.Lines">
            <summary>
            Line Counter.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter">
            <summary>
            A counter that counts objects that are marked "Visible".
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter.Empty">
            <summary>
            Returns an empty DistanceLineCounter that represents zero visible elements.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter.#ctor(System.Double,System.Int32)">
            <summary>
            Initializes a <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter"/> with a pecified number of visible elements.
            </summary>
            <param name="distance">The visible count.</param>
            <param name="lineCount">The line count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter.GetValue(System.Int32)">
            <summary>
            Returns the integer value of the counter. A cookie specifies
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter.Syncfusion#Windows#Forms#Collections#ITreeTableCounter#Combine(Syncfusion.Windows.Forms.Collections.ITreeTableCounter,System.Int32)">
            <summary>
            Combines one tree obkect with another and returns the new object.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter.Combine(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter,System.Int32)">
            <summary>
            Combines the counter values of this counter object with the values of another counter object
            and returns a new counter object.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter.Compare(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter,System.Int32)">
            <summary>
            Compares this counter with another counter. A cookie can specify
            a specific counter type.
            </summary>
            <param name="other">The other.</param>
            <param name="cookie">The cookie.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter.IsEmpty(System.Int32)">
            <summary>
            Indicates whether the counter object is empty. A cookie can specify
            a specific counter type.
            </summary>
            <param name="cookie">The cookie.</param>
            <returns>
            	<c>true</c> if the specified cookie is empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter.LineCount">
            <summary>
            Gets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter.Distance">
            <summary>
            Gets the distance.
            </summary>
            <value>The distance.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounter.Kind">
            <summary>
            The Counter Kind.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.DistanceLineCounterTree">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost">
            <summary>
            A collection that manages lines with varying height and hidden state. 
            It has properties for header and footer lines, total line count, default
            size of a line and also lets you add nested collections. Methods
            are provided for changing the values and getting the total extent.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost">
            <summary>
            A collection that manages lines with varying height and hidden state. 
            It has properties for header and footer lines, total line count, default
            size of a line and also lets you add nested collections.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost.GetDefaultLineSize">
            <summary>
            Returns the default line size.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost.GetLineCount">
            <summary>
            Returns the line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost.GetSize(System.Int32,System.Int32@)">
            <summary>
            Gets the size.
            </summary>
            <param name="index">The index.</param>
            <param name="repeatValueCount">The number of subsequent values with same size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost.GetHeaderLineCount">
            <summary>
            Gets the header line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost.GetFooterLineCount">
            <summary>
            Gets the footer line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost.GetHidden(System.Int32,System.Int32@)">
            <summary>
            Gets the hidden state for a line.
            </summary>
            <param name="index">The index.</param>
            <param name="repeatValueCount">The number of subsequent lines with same state.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost.InitializeScrollAxis(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase)">
            <summary>
            Initializes the scroll axis.
            </summary>
            <param name="scrollAxis">The scroll axis.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost.LineSizeChanged">
            <summary>
            Occurs when a lines size was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost.LineHiddenChanged">
            <summary>
            Occurs when a lines hidden state changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost.DefaultLineSizeChanged">
            <summary>
            Occurs when the default line size changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost.LineCountChanged">
            <summary>
            Occurs when the line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost.HeaderLineCountChanged">
            <summary>
            Occurs when the header line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost.FooterLineCountChanged">
            <summary>
            Occurs when the footer line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost.LinesInserted">
            <summary>
            Occurs when lines were inserted.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost.LinesRemoved">
            <summary>
            Occurs when lines were removed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.GetNestedLines(System.Int32)">
            <summary>
            Gets the nested lines.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.SetNestedLines(System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Sets the nested lines.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedLines">The nested lines.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.InsertLines(System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Insert a number of lines.
            </summary>
            <param name="insertAtLine">The index of the first line to insert.</param>
            <param name="count">The count.</param>
            <param name="moveLines">A container with saved state from a preceeding <see cref="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.RemoveLines(System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost)"/> call when lines should be moved. When it is null empty lines with default size are inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.RemoveLines(System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Removes a number of lines.
            </summary>
            <param name="removeAtLine">The index of the first line to be removed.</param>
            <param name="count">The count.</param>
            <param name="moveLines">A container to save state for a subsequent <see cref="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.InsertLines(System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost)"/> call when lines should be moved.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.CreateMoveLines">
            <summary>
            Creates the object which holds temporary state when moving lines.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.SetHidden(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the hidden state for a range of lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">if set to <c>true</c> hide the lines.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the line size for a range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="size">The size.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.TotalExtent">
            <summary>
            Gets the total extent which is the total of all line sizes. Note: This propert only 
            works if the DistanceCollection has been setup for pixel scrolling; otherwise it returns
            double.NaN.
            </summary>
            <value>The total extent or double.NaN.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.SupportsNestedLines">
            <summary>
            Gets whether the host supports nesting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.SupportsInsertRemove">
            <summary>
            Gets whether the host supports inserting and removing lines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.DefaultLineSize">
            <summary>
            Gets or sets the default size of lines.
            </summary>
            <value>The default size of lines.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.FooterLineCount">
            <summary>
            Gets or sets the footer line count.
            </summary>
            <value>The footer line count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.HeaderLineCount">
            <summary>
            Gets or sets the header line count.
            </summary>
            <value>The header line count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost.Item(System.Int32)">
            <summary>
            Gets or sets the line size at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.EmptyLineSizeHost">
            <summary>
            Implements the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost"/> interface for an empty collection
            that cannot be modified.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.EmptyLineSizeHost.Empty">
            <summary>
            Returns the empty collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.EmptyLineSizeHost.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.EmptyLineSizeHost.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.INestedDistancesHost">
            <summary>
            An object that implements the <see cref="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.INestedDistancesHost.GetDistances(System.Int32)"/> method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.INestedDistancesHost.GetDistances(System.Int32)">
            <summary>
            Gets the nested distances if a line contains a nested lines collection; null otherwise.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IScrollBar">
            <summary>
            Defines an interface that provides all properties to configure a scrollbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IScrollBar.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the value of the property when the scroll box is moved a large distance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IScrollBar.Maximum">
            <summary>
            Gets or sets the upper limit of values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IScrollBar.Minimum">
            <summary>
            Gets or sets the lower limit of values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IScrollBar.SmallChange">
            <summary>
            Gets or sets the value to be added to or subtracted from the value of the property when the scroll box is moved a small distance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IScrollBar.Value">
            <summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IScrollBar.Enabled">
            <summary>
            Gets or sets a number that represents the current position of the scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis">
            <summary>
            The LineScrollAxis implements scrolling only for whole lines. You can
            hide lines and LineScrollAxis provides a mapping mechanism between the
            index of the line and the scroll index and vice versa. Hidden lines
            are not be counted when the scroll index is determined for a line.
            <para/>
            The LineScrollAxis does not support scrolling in between lines (pixel scrolling).
            This can be of advantage if you have a large number of lines with varying
            line sizes. In such case the LineScrollAxis does not need to maintain
            a collection that tracks line sizes whereas the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis"/> does need to.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase">
            <summary>
            ScrollAxisBase is an abstract base class and implements scrolling
            logic for both horizontal and vertical scrolling in a <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase"/>.
            Logical units in the ScrollAxisBase are called "Lines".
            <para/>
            ScrollAxisBase has support for frozen header and footer lines, maintaining a
            scroll position and updating and listening to scrollbars. It also maintains
            a collection of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo"/> items for all the lines that are
            visible in the viewing area. ScrollAxisBase wires itself with a 
            <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.ScrollLinesHost"/> and reacts to changes in line count,
            line sizes, hidden state and default line size.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.#ctor(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IScrollBar,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase"/> class.
            </summary>
            <param name="sb">The sb.</param>
            <param name="scrollLinesHost">The scroll lines host.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.Dispose">
            <summary>
            Call the Dispose and SuppressFinalize method for dipose the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.UpdateScrollBar">
            <summary>
            Updates the scroll bar.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.SetLineHiddenState(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the hidden state of the lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">if set to <c>true</c> [hide].</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.SetLineSize(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the size of the lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetLineSize(System.Int32,System.Int32@)">
            <summary>
            Gets size from ScrollLinesHost or if the line is being resized then get temporary value
            previously set with <see cref="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.SetLineResize(System.Int32,System.Double)"/>
            </summary>
            <param name="index">The index.</param>
            <param name="repeatSizeCount">The number of subsequent values with same size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetLineSize(System.Int32)">
            <summary>
            Gets the size of the line.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.SetLineResize(System.Int32,System.Double)">
            <summary>
            Set temporary value for a line size during a resize operation without commiting
            value to SrollLinesHost.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.ResetLineResize">
            <summary>
            Resets temporary value for line size after a resize operation 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetScrollLinesHostSize(System.Int32,System.Int32@)">
            <summary>
            Gets size from ScrollLinesHost or if the line is being resized then get temporary value
            previously set with <see cref="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.SetLineResize(System.Int32,System.Double)"/>. If size is negative then <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.DefaultLineSize"/> is returned.
            </summary>
            <param name="index">The index.</param>
            <param name="repeatSizeCount">The number of subsequent values with same size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.OnLinesRemoved(System.Int32,System.Int32)">
            <summary>
            Called when lines were removed in ScrollLinesHost.
            </summary>
            <param name="removeAt">Index of the first removed line.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.OnLinesInserted(System.Int32,System.Int32)">
            <summary>
            Called when lines were inserted in ScrollLinesHost.
            </summary>
            <param name="insertAt">Index of the first inserted line.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.SetHeaderLineCount(System.Int32)">
            <summary>
            Sets the header line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.SetFooterLineCount(System.Int32)">
            <summary>
            Sets the footer line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetScrollLineIndex(System.Int32@,System.Double@)">
            <summary>
            Gets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineOffset">The scroll line offset.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.SetScrollLineIndex(System.Int32,System.Double)">
            <summary>
            Sets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineOffset">The scroll line offset.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetPreviousScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the previous scroll line.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetNextScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the next scroll line.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.ScrollToNextPage">
            <summary>
            Scrolls to next page.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.ScrollToPreviousPage">
            <summary>
            Scrolls to previous page.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.ScrollToNextLine">
            <summary>
            Scrolls to next line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.ScrollToPreviousLine">
            <summary>
            Scrolls to previous line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.AlignScrollLine">
            <summary>
            Aligns the scroll line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.ScrollInView(System.Int32,System.Double)">
            <summary>
            Scrolls the line into viewable area.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <param name="lineSize">Size of the line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.ScrollInView(System.Int32)">
            <summary>
            Scrolls the line into viewable area.
            </summary>
            <param name="lineIndex">Index of the line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.MouseWheel(System.Int32)">
            <summary>
            This method is called in response to a MouseWheel event.
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.MarkDirty">
            <summary>
            Force recalculation of visible lines and scrollbar properties
            next time GetVisibleLines is called.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetVisibleLines">
            <summary>
            Gets the visible lines collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.ResetVisibleLines">
            <summary>
            Resets the visible lines collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.VisiblePointToLineIndex(System.Double,System.Boolean)">
            <summary>
            Gets the visible line index for a point in the display.
            </summary>
            <param name="point">The point.</param>
            <param name="allowOutsideLines">Set this true if point can be below corner of last line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.VisiblePointToLineIndex(System.Double)">
            <summary>
            Gets the visible line index for a point in the display.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetVisibleLineAtPoint(System.Double,System.Boolean)">
            <summary>
            Gets the visibles line for a point in the display.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetVisibleLineAtLineIndex(System.Int32)">
            <summary>
            Gets the visibles line that displays the line with the given absolut line index.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetVisibleLineAtLineIndex(System.Int32,System.Boolean)">
            <summary>
            Gets the visibles line that displays the line with the given absolut line index. If the
            line is outside the view and you specify allowCreateEmptyLineIfNotVisible then
            the method will create an empty line and initializes its LineIndex and LineSize.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <param name="allowCreateEmptyLineIfNotVisible">if set to <c>true</c> and if the
            line is outside the view then
            the method will create an empty line and initializes its LineIndex and LineSize.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.IsLineVisible(System.Int32)">
            <summary>
            Determines if the line with the given absolut line index is visible.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.AnyVisibleLines(System.Int32,System.Int32)">
            <summary>
            Determines if any of the lines with the given absolut line index are visible.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetOriginAndCornerOfBodyRegion(System.Double@,System.Double@)">
            <summary>
            Gets the origin and corner points of body region.
            </summary>
            <param name="origin">The origin.</param>
            <param name="corner">The corner.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.AdjustFooterExtentToAvoidGap(System.Double,System.Double)">
            <summary>
            Adjusts the footer extent to avoid gap between last visible line of body region
            and first line of footer in case the view is larger than the height/width of all
            lines.
            </summary>
            <param name="footerSize">Size of the footer.</param>
            <param name="arrangeSize">Size of the arrange.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetVisibleSection(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Return indexes for VisibleLinesCollection for area identified by section.
            </summary>
            <param name="section">0 - Header, 1 - Body, 2 - Footer</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetVisibleLinesRange(System.Int32)">
            <summary>
            Returns the first and last VisibleLine.LineIndex for area identified by section.
            </summary>
            <param name="section">0 - Header, 1 - Body, 2 - Footer</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetVisibleSection(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion,System.Int32@,System.Int32@)">
            <summary>
            Return indexes for VisibleLinesCollection for area identified by section.
            </summary>
            <param name="section">0 - Header, 1 - Body, 2 - Footer</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetBorderRangeClipPoints(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo)">
            <summary>
            Returns the clipping area for the specified visible lines. Only if <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.IsClippedOrigin"/> is true for
            first line or if <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.IsClippedCorner"/> is true for last line then the area will be clipped. Otherwise
            the whole area from 0 to <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.RenderSize"/> is returned.
            </summary>
            <param name="firstLine">The first line.</param>
            <param name="lastLine">The last line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetLineNearCorner(System.Double,System.Double)">
            <summary>
            Gets the line near the given corner point. Use this method for hit-testing row or 
            column lines for resizing cells.
            </summary>
            <param name="point">The point.</param>
            <param name="hitTestPrecision">The hit test precision in points.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetLineNearCorner(System.Double,System.Double,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.CornerSide)">
            <summary>
            Gets the line near the given corner point. Use this method for hit-testing row or 
            column lines for resizing cells.
            </summary>
            <param name="point">The point.</param>
            <param name="hitTestPrecision">The hit test precision in points.</param>
            <param name="side">The hit test corner.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetLinesAndVisibility(System.Int32,System.Int32,System.Boolean,System.Boolean@,System.Boolean@,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo@,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo@)">
            <summary>
            Returns points for given absolut line indexes
            </summary>
            <param name="firstIndex">The first index.</param>
            <param name="lastIndex">The last index.</param>
            <param name="allowAdjust">if set to <c>true</c> return the first visible line if firstIndex
            is above viewable area or return last visible line if lastIndex is after viewable area
            (works also for header and footer).
            </param>
            <param name="firstVisible">if set to <c>true</c> indicates the line with index 
            firstIndex is visible in viewable area.</param>
            <param name="lastVisible">if set to <c>true</c> indicates the line with index 
            lastIndex is visible in viewable area..</param>
            <param name="firstLine">The first line or null if allowAdjust is false and line 
            is not in viewable area.</param>
            <param name="lastLine">The last line or null if allowAdjust is false and line 
            is not in viewable area.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetVisibleLinesClipPoints(System.Int32,System.Int32)">
            <summary>
            Gets the visible lines clip points (clipped origin of first line and clipped 
            corner of last line). If both lines are above or below viewable area an empty 
            span is returned. If lines are both above and below viewable are then the 
            range for all viewable lines is returned.
            </summary>
            <param name="firstIndex">The first index.</param>
            <param name="lastIndex">The last index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetClipPoints(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion)">
            <summary>
            Gets the clip points for a region.
            </summary>
            <param name="region">The region.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.RangeToRegionPoints(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns an array with 3 ranges indicating the first and last point for the given lines in each region.
            </summary>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.RangeToPoints(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns the first and last point for the given lines in a region.
            </summary>
            <param name="region">The region.</param>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.RaiseChanged(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollChangedAction)">
            <summary>
            Raises the changed event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetNextPage(System.Int32)">
            <summary>
            Determines the line one page down from the given line.
            </summary>
            <param name="lineIndex">The current line.</param>
            <returns>The line index of the line one page down</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.GetPreviousPage(System.Int32)">
            <summary>
            Determines the line one page up from the given line.
            </summary>
            <param name="lineIndex">The current line.</param>
            <returns>The line index of the line one page up</returns>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.Changed">
            <summary>
            Occurs when a property was changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.Distances">
            <summary>
            Gets the distances collection which is used internally
            for mapping from a point position to
            a line index and vice versa.
            </summary>
            <value>The distances collection.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.IsPixelScroll">
            <summary>
            Gets a value indicating whether this axis supports pixel scrolling.
            </summary>
            <value>
            	<c>true</c> if this instance supports pixel scrolling; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.StartLineIndex">
            <summary>
            Gets or sets the index of the first line in a parent axis. This is used for shared 
            or nested scroll axis (e.g. a nested grid with shared axis in a covered cell).
            </summary>
            <value>The index of the first line..</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.ScrollBar">
            <summary>
            Gets the scroll bar state.
            </summary>
            <value>The scroll bar state.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.DefaultLineSize">
            <summary>
            Gets or sets the default size of lines.
            </summary>
            <value>The default size of lines.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.ScrollLinesHost">
            <summary>
            Gets the scroll lines host.
            </summary>
            <value>The scroll lines host.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.RenderSize">
            <summary>
            Gets or sets the size (either height or width) of the parent control.
            </summary>
            <value>The size of the the parent control.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.ScrollPageSize">
            <summary>
            Gets the size (either height or width) of the parent control excluding the 
            area occupied by Header and Footer. This size is used for scrolling down
            or up one page.
            </summary>
            <value>The size of the the parent control.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.Clip">
            <summary>
            Gets or sets the clipping region. Depending on the orientation of
            the axis, this is either the left and right or top and bottom
            values of the clipping rectangle in the parent control.
            </summary>
            <value>The clip.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.ViewSize">
            <summary>
            Gets the view size of the (either height or width) of the parent control. Normally
            the ViewSize is the same as <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.RenderSize"/>. Only if the parent control
            has more space then needed to display all lines, the ViewSize will be less. In 
            such case the ViewSize is the total height for all lines.
            </summary>
            <value>The size of the view.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.HeaderExtent">
            <summary>
            Gets the header extent. This is total height (or width) of the header lines.
            </summary>
            <value>The header extent.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.HeaderLineCount">
            <summary>
            Gets the header line count.
            </summary>
            <value>The header line count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.FooterExtent">
            <summary>
            Gets the footer extent. This is total height (or width) of the footer lines.
            </summary>
            <value>The footer extent.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.FooterLineCount">
            <summary>
            Gets the footer line count.
            </summary>
            <value>The footer line count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.ScrollLineIndex">
            <summary>
            Gets or sets the index of the first visible Line in the Body region.
            </summary>
            <value>The index of the scroll line.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.ViewCorner">
            <summary>
            Gets the view corner which is the point after the last visible line
            of the body region.
            </summary>
            <value>The view corner.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.IsFooterVisible">
            <summary>
            Gets a value indicating whether footer lines are visible.
            </summary>
            <value>
            	<c>true</c> if footer lines are visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.FirstFooterLineIndex">
            <summary>
            Gets the index of the first footer line.
            </summary>
            <value>The index of the first footer line.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.LastBodyVisibleLine">
            <summary>
            Gets the last visible line.
            </summary>
            <value>The last visible line.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.LastBodyVisibleLineIndex">
            <summary>
            Gets the index of the last visible line.
            </summary>
            <value>The index of the last visible line.</value>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.distances">
            <summary>
            distances holds the visible lines. Each visible line
            has a distance of 1.0. Hidden lines have a distance of 0.0.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.#ctor(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IScrollBar,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis"/> class.
            </summary>
            <param name="sb">The state of the scrollbar.</param>
            <param name="scrollLinesHost">The scroll lines host.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.UpdateDistances">
            <summary>
            Updates the linesize for visible lines to be "1" for LineScrollAxis
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.SetHeaderLineCount(System.Int32)">
            <summary>
            Sets the header line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.SetFooterLineCount(System.Int32)">
            <summary>
            Sets the footer line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.GetScrollLineIndex(System.Int32@,System.Double@)">
            <summary>
            Gets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineDelta">The scroll line delta.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.SetScrollLineIndex(System.Int32,System.Double)">
            <summary>
            Sets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineDelta">The scroll line delta.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.SetLineHiddenState(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the hidden state of the lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">if set to <c>true</c> [hide].</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.SetLineSize(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the size of the lines. Will do nothing for a <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis"/>
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.UpdateScrollBar">
            <summary>
            Initialize scrollbar properties from line count in header, footer and body.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.GetPreviousScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the previous scroll line.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.GetNextScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the next scroll line.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.ScrollToNextPage">
            <summary>
            Scrolls to next page.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.ScrollToPreviousPage">
            <summary>
            Scrolls to previous page.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.ScrollToNextLine">
            <summary>
            Scrolls to next line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.ScrollToPreviousLine">
            <summary>
            Scrolls to previous line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.AlignScrollLine">
            <summary>
            Aligns the scroll line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.RangeToRegionPoints(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns an array with 3 ranges indicating the first and last point for the given lines in each region.
            </summary>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.RangeToPoints(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns the first and last point for the given lines in a region.
            </summary>
            <param name="region">The region.</param>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.MouseWheel(System.Int32)">
            <summary>
            This method is called in response to a MouseWheel event.
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.ScrollInView(System.Int32,System.Double)">
            <summary>
            Scrolls the line into viewable area.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <param name="lineSize"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.OnLinesInserted(System.Int32,System.Int32)">
            <summary>
            Called when lines were inserted in ScrollLinesHost.
            </summary>
            <param name="insertAt">Index of the first inserted line.</param>
            <param name="count">The count.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.DefaultLineSize">
            <summary>
            Gets or sets the default size of lines.
            </summary>
            <value>The default size of lines.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.HeaderExtent">
            <summary>
            Gets the header extent. This is total height (or width) of the header lines.
            </summary>
            <value>The header extent.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.FooterExtent">
            <summary>
            Gets the footer extent. This is total height (or width) of the footer lines.
            </summary>
            <value>The footer extent.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.ScrollLineIndex">
            <summary>
            Gets or sets the index of the first visible Line in the Body region.
            </summary>
            <value>The index of the scroll line.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.ViewSize">
            <summary>
            Gets the view size of the (either height or width) of the parent control. Normally
            the ViewSize is the same as <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.RenderSize"/>. Only if the parent control
            has more space then needed to display all lines, the ViewSize will be less. In
            such case the ViewSize is the total height for all lines.
            </summary>
            <value>The size of the view.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineScrollAxis.IsPixelScroll">
            <summary>
            Gets a value indicating whether this axis supports pixel scrolling.
            </summary>
            <value>
            	<c>true</c> if this instance supports pixel scrolling; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection">
            <summary>
            A collection that manages lines with varying height and hidden state. 
            It has properties for header and footer lines, total line count, default
            size of a line and also lets you add nested collections.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.Empty">
            <summary>
            Returns an empty collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.SetRange(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the line size for a range.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.SetHidden(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the hidden state for a range of lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">if set to <c>true</c> hide the lines.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.GetNestedLines(System.Int32)">
            <summary>
            Gets the nested lines.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.SetNestedLines(System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Sets the nested lines. 
            </summary>
            <param name="index">The index.</param>
            <param name="nestedLines">The nested lines. If parameter is null the line will be converted to a normal (not nested) line with default line size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.ResetNestedLines">
            <summary>
            Reset the line to become a normal (not nested) line with default line size.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.ResetNestedLines(System.Int32)">
            <summary>
            Reset the line to become a normal (not nested) line with default line size.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.GetDefaultLineSize">
            <summary>
            Returns the default line size.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.GetLineCount">
            <summary>
            Returns the line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.GetSize(System.Int32,System.Int32@)">
            <summary>
            Gets the size.
            </summary>
            <param name="index">The index.</param>
            <param name="repeatValueCount">The number of subsequent values with same size.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.GetHeaderLineCount">
            <summary>
            Gets the header line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.GetFooterLineCount">
            <summary>
            Gets the footer line count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.GetHidden(System.Int32,System.Int32@)">
            <summary>
            Gets the hidden state for a line.
            </summary>
            <param name="index">The index.</param>
            <param name="repeatValueCount">The number of subsequent lines with same state.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.InitializeScrollAxis(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase)">
            <summary>
            Initializes the scroll axis.
            </summary>
            <param name="scrollAxis">The scroll axis.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.GetDistances(System.Int32)">
            <summary>
            Gets the nested distances if a line contains a nested lines collection; null otherwise.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.InsertLines(System.Int32,System.Int32)">
            <summary>
            Inserts lines in the collection and raises the <see cref="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.LinesInserted"/> event.
            </summary>
            <param name="insertAtLine">The index of the first line to insert.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.InsertLines(System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Inserts lines in the collection and raises the <see cref="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.LinesInserted"/> event.
            </summary>
            <param name="insertAtLine">The index of the first line to insert.</param>
            <param name="count">The count.</param>
            <param name="movelines">A container with saved state from a preceeding call when lines should be moved. When it is null empty lines with default size are inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.RemoveLines(System.Int32,System.Int32)">
            <summary>
            Removes lines from the collection and raises the <see cref="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.LinesRemoved"/> event.
            </summary>
            <param name="removeAtLine">The index of the first line to be removed.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.RemoveLines(System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IEditableLineSizeHost)">
            <summary>
            Removes lines from the collection and raises the <see cref="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.LinesRemoved"/> event.
            </summary>
            <param name="removeAtLine">The index of the first line to be removed.</param>
            <param name="count">The count.</param>
            <param name="movelines">A container to save state for a subsequent call when lines should be moved.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.CreateMoveLines">
            <summary>
            Creates the object which holds temporary state when moving lines.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.SetHiddenInterval(System.Int32,System.Int32,System.Boolean[])">
            <summary>
            Initialize the collection with a pattern of hidden lines. 
            </summary>
            <param name="start">The index of the first line where the pattern should be
            started to be applied.</param>
            <param name="lineCount">The pattern is applied up to until the lineCount given. 
            The last initialized line is at index lineCount-1.</param>
            <param name="values">The pattern that is applied repeatedly.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.SetHiddenState(System.Boolean[])">
            <summary>
            Set the hidden state all at once in one operation. Use this method if you want to change the hidden
            state of many rows at once since this will be much faster instead of individually setting rows hidden.
            </summary>
            <param name="values">The new hidden state for rows. </param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.TotalExtent">
            <summary>
            Gets the total extent which is the total of all line sizes. Note: This propert only 
            works if the DistanceCollection has been setup for pixel scrolling; otherwise it returns
            double.NaN.
            </summary>
            <value>The total extent or double.NaN.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.HeaderLineCount">
            <summary>
            Gets or sets the header line count.
            </summary>
            <value>The header line count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.FooterLineCount">
            <summary>
            Gets or sets the footer line count.
            </summary>
            <value>The footer line count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.DefaultLineSize">
            <summary>
            Gets or sets the default size of lines.
            </summary>
            <value>The default size of lines.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the line size at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.SupportsNestedLines">
            <summary>
            Gets whether the host supports nesting.
            </summary>
            <value></value>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.LineSizeChanged">
            <summary>
            Occurs when a lines size was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.LineHiddenChanged">
            <summary>
            Occurs when a lines hidden state changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.DefaultLineSizeChanged">
            <summary>
            Occurs when the default line size changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.LineCountChanged">
            <summary>
            Occurs when the line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.HeaderLineCountChanged">
            <summary>
            Occurs when the header line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.FooterLineCountChanged">
            <summary>
            Occurs when the footer line count was changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.LinesInserted">
            <summary>
            Occurs when lines were inserted.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.LinesRemoved">
            <summary>
            Occurs when lines were removed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.Distances">
            <summary>
            Gets or sets the distances.
            </summary>
            <value>The distances.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LineSizeCollection.SupportsInsertRemove">
            <summary>
            Gets whether the host supports inserting and removing lines.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.EmptyLineSizeCollection">
            <summary>
            An empty LineSizeCollection.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.EmptyLineSizeCollection.Empty">
            <summary>
            Returns an empty collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis">
            <summary>
            PixelScrollAxis implements scrolling logic for both horizontal and vertical 
            scrolling in a <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase"/>.
            Logical units in the ScrollAxisBase are called "Lines".
            <para/>
            PixelScrollAxis supports pixel scrolling and calculates the total height or
            width of all lines.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.headerExtent">
            <summary>
            Distances holds the line sizes. Hidden lines
            have a distance of 0.0. 
            </summary>        
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.#ctor(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IScrollBar,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistancesHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis"/> class which 
            is nested as a single line in a parent scroll axis.
            </summary>
            <param name="parentScrollAxis">The parent scroll axis.</param>
            <param name="sb">The scrollbar state.</param>
            <param name="scrollLinesHost">The scroll lines host.</param>
            <param name="distancesHost">The distances host.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.#ctor(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IScrollBar,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ILineSizeHost,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistancesHost)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis"/> class.
            </summary>
            <param name="sb">The scrollbar state.</param>
            <param name="scrollLinesHost">The scroll lines host.</param>
            <param name="distancesHost">The distances host.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.SetLineHiddenState(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the hidden state of the lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">if set to <c>true</c> hide lines.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.SetLineSize(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the size of the lines.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.SetLineResize(System.Int32,System.Double)">
            <summary>
            Set temporary value for a line size during a resize operation without commiting
            value to SrollLinesHost.
            </summary>
            <param name="index">The index.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.ResetLineResize">
            <summary>
            Resets temporary value for line size after a resize operation
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.SetHeaderLineCount(System.Int32)">
            <summary>
            Sets the header line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.SetFooterLineCount(System.Int32)">
            <summary>
            Sets the footer line count.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.UpdateScrollBar">
            <summary>
            Initialize scrollbar properties from header and footer size and total size of lines in body.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.GetScrollLineIndex(System.Int32@,System.Double@)">
            <summary>
            Gets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineDelta">The scroll line delta.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.SetScrollLineIndex(System.Int32,System.Double)">
            <summary>
            Sets the index of the scroll line.
            </summary>
            <param name="scrollLindeIndex">Index of the scroll linde.</param>
            <param name="scrollLineDelta">The scroll line delta.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.GetPreviousScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the previous scroll line.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.GetNextScrollLineIndex(System.Int32)">
            <summary>
            Gets the index of the next scroll line.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.ScrollToNextPage">
            <summary>
            Scrolls to next page.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.ScrollToPreviousPage">
            <summary>
            Scrolls to previous page.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.ScrollToNextLine">
            <summary>
            Scrolls to next line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.ScrollToPreviousLine">
            <summary>
            Scrolls to previous line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.AlignScrollLine">
            <summary>
            Aligns the scroll line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.SetNestedLines(System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.IDistanceCounterCollection)">
            <summary>
            Associates a collection of nested lines with a line in this axis.
            </summary>
            <param name="index">The index.</param>
            <param name="nestedLines">The nested lines.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.RangeToRegionPoints(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns an array with 3 ranges indicating the first and last point for the given lines in each region.
            </summary>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.RangeToPoints(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns the first and last point for the given lines in a region.
            </summary>
            <param name="region">The region.</param>
            <param name="first">The index of the first line.</param>
            <param name="last">The index of the last line.</param>
            <param name="allowEstimatesForOutOfViewLines">if set to <c>true</c> allow estimates for out of view lines.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.GetCumulatedOrigin(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo)">
            <summary>
            Gets the cumulated origin taking scroll position into account. The
            returned value is between ScrollBar.Minimum and ScrollBar.Maximum.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.GetCumulatedCorner(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo)">
            <summary>
            Gets the cumulated corner taking scroll position into account. The
            returned value is between ScrollBar.Minimum and ScrollBar.Maximum.
            </summary>
            <param name="line">The line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.MouseWheel(System.Int32)">
            <summary>
            This method is called in response to a MouseWheel event.
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.ScrollInView(System.Int32,System.Double)">
            <summary>
            Scrolls the line into viewable area.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <param name="lineSize">Size of the line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.OnLinesRemoved(System.Int32,System.Int32)">
            <summary>
            Called when lines were removed in ScrollLinesHost.
            </summary>
            <param name="removeAt">Index of the first removed line.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.OnLinesInserted(System.Int32,System.Int32)">
            <summary>
            Called when lines were inserted in ScrollLinesHost.
            </summary>
            <param name="insertAt">Index of the first inserted line.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.Dispose(System.Boolean)">
            <summary>
            Dispose the live resources used by the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis"/> class.
            </summary>
            <param name="disposing">Dispose the instance, if it is True</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.IsPixelScroll">
            <summary>
            Gets a value indicating whether this axis supports pixel scrolling.
            </summary>
            <value>
            	<c>true</c> if this instance supports pixel scrolling; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.TotalExtent">
            <summary>
            Gets the total extent of all line sizes.
            </summary>
            <value>The total extent.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.LineCount">
            <summary>
            Gets or sets the line count.
            </summary>
            <value>The line count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.DefaultLineSize">
            <summary>
            Gets or sets the default size of lines.
            </summary>
            <value>The default size of lines.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.HeaderExtent">
            <summary>
            Gets the header extent. This is total height (or width) of the header lines.
            </summary>
            <value>The header extent.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.FooterExtent">
            <summary>
            Gets the footer extent. This is total height (or width) of the footer lines.
            </summary>
            <value>The footer extent.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.ScrollLineIndex">
            <summary>
            Gets or sets the index of the first visible Line in the Body region.
            </summary>
            <value>The index of the scroll line.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.PixelScrollAxis.ViewSize">
            <summary>
            Gets the view size of the (either height or width) of the parent control. Normally
            the ViewSize is the same as <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisBase.RenderSize"/>. Only if the parent control
            has more space then needed to display all lines, the ViewSize will be less. In
            such case the ViewSize is the total height for all lines.
            </summary>
            <value>The size of the view.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeChangedEventHandler">
            <summary>
            Handles events with <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeChangedEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeChangedEventArgs">
            <summary>
            Holds <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeChangedEventArgs.From"/> and <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeChangedEventArgs.To"/> integer properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeChangedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeChangedEventArgs"/> class.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeChangedEventArgs.From">
            <summary>
            Gets from.
            </summary>
            <value>From.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeChangedEventArgs.To">
            <summary>
            Gets to.
            </summary>
            <value>To.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesRemovedEventHandler">
            <summary>
            Handles events with <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesRemovedEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesRemovedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesRemovedEventArgs">
            <summary>
            Holds <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesRemovedEventArgs.RemoveAt"/> and <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesRemovedEventArgs.Count"/> integer properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesRemovedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesRemovedEventArgs"/> class.
            </summary>
            <param name="removeAt">RemoveAt.</param>
            <param name="count">Count.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesRemovedEventArgs.RemoveAt">
            <summary>
            Gets removeAt.
            </summary>
            <value>RemoveAt.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesRemovedEventArgs.Count">
            <summary>
            Gets count.
            </summary>
            <value>Count.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesInsertedEventHandler">
            <summary>
            Handles events with <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesInsertedEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesInsertedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesInsertedEventArgs">
            <summary>
            Holds <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesInsertedEventArgs.InsertAt"/> and <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesInsertedEventArgs.Count"/> integer properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesInsertedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesInsertedEventArgs"/> class.
            </summary>
            <param name="insertAt">InsertAt.</param>
            <param name="count">Count.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesInsertedEventArgs.InsertAt">
            <summary>
            Gets insertAt.
            </summary>
            <value>InsertAt.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.LinesInsertedEventArgs.Count">
            <summary>
            Gets count.
            </summary>
            <value>Count.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.HiddenRangeChangedEventHandler">
            <summary>
            Handles events with <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.HiddenRangeChangedEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.HiddenRangeChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.HiddenRangeChangedEventArgs">
            <summary>
            Holds <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.HiddenRangeChangedEventArgs.From"/> and <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.HiddenRangeChangedEventArgs.To"/> integer properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.HiddenRangeChangedEventArgs.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeChangedEventArgs"/> class.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="hide">true or false</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.HiddenRangeChangedEventArgs.From">
            <summary>
            Gets from.
            </summary>
            <value>From.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.HiddenRangeChangedEventArgs.To">
            <summary>
            Gets to.
            </summary>
            <value>To.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex">
            <summary>
            Holds the coordinates for a cell. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/> with row and column coordinates.
            </summary>
            <param name="r">The row index.</param>
            <param name="c">The column index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex.ToString">
            <summary>
            Returns the type name with state of this instance.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex.op_Equality(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="r1">The r1.</param>
            <param name="r2">The r2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex.op_Inequality(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="r1">The r1.</param>
            <param name="r2">The r2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex.Empty">
            <summary>
            Gets the empty instance with RowIndex and ColumnIndex set to int.MinValue
            </summary>
            <value>The empty.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex.ColumnIndex">
            <summary>
            The column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex.RowIndex">
            <summary>
            The row index.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.CornerSide">
            <summary>
            Corner side enumeration.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.CornerSide.Both">
            <summary>
            Includes both Left and right side or Top and Bottom side.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.CornerSide.Left">
            <summary>
            Left side alone.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.CornerSide.Right">
            <summary>
            Right side alone.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.CornerSide.Top">
            <summary>
            Top side alone.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.CornerSide.Bottom">
            <summary>
            Bottom side alone.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion">
            <summary>
            A scroll axis has three regions: Header, Body and Footer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion.Header">
            <summary>
            The header (at top or left side)
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion.Body">
            <summary>
            The body (center between header and footer)
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollAxisRegion.Footer">
            <summary>
            The footer (at bottom or right side)
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo">
            <summary>
            Provides all properties to configure a scrollbar.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed and raises the <see cref="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.CopyTo(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo)">
            <summary>
            Copies current settings to another object.
            </summary>
            <param name="sb">another object.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo"/> is equal to the current <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo"/>.
            </summary>
            <param name="obj">The <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo"/> to compare with the current <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo"/>.</param>
            <returns>
            true if the specified <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo"/> is equal to the current <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.Enabled">
            <summary>
            Gets or sets a number that represents the current position of the scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.LargeChange">
            <summary>
            Gets or sets a value to be added to or subtracted from the value of the property when the scroll box is moved a large distance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.Maximum">
            <summary>
            Gets or sets the upper limit of values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.Minimum">
            <summary>
            Gets or sets the lower limit of values of the scrollable range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.SmallChange">
            <summary>
            Gets or sets the value to be added to or subtracted from the value of the property when the scroll box is moved a small distance.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.Value">
            <summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the scroll bar control.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.ValueChanged">
            <summary>
             <para>Occurs when the <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.Value"/> property has changed.</para>
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.ValueChanging">
            <summary>
             <para>Occurs before the <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollInfo.Value"/> property is changed.</para>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ValueChangingEventHandler">
            <summary>
            Handles events with <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ValueChangingEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ValueChangingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ValueChangingEventArgs">
            <summary>
            Holds <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ValueChangingEventArgs.NewValue"/> and <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ValueChangingEventArgs.OldValue"/> properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ValueChangingEventArgs.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ValueChangingEventArgs"/> class.
            </summary>
            <param name="newValue">NewValue.</param>
            <param name="oldValue">OldValue.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ValueChangingEventArgs.NewValue">
            <summary>
            Gets newValue.
            </summary>
            <value>NewValue.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ValueChangingEventArgs.OldValue">
            <summary>
            Gets oldValue.
            </summary>
            <value>OldValue.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeValuePair`1">
            <summary>
            Holds a range together with a value assigned to the range.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeValuePair`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeValuePair`1"/> class.
            </summary>
            <param name="start">The start and end of the range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeValuePair`1.#ctor(System.Int32,System.Int32,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeValuePair`1"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeValuePair`1.CompareTo(System.Object)">
            <summary>
            Compares the current range with the range of the other object. The value is 
            ignored.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeValuePair`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> with state information about this object.
            </summary>
            <returns>
            Returns a <see cref="T:System.String"/> with state information about this object.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeValuePair`1.Start">
            <summary>
            Gets or sets the start of the range.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeValuePair`1.Count">
            <summary>
            Gets or sets the count of the range.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeValuePair`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeValuePair`1.End">
            <summary>
            Gets or sets the end of the range.
            </summary>
            <value>The end.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1">
            <summary>
            A sorted list with <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RangeValuePair`1"/> ordered by the
            start index of the ranges. SortedRangeValueList ensures that ranges 
            of the elements inside the list do not overlap and it also ensures
            that there are no empty gaps meaning that the subsequent range will
            always have the Start position be set to the End position of the previous
            range plus one.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1"/> class.
            </summary>
            <param name="defaultValue">The default value used for filling gaps.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.GetRange(System.Int32,System.Int32@)">
            <summary>
            Gets a range that contains the specified index and also 
            returns a count indicating the delta between the index and the 
            end of the range.
            </summary>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.Insert(System.Int32,System.Int32)">
            <summary>
            Inserts a range intialized with <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.DefaultValue"/> at
            the specified index. When necessary it splits a range and creates
            a new range value pair.
            </summary>
            <param name="insertAt">The insertion point.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.Insert(System.Int32,System.Int32,`0)">
            <summary>
            Inserts a range intialized with a given value at
            the specified index. When necessary it splits a range and creates
            a new range value pair.
            </summary>
            <param name="insertAt">The insertion point.</param>
            <param name="count">The count.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.Insert(System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList{`0})">
            <summary>
            Inserts a range intialized with <see cref="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.DefaultValue"/> at
            the specified index. When necessary it splits a range and creates
            a new range value pair.
            </summary>
            <param name="insertAt">The insertion point.</param>
            <param name="count">The count.</param>
            <param name="moveRanges">Allocate this object before a preceeding Remove call when moving ranges. 
            Otherwise specify null.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.Insert(System.Int32,System.Int32,`0,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList{`0})">
            <summary>
            Inserts a range intialized with a given value at
            the specified index. When necessary it splits a range and creates
            a new range value pair.
            </summary>
            <param name="insertAt">The insertion point.</param>
            <param name="count">The count.</param>
            <param name="value">The value.</param>
            <param name="moveRanges">Allocate this object before a preceeding Remove call when moving ranges. 
            Otherwise specify null.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.Remove(System.Int32,System.Int32)">
            <summary>
            Removes a range at the specified index. When necessary ranges
            are merged when preceeding and subsquent ranges have the same
            value.
            </summary>
            <param name="removeAt">The index for the range to be removed.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.Remove(System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList{`0})">
            <summary>
            Removes a range at the specified index. When necessary ranges
            are merged when preceeding and subsquent ranges have the same
            value.
            </summary>
            <param name="removeAt">The index for the range to be removed.</param>
            <param name="count">The count.</param>
            <param name="moveRanges">Allocate this object before a Remove call when moving ranges
            and pass it to a subsequent Insert call. Otherwise specify null.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.SetRange(System.Int32,System.Int32,`0)">
            <summary>
            Sets the value for a range at the specified index. When necessary ranges
            are split or merged to make sure integrity of the list is maintained.
            (SortedRangeValueList ensures that ranges
            of the elements inside the list do not overlap and it also ensures
            that there are no empty gaps meaning that the subsequent range will
            always have the Start position be set to the End position of the previous
            range plus one.)
            </summary>
            <param name="index">The index for the range to be changed.</param>
            <param name="count">The count.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.System#Collections#Generic#IEnumerable{Syncfusion#Windows#Forms#CellGrid#ScrollAxis#RangeValuePair{T}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.DefaultValue">
            <summary>
            Gets or sets the default value used for filling gaps.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.Count">
            <summary>
            Gets the count which is the same as the end position of
            the last range.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.SortedRangeValueList`1.Item(System.Int32)">
            <summary>
            Gets the value of the range that contains the specified index
            or changes the value of the range. When necessary it splits a range and creates
            a new range value pair to hold the new value for the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo">
            <summary>
            Contains information about a visible line (can also be a row or column).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo"/> class.
            </summary>
            <param name="visibleIndex">Visible index of the line.</param>
            <param name="lineIndex">Absolute index of the line.</param>
            <param name="size">The size.</param>
            <param name="clippedOrigin">The clipped origin.</param>
            <param name="scrollOffset">The scroll offset.</param>
            <param name="isHeader">if set to <c>true</c> line is a header.</param>
            <param name="isFooter">if set to <c>true</c> line is a footer.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo"/> class. Used for BinarySearch.
            </summary>
            <param name="clippedOrigin">The clipped origin.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo"/> class. Used for BinarySearch.
            </summary>
            <param name="lineIndex">Index of the line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.ToString">
            <summary>
            Returns the type name with state of this instance.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.CompareTo(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.VisibleIndex">
            <summary>
            Gets the visible index of the line.
            </summary>
            <value>The visible index of the line.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.IsVisible">
            <summary>
            Determines if the line is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.LineIndex">
            <summary>
            Gets the index of the line.
            </summary>
            <value>The index of the line.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.ClippedSize">
            <summary>
            Gets the size of the clipped area.
            </summary>
            <value>The size of the clipped area.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.Corner">
            <summary>
            Gets the corner.
            </summary>
            <value>The corner.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.ClippedCorner">
            <summary>
            Gets the clipped corner.
            </summary>
            <value>The clipped corner.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.ClippedOrigin">
            <summary>
            Gets the clipped origin.
            </summary>
            <value>The clipped origin.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.Origin">
            <summary>
            Gets the origin.
            </summary>
            <value>The origin.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.ScrollOffset">
            <summary>
            Gets the scroll offset.
            </summary>
            <value>The scroll offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.ClippedCornerExtent">
            <summary>
            Gets the clipped corner extent.
            </summary>
            <value>The clipped corner extent.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.IsClipped">
            <summary>
            Gets a value indicating whether this instance is clipped.
            </summary>
            <value>
            	<c>true</c> if this instance is clipped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.IsClippedCorner">
            <summary>
            Gets a value indicating whether this instance corner is clipped.
            </summary>
            <value>
            	<c>true</c> if this instance corner is clipped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.IsClippedOrigin">
            <summary>
            Gets a value indicating whether this instance origin is clipped.
            </summary>
            <value>
            	<c>true</c> if this instance origin is clipped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.IsClippedBody">
            <summary>
            Determines whether this instance is clipped taking into consideration whether it is the the first or last visible line 
            and no clipping is needed for these cases.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.Region">
            <summary>
            Gets the axis region this line belongs to.
            </summary>
            <value>The axis region.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.IsHeader">
            <summary>
            Gets a value indicating whether this instance is a header.
            </summary>
            <value><c>true</c> if this instance is a header; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo.IsFooter">
            <summary>
            Gets a value indicating whether this instance is a footer.
            </summary>
            <value><c>true</c> if this instance is a footer; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection">
            <summary>
            A strong-typed collection of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLineInfo"/> items.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection.GetVisibleLineAtPoint(System.Double)">
            <summary>
            Gets the visible line at point.
            </summary>
            <param name="point">The point.</param>
            <returns>visible line at point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection.GetVisibleLineAtLineIndex(System.Int32)">
            <summary>
            Gets the the visible line at line index.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns>visible line at line index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection.GetVisibleLineNearLineIndex(System.Int32)">
            <summary>
            Gets the visible line for a line index. If the line specified
            line is hidden the next visible line is returned.
            </summary>
            <param name="lineIndex">Index of the line.</param>
            <returns>The first visible line for a line index that is not hidden.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection.VisibleLineIndexes">
            <summary>
            Gets the visible line indexes.
            </summary>
            <value>The visible line indexes.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection.FirstBodyVisibleIndex">
            <summary>
            Gets the index of the first visible line in the body region.
            </summary>
            <value>The index of the first visible line in the body region.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection.FirstFooterVisibleIndex">
            <summary>
            Gets the index of the first visible line in the footer region.
            </summary>
            <value>The index of the first visible line in the footer region.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.VisibleLinesCollection.LastBodyVisibleIndex">
            <summary>
            Gets the index of the last visible line in the body region.
            </summary>
            <value>The index of the last visible line in the body region.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Utility.NamespaceDoc">
            <summary>
            Contains the utlities used to maintain and perform common functionalities.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Utility.DoubleSpan">
            <summary>
            Holds a start and end value with double precision.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.CellGrid.Utility.DoubleSpan.Empty">
            <summary>
            An empty object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Utility.DoubleSpan.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Utility.DoubleSpan"/> struct.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Utility.DoubleSpan.ToString">
            <summary>
            Returns a string with start and end values.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Utility.DoubleSpan.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Utility.DoubleSpan.Start">
            <summary>
            Gets or sets the start.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Utility.DoubleSpan.End">
            <summary>
            Gets or sets the end.
            </summary>
            <value>The end.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Utility.DoubleSpan.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Utility.GridUtil.FindDescendantChildByName(System.Windows.Forms.Control,System.String)">
            <summary>
            Generic method to find the DeccendantChild of the FrameworkElement by specifying the name
            </summary>
            <param name="element"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Utility.GridUtil.FindDescendant``1(System.Windows.Forms.Control)">
            <summary>
            Generic method to find visual parent of specified type.
            </summary>
            <typeparam name="T">type of parent</typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Utility.GridUtil.Descendant(System.Windows.Forms.Control,System.Collections.Generic.List{System.Windows.Forms.Control}@)">
            <summary>
            Generic method to get the list of DescendantChilds of a DependenctObject
            </summary>
            <param name="root"></param>
            <param name="list"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Utility.GridUtil.GetNavigatableDescendants(System.Windows.Forms.Control,System.Collections.Generic.List{System.Windows.Forms.Control}@)">
            <summary>
            Generic method to get the navigatable child Controls
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Utility.GridUtil.GetChildObject``1(System.Windows.Forms.Control,System.String)">
            <summary>
            Generic method to get the child object
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Utility.GridUtil.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Generic method to Get the Rectangle using left, top, right and bottom
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Utility.GridUtil.IsComplexType(System.Type)">
            <summary>
            Indicates whether the specified Type has nested properties.
            </summary>
            <param name="t">The Type to be checked.</param>
            <returns>True if nested properties are found; False otherwise.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.Utility.Int32Span">
            <summary>
            Holds a start and end value with integer precision.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.Utility.Int32Span.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Utility.Int32Span"/> struct.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Utility.Int32Span.Start">
            <summary>
            Gets or sets the start.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Utility.Int32Span.End">
            <summary>
            Gets or sets the end.
            </summary>
            <value>The end.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.Utility.Int32Span.Count">
            <summary>
            Gets or sets the count (equals end - start + 1)
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnSheetNavigating">
            <summary>
            Used to Notify when sheet nagivated
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnCurrentCellEditing">
            <summary>
            Used to Notify when Current Cell is in Editing
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnCurrentCellEndEdit">
            <summary>
            Used to Notify when Editing complete for the Currentcell
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnCellClick">
            <summary>
            Used to Notify when the cell is clicked
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnSelectionChanged">
            <summary>
            Used to Notify when Selection is Changed
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnClipboardCopy">
            <summary>
            used to notify when copy the content
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnProtectSheet(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Used to Notigt when Protecting Sheet
            </summary>
            <param name="worksheet">Worksheet to be protected</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnUnProtectSheet(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Used to Notify when UnProtecting sheet
            </summary>
            <param name="worksheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnProtecWorkbook">
            <summary>
            Used to Notify when Protecting Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnUnProtectWorkbook">
            <summary>
            Used to Notify when Unprotecting Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnCommentEditing">
            <summary>
            Used to Notify when Comment is in Editing
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnCommentEndEdit">
            <summary>
            Used to Notify when Editing Comment gets complete
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnDeleteComment">
            <summary>
            Used to Notify when deleting the Comment from the Current cell
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnFontSizeChanged">
            <summary>
            Used to Notify when Increase/Decrease the font size.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnOrientationChanged">
            <summary>
            Used to Notify when Orientation changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnGraphicCellSelectionChanged">
            <summary>
            Used to Notify when the Grahich Cells is selected
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OnSheetVisiblityChanged">
            <summary>
            Used to notify when hide the sheet
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.IsCommentInEditing">
            <summary>
            Indicates whether the Comment is in Editing, sets true if editing else sets false
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FileOpen">
            <summary>
            Command used for Open the excel files
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FileSaveAs">
            <summary>
            Command used for Save spreadsheet by user given name
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FormatFontBold">
            <summary>
            Command used for Applying Font Weight as Bold
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FormatFontItalic">
            <summary>
            Command  used for Applying Font Style as Italic
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FormatFontUnderline">
            <summary>
            Command used for Applying TextDecorations as Underline
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FormatFontStrikethrough">
            <summary>
            Command used for Applying TextDecorations as Underline
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FormatBorder">
            <summary>
            Command used for Applying Borders for cells
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FormatVerticalAlignment">
            <summary>
            Command used for Vertical aligning of text
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FormatHorizontalAlignment">
            <summary>
            Command used for Horizontal aligning of text
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.IncreaseIndent">
            <summary>
            Command used for Increasing indent for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.DecreaseIndent">
            <summary>
            Command used for Decreasing indent for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.GrowFontSize">
            <summary>
            Command used for Increasing font size
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.ShrinkFontSize">
            <summary>
            Command used for Decreasing font size
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.WrapText">
            <summary>
            Command used for Wrapping text in cells
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.MergeCells">
            <summary>
            Command used for Performing Merge Operations like Merge and Center,Merge Across, Merge cells and unmerge cells
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FormatNumber">
            <summary>
            Command used for applying Number Format for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.IncreaseDecreaseDecimalCommand">
            <summary>
            Command used for Increasing the Decimal Digits
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.ConditonalFormattingHighlightCellsRules">
            <summary>
            Command used for applying Conditions for the cell
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.ConditonalFormattingClearRules">
            <summary>
            Command used for applying Conditions for the cell
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.ConditionalFormattingDataBars">
            <summary>
            Command used for applying the databars for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.ConditionalFormattingIconSets">
            <summary>
            Command used for applying the databars for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.ConditionalFormattingColorScales">
            <summary>
            Command used for applying the databars for the cells
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.InsertSheetRows">
            <summary>
            Command used for inserting Rows
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.DeleteSheetRows">
            <summary>
            Command used for deleting rows
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.InsertSheetColumns">
            <summary>
            Command used for inserting columns
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.DeleteSheetColumns">
            <summary>
            Command used for deleting columns
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.InsertSheet">
            <summary>
            Command used for inserting sheets
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.DeleteSheet">
            <summary>
            Command used for deleting the CurrentSheet
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FormatRowHeight">
            <summary>
            Command used for assigning RowHeight for Rows
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FormatColumnWidth">
            <summary>
            Command used for assigning ColumnWidth for Columns
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.HideRows">
            <summary>
            Command used for Hiding/Unhiding Rows
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.HideColumns">
            <summary>
            Command used for Hiding/Unhiding Columns
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.HideSheet">
            <summary>
            Command used for hiding CurrentSheet
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FileSave">
            <summary>
            Command used for Performing Save Operation as Excel File
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FileClose">
            <summary>
            Command used for Exit the Application
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.AutoFitCommand">
            <summary>
            Command used for performing AutoFit Operations for RowHeight and ColumnWidth
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.RenameSheetCommand">
            <summary>
            Command used for Renaming the Current Sheet
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.ProtectSheet">
            <summary>
            Command used for Protecting the Current Sheet
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FileNew">
            <summary>
            Command used for creating a new blank workbook
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FormatCellStyle">
            <summary>
            Command used for applying styles for the Cell
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.ProtectWorkbook">
            <summary>
            Command used for Protecting Workbook
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.InsertHyperlink">
            <summary>
            Command used for navigate cells/sheets using Hyperlinks
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.RemoveHyperlink">
            <summary>
            Command used for remove the hyperlinks from the range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OpenHyperlink">
            <summary>
            Command used for open the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.InsertCells">
            <summary>
            Command used for Inseting Rows/Columns
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.DeleteCells">
            <summary>
            Command used for Deleting Rows/Columns
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FileEncrypt">
            <summary>
            Command used for Encrypting the Application with a Password
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FormatDefaultColumnWidth">
            <summary>
            Command used to set Default width
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.NewComment">
            <summary>
            Command used to insert comment
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.EditComment">
            <summary>
            Command used to insert comment
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.DeleteComment">
            <summary>
            Command used to delete comment for the currentcell
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.DataValidation">
            <summary>
            Command used to apply DataValidation
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.NameManager" -->
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.NewNameRange">
            <summary>
            Command used for show the new name range window
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FreezePanes">
            <summary>
            Command used to freeze the rows/columns 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FreezeFirstColumn">
            <summary>
            Command used to freeze the first column
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FreezeTopRow">
            <summary>
            Command used to freeze the top row
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.UnFreezePanes">
            <summary>
            Command used to unfreeze the rows/columns
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.Cut">
            <summary>
            Command used to Perform Cut Operation
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.Copy">
            <summary>
            Command used to Perform Copy Operation
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.Paste">
            <summary>
            Command used to perform Paste Operation
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FormatAsTable">
            <summary>
            Command used to table formats.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.Group">
            <summary>
            Command used for Grouping Rows/Cells
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.Ungroup">
            <summary>
            Command used for Ungrouping Rows/Columns
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.OutlineSettings">
            <summary>
            Command Used to set the Outline Settings
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.ShowGridLines">
            <summary>
            Used to set the GridLinesVisibility
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.ShowHeadings">
            <summary>
            Used to Set the HeaderRowColumn Visibility
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.ShowFormulaBar">
            <summary>
            Used to Set the FormulaBar Visibility
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.ClearContents">
            <summary>
            Clear the contents from the range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.CollapseAllGroup">
            <summary>
            Used to Collapse all the Group
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.GroupRowExpand">
            <summary>
            Used to Expand/Collapse the Group by Rows
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.GroupColumnExpand">
            <summary>
            Used to Expand/Collapse the Group by Columns
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.LockCell">
            <summary>
            Command used for Lock or UnLock the cells
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.FormatCells">
            <summary>
            Commands used for formatting cells window.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.Commands.HiddenCell">
            <summary>
            Command used for formula hidden in formula bar.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.ClearCommand">
            <summary>
            Commands used for clear the contents or complete content with format based on the parameter.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandBase">
            <summary>
            Base Command used for defining commands
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandBase.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for CommandBase class
            </summary>
            <param name="spreadsheetControl">The Spreadhsheet Control</param>
            <param name="commandName">The Spreadhsheet Control</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandBase.OnCanExecute(System.Object)">
            <summary>
            returns  
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandBase.Execute(System.Object)">
            <summary>
            used to Execute the CommandBase
            </summary>
            <param name="parameter">true or false</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandBase.OnExecute(System.Object)">
            <summary>
            Used to Execute the Specified Command
            </summary>
            <param name="parameter">returns true or false</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandBase.SfSpreadsheet">
            <summary>
            The SfSpreadsheet Control
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ClearCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ClearCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the ClearContentsCommand.
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.CollapseAllGroupCommand">
            <summary>
            Collapses or Expands the group by rows/columns based on the outlinelevel value
            </summary>
            <example>
            The following code illustrates how to collapse and expand the group in the Sfspreadsheet
            <code>
            
            //Collapse group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].CollapseGroup(ExcelGroupBy.ByRows)
            SfSpreadsheet.ActiveGrid.RowHeights.SetHidden(3, 6, true);
            SfSpreadsheet.RefreshOutlines(true,false);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            
            //Expand group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].ExpandGroup(ExcelGroupBy.ByRows)
            SfSpreadsheet.ActiveGrid.RowHeights.SetHidden(3, 6, false);
            SfSpreadsheet.RefreshOutlines(true,false);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            </code>
            </example> 
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.OutlineCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for OutlineCommand.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.OutlineCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Group, UnGroup, OutlineSetting, GroupColumnExpand, GroupRowExpand and CollapseAllGroup Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.OutlineCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the Group, UnGroup, OutlineSetting, GroupColumnExpand, GroupRowExpand and CollapseAllGroup command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CollapseAllGroupCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.Int32,Syncfusion.XlsIO.ExcelGroupBy,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Initializes a new instance of CollapseAllGroupCommand class 
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="labelNo">Outlinelevel value</param> 
            <param name="groupBy">Group Type</param>
            <param name="workSheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CollapseAllGroupCommand.OnCanExecute(System.Object)">
            <summary>
            Determines whether the CollapseAllGroupCommand Can be executed or not
            </summary>
            <param name="parameter">True or False</param>
            <returns>True or False</returns>
            <remarks>This command cannot be executed if the worksheet is protected</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CollapseAllGroupCommand.OnExecute(System.Object)">
            <summary>
            Executes the CollapseAllGroupCommand
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationCommand">
            <summary>
            Command used for Applying DataValidation for the range
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupColumnExpandCommand">
            <summary>
            Collapses or Expands the group by columns based on summary columns
            </summary>
            <example>
            The following code illustrates how to collapse and expand the group by columns
            <code>
            
            //Collapse group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].CollapseGroup(ExcelGroupBy.ByColumns)
            SfSpreadsheet.ActiveGrid.ColumnWidths.SetHidden(3, 6, true);
            SfSpreadsheet.RefreshOutlines(false,true);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            
            //Expand group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].ExpandGroup(ExcelGroupBy.ByColumns)
            SfSpreadsheet.ActiveGrid.SetColumnWidth(3, 6,SfSpreadsheet.ActiveGrid.GetColumnWidthFromSheet(3));
            SfSpreadsheet.RefreshOutlines(false,true);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            </code>
            </example>  
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupColumnExpandCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupColumnExpandCommand">GroupColumnExpandCommand</see> class. 
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupColumnExpandCommand.OnCanExecute(System.Object)">
            <summary>
            Determines whether the GroupColumnExpandCommand can be executed or not
            </summary>
            <param name="parameter">True or False</param>
            <returns>True or false</returns>
            <remarks>This command cannot be executed if the worksheet is protected</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupColumnExpandCommand.OnExecute(System.Object)">
            <summary>
            Executes the GroupColumnExpandCommand
            </summary>
            <param name="parameter">null</param>
            <remarks>The grouping range can be collapsed or expanded based on the summary columns</remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupCommand">
            <summary>
            Command Used for Group by Rows/Columns
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if the Group Command can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupCommand.OnExecute(System.Object)">
            <summary>
            Executes the Group Command
            </summary>
            <param name="parameter">true</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupRowExpandCommand">
            <summary>
            Collapses or Expands the group by columns based on summary rows
            </summary>
            <example>
            The following code illustrates how to collapse and expand the group by rows
            <code>
            
            /Collapse group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].CollapseGroup(ExcelGroupBy.ByRows)
            SfSpreadsheet.ActiveGrid.RowHeights.SetHidden(3, 6, true);
            SfSpreadsheet.RefreshOutlines(true,false);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            
            //Expand group
            SfSpreadsheet.ActiveSheet.Range["A3:A6"].ExpandGroup(ExcelGroupBy.ByRows)
            SfSpreadsheet.ActiveGrid.RowHeights.SetHidden(3, 6, false);
            SfSpreadsheet.RefreshOutlines(true,false);
            SfSpreadsheet.ActiveGrid.InvalidateCells();
            </code>
            </example>  
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupRowExpandCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.UI.Xaml.Spreadsheet.Commands.GroupRowExpandCommand">GroupRowExpandCommand</see> class. 
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="commandName"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupRowExpandCommand.OnCanExecute(System.Object)">
            <summary>
            Determines whether the GroupRowExpandCommand can be executed or not
            </summary>
            <param name="parameter">True or False</param>
            <returns>True or false</returns>
            <remarks>This command cannot be executed if the worksheet is protected</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupRowExpandCommand.OnExecute(System.Object)">
            <summary>
            Executes the GroupRowExpandCommand
            </summary>
            <param name="parameter">null</param>
            <remarks>The grouping range can be collapsed or expanded based on the summary rows</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for Hyperlink command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Hyperlink Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Hyperlink Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for FormatCommand.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the  command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HiddenCellCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for LockCellCommand
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HiddenCellCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if LockCell Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HiddenCellCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the LockCellCommand
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for FormatCommand.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the  command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.GetNumberFormatType(System.String)">
            <summary>
            Get the numberformat type based on the numberformat read form xlsio.
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.FindNumberFormat">
            <summary>
            Find the numberformat from the selected ranges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.GetStyleFromExcel">
            <summary>
            Returns the horizontal alignment from the selected ranges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.HasMultipleCells">
            <summary>
            Set the visibility of inside button icon in format cells window based on the cells in the selected ranges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.ApplyHorizontalAlignment(System.Int32)">
            <summary>
            Set the horizontal alignment to range.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.ApplyVerticalAlignment(System.Int32)">
            <summary>
            Set the vertical alignment to xlsio range.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.ApplyWrapText(System.Boolean)">
            <summary>
            Set the wrap text to the xlsio range.
            </summary>
            <param name="haswraptext"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.ApplyMergeCells(System.Boolean)">
            <summary>
            Set the merge cells to the xlsio range.
            </summary>
            <param name="hasmerged"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.ApplyFontStyle(System.Int32)">
            <summary>
            Set the font style to the xlsio range.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.ApplyUnderline(System.Int32)">
            <summary>
            Set the underline to the xlsio range.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.ApplyCellBorders(Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatBorderCommand.ExcelBorderStyle,System.Drawing.Pen)">
            <summary>
            Set the cellborders to the xlsio range.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.AddItemToCommandList(System.String)">
            <summary>
            Commands should be executed based on the items in the command list instead of all the commands,so we have maintained the list and
            items are added if the changes happens on specified command.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.ApplyLockedCells(System.Boolean)">
            <summary>
            Set the locked to the xlsio range.
            </summary>
            <param name="haslocked"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.ApplyHiddenCells(System.Boolean)">
            <summary>
            Set the hidden cell to the xlsio range.
            </summary>
            <param name="haslocked"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.ApplyBorderLineStyle(Syncfusion.XlsIO.ExcelLineStyle,System.Drawing.Pen,System.Drawing.Color)">
            <summary>
            Apply the styles to the line.
            </summary>
            <param name="linestyle"></param>
            <param name="borderpen"></param>
            <param name="bordercolor"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsCommand.GetLineStyleFromDashStyle(System.Drawing.Pen)">
            <summary>
            Convert the linestyle from pen dashstyle to excel linestyle.
            </summary>
            <param name="pen"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontStrikethroughCommand">
            <summary>
            Command used to Strikethrough the text in the Cell 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FontCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for Font Command.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FontCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Bold, Italic, Underline, GrowFontSize, ShrinkFontSize and Border Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FontCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the Bold, Italic, Underline, GrowFontSize, ShrinkFontSize and Border command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontStrikethroughCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for FormatFontStrikethrough
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontStrikethroughCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if FormatFontStrikethrough can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontStrikethroughCommand.OnExecute(System.Object)">
            <summary>
            Used to execute strikethrough Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertHyperlinkCommand">
            <summary>
            Command used to Add, Edit or Delete Hyperlink
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertHyperlinkCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for Hyperlink command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertHyperlinkCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Hyperlink Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertHyperlinkCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Hyperlink Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerCommand">
            <summary>
            Commands used for Adding,Editing, Managing the Name Range used in the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if NameManager can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the MergeCells
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeCommand">
            <summary>
            Commands used for Adding,Editing, Managing the Name Range used in the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if NameManager can be executed else false.
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the NameManager.
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.OpenHyperlinkCommand">
            <summary>
            Commands used for Adding,Editing, Managing the Name Range used in the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.OpenHyperlinkCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if NameManager can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.OpenHyperlinkCommand.OnExecute(System.Object)">
            <summary>
            Used to open the hyperlink for the contextmenu open option.
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.OutlineSettingsCommand">
            <summary>
            Command used to set the Outline Settings
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.OutlineSettingsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if the OutlineSettings can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.OutlineSettingsCommand.OnExecute(System.Object)">
            <summary>
            Executes the OutlineSettings
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.RemoveHyperlinkCommand">
            <summary>
            Commands used for remove hyperlink from workbook.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.RemoveHyperlinkCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.RemoveHyperlinkCommand.OnExecute(System.Object)">
            <summary>
            Used to remove the hyperlink from the range
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.UngroupCommand">
            <summary>
            Command used for Ungroup the Row/Column
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UngroupCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if the Ungroup Commmand Can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UngroupCommand.OnExecute(System.Object)">
            <summary>
            Executes the Ungroup Command 
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.PasteOptions">
            <summary>
            Defines copypaste options for <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.PasteOptions.Paste">
            <summary>
            Copies the values,formats,formulas..etc.,
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.PasteOptions.Formula">
            <summary>
            Copies the Formula alone without any formatting
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.PasteOptions.Value">
            <summary>
            Copies the values alone without any formatting
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.PasteOptions.Format">
            <summary>
            Copies only the formatting alone without any values
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.PasteOptions.FormulaFormat">
            <summary>
            Copies the formulas along with its formats
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.PasteOptions.ValueFormat">
            <summary>
            Copies the values along with its formats
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem">
            <summary>
            Represents the class that uses a control template to design an interface for copy paste options.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem.copyPaste">
            <summary>
            To access the methods,properties of SpreadsheetCopyPaste.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem">PasteDropDownItem</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem.#ctor(Syncfusion.Windows.Forms.Spreadsheet.IPasteOptionChanged)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem">PasteDropDownItem</see> class. 
            </summary>
            <param name="changedHandler">An instance for the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.IPasteOptionChanged"/> </param>        
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem.PasteOptionPopup_Closed(System.Object,System.Object)">
            <summary>
            Occurs when popup closed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem.PasteButton_Click(System.Object,System.EventArgs)">
            <summary>
            This event fires when the pasteoption popup button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem.PasteFormulaButton_Click(System.Object,System.EventArgs)">
            <summary>
            This event is fired when formula button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem.PasteValueButton_Click(System.Object,System.EventArgs)">
            <summary>
            This event is fired when value button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem.PasteAllButton_Click(System.Object,System.EventArgs)">
            <summary>
            This event is fired when value button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem.PasteFormulaFormatButton_Click(System.Object,System.EventArgs)">
            <summary>
            This event is fired when Formula and SourceFormatting button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem.PasteValueFormatButton_Click(System.Object,System.EventArgs)">
            <summary>
            This event is fired when value and SourceFormatting button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem.PasteFormatButton_Click(System.Object,System.EventArgs)">
            <summary>
            This event is fired when Format only button is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem.WireEvents">
            <summary>
            To hook Events
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem.UnWireEvents">
            <summary>
            To unhook the events
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem.PasteOptionChangedHandler">
            <summary>
            To get or set the pasteoptions
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.IPasteOptionChanged">
            <summary>
            Interface for paste options.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste">
            <summary>
             Represents the class which performs all the clipboard operations such as Cut/Copy/Paste in SfSpreadsheet.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.isActivated">
            <summary>
            Determines whether the popup is activated in app or not
            </summary>      
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.isOptionChanged">
            <summary>
            Determines whether to copy the targetworkbookrange to tempworkbookrange or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.option">
            <summary>
            Maintains the pasteoption which the user selects, by default the option is Paste
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.#ctor">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.ClearSourceRange">
            <summary>
            Clears the SourceRange.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.OnGridLoaded">
            <summary>
            This function invoked when grid is loaded
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.OnCurrentCellActivated">
            <summary>
            This function is called when current cell is activated
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.OnCurrentCellBeginEdit">
            <summary>
            This function invoked when cell enters into edit mode
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.HasCopiedContent(System.Boolean@,System.Boolean@)">
            <summary>
            Used to enable copy paste option in context menu
            </summary>
            <param name="hasSourceRangeContent"></param>
            <param name="isCutContent"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.ShowPasteOptionPopup(System.Double,System.Double)">
            <summary>
            To set the horizontal and vertical offset
            </summary>
            <param name="vOffset">To set the Vertical Offset</param>
            <param name="hOffset">To set the Horizontal Offset</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.HidePopup">
            <summary>
            To hide the popup when ribbon interaction
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.ShowHidePastePopup(System.Boolean)">
            <summary>
            To show or hide popup when app activated/ deactivated.
            </summary>
            <param name="show">True indicates the app is activated or else deactivated</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.ResetPastePopupPosition(System.Double,System.Double,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            To set the position of the popup in the grid
            </summary>
            <param name="xPos">represents X position of container</param>
            <param name="yPos">represents Y position of container</param>
            <param name="Grid">represents the current grid</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.ActivateGrid(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            To activate the grid and worksheet
            </summary>
            <param name="grid">current grid</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.Copy(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Boolean)">
            <summary>
            Copy the values from the given range.
            </summary>
            <param name="range">Currently selected range.</param>
            <param name="needToCut">Determines whether to cut/copy.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.Cut">
            <summary>
            This function performs the cut operation in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.Copy">
            <summary>
            This function performs the copy operation in <see cref="!:SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste">SpreadsheetCopyPaste</see>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.Paste">
            <summary>
            This function Performs the Paste operation in <see cref="!:SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.PasteFromClipboard(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Pastes the text from clipboard.
            </summary>
            <param name="range">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.PasteOptionChanged(Syncfusion.Windows.Forms.Spreadsheet.PasteOptions)">
            <summary>
            This function is invoked when the pasteoptions button is clicked.
            </summary>
            <param name="e"> Option which the user selects.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.Paste(Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList)">
            <summary>
            To paste the values in the given range.
            </summary>
            <param name="range">Selected rangelist.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.Paste(Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList,Syncfusion.Windows.Forms.Spreadsheet.PasteOptions)">
            <summary>
            To paste the values based on the option in the given range.
            </summary>
            <param name="range">List of selected ranges.</param>
            <param name="e">Selected Option.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.GetPasteDropDownItem">
            <summary>
            To get the PasteDropDown control.
            </summary>
            <returns>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.ClearClipboard(System.Boolean)">
            <summary>
            To clear the clipboard values.
            </summary>
            <param name="clear">If true, clears the clipboard.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.CanCut">
            <summary>
            Checks if the selected range can be cut or copied to the clipboard.
            </summary>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.CanCopy">
            <summary>
            Checks whether the selected range can be copied or not
            </summary>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.CanPaste(Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList)">
            <summary>
            Checks whether the copied ranges can be pasted.
            </summary>
            <param name="mrangeList">Currently selected rangelist.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.OnCopying(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs)">
            <summary>
            Invoked while copying the content from  <see cref="!:SfSpreadsheet"/>.
            </summary>
            <param name="args">A <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs"/> that contains the event data.</param>
            <remarks>This method raises the <see cref="E:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.Copying"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.OnCopied(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs)">
            <summary>
            Invoked after copied the content from  <see cref="!:SfSpreadsheet"/>.
            </summary>
            <param name="args">A <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs"/> that contains the event data.</param>
            <remarks>This method raises the <see cref="E:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.Copied"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.OnPasting(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastingEventArgs)">
            <summary>
            Invoked while pasting the content in  <see cref="!:SfSpreadsheet"/>.
            </summary>
            <param name="args">A <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastingEventArgs"/> that contains the event data.</param>
            <remarks>This method raises the <see cref="E:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.Pasting"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.OnPasted(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastedEventArgs)">
            <summary>
            Invoked after pasted the content in <see cref="!:SfSpreadsheet"/>.
            </summary>
            <param name="args">A <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastedEventArgs"/> that contains the event data.</param>
            <remarks>This method raises the <see cref="E:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.Pasted"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.CopyToClipboard(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Copies the text to the clipboard.
            </summary>
            <param name="copyRange">Copied range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.MoveToTargetrange(System.Collections.ICollection)">
            <summary>
            Move the specified source range into target range.
            </summary>
            <param name="rangeList">Selected ranges to paste.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.CopyToTemprange(System.Collections.ICollection,System.String)">
            <summary>
            Copy the specified source range into target range.
            </summary>
            <param name="rangeList">Selected ranges to paste.</param>
            <param name="excelTargetRange">Excel range to paste.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.UpdateMergeRange">
            <summary>
            Update the pasted merge range.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.UpdateSelection(System.Collections.Generic.IEnumerable{Syncfusion.Windows.Forms.CellGrid.GridRangeInfo})">
            <summary>
            Updates the selection frame in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <param name="mrangeList">List of the pasted ranges.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.CommitTransaction(Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList)">
            <summary>
            Commit transaction.
            </summary>
            <param name="rangeList">List of pasted ranges</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.CopyToTargetrange(Syncfusion.Windows.Forms.Spreadsheet.PasteOptions)">
            <summary>
            Perform the paste operation based on the option provided.
            </summary>
            <param name="e">Selected paste option.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.UpdateTargetRange(System.String)">
            <summary>
            Updates the target range.
            </summary>
            <param name="excelTargetRange">Selected excel range.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.CheckMergedCells">
            <summary>
            Determines whether the merged cells is present in the pasted region and updates the pasted range.
            </summary>
            <returns>True or false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.CheckPasswordProtected(Syncfusion.XlsIO.IRange)">
            <summary>
            Returns the specified range is locked or not.
            </summary>
            <param name="range">Selected range.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.UpdateTableSelectedRange">
            <summary>
            Returns Table range selected partially or not?.
            </summary>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.GetExpandedRange(Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList)">
            <summary>
            Expands the Range list when it is Table, Rows, Cols to Cells.
            </summary>
            <param name="rangeList">The currently selected range.</param>
            <returns>List of selected ranges.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.GetClipboardText">
            <summary>
            Gets the Clipboard text which is stored when copied range of cells from spreadhsheet  
            or any external source such as excel,notepad..etc
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.DefaultPasteOption">
            <summary>
            Gets or sets the default paste option.
            </summary>
            <value>One of the enum option in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.PasteOptions"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.AllowPasteOptionPopup">
            <summary>
            Gets or sets whether the paste option popup will be shown or not after pasting.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.SourceGrid">
            <summary>
            Gets or sets the copied range from grid.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.SourceRange">
            <summary>
            Gets or sets the selected range which is used for copy/cut operation.
            </summary>
            <value>Selected range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.TargetRange">
            <summary>
            Gets or sets the selected ranges which is used for paste operation.
            </summary>
            <value>Selected range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.PasteRangeList">
            <summary>
            Gets or sets the ranges which are selected for pasting.
            </summary>
            <value>List of ranges.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.ClipboardText">
            <summary>
            Gets or sets the copied text in clipboard when we perform paste operation.
            </summary>
            <value>Copied text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.SourceRangeText">
            <summary>
            Gets or sets the copied text in clipboard when we perform cut/copy operation.
            </summary>
            <value>Copied text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.SourceWorkbookRange">
            <summary>
            Gets or sets the active sheet range of workbook when we perform cut/copy operation.
            </summary>
            <value>Sheet range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.TargetWorkbookRange">
            <summary>
            Gets or sets the active sheet range of workbook when we perform paste operation.
            </summary>
            <value>Sheet range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.TempWorkbookRange">
            <summary>
            Gets or sets the temp sheet range of workbook when we perform paste operation.
            </summary>
            <value>Sheet range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.PasteDropdownItem">
            <summary>
            Gets or sets the dropdownitem of paste operation.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.PasteDropDownItem"/>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.ActiveWorksheet">
            <summary>
            Gets or sets the active worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.ActiveGrid">
            <summary>
            Gets or sets the current grid
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.Copying">
            <summary>
            Occurs while copying the content from the <see cref="!:SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.Copied">
            <summary>
            Occurs after copied the content from the <see cref="!:SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.Pasting">
            <summary>
            Occurs while pasting the content into <see cref="!:SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste.Pasted">
            <summary>
            Occurs after the content is pasted into <see cref="!:SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.FillDropDownItem">
            <summary>
            Represents the class that uses a control template to design an interface for fill series elements
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillDropDownItem.#ctor">
            <summary>
            Initializes a new instance of FillDropDownItem class
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillDropDownItem.#ctor(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of FillDropDownItem class with the specified SpreadsheetGrid
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillDropDownItem.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.FillDropDownItem"/> class
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.MovingDirection">
            <summary>
            Enum to determine the direction of the CopyCells and FillSeries
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController">
            <summary>
            Represents the class that provides support for extending the selection and auto fill the cells with data that completes a pattern in the Selected region.
            </summary>
            <remarks>
            Fills the selected range of cells in the spreadsheet with a series of numbers, characters, or dates. The content of the first cell in the selected range is used as the starting value for the series.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.spreadsheetGrid">
            <summary>
            Instance of the SpreadsheetGrid
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.coveredRange">
            <summary>
            Covered range is the range which contains the covered cells in the selected range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.extendFillRange">
            <summary>
            It holds the dragged ranges from the selected ranges.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.hitTestPrecision">
            <summary>
            Used to show the fill series cursor when move the mouse pointer on the cell corner.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.initialPoint">
            <summary>
            Initial point of the mouse when do drag and fill the series.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.keepCoveredRange">
            <summary>
            The boolean variable is set as true when do the fillSeries for mergedCells. otherwise which is false.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.fillOption">
            <summary>
            The variable is used to choose which operation do you want to perform.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.backup">
            <summary>
            The boolean variable is set as true when the backup is done. otherwise which is false.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.tempBackUpRange">
            <summary>
            The variable which is used to store the range for temporary purpose.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.copyTempRange">
            <summary>
            The range which is used to copy the temporary range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.fillPopupActivated">
            <summary>
            The boolean variable is set as true when the fillOptionPopup is set as false. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.initialCell">
            <summary>
            OriginalRange bottom cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.changedCell">
            <summary>
            FillRange bottom cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.#ctor(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of FillSeriesController Class with the specified SpreadsheetGrid
            </summary>
            <param name="spreadsheetGrid">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.spreadsheetGrid_SelectionChanged(System.Object,Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangedEventArgs)">
            <summary>
             SelectionChanged Event used to close the popup and clear the temp range
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.spreadsheetGrid_CurrentCellActivated(System.Object,Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellActivatedEventArgs)">
            <summary>
             CurrentCellActivated Event used to close the popup and clear the temp range
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.AutoScroller_AutoScrollerValueChanged(System.Object,Syncfusion.Windows.Forms.CellGrid.AutoScrollerValueChangedEventArgs)">
            <summary>
            When Auto Scrolling FillRange is updated 
            </summary>
            <param name="sender">sender</param>
            <param name="args">AutoScrollerValueChangedEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.FillOptionPopup_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            To change the cursor when the pointer is moved over the popup.
            </summary>
            <param name="sender">sender</param>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.UpdateFillRangeOnAutoScrolling(Syncfusion.Windows.Forms.CellGrid.AutoScrollerValueChangedEventArgs)">
            <summary>
            To update the FillRange on auto scrolling.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.PointerPressed(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Determines the pressed position of pointer of the FillSeriesController
            </summary>
            <param name="e">The <see cref="!:System.Windows.Input.MouseEventArgs"/> that contains the event data</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.IsPasswordProtected(Syncfusion.XlsIO.IRange)">
            <summary>
            Returns the specified range is locked or not
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.PointerReleased(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Determines the released position of pointer of the FillSeriesController
            </summary>
            <param name="e">The <see cref="!:System.Windows.Input.MouseEventArgs"/> that contains the event data</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.ShowFillOptionPopup(System.Double,System.Double)">
            <summary>
            To set the vertical and horizontal offset position for FillOptionPopup
            </summary>
            <param name="vOffset"></param>
            <param name="hOffset"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.HidePopup">
            <summary>
            To hide the FillOptionPopup
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.ShowHideFillPopup(System.Boolean)">
            <summary>
             To show or hide popup when app activated/ deactivated.
            </summary>
            <param name="show"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.ResetFillPopupPosition(System.Double,System.Double)">
            <summary>
            Resets the Popup Position.
            </summary>
            <param name="xPos"></param>
            <param name="yPos"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.FillHeaderSelection(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            FillHeaderSelection has invoked when select and drag the row or column header.
            </summary>
            <param name="cell"></param>
            <param name="OriginalRange"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.CopyCells(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Copys the OldRange to newRange based on the fillOption
            </summary>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.AddCoveredCellsIntoGrid">
            <summary>
            Add merged ranges of the specified grid
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.IsFillRangeIntersectsMergeCell">
            <summary>
            To check whether the fill range intersects any merge range in worksheet
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.FillSeries(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Fills the Selected range based upon the content of the cell Like Numbers, string, Formula or DateTime
            </summary>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.SplitRange(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.String@,System.Collections.Generic.List{Syncfusion.Windows.Forms.CellGrid.GridRangeInfo}@)">
            <summary>
            Split the mixed combination of values in to ranges.
            </summary>
            <param name="sheet">Current worksheet</param>
            <param name="top">Row index</param>
            <param name="left">Column index</param>
            <param name="previousRangeType">Type of the previous cell value</param>
            <param name="rangeList">List of ranges in the seleced range</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.ProcessFillSeries(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Fills the cell value based on the content of the cell.
            </summary>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.CopyToRange(Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.ExcelCopyRangeOptions)">
            <summary>
            Used to copy excel ranges
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="option">Option</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.ProcessFillSeriesDragSelection(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Determines the state of the mouse position and the selected range of the FillSeries
            </summary>
            <param name="e">The <see cref="!:System.Windows.Input.MouseEventArgs"/> that contains the event data</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.FillOptionChanged(System.String)">
            <summary>
            Determines the operation to be performed based on the selected fillseries option
            </summary>
            <param name="Content">The option to determine the operation</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.HitTest(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Hit Test for the FillSeriesController
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.CheckClearHeader(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            To check that the selection is at the top edge or at the left side edge
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.WireEvents">
            <summary>
            Wire the events
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.UnWireEvents">
            <summary>
            Unwire the events associated with FillSeriesController
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.Worksheet">
            <summary>
            Returns the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.IsFillSelection">
            <summary>
            The boolean property is set as true when drag and fill the slection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.SelectionClear">
            <summary>
            Selected cells are dragged in reverse direction which clears the cell selection and also skip the fillSeries operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.IsReverseFill">
            <summary>
            The boolean variable is set as true when reverse fill the selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.MouseMovePoint">
            <summary>
            Returns the moving point of the mouse 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.TempFillRange">
            <summary>
            The property is used to stores the FillRange for temporary purpose
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.TempOriginalRange">
            <summary>
            The property is used to stores the OriginalRange for temporary purpose
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.ClearedRange">
            <summary>
            The property holds the range to clear in the reverse direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.MoveDirection">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.MovingDirection"/> of drag fill.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.FillRange">
            <summary>
            Returns the range for which has to be filled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.OriginalRange">
            <summary>
            OriginalRange is the range which is obtained before filling the data.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.AllowFillSeries">
            <summary>
            Determines whether to allow fill series or copy series operation
            </summary>
            <value>True or False</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.FillSeriesHelper">
            <summary>
            Holds the instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController"/> Used to perform fill series operation for numbers, string, date time, alphanumeric string.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FillSeriesController.HasCombination">
            <summary>
            The boolean property is set as true when the oldrange range has mixed combinations
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.numberValue">
            <summary>
            Below variable holds the numeric value after split from the alphanumeric string.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.value1">
            <summary>
            Numeric value obtained from the alphanumeric string.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.value2">
            <summary>
            String value split from the alphanumeric string
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.isFirstCell">
            <summary>
            The boolean variable is used to calculate and set the intercept value at the first immediate cell of the oldRange.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.hasZeroDifference">
            <summary>
            The variable is used to calculate and add the intercept and stepValue then printed after the adjacent cell of the oldRange.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.fillSeriesController">
            <summary>
            Instance of FillSeriesController.
            </summary>
        </member>
        <member name="F:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.spreadsheetGrid">
            <summary>
            Instance of SpreadsheetGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.DateTimeCalculation(System.Int32,System.Int32,Syncfusion.XlsIO.IWorksheet,System.String,System.Double)">
            <summary>
            Calculate the date time values 
            </summary>
            <param name="top">Row index</param>
            <param name="left">Column index</param>
            <param name="sheet">Current worksheet</param>
            <param name="result">Final value</param>
            <param name="difference">Difference of date time value</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.StringValueCalculation(System.Int32,System.Int32,Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Boolean)">
            <summary>
            To calculate the alphanumeric value when the height/width of the oldrange is one.
            </summary>
            <param name="top">Row index</param>
            <param name="left">Column index</param>
            <param name="sheet">Current worksheet</param>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
            <param name="isZero">It is used to avoid the negative value while dragging left and up direction</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.PrintStringValue(System.Int32,System.Int32,Syncfusion.XlsIO.IWorksheet,System.String,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Set the alphanumeric string value in the appropriate cell.
            </summary>
            <param name="top">Row index</param>
            <param name="left">Column index</param>
            <param name="sheet">Current worksheet</param>
            <param name="result">Final resultant value</param>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.CalculateValues(System.Int32,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.XlsIO.IWorksheet,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Calculate the Intercept and step value for number combination in all direction (Down,Up,Right,Left).
            </summary>
            <param name="index">Row index or Column index</param>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
            <param name="sheet">Current worksheet</param>
            <param name="stepValue">Formula calculated value</param>
            <param name="intercept">Formula calculated value</param>
            <param name="difference">Formula calculated value</param>
            <param name="count">count of the numeric cell value of slected ranges in the particular row /column</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.SetValue(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.XlsIO.IWorksheet,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            To set the cell value for each cell in the new range
            </summary>
            <param name="oldRange">OldRange</param>
            <param name="newRange">NewRange that has been selected</param>
            <param name="sheet">Current worksheet</param>
            <param name="index">Row index/Column index </param>
            <param name="stepValue">Formula calculated value</param>
            <param name="intercept">Formula calculated value</param>
            <param name="difference">Formula calculated value</param>
            <param name="count">count of the numeric cell value of slected ranges in the particular row /column</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.DateTimeDifferenceCalculation(System.Int32,System.Int32,Syncfusion.XlsIO.IWorksheet,System.Double)">
            <summary>
            To calculate the difference for the DateTime values.
            </summary>
            <param name="rowIndex">Row index</param>
            <param name="columnIndex">Column index</param>
            <param name="sheet">Current worksheet</param>
            <param name="difference">Difference value</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.GetNumericValue(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.String,System.String,System.String@,System.Double@)">
            <summary>
            To get the numeric value from the alpha numeric string.
            </summary>
            <param name="sheet">Current worksheet</param>
            <param name="top">Row index</param>
            <param name="index">Column index</param>
            <param name="value">Cell Value</param>
            <param name="value1">Number value</param>
            <param name="value2">String value split from the alphanumeric string</param>
            <param name="numberValue">Numeric value split from the alphanumeric string</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.ComputeValue(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.String)">
            <summary>
            To calculate the intermediate values for the number combination.
            </summary>
            <param name="a">Formula calculated value</param>
            <param name="b">Formula calculated value</param>
            <param name="c">Formula calculated value</param>
            <param name="count">Count value has increased based on the number of cell having numeric values in the selected rows or columns</param>
            <param name="oldRangeTotal">Formula calculated value</param>
            <param name="value">Current cell range</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.LeftRightValue(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double@,System.Double@,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Calculate the value for the left and right direction
            </summary>
            <param name="sheet">Current worksheet</param>
            <param name="h">height or width of original range</param>
            <param name="index">Row index</param>
            <param name="left">Column index</param>
            <param name="count">count of the numeric cell value of slected ranges in the particular row /column</param>
            <param name="stepValue">Formula calculated value</param>
            <param name="intercept">Formula calculated value</param>
            <param name="difference">Formula calculated value</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.UpDownValue(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double@,System.Double@,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Calculate the value for the up and down direction
            </summary>
            <param name="sheet">Current worksheet</param>
            <param name="h">height or width of original range</param>
            <param name="top">Row index</param>
            <param name="index">Column index</param>
            <param name="count">count of the numeric cell value of slected ranges in the particular row /column</param>
            <param name="stepValue">Formula calculated value</param>
            <param name="intercept">Formula calculated value</param>
            <param name="difference">Formula calculated value</param>
            <param name="newRange">>NewRange that has been selected</param>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.InvokeFillSeries(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.Double,System.Double,System.Double@,System.Double)">
            <summary>
            To calculate and set the final value in the particular cell for the number combination
            </summary>
            <param name="sheet">Current worksheet</param>
            <param name="rowIndex">Row index</param>
            <param name="columnIndex">Column index</param>
            <param name="count">count of the numeric cell value of slected ranges in the particular row /column</param>
            <param name="stepValue">Formula calculated value</param>
            <param name="intercept">Formula calculated value</param>
            <param name="difference">Formula calculated value</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.UI.Xaml.Spreadsheet.FillSeriesHelper.AppendStringValue(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.String)">
            <summary>
            To concatenate the string and numeric value
            </summary>
            <param name="sheet">Current worksheet</param>
            <param name="rowIndex">Row index</param>
            <param name="columnIndex">Column index</param>
            <param name="result">Final resultant value to be print</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController">
            <summary>
            Represents a class which is used to perform clipboard operations on ShapeImpl<see cref="T:Syncfusion.XlsIO.IShape"/> (TextBox, Picture, Charts, etc.).
            </summary>
            <remarks>Provides support to move and copy the shapes in Spreadsheet.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.count">
            <summary>
            Count is used for name the graphic objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController">GraphicCopyPasteController</see> class. 
            </summary>
            <param name="spreadsheet">An instance of <see cref="!:SfSpreadsheet"/></param>             
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.CanCutCopy">
            <summary>
            This function checks the condition to enable cut and copy operation on <see cref="T:Syncfusion.XlsIO.IShape">Shape</see>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.CanPaste">
            <summary>
            This function checks the condition to enable paste operation on <see cref="T:Syncfusion.XlsIO.IShape"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.CanDelete">
            <summary>
            This function checks the condition to enable delete operation on <see cref="T:Syncfusion.XlsIO.IShape"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.Copy">
            <summary>
            This function used to perform copy operations on <see cref="T:Syncfusion.XlsIO.IShape">ShapeImpl</see> (TextBox, Picture, Charts, etc.).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.Paste">
            <summary>
            This function used to perform paste operations on <see cref="T:Syncfusion.XlsIO.IShape">ShapeImpl</see> (TextBox, Picture, Charts, etc.). 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.Cut">
            <summary>
            This function used to perform cut operations on <see cref="T:Syncfusion.XlsIO.IShape">ShapeImpl</see> (TextBox, Picture, Charts, etc.).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.AddGraphicObject(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject,Syncfusion.XlsIO.IShape)">
            <summary>
            This function adds the graphicObject in GraphicModel
            </summary>
            <param name="graphicObject"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.SetShapeName(Syncfusion.XlsIO.IShape)">
            <summary>
            Sets name for the pasted shapes
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.RemoveShape(Syncfusion.XlsIO.IShape,Syncfusion.XlsIO.IShape)">
            <summary>
            Remove the Cut shapes from ShapesCollection and GraphicObject
            </summary>
            <param name="graphicObject"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.SetPosition(System.Drawing.Rectangle,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject,System.Int32)">
            <summary>
            This function sets the position for the Shapes to be pasted
            </summary>
            <param name="currentCellRect">current cell rect</param>
            <param name="graphicObject">graphic object</param>
            <param name="index">index of the copiedshapes</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.pastedShapes">
            <summary>
            Gets or sets the shapes that are pasted currently.Used for adding the selection for Pasted Shapes
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.NeedToCut">
            <summary>
            Gets or sets as true when cut operation is performed <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController.CopiedShapes">
            <summary>
            Gets or sets the list of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject"/> that is copied.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController">
            <summary>
            Represents a class which is used to control/handle the selection of the GraphicCells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.#ctor(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController">GraphicSelectionController</see> class. 
            </summary>
            <param name="model">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel"/></param>       
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.AddSelection(System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl})">
            <summary>
            Adds the selection to the mentioned shapes.
            </summary>
            <param name="shapes"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.HandlePointerOperations(Syncfusion.Windows.Forms.CellGrid.GridPointerEventArgs,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            Handles the pointer operations
            </summary>
            <param name="args"></param>
            <param name="cell"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.HandleKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            Handles the KeyDown operation.
            </summary>
            <param name="e"></param>
            <param name="cell"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.RaiseSelectionChangingEvent(System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Helper method to raise the <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.RaiseSelectionChangingEvent(System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger)"/> event.
            </summary>
            <param name="oldshapes"></param>
            <param name="newshapes"></param>
            <param name="trigger"></param>
            <returns>Returns true, if event is not canceled</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.RaiseSelectionChangedEvent(System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger)">
            <summary>
            Helper method to raise the <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.RaiseSelectionChangedEvent(System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},System.Collections.Generic.List{Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl},Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger)"/> event.
            </summary>
            <param name="oldshapes"></param>
            <param name="newshapes"></param>
            <param name="trigger"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.ProcessTabKeyNavigation(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            The selection operations performed in SfSpreadsheet while pressing the Tab key on the Graphic Cell
            </summary>
            <param name="cell">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.OnPointerPressed(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            Invoked when the pointer is pressed on <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/> and performs the operations.
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
            <param name="cell">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/></param>      
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.MoveSelectionToGrid">
            <summary>
            Adds the selection and current cell on the SpreadsheetGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.RemoveSelectedGraphicCells">
            <summary>
            Remove the selected GraphicCells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.SelectAllGraphicCells">
            <summary>
            Used to select all GraphicCells.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.SetCurrentGraphicObject(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            Used to set the current <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject"/> to renderer.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.BringShapeIntoView(Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Scrolls the grid to bring the selected <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/> into view.
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.WireEvents">
            <summary>
            Hook the events
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.UnWireEvents">
             <summary>
            UnHook the events
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.CellGrid_CellClick(System.Object,Syncfusion.Windows.Forms.CellGrid.Helpers.GridCellClickEventArgs)">
            <summary>
            This method is used to remove the selection from <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/>
            when click on the <see cref="!:GridCell"/>.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.Grid_SelectionChanging(System.Object,Syncfusion.Windows.Forms.CellGrid.Helpers.SelectionChangingEventArgs)">
            <summary>
            Need to clear the selection from GraphicCells when click on GridCell.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.ProcessPointerSelection(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell)">
            <summary>
            Used to select the GraphicCells when pointer pressed [WPF and WF] or released[UWP].
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.MouseButtonEventArgs">MouseButtonEventArgs</see> that contains the event data.</param>
            <param name="cell">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.Model">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionController.SelectedShapes">
            <summary>
            Gets or sets the collection of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> which are selected.
            </summary>
            <value>List of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection</value>      
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController">
            <summary>
            Helper Control which is used to resize the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.#ctor(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController">MoveResizeController</see> class. 
            </summary>
            <param name="graphicModel">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.OnPointerPressed(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when a pointer pressed within this element
            </summary>
            <param name="e"></param>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.OnPointerReleased(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when a pointer released after press action within this element.
            </summary>
            <param name="e"></param>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.OnPointerMoved(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Occurs when a pointer moves while the pointer remains within the hit test area of this element.
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs"/></param>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.OnPointerExited(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,System.EventArgs)">
            <summary>
            Occurs when a pointer leaves the hit test area of this element.
            </summary>
            <param name="e"></param>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.HandleKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl)">
            <summary>
            Used to handle key down operations
            </summary>
            <param name="e"></param>
            <param name="graphicCellControl"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.MoveUsingKey(System.Windows.Forms.PreviewKeyDownEventArgs,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl)">
            <summary>
             Move the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/> when appropriate key is pressed
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <param name="graphicCellControl">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.ResizeUsingKey(System.Windows.Forms.PreviewKeyDownEventArgs,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl)">
            <summary>
            Used to resize the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/> when appropriate key is pressed
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <param name="graphicCellControl">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.Resize(System.Int32,System.Int32,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            To resize the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> with X and Y axis.
            </summary>
            <param name="diffX">X-axis difference</param>
            <param name="diffY">Y-axis difference</param>
            <param name="shape">An instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.Move(System.Int32,System.Int32,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Method to move the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/>.
            </summary>
            <param name="diffX">X-axis difference</param>
            <param name="diffY">Y-axis difference</param>
            <param name="shape">An instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.Resize(System.Drawing.Point,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Helper method to resize the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/>.
            </summary>
            <param name="pointerPos"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.Move(System.Drawing.Point,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Helper method to move the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/>.
            </summary>
            <param name="pointerPos"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.AutoScroller_AutoScrollerValueChanged(System.Object,Syncfusion.Windows.Forms.CellGrid.AutoScrollerValueChangedEventArgs)">
            <summary>
            Used to move/resize the GraphicCell when the element is dragged over auto scroll bounds
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.GetResizeLocation(System.Drawing.Point)">
            <summary>
            Used to get the resize area based on pointer position and also set the 
            cursor based on resize area
            </summary>
            <param name="pointerPos">Pointer position</param>
            <returns><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.ResizeLocation"/></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.CanDrag(System.Drawing.Point,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Used to determines whether the pointer is in correct position
            to start drag/move <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/>
            </summary>
            <param name="pointerPos">Pointer position</param>
            <returns><param name="shape"/><see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.SetCursor(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.CursorsType)">
            <summary>
            Hepler method to set the cursor
            </summary>
            <param name="cursorType"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.CursorsType"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.MoveResizeController"/> class
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.ResizeLocation">
            <summary>
            Used to determines the starting location of resizing.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.CursorsType">
            <summary>
            Enumeration for type of cursors
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell">
            <summary>
            Represents a class that is used to maintain/reuse the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.#ctor(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel)">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/> class with the specified GraphicModel.
            </summary>
            <param name="model">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.SetFocus">
            <summary>
            Used to set the focus to <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.UpdateGraphicCell">
            <summary>
            Used to update the information(Renderer, GraphicCellControl, etc.) of GraphicCell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.UpdateGraphicCell(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl@,System.Boolean)">
            <summary>
            Used to update the the renderer and <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="control"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="isSelected">Sets true, if GraphicCell is selected</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.UpdateRenderer(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl@)">
            <summary>
            Used to update the renderer of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/>
            and unload the UIElement if renderer is changed.
            </summary>
            <param name="graphicObject"><see cref="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.GraphicObject"/></param>
            <param name="control"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.Region">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicRegion"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.Control">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/> which is placed in normal scrollable area
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.FrozenRowControl">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/> which is placed in frozen row area.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.FrozenColumnControl">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/> which is placed in frozen column area
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.FrozenControl">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/> which is placed in non scrollable area.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.Renderer">
            <summary>
            Gets the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> based on cell type.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.GraphicObject">
            <summary>
            Gets or sets the GraphicObject of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.IsEnsured">
            <summary>
            Determines whether the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/> is ensured or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell.Visibility">
            <summary>
            Sets the visibility of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicRegion">
            <summary>
            Determines the regions of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/>.
            (i.e., Where the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/> is placed (Frozen row area, Frozen column area and scrollable area).
            Load the duplicate controls based on the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicRegion"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicRegion.Normal">
            <summary>
            Set if <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/> is placed in normal scrollable area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicRegion.Frozen">
            <summary>
            Set if <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/> is placed in non scrollable area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicRegion.FrozenRow">
            <summary>
            Set if <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/> is placed in Frozen rows area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicRegion.FrozenColumn">
            <summary>
            Set if <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/> is placed in Frozen columns area.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl">
            <summary>
            ContentControl which is used to load the content of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl.#ctor">
            <summary>
            constructor needs to initialize the values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl.GraphicCellControl_PreviewKeyDown(System.Object,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Need to move to next control when tab key was pressed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl.GraphicCellControl_ControlRemoved(System.Object,System.Windows.Forms.ControlEventArgs)">
            <summary>
            Unhooked the triggered events. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl.GraphicCellControl_ControlAdded(System.Object,System.Windows.Forms.ControlEventArgs)">
            <summary>
            GraphicCellControl events are not triggered due to we have added the controls in it so we have to hook the child control
            events to provide selection and resizing support.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Resizing and moving supports are provided from the mouse down of graphic cell control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Resizing and moving supports are provided from the mouse move of graphic cell control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw the border of RichTextBox.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl.Control_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
             <summary>
             Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown"/> attached routed event
             reaches an element in its route that is derived from this class. Implement this
             method to add class handling for this event. 
             </summary>
             <remarks>Occurs when a pointer pressed within this element</remarks>
             <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/>
             that contains the event data. The event data reports that one or more mouse
             buttons were pressed.</param>
            <param name="sender"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl.Control_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove"/> attached event reaches an element in its route that is derived from this
            class. Implement this method to add class handling for this event. 
            </summary>
            <remarks>Occurs when the mouse moves while the pointer remains within the hit test area of this element.</remarks>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that
            contains the event data.</param>
            <param name="sender"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp"/> routed event reaches an element in its route that is derived from this class.
            Implement this method to add class handling for this event. 
            </summary>
            <remarks>Occurs when a pointer released after press action within this element.</remarks>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/>
            that contains the event data. The event data reports that the mouse button was
            released.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl.OnMouseLeave(System.EventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave"/> attached event is raised on
            this element. Implement this method to add class handling for this event.
            </summary>
            <remarks>
            Occurs when a pointer leaves the hit test area of this element.
            </remarks>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that
            contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl.Control_PreviewKeyDown(System.Object,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Invoked when an unhandled Keyboard.KeyDown attached event reaches an element in its route that is derived from this class. 
            Implement this method to add class handling for this event.         
            </summary>
            <remarks>Occurs when a key pressed within the element from this class</remarks>
            <param name="e">The <see cref="!:System.Windows.Input.KeyEventArgs"/> that contains the event data.</param>
            <param name="sender"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl.IsSelected">
            <summary>
            Determines whether the GraphicCellControl is selected or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionControl">
            <summary>
            Represents a control which is used to show the selection on GraphicCellControl
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicsPanel">
            <summary>
            A custom virtualizing panel used to load the graphic cells.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicsPanel.#ctor(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            creates an instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicsPanel"/>
            </summary>
            <param name="grid">Name of the panel</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicsPanel.UpdateGraphicCells">
            <summary>
            Add the graphic cells controls into selection panel.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicsPanel.ArrangeGraphicCells(System.Drawing.Size)">
            <summary>
            Arrange the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/> which are only in viewable area.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicsPanel.ArrangeChartAsGraphiCell(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell,System.Drawing.Size)">
            <summary>
            Used to Arrange the IChart
            </summary>
            <param name="graphicCell"></param>
            <param name="finalSize"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicsPanel.ArrangeGraphicCellControl(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Clip and arrange the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/> into the specified rect.
            </summary>
            <param name="graphicCell"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/></param>
            <param name="control"></param>
            <param name="containerRect"></param>
            <param name="cellRect"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicsPanel.EnsureGraphicCells(System.Drawing.Size)">
            <summary>
            Based on the current viewable area, create/update the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/> and load its content based on celltype. 
            And then measure <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicsPanel.EnsureChartAsGraphicCell(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject,System.Drawing.Size)">
            <summary>
            Create or measure the IChart
            </summary>
            <param name="graphicObject"></param>
            <param name="availableSize"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicsPanel.MeasureGraphicCells(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Rotate and measure the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="graphicCell"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/></param>
            <param name="control"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="shape"><see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicsPanel.CreateGraphicCell(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicRegion)">
            <summary>
            Create a new <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicsPanel.CreateGraphicCell(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicRegion)"/> or recycle it from RecycleGraphicElementsBin
            </summary>
            <param name="obj">GraphicCell</param>
            <returns><param name="region"/></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicsPanel.ReInitializeRichText">
            <summary>
            Need to update RTF text of RichTextBox to fix the issue format not applied for richtextbox while initial loading of spreadsheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicsPanel.Grid">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicsPanel.Container">
            <summary>
            Gets the container from grid.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1">
            <summary>
            Defines the default implementation of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer"/>.
            You can create the custom GraphicCell renderer with this as a base class.
            </summary>
            <typeparam name="T">Element type of the Custom <see cref="N:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells"/></typeparam>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer">
            <summary>
            An interface for a graphic cell renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer.PrepareUIElements(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/> and its content
            </summary>
            <param name="cellContainer"></param>
            <param name="graphicObject"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer.InitializeElement(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Initialize the element of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="cellcontainer"></param>
            <param name="graphicObject"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer.UnloadUIElements(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl)">
            <summary>
            Unload the content of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="uiElement"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer.RaiseSaveChanges">
            <summary>
            Raised when want to save the changes
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer.GetControlValue">
            <summary>
            Used to get the current value from control
            </summary>
            <returns>value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer.ShouldTryToHandleKeyDown(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Used for RendererElement to handle the keydown.
            </summary>
            <param name="e"></param>
            <param name="control"></param>
            <returns>Returns true, if renderer element handles the key down</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer.CurrentRendererElement">
            <summary>
            Gets or sets the rendered element of current <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer.CurrentGraphicObject">
            <summary>
            Gets or sets the current <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer.IsEditable">
            <summary>
            Determines whether the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> is editable or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer.GraphicModel">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.RaiseSaveChanges">
            <summary>
            Raised when want to save the changes
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.GetControlValue">
            <summary>
            Used to get the current value from control
            </summary>
            <returns>value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.ShouldTryToHandleKeyDown(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Used for RendererElement to handle the keydown.
            </summary>
            <param name="e"></param>
            /// <param name="control"></param>
            <returns>Returns true, if renderer element handles the key down</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.PrepareUIElements(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Creates a <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/> and its content
            </summary>
            <param name="cellContainer"></param>
            <param name="graphicObject"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.InitializeElement(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Initialize the element of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="cellcontainer"></param>
            <param name="graphicObject"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.OnInitializeElement(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,`0,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Initialize or update the properties of <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.OnInitializeElement(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,`0,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject)"/> and it s content.
            </summary>
            <param name="container"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="element">content of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="graphicObject"><see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.CreateOrRecycleElement(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Create or recycle the UIElement.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.OnCreateElement(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Creates the new UIElement.
            </summary>
            <param name="obj"><see cref="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.OnCreateElement(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject)"/></param>
            <returns>UIElement</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.WireUIElement(`0)">
            <summary>
            Hook events
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.UnWireUIElement(`0)">
            <summary>
            Unhook events
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.UnloadUIElements(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl)">
            <summary>
            Unload the content of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
            <param name="uiElement"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.Dispose">
            <summary>
            Dispose the live instances of <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.#ctor"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.CurrentRendererElement">
            <summary>
            Gets or sets the rendered element of current <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.CurrentGraphicObject">
            <summary>
            Gets or sets the current <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.IsEditable">
            <summary>
            Determines whether the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> is editable or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1.GraphicModel">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellUIElementBin`1">
            <summary>
            This class implements a cache of UIElement of the given type parameter T. It is used
            by the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererBase`1"/> renderer to recycle UIElement 
            elements for cells that were scrolled out of view and delay unloading of UIElements.
            This reduces the number of times the UIElement needs to be created or unloaded and
            instead only the contents of the UIElement will be reinitialized with cell contents. <para/>
            </summary>
            <typeparam name="T">Type of the Element</typeparam>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellUIElementBin`1.Enqueue(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer,`0)">
            <summary>
            Enqueues the specified UI element.
            </summary>
            <param name="uiElement">The UI element.</param>
            <param name="renderer"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellUIElementBin`1.Dequeue(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Dequeues an UIElement from the specified canvas.
            </summary>
            <param name="renderer">The canvas.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellUIElementBin`1.Item(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.Queue`1"/> for the specified Renderer.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection">
            <summary>
            Collection of IGrapihcCellRenderer
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Component and optionally releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
            <remarks>See the documentation for the System.ComponentModel.Component class and its Dispose member.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Add(System.String,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Add the Renderes to the Renderer dictionary.
            </summary>
            <param name="key"></param>
            <param name="renderer"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Remove(System.String)">
            <summary>
            Remove the Renderer from dictionary for corresponding key vallue
            </summary>
            <param name="key"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection.ContainsKey(System.String)">
            <summary>
            Checks whether the Renderer Dictionary contains the Corresponding Renderer Key.
            </summary>
            <param name="key"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection.ContainsValue(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Cheks whether the Render Dictionary contains the corresponding renderer.
            </summary>
            <param name="cellRenderer"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection.CopyTo(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer[],System.Int32)">
            <summary>
            Copy the Renderer values to Array.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Clear">
            <summary>
            Clears the values in Renderer Dictionary.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an
            <see cref="T:System.Array" />, starting at a particular <see
            cref="T:System.Array" /> index.
            </summary>
            <param name="index">The zero-based index in <paramref name="array" /> at which
            copying begins. </param>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is
            the destination of the elements copied from <see
            cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" />
            must have zero-based indexing. </param>
            <filterpriority>2</filterpriority>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is
            multidimensional.-or- The number of elements in the source <see
            cref="T:System.Collections.ICollection" /> is greater than the available space
            from <paramref name="index" /> to the end of the destination <paramref
            name="array" />.-or-The type of the source <see
            cref="T:System.Collections.ICollection" /> cannot be cast automatically to the
            type of the destination <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />
            is less than zero. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is
            null. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection.GetEnumerator">
            <summary>
            Returns the Enumerator for retriving the values.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Item(System.String)">
            <summary>
            Indexer will return the correspoding renderer for the corresponding Key value.
            </summary>
            <param name="key"></param>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Values">
            <summary>
            Gets the Renderes in the collection
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Keys">
            <summary>
            Get the Key values of Renderes
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection.Count">
            <summary>
            Gets the number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            The number of elements contained in the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see
            cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>
            true if access to the <see cref="T:System.Collections.ICollection" /> is
            synchronized (thread safe); otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>
            An object that can be used to synchronize access to the <see
            cref="T:System.Collections.ICollection" />.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicImageCellRenderer">
            <summary>
            Custom GraphicCellRenderer for <see cref="T:System.Drawing.Image"/> celltype.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicImageCellRenderer.OnCreateElement(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Creates a new <see cref="T:System.Drawing.Image"/>.
            </summary>
            <param name="graphicObject"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject"/></param>
            <returns><see cref="T:System.Drawing.Image"/></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicImageCellRenderer.OnInitializeElement(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Forms.PictureBox,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Initialize or update the properties of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/> and its content.
            </summary>
            <param name="container"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="element"><see cref="T:System.Drawing.Image"/></param>
            <param name="graphicObject"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject"/></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer">
            <summary>
            Custom GraphicCellRenderer for <see cref="T:System.Windows.Forms.RichTextBox"/> celltype.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer.OnCreateElement(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Creates a new <see cref="T:System.Windows.Forms.RichTextBox"/>.
            </summary>
            <param name="graphicObject"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject"/></param>
            <returns><see cref="T:System.Windows.Forms.RichTextBox"/></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer.OnInitializeElement(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Forms.RichTextBox,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject)">
            <summary>
            Initialize or update the properties of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/> and its content.
            </summary>
            <param name="container"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/></param>
            <param name="element"><see cref="T:System.Windows.Forms.RichTextBox"/></param>
            <param name="graphicObject"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer.WireUIElement(System.Windows.Forms.RichTextBox)">
            <summary>
            Hook events
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer.UnWireUIElement(System.Windows.Forms.RichTextBox)">
            <summary>
            Unhook events 
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicRichTextCellRenderer.ShouldTryToHandleKeyDown(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Used for RendererElement to handle the keydown.
            </summary>
            <param name="control">GraphicCellControl</param>
            <param name="e"></param>
            <returns>Returns true, if renderer element handles the key down</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.NamespaceDoc">
            <summary>
            Contains classes which required to load the GraphicCells(Pictures, Charts and TextBoxes) into the Spreadsheet.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel">
            <summary>
            Holds that all information about Graphic Cells and offers many events to notify the actions
            or to modify the behavior of the Graphic cells.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.#ctor(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel">GraphicModel</see> class. 
            </summary>
            <param name="grid">An instance of the <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.SpreadsheetGrid"/></param>        
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.CommitValue(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject,System.Object)">
            <summary>
            Used to commit the edited value into the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/>.
            </summary>
            <param name="graphicObject"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.SetFocus">
            <summary>
            Used to set the focus to <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellControl"/> while switching the ActiveGrid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.OnGraphicCellContextMenuOpening(System.Object,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs)">
             <summary>
            Helper method used to check GraphicCellContextMenuOpening.
             </summary>
             /// <param name="sender">Spreadsheet.ActiveGrid.GraphicModel</param>
             <param name="e">GraphicCellContextMenuOpeningEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.InitializeCellRendererCollection">
            <summary>
            Initialize the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.GetCellRenderer(Syncfusion.XlsIO.ExcelShapeType,Syncfusion.XlsIO.IChart)">
            <summary>
            Used to get the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> based on celltype of <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.GetCellRenderer(Syncfusion.XlsIO.ExcelShapeType,Syncfusion.XlsIO.IChart)"/>
            </summary>
            <param name="shape"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.Is3DChart(Syncfusion.XlsIO.IChart)">
            <summary>
            Check whether the chart type is 3D or not.
            </summary>
            <param name="chart"></param>
            <returns> Return True if chart type is 3D otherwise return as False</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.OnGraphicSelectionChanging(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs)">
            <summary>
            Helper method to trigger the <see cref="E:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionChanging"/> event.
            </summary>
            <param name="args"></param>
            <returns>Returns false, if the selection changing is canceled.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.OnGraphicSelectionChanged(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs)">
            <summary>
            Helper method to trigger the <see cref="E:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionChanged"/> event.
            </summary>
            <param name="args"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.OnUpdateLayout">
            <summary>
            Notification method to update the graphic cells.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.InvalidateGraphicVisual(System.Boolean)">
            <summary>
            Invalidates the visual layout of GraphicCell.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.AddSelectedShapes(Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Adds the selected shapes in the list
            </summary>
            <param name="shape">An instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.ClearSelection">
            <summary>
            Clears the selection from shapes and move the selection to Grid
            </summary>       
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.InvalidateGraphicObjects">
            <summary>
            Invalidates or clears the cached content of GraphicObjects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.Dispose">
            <summary>
            Dispose all the resources used by the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel"/> class
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.CopyPaste">
            <summary>
            Gets or sets the instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController"/> which performs
            the graphic cell cut,copy,paste operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.GraphicObjects">
            <summary>
            Returns the collection of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.GraphicCellRenderers">
            <summary>
            Gets the collection of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.GraphicCellRenderers"/> objects for the
            current grid view method.
            </summary>
            <value>
            Returns the instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellRendererCollection"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.SpreadsheetGrid">
            <summary>
            Gets the instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.SpreadsheetGrid"/> which displays the data in SfSpreadsheet.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.SpreadsheetGrid"/></value>       
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionController">
            <summary>
            Gets the instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionController"/> which handles
            the selection of Graphic Cells .
            </summary>
            <value>
            An instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionController"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.SelectedShapes">
            <summary>
            Gets or sets the collection of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> which are selected .
            </summary>
            <value>
            List of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.Spreadsheet">
            <summary>
            Returns the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.MoveResizeController">
            <summary>
            Returns the move/resize controller of GraphicCells
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.GraphicCellContextMenuOpening">
            <summary>
            This event will occur before opening the context menu for GraphicCells<see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionChanging">
            <summary>
            This event occurs before the selection of GraphicCells to be changed. 
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel.GraphicSelectionChanged">
            <summary>
            This event occurs after the selection of GraphicCells changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject">
            <summary>
            Represents a class that maintains the information about the GraphicObject (Shape, Value and Name).
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject.#ctor(Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl,System.Object)">
            <summary>
            Initializes an instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject"/>.
            </summary>
            <param name="shape">An instance of<see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
            <param name="content">Content of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject.Clone(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Used to Clone the Shapes<see cref="T:Syncfusion.XlsIO.IShape"/>
            </summary>
            <param name="grid"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject.Shape">
            <summary>
            Gets or sets the instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> which holds the information about implementation of Shapes.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/></value>        
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject.Chart">
            <summary>
            Gets or sets the instance of <see cref="T:Syncfusion.XlsIO.IChart"/> which
            represents a chart sheet.
            </summary>
            <value>
            An instance of <see cref="T:Syncfusion.XlsIO.IChart"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject.Content">
            <summary>
            Gets or sets the content of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> which holds the information
            about implementation of Shapes.
            </summary>
            <remarks>
            Contents like TextBox, Image,..
            </remarks>
            <value>
            Content of the <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/>
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicObject.Name">
            <summary>
            Gets or sets the name of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> which holds the information
            about implementation of Shapes..
            </summary>
            <value>Name of the shape</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionChangingEventHandler">
            <summary>
            Event handler to denotes the selection changing of GraphicCell
            </summary>
            <param name="sender"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel"/></param>
            <param name="args"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs"/></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs">
            <summary>
            Provides data for the <see cref="!:GraphicSelectionChanging"/> event
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs.OldSelectedShapes">
            <summary>
            Gets or sets the collection of previously selected shapes.
            </summary>
            <value>The list of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection</value>  
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs.NewSelectedShapes">
            <summary>
            Gets or sets the collection of currently selected shapes.
            </summary>
            <value>The list of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionChangingEventArgs.SelectionTrigger">
            <summary>
            Gets or sets how the selection is triggered in Graphic Cells .
            </summary>
            <value>One of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger"/> that specifies the activation options</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionChangedEventHandler">
            <summary>
            Event handler to denotes the selection changed of GraphicCell
            </summary>
            <param name="sender"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicModel"/></param>
            <param name="args"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs"/></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs">
            <summary>
            Provides data for the <see cref="!:GraphicSelectionChanged"/> event.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs.OldSelectedShapes">
            <summary>
            Gets or sets the collection of previously selected shapes.
            </summary>
            <value>The list of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection</value>       
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs.NewSelectedShapes">
            <summary>
            Gets or sets the collection of currently selected shapes.
            </summary>
            <value>The list of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl"/> collection</value>       
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicSelectionChangedEventArgs.SelectionTrigger">
            <summary>
            Gets or sets how the selection is triggered in Graphic Cells .
            </summary>
            <value>One of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.ActivationTrigger"/> that specifies the activation options</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs">
            <summary>
            Event Handler to Handle the GraphicCellContextMenuOpening Event which can be marked as Handled.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs.#ctor(Syncfusion.XlsIO.IShape)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs">GraphicCellContextMenuOpeningEventArgs</see>class.
            </summary>
            <param name="Shape">An instance of <see cref="T:Syncfusion.XlsIO.IShape"/></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs.GraphicContextMenu">
            <summary>
            Gets or sets the Context Menu items for GraphicCells
            </summary>
            <value>An instance of <see cref="T:System.Windows.Forms.ContextMenu"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs.Shape">
            <summary>
            Gets Shape of the cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IShape"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventHandler">
            <summary>
            Event handler to denote the opening of GraphicCell context menu
            </summary>
            <param name="sender"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCell"/></param>
            <param name="e"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs"/></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellHelper">
            <summary>
            Helper class for GraphicCells related stuffs.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellHelper.AddGraphicChartCellRenderer(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Add <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> for charts, if charts need to be loaded into Spreadsheet
            </summary>
            <param name="spreadsheet">SfSpreadsheet</param>
            <param name="renderer">CellRenderer for Chart</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellHelper.Add3DGraphicChartCellRenderer(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer)">
            <summary>
            Add <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.IGraphicCellRenderer"/> for 3D-charts, if 3D-charts need to be loaded into Spreadsheet
            </summary>
            <param name="spreadsheet">SfSpreadsheet</param>
            <param name="renderer">CellRenderer for 3D-Chart</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellHelper.AddSparklineCellRenderer(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer)">
            <summary>
            Add <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer"/> for sparklines, if sparklines need to be loaded into Spreadsheet
            </summary>
            <param name="spreadsheet">SfSpreadsheet</param>
            <param name="renderer">CellRenderer for Sparkline</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellHelper.AddImage(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex,System.IO.Stream)">
            <summary>
            Add an image to worksheet
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/></param>
            <param name="sheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/></param>
            <param name="rowColIndex">RowColumnIndex where an image is to be placed</param>
            <param name="stream">file stream</param>
            <returns>An instance of <see cref="!:Syncfusion.XlsIO.Implementaion.Shapes.ShapesImpl"/></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellHelper.AddChart(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Add Chart to worksheet
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/></param>
            <param name="sheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/></param>
            <returns>An instance of <see cref="T:Syncfusion.XlsIO.IChart"/></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellHelper.AddTextBox(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex,System.Drawing.Size,System.String)">
            <summary>
            Add TextBox to worksheet
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/></param>
            <param name="worksheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/></param>
            <param name="rowColumnIndex">rowColumnIndex where TextBox is to be placed</param>
            <param name="size">size of the RichTextBox</param>
            <param name="richText">rich text</param>
            <returns>An instance of <see cref="T:Syncfusion.XlsIO.Implementation.Shapes.TextBoxShapeImpl"/></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellHelper.GetShapeHeight(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Used to get the shape height which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellHelper.GetShapeWidth(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Used to get the shape width which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellHelper.GetChartHeight(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IChart)">
            <summary>
            Used to get the chart height which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellHelper.GetChartWidth(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IChart)">
            <summary>
            Used to get the chart width which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellHelper.SetShapeTop(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl,System.Double)">
            <summary>
            Used to set the top position for the shape by adjustinig the DPI values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellHelper.SetShapeLeft(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl,System.Double)">
            <summary>
            Used to set the left position for the shape by adjustinig the DPI values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellHelper.GetShapeLeft(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Used to get the shape left position which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellHelper.GetShapeTop(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl)">
            <summary>
            Used to get the shape top position which is adjusted based on zoom scale.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Converter.NamespaceDoc">
            <summary>
            Conatins classes to convert the XlsIO worksheet into grid.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension">
            <summary>
            Represents a class which holds the functions for importing the worksheets from excel workbook into SpreadsheetGrid.
            </summary>
            <remarks>This class imports the formulas,charts, sparklines, images, merge cells, named ranges, border, background colors, etc., from the worksheet using XlsIO into SpreadsheetGrid.  </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension.SheetFamilyId">
            <summary>
            Sheet family id - This is used to identify a family of grids.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension.ImportExcelToGrid(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.XlsIO.IWorkbook,System.Int32)">
            <summary>
            Imports all worksheets from excel workbook to GridCollection.
            </summary>
            <param name="workbook">The Workbook.</param>
            <param name="spreadsheet"></param>
            <param name="SheetFamilyId"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension.ImportWorksheetToGrid(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Imports single sheets from excel worbook to <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</param>
            <param name="sheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <remarks>Sets the grid lines and headers visibility, importing of rows/columns, merges, images, textboxes  and charts in the workbook.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension.ImportChartToGrid(Syncfusion.XlsIO.IChart,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Import chart sheet into the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>
            </summary>
            <param name="chart">IChart</param>
            <param name="grid">SpreadsheetGrid</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension.ImportImagesToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Import pictures into the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>
            </summary>
            <param name="sheet">IWorksheet</param>
            <param name="grid">SpreadsheetGrid</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension.ImportTextBoxesToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Import textboxes into the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>
            </summary>
            <param name="sheet">IWorksheet</param>
            <param name="grid">SpreadsheetGrid</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension.ImportChartsToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Import charts into the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>
            </summary>
            <param name="sheet">IWorksheet</param>
            <param name="grid">SpreadsheetGrid</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension.ImportRowsAndColumns(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Used to import the row and column information(row/column count, height, width). 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension.ResetHeightAndWidth(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Used to reset the row height and column width of the Grid.
            </summary>
            <param name="grid"></param>
            <param name="sheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension.GetHeight(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.Double)">
            <summary>
            Returns the adjusted height based on dpi value and zoom factor.
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="height">Actual height</param>
            <returns>Adjusted height.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension.GetWidth(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.Double)">
            <summary>
            Returns the adjusted width based on dpi value and zoom factor.
            </summary>
            <param name="grid">SpreadsheetGrid</param>
            <param name="height">Actual width</param>
            <returns>Adjusted width.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension.ImportNamedRange(Syncfusion.Windows.Forms.CellGrid.FormulaEngine,Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Copies the named range from Workbook into formula engine.
            </summary>
            <param name="engine">Specified FormmulaEngine</param>
            <param name="workbook">Specified workbook , which need to import named ranges</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension.ImportMergesToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Copies merged ranges into grid.
            </summary>
            <param name="sheet">Destination worksheet.</param>
            <param name="grid">Source grid.</param>       
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension.GetFormat(System.String)">
            <summary>
            convert the excel format into grid supports formats.
            </summary>
            <param name="format">The format.</param>
            <returns>The format</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Converter.SpreadsheetImportExtension.ConvertExcelBorder(Syncfusion.XlsIO.ExcelLineStyle,System.Drawing.Color)">
            <summary>
            Converts excel border into Pen.
            </summary>
            <param name="lineStyle">Border to convert.</param>
            <param name="color">Border color</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.NamespaceDoc">
            <summary>
            Contains classes and enumerators that simplify the programming with predefined methods and events 
            for common functionalities.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper">
            <summary>
            Represents a helper class which performs the operations of conditional formatting rules in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <remarks>Conditional Formatting rules includes HighlightCellRules, IconSets, DataBars, ColorScales etc.,</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.ApplyHighlightedCellsRules(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn,System.String,Syncfusion.XlsIO.IConditionalFormat,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Boolean@,System.Boolean@)">
            <summary>
            Render the hightlighted cell rules conditional formatting.
            </summary>
            <param name="value">Cell value</param>
            <param name="excelConditionalFormat">Excel conditional formats for hightlighted rules</param>
            <param name="address">Its indicates the conditional formatting range</param>
            <param name="isBackgroundApplied">If true, background is applied for the cell</param>
            <param name="isStyleApplied">If true, the excel style is already is created.</param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.ApplyColorScales(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IColorScale,System.String,System.String,System.Boolean@)">
            <summary>
            Apply the color scales based on getting IColorScale from XlsIO.
            </summary>
            <param name="column">Current column</param>
            <param name="colorScale">Color Scale object from XlsIO</param>
            <param name="value">Cell value</param>
            <param name="formatRange">The selected range for conditional formats</param>
            <param name="isStyleApplied">If True, ExcelStyle is applied</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.GetVisualBrush(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IIconSet,System.String,System.Double)">
            <summary>
            Get the visual brush for icon sets.
            </summary>
            <param name="column">Current column</param>
            <param name="iconSet">Icon Set object</param>
            <param name="formatRange">Icon Sets format range</param>
            <param name="cellValue">Current cell value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.GetVisualBrushOnReverseOrder(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IIconSet,System.String,System.Double)">
            <summary>
            Gete the visual brush for the icons Sets reverse order.
            </summary>
            <param name="column">Current column</param>
            <param name="iconSet">Icon Set object</param>
            <param name="formatRange">Icon Sets format range</param>
            <param name="cellValue">Current cell value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.GetDataBar(System.Collections.Generic.IEnumerable{Syncfusion.XlsIO.IConditionalFormat},System.String,Syncfusion.XlsIO.IDataBar@,System.String@)">
            <summary>
            Get the dataBar.
            </summary>
            <param name="dataBarFormats">collection of databars formats</param>
            <param name="address">databar format ranges</param>
            <param name="dataBar">data bar object</param>
            <param name="dataBarRange">databar range</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.GetIconSets(System.Collections.Generic.IEnumerable{Syncfusion.XlsIO.IConditionalFormat},System.String,Syncfusion.XlsIO.IIconSet@,System.String@)">
            <summary>
            Get the IconSets
            </summary>
            <param name="iconSetFormats">Collection of iconsets formats</param>
            <param name="address">iconset format ranges</param>
            <param name="iconSets">icon sets object</param>
            <param name="iconSetsRange">icon sets range</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.GetColorScales(System.Collections.Generic.IEnumerable{Syncfusion.XlsIO.IConditionalFormat},System.String,Syncfusion.XlsIO.IColorScale@,System.String@)">
            <summary>
            Get the ColorScales
            </summary>
            <param name="colorScalesFormats">Collection of color scales formats</param>
            <param name="address">Color scales format ranges</param>
            <param name="colorScales">color scale object</param>
            <param name="colorScaleRange">color scales range</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.UpdateExcelStyle(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Updates the excel Style from ExcelRange.CellStyle if ExcelStyle is null and ExcelRange.HasStyle. Otherwise create the detault style.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.GetIconSetIcon(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IIconSet,System.String,System.String)">
            <summary>
            Get the iconset icon.
            </summary>
            <param name="column">Current column</param>
            <param name="iconSet">Icon set object</param>
            <param name="value">Current cell value</param>
            <param name="formatRange">Icon set format range</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.GetCellValue(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn,System.String,System.Double@)">
            <summary>
            Get the cell value double.
            </summary>
            <param name="value">Cell value</param>
            <param name="result">Return the double value if parsed.</param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.TryGetPointValue(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IConditionValue,System.String,System.Double@)">
            <summary>
            Get the conditional value for different format types for conditional formats.
            </summary>
            <param name="column">Indicates the current column</param>
            <param name="condition">Conditional value for conditional format objects (DataBar, IconSets, ColorScales)</param>
            <param name="range">Indicates the selected range for conditional format</param>
            <param name="result">Returns the value if present in the condition object. Otherwise returns 0</param>
            <returns>Returns true if value present in the condition object otherwise returns false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.TryGetMinValue(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.String,System.Double@)">
            <summary>
            Get the min value from the selected range for conditional formats
            </summary>
            <param name="spreadsheetGrid">SpreadsheetGrid</param>
            <param name="range">Indicates the selected range</param>
            <param name="result">Returns the min value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.TryGetMaxValue(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.String,System.Double@)">
            <summary>
            Get the max value from the selected range for conditional formats
            </summary>
            <param name="spreadsheetGrid">SpreadsheetGrid</param>
            <param name="range">Indicates the selected range</param>
            <param name="result">Returns the max value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.EvaluateColorScaleColor(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn,System.String,Syncfusion.XlsIO.IColorScale,System.Double)">
            <summary>
            Evaluate the color scales color
            </summary>
            <param name="column">Current SpreadsheetColumn</param>
            <param name="range">Indicates the format range when selected</param>
            <param name="colorScale">Color Scale object from XlsIO</param>
            <param name="cellValue">Cell value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.GetGradientColor(System.Double,Syncfusion.XlsIO.IDataBar,System.Boolean)">
            <summary>
            Get the gradient color for DataBar
            </summary>
            <param name="axisBarPosition">Which indicates the negative bar axis position</param>
            <param name="dataBar"></param>
            <param name="isNegativeBar">Indicates whether its negative bar or not.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.EvaluateDataBarLength(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IDataBar,System.Double,System.Drawing.Rectangle,System.String,System.Double@,System.Boolean@)">
            <summary>
            Evaluate the data bar length based on min and max value by format types
            </summary>
            <param name="dataBar"></param>
            <param name="value">Its denote cell value.</param>
            <param name="dataBarRect">Indicates the cell rect</param>
            <param name="axisBarPosition">Which indicates the negative bar axis position</param>
            <param name="isNegativeBar">Indicates whether its negative bar or not.</param>
            <param name="column"></param>
            <param name="formatRange"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.ResetFormattingRangeMinMaxValue(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            Reset the max and min value of formatting range. Because while cell value changed need to updated max or min based on updated value, so reset it and which is calculated in EvaluateDataBarLength
            </summary>
            <param name="formatRange">Which indicates selected cells range</param>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.GetIconSetConditionValue(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn,Syncfusion.XlsIO.IConditionValue,System.String,System.Boolean@)">
            <summary>
            Get the condition value and check the operator of condition
            </summary>
            <param name="column">Current column</param>
            <param name="condition">Icon Set condition</param>
            <param name="formatRange">Icon set format range</param>
            <param name="isGreaterThan">If true, the operator is greaterThan, else greater than equalto</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ConditionalFormatHelper.EvaluateColor(System.Double,System.Double,System.Double,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Evaluate the color for color scales.
            </summary>
            <param name="cellValue">Indicates the cell value</param>
            <param name="minValue">Indicates the min value in the selected range</param>
            <param name="maxValue">Indicates the max value in the selected range</param>
            <param name="lowestColor">Indicates the loweset color that applied for color scales range</param>
            <param name="highestColor">Indicates the highest color that applied for color scales range</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper">
            <summary>
            Making an optimized formula calculation -> Initially formulas are parsed in engine and saved in ParsedFormulas collection.
            Now engine will add precedent cells and dependent cells as per the parsed formula. While editing any cell , now look at the precendent cells.
            If it is available in the hashtable , all the dependencies will be recalculated by using the method RecalculateDependencyCells.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.OpenWorkbookInZipArchive(System.IO.Stream,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Open file stream in ZipArchiveExt
            All the elements are saved in the collection of xmlItems.
            CalcChainXml holds the collection of formula cells only
            SpreadsheetCalcChain holds the collection of the formula cells
            Workbook.xml holds the collection of sheets,defined names, etc.
            </summary>
            <param name="fileStream"></param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.ReadCalcChainXMLElements(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            After 2003 excel version , excel has a CalcChain xml, that maintains the information about formula cells. So we could get formula cells only from that xml.
            Parse the formula and stored in list for future usage. While calculating specified cell, the parsed formula read from list.
            </summary>
            <param name="xml">CalcChain text</param>
            <param name="sfSpreadsheet">owner</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.ParseXLSFormatFormulas(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Parse xls format formula cells. 
            Xls format don't have CalcChain xml so we couldn't able to find which are formula cells.
            Read used cells to avoid unwanted iteration
            </summary>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.ParseCalcChainFormulas(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.String,System.String)">
            <summary>
            Formula Parsing in grid engine
            </summary>
            <param name="sfSpreadsheet">Owner</param>
            <param name="grid"></param>
            <param name="cellRef">Cell reference</param>
            <param name="excelRange">Specified excel range</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.OnEndEdit(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell)">
            <summary>
            If a cell is formula cell , that needs to be parsed into engine and compute the value.
            In before editing, if the cell contains formula, previously parsed formula need to be removed from ParsedFormulas list.
            </summary>
            <param name="grid"></param>
            <param name="cell"></param>
            <param name="spreadsheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.OnCommitCellValue(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.String,System.Int32,System.Int32)">
            <summary>
            Compute value for a specified cell
            While entering formula in a cell,it should be calculated.
            </summary>
            <param name="grid"></param>
            <param name="currentCell">Specified Cell</param>
            <param name="row"></param>
            <param name="col"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.RefreshDependencyCells(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            Recalculate dependency cells.
            RecalculateDependencyCells() will be recalculated for dependency cells. 
            </summary>
            <param name="grid"></param>
            <param name="precedentCell">PrecedentCell</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.RecalculateDependencyCells(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            When a precedent cell value changed, that dependency cells should be recalculated. 
            </summary>
            <param name="grid"></param>
            <param name="precedentCell">PrecedentCell</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.RefreshCell(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.XlsIO.Implementation.WorksheetImpl,System.String,System.Int32,System.Int32)">
            <summary>
            Refresh cell will updated dependency cells when it's as precedent cell
            it parse and compute value when it's as formula cell
            It will compute value if it already parsed in engine
            </summary>
            <param name="grid"></param>
            <param name="sfSpreadsheet"></param>
            <param name="worksheet"></param>
            <param name="cell"></param>
            <param name="row"></param>
            <param name="col"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.OnPaste(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            On paste formula cells thats need to be parsed and compute the cell value.
            </summary>
            <param name="grid"></param>
            <param name="gridRangeInfo"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.OnFillSeries(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            On performing fill series, formula cells need parse and compute the cell value.
            </summary>
            <param name="grid"></param>
            <param name="gridRangeInfo"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.ParseandComputeRange(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Parse and compute value for specified range.
            Iterate the range and parse and computed value for formula cells
            </summary>
            <param name="grid"></param>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.Parse(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.WorksheetImpl,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Parse a specified formula and stored in parsed formulas list for feature usage
            </summary>
            <param name="grid"></param>
            <param name="worksheet"></param>
            <param name="cell"></param>
            <param name="key"></param>
            <param name="formula"></param>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.ParseandCompute(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.WorksheetImpl,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Parse the specified range formulas and stored in parsed formula list.
            Compute an every formula cell and stored in specified worksheet.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.ComputeValue(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.Implementation.WorksheetImpl,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Compute formula cell and stored in specified worksheet.
            </summary>
            <param name="grid"></param>
            <param name="worksheet"></param>
            <param name="cell"></param>
            <param name="parsedFormula"></param>
            <param name="row"></param>
            <param name="col"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.MarkDirtyCells(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            Mark dirty cells for recalculation.
            When a precedent cell value updated, The dependency cells of the precedent cell should be recalcuated.
            Listed dirty cell collections in a list. this will helps to avoid unwanted calculation. 
            Example-> B2 formula => =A1+B1, A1 => 5 , B1=> C1+D1. When update the A1 cell value, in OnGetDependent methos will try 
            to calculate the value of the C1+D1. This is unwanted calculation. We can get the value from directly from worksheet.
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="grid"></param>
            <param name="precedentCell"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.UpdateDirtyCells(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Listed dirty cells of the specified precedent cell.
            Mark dirty cells for recalculation.
            When a precedent cell value updated, The dependency cells of the precedent cell should be recalcuated.
            Listed dirty cell collections in a list. this will helps to avoid unwanted calculation. 
            Example-> B2 formula => =A1+B1, A1 => 5 , B1=> C1+D1. When update the A1 cell value, in OnGetDependent method will try 
            to calculate the value of the C1+D1. This is unwanted calculation. We can get the value from directly from worksheet.
            </summary>
            <param name="grid"></param>
            <param name="dirtyCells"></param>
            <param name="precedentCell"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.OnGetDependentCellValue(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.Int32,System.Int32)">
            <summary>
            GetDependentCellValue
            Gets the depedent cell of the specified cell index.
            If value already computed, it can get form calculated list
            </summary>
            <param name="spreadsheet">Owner</param>
            <param name="grid">Grid of the specified range</param>
            <param name="rowIndex">Specified RowIndex</param>
            <param name="colIndex">Specified ColIndex</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.SetCalculatedValue(Syncfusion.XlsIO.Implementation.WorksheetImpl,System.Int32,System.Int32,System.String)">
            <summary>
            Set the formatted text excel range. When applied number formats, the calculated value should be converted as per the format.
            </summary>
            <param name="row">Row index of the specified range</param>
            <param name="col">Col index of the specified range</param>
            <param name="mWorksheet">Worksheet of the specified range</param>
            <param name="calculatedValue">CalculatedValue</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.ReCalculateAllFormulaCells(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.Boolean)">
            <summary>
            To re-parse or recalculate all the formula cells in a workbook after insert/delete the rows and columns.
            </summary>
            <param name="grid"></param>
            <param name="needToCompute"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.UpdateInsertDeleteFormulaCells(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Boolean)">
            <summary>
            Calculte the dependentcells of selected deleted range precedent cells.
            </summary>
            <param name="grid"></param>
            <param name="gridrange"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.GetDependentCellData(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.String,System.String@,System.Int32@,System.Int32@,System.String@,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid@)">
            <summary>
            Get the below particular of the specific cell.
            </summary>
            <param name="grid"></param>
            <param name="cell"></param>
            <param name="cellsheet"></param>
            <param name="cellrow"></param>
            <param name="cellcol"></param>
            <param name="cellkeytext"></param>
            <param name="dependentcell_grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.RecursiveSetCalculatedValue(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.Collections.Hashtable,System.Collections.Hashtable,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Recursively set the display text of chain formula cells of precedent cells.
            </summary>
            <param name="grid"></param>
            <param name="precedentcells"></param>
            <param name="cell"></param>
            <param name="gridrange"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.UpdateDependentPrecedentCells(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Collections.Hashtable,System.Boolean,System.Boolean)">
            <summary>
            Update the precedent cells and dependent cells collection after delete/insert rows/columns 
            </summary>
            <param name="grid">spreadsheetgrid</param>
            <param name="gridrange">insert/delete range</param>
            <param name="precedentcells"></param>
            <param name="isPrecedentCells"></param>
            <param name="isDelete"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.OnUpdateColumn(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs)">
            <summary>
            For hug workbook, the formulas can't be parsed immediately. so resolve this problem,  ReverseParsing is proposed.
            Here view layout formula cells parsed initially. suppose if any formula cell depend in out of view, that will be parsed immediately.
            </summary>
            <param name="args"></param>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.ReverseRecursiveParsing(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.String)">
            <summary>
            If initial parsing didn't completed,Viewlayout cells will be parsed immediately. Suppose if cell referred out of viewlayout , that will be parsed by using reverse recursive parsing.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.GetGrid(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Gets Grid from Grid collection
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="sheetName">specified name</param>
            <returns>Specified grid</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.SetWorksheetNames(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Set worksheets name in a collection
            </summary>
            <param name="xml"></param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.OnInsertingNameRange(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Update error formulas after inserted a name or updated name.
            Normally name error may occur due to incorrect name reference. So while inserting a new name or updating existing name we should ensure this.
            </summary>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.OnDeletingNameRange(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Recalculate the dependency cells of the deleted name range
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="referToRange"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.RecalculateEditedCells(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Recalculate edited cells. 
            For a hug sheet, initial formula parsing does not get complete immediately. So edited cells has been stored and once completed the parsing 
            we should recalculate all the dependency cells of the edited cells.
            </summary>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.GetExcelExportType(Syncfusion.XlsIO.IRange)">
            <summary>
            Returns excel export type of the specified range
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.HasFormula(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32)">
            <summary>
            returns specified cell is formula or not? 
            </summary>
            <param name="worksheet"></param>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.OnDisposingOldInstance(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            OnDisposingOldInstance, all the formula related variables should be initialized.
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.RegisterIntoFormulaEngine(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.String,System.Int32)">
            <summary>
            Register grid into formula engine.
            </summary>
            <param name="grid"></param>
            <param name="name"></param>
            <param name="sheetFamilyId"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.UnregisterFromFormulaEngine(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Unrigister old instance from formula engine
            </summary>
            <param name="sfSpreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.OnSheetDeleting(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Removing deleted sheet parsed formulas from the ParsedFormula list. If not cleared, it will be maintained unnecessarily.
            </summary>
            <param name="sheetRef">Delete sheet key</param>
            <param name="spreadsheet">Owner</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.GetCellReference(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.Int32,System.Int32)">
            <summary>
            Get the Cell reference of the specified grid.
            </summary>
            <param name="grid"></param>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.FormulaHelper.GetSheetToken(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.Boolean)">
            <summary>
            Get sheet token of the specified grid
            </summary>
            <param name="grid"></param>
            <param name="canThrowException"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZipArchiveExt">
            <summary>
            Class for opening an excel file and convert its elements as list.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZipArchiveExt.XMLItems">
            <summary>
            Holds the collection of workbook and CalcChain xml.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZipArchiveExt.GetAllRelation">
            <summary>
            Read all the elements from excel and stored in list
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.CustomXmlPartExt">
            <summary>
            Class used to create a custom xml and store formula cells index for optimized parsing.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.CustomXmlPartExt.SaveFormulaCellsInXML(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Save all the formula cells in XML list with sheet cell reference. When re-open the workbook by XlsIO this will help to get all the formula cells for parsing.
            </summary>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.CustomXmlPartExt.CreateXMLFile(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.Xml.Linq.XElement)">
            <summary>
            Create an custom XML file in the XlsIO workbook. To get the formula cells only.
            </summary>
            <param name="formulaCells"></param>
            <param name="sfSpreadsheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.CustomXmlPartExt.ReadCalcChainXMLElements(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.IO.Stream)">
            <summary>
            CalcChain.xml support not available in XlsIO. So we have maintained formula cells manually and stored as Custom.Xml.
            Whenever reopen by SfSpreadsheet, formula cells can read from Custom.xml.
            </summary>
            <param name="sfSpreadsheet"></param>
            <param name="mStream"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper">
            <summary>
            Helper class to convert grid range to excel range, and excel range to grid range.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.ConvertToGlobalWorkbookRange(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Converts the grid range to workbook range (Address Global = "'Sheet1'!$A$1").
            </summary>
            <param name="range">Current grid range.</param>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</param>
            <returns>Global Address of the Workbook.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.ConvertExcelRangeToGridRange(Syncfusion.XlsIO.IRange)">
            <summary>
            Coverts the excel range to the corresponding grid range.
            </summary>
            <param name="range">Excel range which is to be converted to grid range.</param>
            <returns>Grid range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.ConvertExcelRangeToGridRange(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Convert the excel range to the corresponding grid range types either of rows/columns/table/cells.
            </summary>
            <param name="range">Excel range to be converted as grid range.</param>
            <param name="grid">Active instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</param>
            <returns>Grid range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.ConvertExcelRangeToGridRange(System.String)">
            <summary>
            Convert to grid range from the excel range as string.
            </summary>
            <param name="range">excel range by string</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.ConvertExcelRangeToGridRangeList(System.String)">
            <summary>
            Convert to GridRangeInfoList from the range as string. 
            Use this, if string contains multiple ranges which are separated by comma(,).
            </summary>
            <param name="ranges">excel range by string</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.RowIndex(System.String)">
            <summary>
            Parse the rowIndex.
            </summary>
            <param name="s">row index</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.ColumnIndex(System.String)">
            <summary>
            Parse the column index
            </summary>
            <param name="s">column index</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.ConvertGridRangeToExcelRange(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Converts the Grid range to the corresponding Excel range.
            </summary>
            <param name="gridRangeInfo">Grid range to be converted as excel range.</param>
            <param name="grid">Active instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</param>
            <returns>Converted excel range in string format.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.IsRangeContainsHyperlink(Syncfusion.Windows.Forms.CellGrid.GridRangeInfoList,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Determines whether the hyperlink is present in the selected ranges of the active SpreadsheetGrid.
            </summary>
            <param name="selectedranges">Ranges which are selected.</param>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</param>
            <returns>True, if the selected range contains hyperlink; otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.IsRangeContainsComment(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Determines whether the range contains comment or not.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</param>
            <param name="range">Ranges which are selected.</param>
            <returns>True, if the selected range contains comment; otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.GetExpandRange(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Gets the Expanded range when the column/row/table is selected in active SpreadsheetGrid.
            </summary>
            <param name="range">Range to be expanded.</param>
            <param name="grid">Current instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</param>
            <returns>Expanded grid range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.GetConditionalFormats(Syncfusion.XlsIO.IRange)">
            <summary>
            Get the conditional formats from the range.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.GetCellValue(Syncfusion.XlsIO.IRange)">
            <summary>
            Get the cell value
            </summary>
            <param name="excelRange">Excel range</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.UpdateRowHeight(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            To autofit a cell if it contains wrap text
            </summary>
            <param name="range">range</param>
            <param name="grid">active grid</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.CanSelectUnLockedCells(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Select Unlocked cells
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.CanSelectLockedCells(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is select locked cells
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.CanFormatRows(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Format rows
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.CanFormatColumns(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Format columns
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.CanFormatCells(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Format cells
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.CanDeleteRows(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Delete rows
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.CanDeleteColumns(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Delete columns
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.CanInsertRows(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Insert rows
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.CanInsertColumns(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Insert columns
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.CanEditObjects(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns true when protect sheet option is Edit objects
            </summary>
            <param name="sheet">current sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.CanInsertHyperlink(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Returns True when protect sheet option is insert hyperlink and and cell should be unlocked.
            </summary>
            <param name="sheet"></param>
            <param name="spreadsheet"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.GridExcelHelper.HasSelectedShapes(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Return true when graphics objects are selected or worksheet gets null.
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.MessageBoxType">
            <summary>
            Different types of message dialogs like in excel.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.Win32API">
            <summary>
            Used to retrieve information regarding input keys
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.Win32API.IsKeyDown(System.Windows.Forms.Keys)">
            <summary>
            Used to check whether specific key is pressed or not
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetQueryRangeEventHandler">
            <summary>
            Represents the method that will handle the QueryRange event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name=" e">A <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs">
            <summary>
            Represents the class which holds the properties of the QueryRange event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.#ctor(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex,System.String,System.Object,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.IStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs">SpreadsheetQueryRangeEventArgs</see> class. 
            </summary>
            <param name="cell">Coordinates of a cell.</param>
            <param name="celltype">Type of cell.</param>
            <param name="value">The value of the cell.</param>
            <param name="sheet">The current worksheet.</param>
            <param name="range">The XlsIO range of the sheet.</param>
            <param name="style">A style description for the specified range.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.Cell">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/> of cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.CellValue">
            <summary>
            Gets or sets the value of the specified cell.
            </summary>
            <value>Value of cell.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.CellType">
            <summary>
            Gets or sets the type of the cell.
            </summary>
            <value>Cell Type.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.Worksheet">
            <summary>
            Gets the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> of the cell.
            </summary>
            <value>An instance of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.ExcelRange">
            <summary>
            Gets the <see cref="T:Syncfusion.XlsIO.IRange"/> of the cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IRange"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs.ExcelStyle">
            <summary>
            Gets the <see cref="T:Syncfusion.XlsIO.IStyle"/> of the cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IStyle"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopyingEventHandler">
            <summary>
            Represents the method that will handle the Copying event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name=" e">A <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs">
            <summary>
            Represents the class which holds the properties of SpreadsheetCopying event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs.#ctor(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Boolean,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs">SpreadsheetCopyingEventArgs</see> class. 
            </summary>
            <param name="range">Copying range.</param>
            <param name="iscut">If True, cut operation, else copy operation.</param>
            <param name="grid">Current grid.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs.Range">
            <summary>
            Gets or sets the range to be copied.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> class.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs.IsCut">
            <summary>
            Gets or sets the boolean flag for copy/cut operation.
            </summary>
            <value>If true, cut operation;else copy operation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopyingEventArgs.Grid">
            <summary>
            Gets the active grid in SfSpreadsheet.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopiedEventHandler">
            <summary>
            Represents the method that will handle the Copied event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name=" e">A <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs">
            <summary>
            Represents the class which holds the properties of SpreadsheetCopied event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs.#ctor(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Boolean,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs">SpreadsheetCopiedEventArgs</see> class. 
            </summary>
            <param name="range">Copied range.</param>
            <param name="iscut">If True, cut operation, else copy operation.</param>
            <param name="grid">Current grid.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs.Range">
            <summary>
            Gets the Copied range.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> class.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs.IsCut">
            <summary>
            Gets the boolean flag for copy/cut operation.
            </summary>
            <value>If true, cut operation;else copy operation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetCopiedEventArgs.Grid">
            <summary>
            Gets  the active grid in SfSpreadsheet.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastingEventHandler">
            <summary>
            Represents the method that will handle the Pasting event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name=" e">A <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastingEventArgs"/> that contains the event data.</param>    
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastingEventArgs">
            <summary>
            Represents the class which holds the properties of SpreadsheetPasting event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastingEventArgs.#ctor(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Boolean,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.Windows.Forms.Spreadsheet.PasteOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastingEventArgs">SpreadsheetPastingEventArgs</see> class. 
            </summary>
            <param name="range">Copied range.</param>
            <param name="range1">Pasted range.</param>
            <param name="iscut">If True, cut operation, else copy operation.</param>
            <param name="grid">Current grid.</param>
            <param name="option">One of the enum option <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.PasteOptions"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastingEventArgs.SourceRange">
            <summary>
            Gets  the Copied range.
            </summary>
            <value>A <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastingEventArgs.TargetRange">
            <summary>
            Gets or sets the Pasted range.
            </summary>
            <value>A <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastingEventArgs.IsCut">
            <summary>
            Gets or sets the boolean flag for copy/cut operation.
            </summary>
            <value>If true, cut operation;else copy operation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastingEventArgs.Grid">
            <summary>
            Gets  the active grid in SfSpreadsheet.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastingEventArgs.PasteOption">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.PasteOptions"/> enum for paste operation .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.PasteOptions"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastedEventHandler">
            <summary>
            Represents the method that will handle the Pasted event. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name=" e">A <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastedEventArgs">
            <summary>
            Represents the class which holds the properties of SpreadsheetPasted event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastedEventArgs.#ctor(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Boolean,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.Windows.Forms.Spreadsheet.PasteOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastedEventArgs">SpreadsheetPastedEventArgs</see> class. 
            </summary>
            <param name="range">Copied range.</param>
            <param name="range1">Pasted range.</param>
            <param name="iscut">If True, cut operation; else copy operation.</param>
            <param name="grid">Current grid.</param>
            <param name="option">One of the enum option <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.PasteOptions"/>.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastedEventArgs.SourceRange">
            <summary>
            Gets  the Copied range.
            </summary>
            <value>A <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastedEventArgs.TargetRange">
            <summary>
            Gets  the Pasted range.
            </summary>
            <value>A <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridRangeInfo"/> object.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastedEventArgs.IsCut">
            <summary>
            Gets  the boolean flag for copy/cut operation.
            </summary>
            <value>If true, cut operation;else copy operation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastedEventArgs.Grid">
            <summary>
            Gets  the active grid in SfSpreadsheet.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPastedEventArgs.PasteOption">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.PasteOptions"/> enum for paste operation .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.PasteOptions"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookCreatingEventHandler">
            <summary>
            Represents a method that will handle the WorkbookCreating Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookCreatingEventArgs">WorkbookCreatingEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookCreatingEventArgs">
            <summary>
            Represents the class which holds the properties of WorkbookCreating event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookCreatingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookCreatingEventArgs">WorkbookCreatingEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookCreatingEventArgs.SheetCount">
            <summary>
            Gets the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> count of the workbook.
            </summary>
            <value>The worksheet count.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetRemovingEventHandler">
            <summary>
            Represents the method that will handle the WorksheetRemoving Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetRemovingEventArgs">WorksheetRemovingEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetRemovingEventArgs">
            <summary>
            Represents the class which holds the properties of WorksheetRemoving event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetRemovingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetRemovingEventArgs">WorksheetRemovingEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetRemovingEventArgs.SheetName">
            <summary>
            Gets the name of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> that is to be removed.
            </summary>
            <value>Name of the Worksheet.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetRemovingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to stop removing the sheet or else proceed further to remove the sheet.
            </summary>
            <value><see langword="true"/> if the removal of the worksheet should be stopped; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetRemovedEventHandler">
            <summary>
            Represents a method that will handle the WorksheetRemoved Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetRemovedEventArgs">WorksheetRemovedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetRemovedEventArgs">
            <summary>
            Represents the class which holds the properties of WorksheetRemoved event
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetRemovedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetRemovedEventArgs">WorksheetRemovedEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetRemovedEventArgs.SheetName">
            <summary>
            Gets the name of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> that is removed.
            </summary>
            <value>Name of the Worksheet.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetAddingEventHandler">
            <summary>
            Represents a method that will handle the WorksheetAdding Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetAddingEventArgs">WorksheetAddingEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetAddingEventArgs">
            <summary>
            Represents the class which holds the properties of WorksheetAdding Event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetAddingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetAddingEventArgs">WorksheetAddingEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetAddingEventArgs.SheetName">
            <summary>
            Gets or sets the name of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> that is going to be added.
            </summary>
            <value>Name of the sheet.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetAddingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to stop adding the sheet or else proceed further to add the sheet.
            </summary>
            <value><see langword="true"/> if the insertion of sheet has to be stopped ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetAddedEventHandler">
            <summary>
            Represents a method that will handle the WorksheetAdded Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetAddedEventArgs">WorksheetAddedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetAddedEventArgs">
            <summary>
            Represents a class which holds the properties of WorksheetAdded event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetAddedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetAddedEventArgs">WorksheetAddedEventArgs</see> class. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetAddedEventArgs.SheetName">
            <summary>
            Gets the name of newly added <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.
            </summary>
            <value>Name of the sheet.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookLoadedEventHandler">
            <summary>
            Represents a method that will handle the WorkbookLoaded Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookLoadedEventArgs">WorkbookLoadedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookLoadedEventArgs">
            <summary>
            Represents a class which holds the properties of WorkbookLoaded event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookLoadedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookLoadedEventArgs">WorkbookLoadedEventArgs</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookLoadedEventArgs.#ctor(Syncfusion.XlsIO.IWorkbook,System.Collections.Generic.List{Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookLoadedEventArgs">WorkbookLoadedEventArgs</see> class. 
            </summary>
            <param name="workbook">An instance of <see cref="T:Syncfusion.XlsIO.IWorkbook"/>.</param>
            <param name="gridCollection">Collection of Grid.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookLoadedEventArgs.Workbook">
            <summary>
            Gets the instance of <see cref="T:Syncfusion.XlsIO.IWorkbook"/> .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IWorkbook"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookLoadedEventArgs.GridCollection">
            <summary>
            Gets the collection of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/> .
            </summary>
            <value>A collection.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookUnloadedEventHandler">
            <summary>
            Represents a method that will handle the WorkbookUnloaded event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookUnloadedEventArgs">WorkbookUnloadedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookUnloadedEventArgs">
            <summary>
            Represents a class which holds the properties of WorkbookUnloaded event
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookUnloadedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookUnloadedEventArgs">WorkbookUnloadedEventArgs</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookUnloadedEventArgs.#ctor(Syncfusion.XlsIO.IWorkbook,System.Collections.Generic.List{Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookUnloadedEventArgs">WorkbookUnloadedEventArgs</see> class. 
            </summary>
            <param name="workbook"><see cref="T:Syncfusion.XlsIO.IWorkbook"/>.</param>
            <param name="gridCollection">Collection of SpreadsheetGrid.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookUnloadedEventArgs.Workbook">
            <summary>
            Gets the instance of <see cref="T:Syncfusion.XlsIO.IWorkbook"/> .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IWorkbook"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorkbookUnloadedEventArgs.GridCollection">
            <summary>
            Gets the collection of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/> .
            </summary>
            <value>A collection.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomTrigger">
            <summary>
            Specifies the trigger options in Zoom.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomTrigger.MouseWheel">
            <summary>
            Zoom using Mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomTrigger.Touch">
            <summary>
            Zoom using Touch mode.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomTrigger.Program">
            <summary>
            Zoom through programmatically.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangingEventHandler">
            <summary>
            Represents a method that will handle the ZoomFactorChanging Event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangingEventArgs">ZoomFactorChangingEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangingEventArgs">
            <summary>
            Represents the class which holds the properties of ZoomFactorChanging event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangingEventArgs.#ctor(System.String,System.Int32,Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomTrigger)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangingEventArgs">ZoomFactorChangingEventArgs</see> class. 
            </summary>
            <param name="sheetName">Name of the sheet.</param>
            <param name="zoomfactor">Size to zoom.</param>
            <param name="trigger">One of the enum options to trigger.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangingEventArgs.SheetName">
            <summary>
            Gets the name of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> that is to be zoom in or out.
            </summary>
            <value>Name of the sheet.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangingEventArgs.ZoomFactor">
            <summary>
            Gets the zoom factor.
            </summary>
            <value>Size to zoom.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangingEventArgs.ZoomTrigger">
            <summary>
            Gets the trigger option to zoom in or out.
            </summary>
            <value>One of the enum option to trigger.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangedEventHandler">
            <summary>
            Represents the method that will handle the ZoomFactorChanged event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangedEventArgs">ZoomFactorChangedEventArgs</see> that contains the event data.</param>
            <remarks></remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangedEventArgs">
            <summary>
            Represents the class which holds the properties of ZoomFactorChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangedEventArgs.#ctor(System.String,System.Int32,Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomTrigger)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangedEventArgs">ZoomFactorChangedEventArgs</see> class. 
            </summary>
            <param name="sheetName">Name of the sheet.</param>
            <param name="zoomfactor">Size to zoom.</param>
            <param name="trigger">One of the enum options to trigger.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangedEventArgs.SheetName">
            <summary>
            Gets the name of the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> that zooms in or out.
            </summary>
            <value>Name of the sheet.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangedEventArgs.ZoomFactor">
            <summary>
            Gets the zoom factor.
            </summary>
            <value>Size to zoom.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomFactorChangedEventArgs.ZoomTrigger">
            <summary>
            Gets the trigger option to zoom in or out.
            </summary>
            <value>One of the enum option to trigger.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.CommandExecutionEventArgs">
            <summary>
            Represents the class which provides data for the <see cref="!:CommandExecuted"/> and <see cref="!:CommandExecuting"/> events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.CommandExecutionEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CommandExecutionEventArgs class with the command name.
            </summary>
            <param name="commandName">Command Name</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Helpers.CommandExecutionEventArgs.CommandName">
            <summary>
            Gets or sets the name of the command.
            </summary>
            <value>Name of the command.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.CommandExecutionEventHandler">
            <summary>
            Represents the method that will handle the <see cref="!:CommandExecuted"/> and <see cref="!:CommandExecuting"/> events. 
            </summary>
            <param name="sender">The source of the event</param>
            <param name="args">A <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.CommandExecutionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.TableFormatHelper">
            <summary>
            TableFormats are applied based on the specific table style type such as lighttablestyles,darktablestyles,mediumtablestyles.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.TableFormatHelper.ClearStyles(Syncfusion.XlsIO.IStyle)">
            <summary>
            Clear the existing table style before apply the new table style.
            </summary>
            <param name="TableStyle">Where we have maintain the table format style</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.TableFormatHelper.ApplyTableHeaderStyle(Syncfusion.XlsIO.IListObject,Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Applies the header style to cell for excel version 2013.
            </summary>
            <param name="table">The Table.</param>
            <param name="excelStyle">The CellStyle from XlsIO range.</param>
            <param name="excelRange">current excel range</param>
            <param name="tablestyle">The Tablestyle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.TableFormatHelper.ApplyTableHeaderStyle1(Syncfusion.XlsIO.IListObject,Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Applies the header style to cell for Excel Version below 2013.
            </summary>
            <param name="table">The Table.</param>
            <param name="excelStyle">The CellStyle from XlsIO range.</param>
            <param name="excelRange">current excel range</param>
            <param name="tablestyle">The Tablestyle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.TableFormatHelper.ApplyTableContentStyle(Syncfusion.XlsIO.IListObject,Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Table format content styles such as table format background,border applied based on associeated table format name.
            </summary>
            <param name="table">IListObject from the XlsIO.</param>
            <param name="excelStyle">XlsIO cell style.</param>
            <param name="excelRange">Current XlsIO cell range</param>
            <param name="tablestyle">TableFormatStyle</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.TableFormatHelper.ApplyTableContentBorders(Syncfusion.XlsIO.TableBuiltInStyles,Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.IListObject,System.Int32)">
            <summary>
            Apply the table content borders based on the table style name and border style was changed in different cases such
            banded rows,banded columns,first column,last column.
            </summary>
            <param name="tableStyle">where we have maintain the table style based on the table style name.</param>
            <param name="excelStyle">XlsIO cell style.</param>
            <param name="excelRange">XlsIO cell range.</param>
            <param name="table">list object from the xlsio</param>
            <param name="row">used whether it is even or odd.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.TableFormatHelper.GetTableContentForeground(Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Gets the table content foreground for Excel version 2013.
            </summary>
            <param name="tablestyle">Table style name like in MSExcel.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.TableFormatHelper.GetTableContentForeground1(Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Gets the table content foreground  for Excel version below 2010.
            </summary>
            <param name="tablestyle">Table style name like in MSExcel.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.TableFormatHelper.GetTableContentBackGround(Syncfusion.XlsIO.TableBuiltInStyles,System.Drawing.Color@,System.Drawing.Color@,System.Drawing.Color@,System.Boolean@)">
            <summary>
            Gets the table content background for Excel version 2013.
            </summary>
            <param name="tablestyle">The Tablestyle.</param>
            <param name="firstBackgroundColor">First color of the background.</param>
            <param name="secondBackgroundColor">Color of the second background.</param>
            <param name="headerBackgroundColor">Color for the header background.</param>
            <param name="entireRow">if set to <c>true</c> apply bockground to entire row.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.TableFormatHelper.GetTableContentBackGround1(Syncfusion.XlsIO.TableBuiltInStyles,System.Drawing.Color@,System.Drawing.Color@,System.Drawing.Color@,System.Boolean@)">
            <summary>
            Gets the table content background for Excel version below 2010.
            </summary>
            <param name="tablestyle">The Tablestyle.</param>
            <param name="firstBackgroundColor">First color of the background.</param>
            <param name="secondBackgroundColor">Color of the second background.</param>
            <param name="headerBackgroundColor">Color for the header background.</param>
            <param name="entireRow">if set to <c>true</c> apply bockground to entire row.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryAutoFitColumnCommand">
            <summary>
            Class which holds the memory transaction history of AutofitColumn Command.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommand">
            <summary>
            A class that encapsulates a command to be executed at a later point in time.
            </summary>
            <remarks>
            The <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)"/> method is overriden in specialized command classes and
            performs the command that is saved in this command.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase">
            <summary>
            An abstract class that encapsulates a command to be executed at a later point in time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase.SfSpreadsheet"/>.
            </summary>
            <param name="mode">Current transaction mode.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase.Description">
            <summary>
            Gets a description for the command.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase.Range">
            <summary>
            Gets  the specified excel range for performing undo/redo action
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase.SfSpreadsheet">
            <summary>
            Gets  the instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase.SfSpreadsheet"/> .
            </summary>
            <value>An instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase.SfSpreadsheet"/>.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommand.#ctor">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommand"/>.
            </overload>
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommand"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommand"/> and associates it with a <see cref="!:GridModel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommand.Pop(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
            Returns a reference to the latest command in the stack and removes the command from the stack.
            </summary>
            <returns>A reference to the latest <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase"/> command.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommand.SetDescription(System.String)">
            <summary>
            Changes the description of this command.
            </summary>
            <param name="value">The new description text.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommand.Description">
            <override/>
            <summary>Gets a description for the command.</summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryAutoFitColumnCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryAutoFitColumnCommand">HistoryAutoFitColumnCommand</see> class. 
            </summary>
            <param name="range">Range to autofit.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
            <param name="isAutofit">True or False.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryAutoFitColumnCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Execute the command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryAutoFitRowHeightCommand">
            <summary>
            Class which holds the memory transaction history of AutofitRow Command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryAutoFitRowHeightCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryAutoFitRowHeightCommand">HistoryAutoFitRowHeightCommand</see> class. 
            </summary>
            <param name="range">Range to autofit.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
            <param name="isAutofit">True or False .</param>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryAutoFitRowHeightCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryAutoFitRowHeightCommand.IsAutofit">
            <summary>
            Gets or sets whether is auto fit row or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryAutoFitRowHeightCommand.OldHeight">
            <summary>
            Holds the row height for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryAutoFitRowHeightCommand.IsBadFontHeight">
            <summary>
            Gets or sets the whether the height of the row has changed or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBoldCommand">
            <summary>
            Class which holds the memory transaction history of Bold Command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBoldCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBoldCommand">HistoryBoldCommand</see> class. 
            </summary>
            <param name="range">Range in which bold style is applied.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBoldCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBoldCommand.IsBold">
            <summary>
            Gets/Sets the bold value for Memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBorderCommand">
            <summary>
            Class which holds the memory transaction history of Borders command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBorderCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBorderCommand">HistoryBorderCommand</see> class. 
            </summary>
            <param name="range">Range in which the style applied. </param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBorderCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBorderCommand.TopBorderColor">
            <summary>
            Holds the value of the TopBorderColor
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBorderCommand.LeftBorderColor">
            <summary>
            Holds the value of the LeftBorderColor
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBorderCommand.RightBorderColor">
            <summary>
            Holds the value of the RightBorderColor
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBorderCommand.BottomBorderColor">
            <summary>
            Holds the value of the BottomBorderColor
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBorderCommand.RightBorderStyle">
            <summary>
            Holds the Value of the RightBorderStyle for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBorderCommand.BottomBorderStyle">
            <summary>
            Holds the Value of the BottomBorderStyle for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBorderCommand.LeftBorderStyle">
            <summary>
            Holds the Value of the LeftBorderStyle for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryBorderCommand.TopBorderStyle">
            <summary>
            Holds the Value of the TopBorderStyle for memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellCommentCommand">
            <summary>
            Class which holds the memory transaction history of CellComment Command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellCommentCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellCommentCommand">HistoryCellCommentCommand</see> class. 
            </summary>
            <param name="range">Range in which comment added.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellCommentCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellCommentCommand.CellComment">
            <summary>
            Holds the value of the Cell comment for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellCommentCommand.CommentText">
            <summary>
            Holds the current comment text
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellCommentCommand.CommentWidth">
            <summary>
            Holds the value of the width of the comment window
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellCommentCommand.CommentHeight">
            <summary>
            Holds the value of the height of the comment window
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellValueCommand">
            <summary>
            Class which holds the memory transaction history of CellValue Command. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellValueCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellValueCommand">HistoryCellValueCommand</see> class. 
            </summary>
            <param name="range">Range which contains the value.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
            <param name="parsedFormula">Text which contains formula.</param>
            <param name="cellRef">Address of the cell.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellValueCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellValueCommand.FloatingCellRanges">
            <summary>
            Need to invalidate the floating cell ranges when undo/redo.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellValueCommand.OldValue">
            <summary>
            Holds the current text for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellValueCommand.ParsedFormula">
            <summary>
            Holds the Parsed formula for reuse
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCellValueCommand.CellRef">
            <summary>
            Holds the value CellRef.It contains => sheet+CellIndex.Its used for addding/removing the parsed formula from list.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCalculatedValueCommand">
            <summary>
            Class which is used to perform history transaction with the calculated values of a formula cells.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCalculatedValueCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryClearCommand">
            <summary>
            Class which holds the memory transaction history of Clear Command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryClearCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryClearCommand">HistoryClearCommand</see> class. 
            </summary>
            <param name="sourceRange">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryClearCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryClipBoardCommand">
            <summary>
            Class which holds the memory transaction history of ClipBoard Command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryClipBoardCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryClipBoardCommand">HistoryClipBoardCommand</see> class. 
            </summary>
            <param name="sourceRange">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryClipBoardCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryClipBoardCommand.GridRange">
            <summary>
            Holds the value of the Source grid range
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryConditionalFormatCommand">
            <summary>
            Class which holds the memory transaction history of ConditionalFormat Command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryConditionalFormatCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryConditionalFormatCommand">HistoryConditionalFormatCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryConditionalFormatCommand.UpdateConditionalFormats">
            <summary>
            Update the conditional format transaction
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryConditionalFormatCommand.UpdateHightlightCellsRules(Syncfusion.XlsIO.IConditionalFormat,Syncfusion.XlsIO.IConditionalFormat)">
            <summary>
            Update the highlight cells rules properties to XlsIO.
            </summary>
            <param name="condition1"></param>
            <param name="condition"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryConditionalFormatCommand.UpdateDataBars(Syncfusion.XlsIO.IConditionalFormat,Syncfusion.XlsIO.IConditionalFormat)">
            <summary>
            Update the databar properties to XlsIO.
            </summary>
            <param name="condition1"></param>
            <param name="condition"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryConditionalFormatCommand.UpdateIconSets(Syncfusion.XlsIO.IConditionalFormat,Syncfusion.XlsIO.IConditionalFormat)">
            <summary>
            Update the IconSets properties to XlsIO
            </summary>
            <param name="condition1"></param>
            <param name="condition"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryConditionalFormatCommand.UpdateColorScales(Syncfusion.XlsIO.IConditionalFormat,Syncfusion.XlsIO.IConditionalFormat)">
            <summary>
            Set the color scales to XlsIO
            </summary>
            <param name="condition1"></param>
            <param name="condition"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryConditionalFormatCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryConditionalFormatCommand.ConditionalFormats">
            <summary>
            Store the conditional formats from the range.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCopyFillSeriesCommand">
            <summary>
            Class which holds the memory transaction history of  CopyFillSeries Command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCopyFillSeriesCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCopyFillSeriesCommand">HistoryCopyFillSeriesCommand</see> class. 
            </summary>
            <param name="sourceRange">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCopyFillSeriesCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCopyFillSeriesCommand.GridRange">
            <summary>
            Holds the value of the Source grid range
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDataValidationCommand">
            <summary>
             Class which holds the memory transaction history of DataValidation Command.
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDataValidationCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDataValidationCommand">HistoryDataValidationCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDataValidationCommand.CloneValidationRule(Syncfusion.XlsIO.IDataValidation,Syncfusion.XlsIO.IDataValidation)">
            <summary>
            Clone validation rule
            </summary>
            <param name="sourceObject"></param>
            <param name="destinationObject"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDataValidationCommand.UpdateDataValidation">
            <summary>
            validation transaction
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDataValidationCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDataValidationCommand.DataValidationWrapper">
            <summary>
            Holds the validation rule
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDefaultWidthCommand">
            <summary>
            Class which holds the memory transaction history of Default width command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDefaultWidthCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDefaultWidthCommand">HistoryDefaultWidthCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDefaultWidthCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDefaultWidthCommand.DefaultWidth">
            <summary>
            Gets/Sets the DefaultWidth value for Memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDeleteCommand">
            <summary/>
             Class which holds the memory transaction history of Delete Command.
            <summary/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDeleteCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDeleteCommand">HistoryDeleteCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
            <param name="rangeType">Type of grid range such as either rows,columns or Table., etc.,</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDeleteCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDeleteCommand.RangeType">
            <summary>
            Holds the Range type for memory trasaction
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryDeleteCommand.GridRange">
            <summary>
            Holds the grid range for memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFontCommand">
            <summary>
             Class which holds the memory transaction history of Font Command.
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFontCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFontCommand">HistoryFontCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFontCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFontCommand.ExistingFontFamily">
            <summary>
            Holds the font family for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFontCommand.ExistingFontSize">
            <summary>
            Holds the font size for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFontCommand.ExistingForeColor">
            <summary>
            Holds the font color memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatCommand">
            <summary>
             Class which holds the memory transaction history of Format Command.
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatCommand">HistoryFormatCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatCommand.IndentLevel">
            <summary>
            Holds the value of the indent level for memory transaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatCommand.ExistingBackColor">
            <summary>
            Gets or sets the value indicating the background color of the range.
            </summary>
            <value>Background color of the range.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatTableCommand">
            <summary>
            Class which holds the memory transaction history of format table.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatTableCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.XlsIO.IRange,System.Boolean,Syncfusion.XlsIO.TableBuiltInStyles,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatTableCommand">HistoryFormatTableCommand</see> class. 
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
            <param name="range">Excel range.</param>
            <param name="isNewTable"> True or False.</param>
            <param name="builtInStyles">One of the option in Excel 2007 table built in styles.</param>
            <param name="removeTable"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatTableCommand.UpdateTableStyles(System.Boolean,Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Store the table style for memory transaction
            </summary>
            <param name="isNewTable"></param>
            <param name="builtInStyles"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatTableCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatTableCommand.RemoveTable">
            <summary>
            Gets/Sets the values to find removeTable or not?.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatTableCommand.IsNewTable">
            <summary>
            Gets/Sets the values to find isNewTable or not?.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatTableCommand.RowIndex">
            <summary>
            Gets/Sets Row index of the specified excel range
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatTableCommand.ColumnIndex">
            <summary>
            Gets/Sets the Col index of the specified excel range
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatTableCommand.GridRanges">
            <summary>
            Gets/Sets the gird ranges of the specified grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryFormatTableCommand.BuiltInStyles">
             <summary>
            Applied table styles 
             </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHAlignCommand">
            <summary>
             Class which holds the memory transaction history of Horizontal Alignment command.
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHAlignCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHAlignCommand">HistoryHAlignCommand</see> class. 
            </summary>
            <param name="range">Excel range</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHAlignCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHAlignCommand.HorizontalAlignment">
            <summary>
            Holds the horizontal alignment for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHyperlinkCommand">
            <summary>
             Class which holds memory transaction history of Hyperlink Command.
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHyperlinkCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHyperlinkCommand">HistoryHyperlinkCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHyperlinkCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHyperlinkCommand.IsEmpty">
            <summary>
            Holds the value to find out the empty link or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHyperlinkCommand.RowIndex">
            <summary>
            Gets/Sets the Row index of the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHyperlinkCommand.ColumnIndex">
            <summary>
            Gets/Sets the Col index of the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHyperlinkCommand.GridRanges">
            <summary>
            Grid ranges of the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHyperlinkCommand.Type">
            <summary>
            Gets/Sets the type of the hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHyperlinkCommand.Address">
            <summary>
            Gets/Sets the hyperlink address
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHyperlinkCommand.TextToDisplay">
            <summary>
            Gets/Sets the display text of the hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHyperlinkCommand.IsEmptyCell">
            <summary>
            Gets/Sets the value to find out in empty cell or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryInsertCommand">
            <summary>
             Class which holds  memory transaction history of Insert Command.
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryInsertCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryInsertCommand">HistoryInsertCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryInsertCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryInsertCommand">HistoryInsertCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
            <param name="rangeType">Type of grid range either rows, cols or table,etc.,</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryInsertCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryInsertCommand.Cell">
            <summary>
            Holds the value of the current cell for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryInsertCommand.RangeType">
            <summary>
            Holds the value of the range type for transaction
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryInsertCommand.GridRange">
            <summary>
            Holds the GridRange for memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryItalicCommand">
            <summary>
             Class which holds the memory transaction history of Italic Command.
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryItalicCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryItalicCommand">HistoryItalicCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryItalicCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryItalicCommand.IsItalic">
            <summary>
            Holds the value of the italic for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryLockCellCommand">
            <summary>
            Class which holds the memory transaction history of Lock Cell command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryLockCellCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryLockCellCommand">HistoryLockCellCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryLockCellCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryLockCellCommand.IsLocked">
            <summary>
            Gets/Sets the bold value for Memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.NamespaceDoc">
            <summary>
            Contains classes which are required to perform undo and redo.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager">
            <summary>
            Represents class which manages the undo and redo operations in <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager">HistoryManager</see> class. 
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.SfSpreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.Pop(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
            Pop the commands from the respective stack.
            </summary>
            <param name="mode">One of the transaction mode(either Undo or Redo).</param>
            <returns>The command at the top of the respective stack.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.Push(Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase)">
            <overload>
            Pushes a command onto the undo stack.
            </overload>
            <summary>
            Pushes a command onto the undo stack.
            </summary>
            <param name="cmd">The <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase"/> with undo information.</param>
            <remarks>
            When the spredsheet performing an <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.Undo"/>, the command will be pushed onto the redo stack. Otherwise, 
            commands are pushed onto the undo stack.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)">
            <summary>
            Starts a transaction that combines several subsequent commands into one transaction.
            </summary>
            <param name="s">A description for the transaction. This text can appear for example as "Undo" information in a menu 
            to give feedback to the user about command on the undo stack.
            </param>
            <remarks>
            is switched into a special mode where new commands will not be pushed onto the undo stack. Instead all new commands
            will be pushed into the current <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand"/> instance. 
            <para/>
            When you call <see>
                <cref>CommitTrans</cref>
            </see>
                , the current <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand"/>  command will be pushed
            onto the undo stack and the <see>
                <cref>SpreadsheetCommandManager</cref>
            </see>
                will switch back to its default behavior
            where new commands are pushed onto the undo stack.
            <para/>
            When you call <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/>, an internal counter will increase but no additional <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand"/> is
            created. Only once you call <see>
                <cref>CommitTrans</cref>
            </see>
                as many times as you have called <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/> will the
            transaction will be considered complete and the current <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand"/> command will be pushed
            onto the undo stack.
            <para/>
            That means nested transactions are supported. But when you <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.Undo"/> or <see>
                <cref>Rollback</cref>
            </see>
                a transaction,
            all nested transaction will be treated as one single transaction.
            </remarks> 
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.CommitTransaction">
            <summary>
            Ends a transaction that was started with a previous <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/> call.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/> for discussion about transaction in a Spreadsheet.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.CommitTransaction(Syncfusion.XlsIO.IRange[])">
            <summary>
            Ends a transaction that was started with a previous <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/> call.
            </summary>
            <remarks>
            See <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.BeginTransaction(System.String)"/> for discussion about transaction in a SpreadsheetCommandStack.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.GetExcelRanges">
            <summary>
            Gets the excel ranges
            </summary>
            <returns />
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.Undo">
            <summary>
            Execute the latest command from the undo stack.
            </summary>
            <remarks>
            The redo stack will be cleared.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.Redo">
            <summary>
            Execute the latest command from the redo stack.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
            Pop the command form specified stack.
            </summary>
            <param name="mode">One of the transaction mode(either undo/redo).</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.Reset">
            <summary>
            Removes or clears the commands from undo and redo stack.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.OnkeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Occurs when keyDown on SpreadsheetGrid or VisualContainer
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.Dispose">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager">HistoryManager class.</see>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.TransactionName">
            <summary>
            Gets the name of current transaction. If no transaction is in progress, then returns string.Empty. 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.InTransaction">
            <summary>
            Gets/Sets the value to transcation mode.
            If group of the transaction pushed into stack, It should be in enable and initialize once all the commands pushed into stack.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.Enabled">
            <summary>
            Gets or sets the value for enabling the command stack. By default it has been in disabled mode.
            When enabled this, command actions are saved in undo/redo stack for memory transaction.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.SfSpreadsheet">
             <summary>
            Owner of the command stack
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.RedoStack">
            <summary>
            Gets the stack with redo commands.
            </summary>
            <value>A collection of commands.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.UndoStack">
            <summary>
            Gets the stack with undo commands .
            </summary>
            <value>A collection of commands.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode">
            <summary>
            Defines the transaction mode in SfSpreadsheet.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode.Undo">
            <summary>
            SfSpreadsheet is currently in process of undoing commands. <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.Undo"/> will set initialize and reset this state.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode.Redo">
            <summary>
            SfSpreadsheet is currently in process of redoing commands. <see cref="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManager.Redo"/> will set initialize and reset this state.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManagerHelper">
            <summary>
            Represents a helper class which maintains the excel range which is to restore the transaction.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManagerHelper.IsValidRange(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32)">
            <summary>
            Gets the value find out the specified row/column has been used or not?.
            </summary>
            <param name="worksheet"></param>
            <param name="row"></param>
            <param name="col"></param>
            <returns>If true , edited cell should push into stack</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManagerHelper.GetTab(System.String,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Gets the specified TabItem 
            </summary>
            <param name="name"></param>
            <param name="sfSpreadsheet"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManagerHelper.OnDeletingRange(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Removes the table from the selected range in the Worksheet.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManagerHelper.PushClipBoardCommands(Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Push all the commands in memory stack for restore transaction.While handling CutCopyPaste, all the commands need to be restored when applying redo the trasaction.
            </summary>
            <param name="command"></param>
            <param name="range"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManagerHelper.OnRowColDeleting(Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.Windows.Forms.CellGrid.GridRangeInfoType)">
            <summary>
            Push all the commands in memory stack for restore transaction.
            When handling delete row/column, all the commands need to be restored when applying redo the trasaction.
            </summary>
            <param name="command">Transaction Command</param>
            <param name="range">ExcelRange</param>
            <param name="rangeType">RangeType</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManagerHelper.UpdateGridSelectionFrame(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.Collections.Generic.IEnumerable{Syncfusion.Windows.Forms.CellGrid.GridRangeInfo},System.Int32,System.Int32)">
            <summary>
            Update Grid selection frame while performing undo/redo action
            </summary>
            <param name="sfSpreadsheet">Owner</param>
            <param name="grid">specified grid</param>
            <param name="gridRanges">selected ranges</param>
            <param name="rowIndex">current cell row</param>
            <param name="columnIndex">current cell col</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManagerHelper.SelectionIsCurrentCell(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Check grid selection is current cell or not?.
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryManagerHelper.SetGridFocus(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Set focus to grid. When navigating from one sheet into another sheet, current grid can't be focused. So we have to set focus manually.
            </summary>
            <param name="sfSpreadsheet">Owner</param>
            <param name="grid">Current grid</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryMergeCommand">
            <summary>
             Class which holds the memory transaction history of Merge command.
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryMergeCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.Collections.Generic.List{Syncfusion.Windows.Forms.CellGrid.GridRangeInfo},System.Collections.Generic.List{Syncfusion.Windows.Forms.CellGrid.CoveredCellInfo},Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryMergeCommand">HistoryMergeCommand</see> class. 
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
            <param name="existingCoveredCells">Existing covered cells in the SpreadsheetGrid.</param>
            <param name="coveredCells">Current covered cell range.</param>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</param>
            <param name="sourceGrid">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryMergeCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryMergeCommand.CoverdCells">
            <summary>
            Collection of the current cover ranges
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryMergeCommand.ExistingCoveredCells">
            <summary>
            Collection of the existing cover range of the specified range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryMergeCommand.Grid">
            <summary>
            Grid of the specified action
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryMergeCommand.SourceGrid">
            <summary>
            Parent Grid
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryNameRangeCommand">
            <summary>
             Class which holds the memory transaction history of NameRange command.
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryNameRangeCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.Windows.Forms.Spreadsheet.NameRange,Syncfusion.Windows.Forms.Spreadsheet.NameRange)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryNameRangeCommand">HistoryNameRangeCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
            <param name="nameRange">Current NameRange.</param>
            <param name="oldNameRange">Existing NameRange.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryNameRangeCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryStrikethroughCommand">
            <summary>
             Class which holds the memory transaction history of Strikethrough Command.
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryStrikethroughCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryStrikethroughCommand">HistoryStrikethroughCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryStrikethroughCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryStrikethroughCommand.IsStrikethrough">
            <summary>
            Holds the value of the strikethrough for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHiddenCellCommand">
            <summary>
            Class which holds the memory transaction history of Hidden Cell command.
            </summary> 
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHiddenCellCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHiddenCellCommand">HistoryHiddenCellCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHiddenCellCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryHiddenCellCommand.IsHidden">
            <summary>
            Gets/Sets the bold value for Memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryNumberFormatCommand">
            <summary>
            Class which holds the memory transaction history of NumberFormat command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryNumberFormatCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryNumberFormatCommand">HistoryNumberFormatCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryNumberFormatCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryNumberFormatCommand.NumberFormat">
            <summary>
            Holds the number format for memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryOutlinesCommand">
            <summary>
            Class which holds the memory transaction history of Outlines command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryOutlinesCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryOutlinesCommand">HistoryOutlinesCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryOutlinesCommand.OutlineWrappers">
            <summary>
            Collection of outlines.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryOutlinesCommand.CopyOutlinesFromCollection(Syncfusion.XlsIO.Implementation.WorksheetImpl,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Copy outlines from OutlineWrappers into worksheet OutlineWrappers.
            </summary>
            <param name="sheet"></param>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryOutlinesCommand.ClearOutlines(Syncfusion.XlsIO.Implementation.WorksheetImpl)">
            <summary>
            Clear the outlines.
            </summary>
            <param name="sheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryOutlinesCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.Outlines">
            <summary>
            Represents a class which holds the properties related with Outlines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.Outlines.Range">
            <summary>
            Gets or sets the value indicating the specified excel range.
            </summary>
            <value>Specified excel range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.Outlines.GroupBy">
            <summary>
            Gets or sets the value indicating the type of group for outlines .
            </summary>
            <value>One of the Grouping Option(either by rows or by columns).</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.Outlines.IsCollapsed">
            <summary>
            Gets or sets a value indicating whether the outlines can be collapsed or not .
            </summary>
            <value><see langword="true"/> if the outlines can be collapsed ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryResizeColumnCommand">
            <summary>
             Class which holds the memory transaction history of ResizeColumn command.
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryResizeColumnCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryResizeColumnCommand">HistoryResizeColumnCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryResizeColumnCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryResizeColumnCommand.ColumnWidth">
            <summary>
            Holds the value of the column width memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryResizeRowCommand">
            <summary>
             Class which holds the memory transaction history of ResizeRow command.
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryResizeRowCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryResizeRowCommand">HistoryResizeRowCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryResizeRowCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryResizeRowCommand.RowHeight">
            <summary>
            Holds the row height for memory transaction
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryResizeRowCommand.IsBadFontHeight">
            <summary>
            Gets or sets the whether the height of the row has changed or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryStyleCommand">
            <summary>
             Class which holds the memory transaction history of Style command.
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryStyleCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryStyleCommand">HistoryStyleCommand</see> class. 
            </summary>
            <param name="range">Specified range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryStyleCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryStyleCommand.CellStyle">
            <summary>
            Holds the cell style for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand">
            <summary>
            Holds a collection of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase"/> objects that should all be executed together as one command
            when the <see>
                <cref>SpreadsheetCommandManager.Undo</cref>
            </see>
                or <see>
                    <cref>SpreadsheetCommandManager.Redo</cref>
                </see>
                of a grid <see>
                    <cref>SpreadsheetCommandManager.CommandStack</cref>
                </see>
                is called.
            </summary>
            <remarks>
            The <see>
                <cref>SpreadsheetCommandManager.BeginTrans</cref>
            </see>
                of a <see>
                    <cref>SpreadsheetCommandManager.CommandStack</cref>
                </see>
                object will create
            a <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand"/> object and redirect subsequent commands into the current <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand"/> object 
            until <see>
                <cref>SpreadsheetCommandManager.CommitTrans</cref>
            </see>
                is called.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.XlsIO.IRange[],Syncfusion.Windows.Forms.CellGrid.GridCurrentCell)">
            <overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand"/> object and associates it with a <see>
                <cref>SpreadsheetCommandManager</cref>
            </see>
                .
            </overload>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand"/> object and associates it with a <see>
                <cref>SpreadsheetCommandManager</cref>
            </see>
                .
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
            <param name="ranges">Specified excel ranges.</param>
            <param name="currentCell">Current cell in SpreadsheetGrid.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.XlsIO.IRange[],System.Int32,System.Int32,Syncfusion.Windows.Forms.CellGrid.GridColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand">HistoryTransactionCommand</see> class. 
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
            <param name="ranges">Specified excel ranges.</param>
            <param name="row">Row index of the current cell.</param>
            <param name="col">Column index of the current cell.</param>
            <param name="column">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridColumn"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand"/> object and associates it with a <see>
                <cref>SpreadsheetCommandManager</cref>
            </see>
                and sets a description text.
            </summary>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
            <param name="description">Description of the commands.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Current transaction mode.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand.Push(Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase)">
            <summary>
            Adds a new command to the current transaction.
            </summary>
            <param name="cmd">The Command for the transaction.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand.Peek">
            <summary>
            Returns a reference to the latest command in the stack and leaves the command on the stack.
            </summary>
            <returns>A reference to the latest <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase"/> command.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand.Pop(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
            Returns a reference to the latest command in the stack and removes the command from the stack.
            </summary>
            <returns>A reference to the latest <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryCommandBase"/> command.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand.Description">
            <override/>
            <summary>Gets a description for the command.</summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryTransactionCommand.Stack">
            <summary>
            Gets a reference to the stack with all commands that belong to this transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryUnderlineCommand">
            <summary>
            Class which holds the memory transaction history of Underline command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryUnderlineCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryUnderlineCommand">HistoryUnderlineCommand</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryUnderlineCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryUnderlineCommand.IsUnderline">
            <summary>
            Holds the value of the underline for memory transaction.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryVAlignCommand">
            <summary>
            Class which holds the memory transaction history of Vertical Alignment command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryVAlignCommand.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryVAlignCommand">HistoryVAlignCommand</see> class. 
            </summary>
            <param name="range">Specific excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryVAlignCommand.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryVAlignCommand.VerticalAlignment">
            <summary>
            Holds the vertical alignment for memory transaction
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryWrapText">
            <summary>
             Class which holds the memory transaction history of WrapText command
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryWrapText.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryWrapText">HistoryWrapText</see> class. 
            </summary>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryWrapText.#ctor(System.Boolean,Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryWrapText">HistoryWrapText</see> class. 
            </summary>
            <param name="isWrapText">True or False .</param>
            <param name="range">Specified excel range.</param>
            <param name="sfSpreadsheet">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryWrapText.Execute(Syncfusion.Windows.Forms.Spreadsheet.History.CommandMode)">
            <summary>
             Executes the transaction command in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="mode">Holds the current process in SfSpreadsheet(either undo or redo).</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.History.HistoryWrapText.IsWrapText">
            <summary>
            Holds the value of the wrap text
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Resources.NamespaceDoc">
            <summary>
            Contains classes which are used to localize the strings used in the Spreadsheet.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Resources.GridResourceWrapper">
            <summary>
            Represents a class which is used to maintain all the culture-specific data related with ribbon menu items and dialog boxes.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR">
            <summary>
            Represents a class which contains resource manager that provides convenient access to culture-specific
            resources at run time.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.ReleaseResources">
            <summary>
            Realease all resources used by <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetString(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            Returns the value of the string resource localized for the specified culture.
            </summary>
            <param name="culture">An object that represents the culture for which the resource is localized.</param>
            <param name="name">The name of the resource to retrieve.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>The value of the resource localized for the specified culture, or null if
                name cannot be found in a resource set.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetString(System.String)">
            <summary>
            Returns the value of the string resource.
            </summary>
            <param name="name">The name of the resource to retrieve.</param>
            <returns>The value of the resource or null if name cannot be found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetString(System.String,System.Object[])">
            <summary>
            Returns the value of the string resource.
            </summary>
            <param name="name">The name of the resource to retrieve.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>The value of the resource or null if name cannot be found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetString(System.Globalization.CultureInfo,System.String)">
            <summary>
            Returns the value of the string resource localized for the specified culture.
            </summary>
            <param name="culture">An object that represents the culture for which the resource is localized.</param>
            <param name="name">The name of the resource to retrieve.</param>
            <returns>The value of the resource or null if name cannot be found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetObject(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetObject(System.String)">
            <summary>
             Returns the value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The value of the resource localized for the caller's current culture settings.
                If an appropriate resource set exists but name cannot be found, the method
                returns null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetBoolean(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>Returns true, if the value of the resource, localized for the specified culture; otherwise false,  If an appropriate
               resource set exists but name cannot be found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetBoolean(System.String)">
            <summary>
            Returns the bool value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>Returns true, if the value of the resource, localized for the specified culture; otherwise false,  If an appropriate
               resource set exists but name cannot be found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetByte(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the byte value of the specified non-string resource localized for the specified
            culture
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The byte value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetByte(System.String)">
            <summary>
             Returns the byte value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The value of the resource, If an appropriate
               resource set exists but name cannot be found, the method returns null. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetChar(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the char value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The  value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetChar(System.String)">
            <summary>
             Returns the char value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The value of the resource, If an appropriate
               resource set exists but name cannot be found, the method returns null. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetDouble(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the double value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The double value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetDouble(System.String)">
            <summary>
             Returns the double value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The double value of the resource, If an appropriate
               resource set exists but name cannot be found, the method returns null. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetFloat(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the float value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The float value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetFloat(System.String)">
            <summary>
             Returns the float value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The float value of the resource, If an appropriate
               resource set exists but name cannot be found, the method returns null. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetInt(System.String)">
            <summary>
             Returns the integer value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The integer value of the resource, If an appropriate
               resource set exists but name cannot be found, the method returns null. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetInt(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the integer value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The integer value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetLong(System.String)">
            <summary>
             Returns the long integer value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The integer value of the resource, If an appropriate
               resource set exists but name cannot be found, the method returns null. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetLong(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the long integer value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The long integer value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetShort(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the short integer value of the specified non-string resource localized for the specified
            culture.
            </summary>
            <param name="culture">The culture for which the resource is localized.</param>
            <param name="name">The name of the resource to get.</param>
            <returns>The short integer value of the resource, localized for the specified culture. If an appropriate
               resource set exists but name cannot be found, the method returns null.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Resources.SR.GetShort(System.String)">
            <summary>
             Returns the short integer value of the specified non-string resource.
            </summary>
            <param name="name">The name of the resource to get.</param>
            <returns>The integer value of the resource, If an appropriate
               resource set exists but name cannot be found, the method returns null. </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn">
            <summary>
            Holds and updates the information about the properties of each and every cell which are in view. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.#ctor(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn">SpreadsheetColumn</see> class. 
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.UpdateRenderer(System.String)">
            <summary>
            Update the renderer for the cell based on the cell type
            </summary>
            <param name="celltype">The type of cell such as text box, combo box,etc.,</param>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.UpdateFilterToggleButtonStatus(Syncfusion.XlsIO.Implementation.WorksheetImpl,Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint)">
            <summary>
            Update the FilterToggleButton status based on XlsIO's Filter applied ranges.
            </summary>
            <param name="worksheet">Worksheet</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.UpdateCellElement(System.Boolean)">
            <summary>
            Initializes or updates the cell element using appropriate cell renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.OnRenderBackground(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint,System.Drawing.Rectangle)">
            <summary>
            Render the cell background.
            </summary>
            <param name="paint">SpreadsheetPaint object</param>
            <param name="cellRect">Cell rect</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.CheckWrapText">
            <summary>
            Helper method for check whether the floating cell height changed when apply the horizontal alignment to center and whether Alt+Enter pressed.
            Because if center alignment applied, then set the wrapping for further process happen like normal TextWrapping, when next or prev cell goes to out of view. 
            So that time no need to increase the height.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.OnUpdateColumn">
            <summary>
            Update the column properties such as renderer, cell type, style info, row index, column index, cell element etc.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.UpdateCellBorders">
            <summary>
            Updates the cell borders for the <see cref="!:GridCell"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.UpdateFloatingCellBorders">
            <summary>
            Update the borders for floating cells.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.UpdateHeaderCellBorders">
            <summary>
            Updates the selection highlighted borders on header cells.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.ApplyConditionalFormats(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint,System.Drawing.Rectangle)">
            <summary>
            Apply the conditional formatting
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.ApplyDataBars(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint,System.Drawing.Rectangle,Syncfusion.XlsIO.IDataBar,System.String,System.String)">
            <summary>
            Apply the data bars for DataBar Conditional Formatting.
            </summary>
            <param name="drawingContext">Drawing context</param>
            <param name="cellRect">Indicates the cell rect</param>
            <param name="dataBar"></param>
            <param name="formatRange"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.ApplyIconSets(Syncfusion.XlsIO.IIconSet,Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint,System.Drawing.Rectangle,System.String,System.String)">
            <summary>
            Render the icon sets based on getting IIconSet from XlsIO
            </summary>
            <param name="iconSet">IIconSet from XlsIO</param>
            <param name="value">Cell value</param>
            <param name="formatRange">The selected range for conditional formats</param>
            <param name="cellRect"></param>
            <param name="drawingContext"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.UpdateSparklines(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Used to update the sparklines
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.ApplyTableFormats">
            <summary>
            Excel like table formats operation are performed here with checking the XlsIO contains the List objects or not.
            If it contains the list objects then based on the table style we have applied the background color,Forground color
            and border in our spreadsheet.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.ApplyExcelStyle(Syncfusion.XlsIO.IStyle,Syncfusion.XlsIO.IRange)">
            <summary>
            Apply the tableformat borders if the cell is table format cell and check whether the cell style does not contain the
            some other border style.Table borders only apply when the cell border style is none.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.EnsureFloatingCellSize(System.Collections.Generic.List{Syncfusion.Windows.Forms.CellGrid.GridColumn},System.Drawing.Size,System.Int32)">
            <summary>
            Calculates the size for floating cell and display text in the cell.
            </summary>
            <param name="elements">List of cell elements which are in view.</param>
            <param name="cellSize">Current size of the cell.</param>
            <param name="arrayIndex">Index of the visible columns.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.EnsureFloatingCellSizeOnEdit(System.String)">
            <summary>
            Calculate the floating cell size on editing.
            </summary>
            <param name="text">Display text in the cell.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.GetDisplayTextSize(System.String,System.Drawing.Size,System.Boolean)">
            <summary>
            Calculate the display text size with help of MeasureText() based on cellsize
            and FloatingCellSize if FloatingCellSize is not an empty.
            </summary>
            <param name="text">Display text.</param>
            <param name="cellSize">Size of the cell.</param>
            <param name="wrapText">true if textwrapping is applied; else false.</param>
            <returns>Size of the object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.SetTextWrapping(System.Boolean)">
            <summary>
            Set and reset the text wrapping while editing in floating cell.
            </summary>
            <param name="setWrapText">True or False.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.GetTextWrapping">
            <summary>
            Determines if the text is wrapped or not.
            </summary>
            <returns>Returns true, if text is wrapped; otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.GetTextAlignment">
            <summary>
            Gets the HorizontalAlignment of the cell. 
            </summary>
            <returns>HorizontalAlignment.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.GetCurrentCellRendererElement">
            <summary>
            Used to get the edit UI element of current cell.
            </summary>
            <returns>An UI element.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the 
            <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn">SpreadsheetColumn</see>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">If set to <see langword="true"/>, to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.Renderer">
            <summary>
            Gets or sets the instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer"/> which provides the functionality of cell renderers.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.Element">
            <summary>
            Gets or sets the Element
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.ExcelRange">
            <summary>
            Gets or sets the appropriate <see cref="T:Syncfusion.XlsIO.IRange"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.ExcelStyle">
            <summary>
            Gets or set the appropriate <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.ExcelStyle"/> which might be modified based on conditional formats, table formats, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.HasNumber">
            <summary>
            Determines whether the display text of the cell is numeric or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.HasDateTime">
            <summary>
            Determines whether the display text of the cell is datetime or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.HasError">
            <summary>
            Determines whether the display text of the cell is formula error or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.Sparkline">
            <summary>
            Gets or sets the XlsIO's Sparkline of this cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.SparklineGroup">
            <summary>
            Gets or sets the XlsIO's SparklineGroup of this cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.Borders">
            <summary>
            Gets or sets the borders of this cell.
            Left border = Pen[0], Top = Pen[1], Right = Pen[2], Bottom = Pen[3].
            This property is used because we have used Spreadsheet.FormatStyle to store the Table format
            and conditional format style. And when accessing the adjacent cell's border, current(this) cell borders will
            be returned since we are using same instance across the workbook.(WPF-25930)
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn.HasRichText">
            <summary>
            Determines whether XlsIO have richtext or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell">
            <summary>
            Holds the properties and operations for current cell of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.#ctor(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell">SpreadsheetCurrentCell</see> class. 
            </summary>
            <param name="grid">An instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.OnProtectSheet">
            <summary>
            To enable/disable the selection of cell when sheet in protected mode
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.OnUnProtectSheet(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            To render the selection after unprotecting the sheet.
            </summary>
            <param name="worksheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.CanMove(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Determines whether to move the focus to next cell or not when sheet is in protected mode.
            </summary>
            <param name="rowCol">Coordinates of the cell.</param>
            <returns>True if the sheet is unprotected;otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.BeginEdit(System.Boolean)">
            <summary>
            Determines whether the current cell enters into edit mode or not.
            </summary>
            <param name="forceEdit">Set this true to avoid triggering events.</param>
            <returns>True, if current cell enters into edit mode; otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.EndEdit(System.Boolean)">
             <summary>
            Commits and ends the edit operation for the current cell.
             </summary>
             <param name="canCommit">If true, commit the new changes, otherwise revert to old value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.GetControlValue">
            <summary>
            Used to get the control value from renderer when current cell is in edit mode.
            </summary>
            <returns>Value of current cell.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.SetControlValue(System.Object)">
            <summary>
            Used to set the control value to renderer of the current cell when current cell is in edit mode.
            </summary>
            <param name="value">Value of the current cell.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.SetFocus(System.Boolean)">
            <summary>
            Used to set the focus on the current cell.
            </summary>
            <param name="needToFocus">If true, set focus to edit element.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.ShouldGridTryToHandleKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the key down events that occurs when a key is pressed while the current cell has its focus.
            </summary>
            <param name="args">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.ResetCurrentCellState">
            <summary>
            Used to reset the current cell state of the renderer
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.SetCurrentCellState">
            <summary>
            Used to set the CurrentCellState of the Renderer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.SetColumn(Syncfusion.Windows.Forms.CellGrid.GridColumn)">
            <summary>
            Set the GridColumn of CurrentCell.
            </summary>
            <param name="gridColumn"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.OnGraphicSelectionChanging">
            <summary>
            Ocucrs when selection occurs on GraphicCell
            </summary>
            <returns>Returns false, if selection handled by currentcell</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.MoveToLastUsedRange(System.Boolean)">
            <summary>
            Move current cell to last used range in a grid
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell">SpreadsheetCurrentCell</see>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.HasCurrentCellState">
            <summary>
            Gets a value indicating whether the current cell renderer is set or not .
            </summary>
            <value><see langword="true"/> if the current cell renderer state is set ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell.Column">
            <summary>
            Gets or sets the current <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn"/>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel">
            <summary>
            Represents the class which holds the operations and events associated with rows and columns.
            </summary>
            <remarks>The Operations and events such as Insertion/ Deletion of rows and columns in SfSpreadsheet.</remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.calculatedCells">
            <summary>
            Indentifying recalculated cells in RecalculateDependencyCells method to avoid re caclculation of calculated cells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.#ctor(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel">SpreadsheetGridModel</see> class. 
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.OnColumnsRemoved(Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeRemovedEventArgs)">
            <summary>
            Invoked after a range of columns in SfSpreadsheet is removed.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeRemovedEventArgs">GridRangeRemovedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.OnColumnsInserted(Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeInsertedEventArgs)">
            <summary>
            Invoked after a range of columns in SfSpreadsheet is inserted.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeInsertedEventArgs">GridRangeInsertedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.OnRowsRemoved(Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeRemovedEventArgs)">
            <summary>
            Invoked after a range of rows in SfSpreadsheet is removed.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeRemovedEventArgs">GridRangeRemovedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.OnRowsInserted(Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeInsertedEventArgs)">
            <summary>
             Invoked after a range of rows in SfSpreadsheet is inserted.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeInsertedEventArgs">GridRangeInsertedEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.RemoveColumns(System.Int32,System.Int32)">
            <summary>
            Removes given number of columns from the specified index.
            </summary>
            <param name="removeAtColumnIndex">The column index.</param>
            <param name="count">Number of columns to be removed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.InsertColumns(System.Int32,System.Int32)">
            <summary>
            Inserts the given number of columns at the specified column index.
            </summary>
            <param name="insertAtColumnIndex">The column index to insert.</param>
            <param name="count">Number of columns to be inserted.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.InsertRows(System.Int32,System.Int32)">
            <summary>
            Inserts specified number of rows at the given row index.
            </summary>
            <param name="insertAtRowIndex">The row index to insert.</param>
            <param name="count">Number of rows to be inserted</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.RemoveRows(System.Int32,System.Int32)">
            <summary>
            Deletes given number of rows from the specified index.
            </summary>
            <param name="removeAtRowIndex">The row index.</param>
            <param name="count">Number of rows to be removed.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.Dispose">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel">SpreadsheetGridModel class.</see>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.Grid">
             <summary>
             Gets the value indicating the instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
             </summary>
            <value>An instance  of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.FormulaEngine">
            <summary>
            Gets the value indicating the instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.FormulaEngine"/> which handles all the formula related
            operations in SfSpreadsheet
            </summary>
            <value>An instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.FormulaEngine"/>.</value>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.ColumnsRemoved">
            <summary>
            Occurs after a range of columns has been removed.
            <seealso cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeRemovedEventArgs"/> for more details.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.ColumnsInserted">
            <summary>
            Occurs after a range of columns has been inserted.
            <seealso cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeInsertedEventArgs"/> for more details.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.RowsRemoved">
            <summary>
            Occurs when a range of rows is removed.
            <seealso cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeRemovedEventArgs"/> for more details.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel.RowsInserted">
            <summary>
            Occurs after a range of rows has been inserted. Refer <seealso cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.GridRangeInsertedEventArgs"/> for more details.     
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.SelectionPanelExt">
            <summary>
            Represents the class which is used to render the fill series border selection.   
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SelectionPanelExt.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SelectionPanelExt">SelectionPanelExt</see> class. 
            </summary>
            <param name="name">Name of the panel</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SelectionPanelExt.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SelectionPanelExt">SelectionPanelExt</see>.
            </summary>     
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt">
            <summary>
            Extension visual container for <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>. Handles the arrange and measure of all child panel elements. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.WireEvents">
            <summary>
            Wire the events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.UnWireEvents">
            <summary>
            Unwire the events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.InitializeChildPanels">
            <summary>
            Initialize and add child panels.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.MeasureChildPanels(System.Drawing.Size)">
            <summary>
            Determines the size for the child panels.
            </summary>
            <param name="availableSize">The desired size for the child panel.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.ArrangeChildPanels(System.Drawing.Rectangle)">
            <summary>
            Arranges the content of child panels.
            </summary>
            <param name="rect">The actual size for the child panel.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.InvalidateMeasureInfo">
            <summary>
            Invalidates or refreshes the measurement state for <see cref="F:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.FormulaRangeSelectionPanel"/> and <see cref="F:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.GraphicsPanel"/> .
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.CreateSelectionPanel">
            <summary>
            Creates the <see cref="T:Syncfusion.Windows.Forms.CellGrid.SelectionPanel"/>.
            </summary>
            <returns>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SelectionPanelExt"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.MouseWheelDown">
            <summary>
            Occurs when the mouse wheels down and used to decrease the zoom factor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.MouseWheelUp">
            <summary>
            Occurs when mouse wheels up and used to increase the zoom factor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt">VisualContainerExt</see>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.CreateFormulaRangePanel">
            <summary>
            Creates the <see cref="F:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.FormulaRangeSelectionPanel"/>.
            </summary>
            <returns>An instance of <see cref="F:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.FormulaRangeSelectionPanel"/>.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.VisualContainerExt.Grid">
            <summary>
            Gets the value indicating the instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/> .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid">
            <summary>
            Represents a class which is used for displaying the data of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>. 
            </summary>
            <remarks>The data will be displayed in the form of rows and columns. This class also includes the selection and editing operations
            in grid that allow the users to easily manage the data.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid">SpreadsheetGrid</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.GetColumnWidthFromSheet(System.Int32)">
            <summary>
            Used to get the column width from worksheet by adjusting with the zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.GetRowHeightFromSheet(System.Int32)">
            <summary>
            Used to get the row height from worksheet by adjusting with the zoom scale.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.AdjustColumnWidth(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn,System.String,Syncfusion.XlsIO.IStyle,System.Boolean)">
            <summary>
            Adjust the column width when cell has number or date time format values.
            </summary>
            <param name="column">current column</param>
            <param name="displayText">display text</param>
            <param name="excelStyle">Excel style, used for measure the size for adjust the column width. Because the excel style is set in OnUpdateColumn
            But this method will called before that method called So pass the excel style as parameter</param>
            <param name="hasNumber">true when cell value is number otherwise false</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.GetExponentialFormatText(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Get the formatted text in exponential format for number format.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.InvalidateConditionalFormats(Syncfusion.XlsIO.IRange)">
            <summary>
            Invalidate the range when conditional formatting has changed while edit.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.InvalidateSparklines(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Invalidate the Sparklines after editing when any of the Sparkline's DataRange contains this range .
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.OnCreateCopyPaste">
            <summary>
            Initialize the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste"/> when the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/> is loaded.
            </summary>
            <returns>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.AutoFitHeaderColumn">
            <summary>
            Helper method to fit the header column width to its content like Excel
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.ScrollRows_Changed(System.Object,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollChangedEventArgs)">
            <summary>
            Occurs when scroll rows changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.ScrollColumns_Changed(System.Object,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.ScrollChangedEventArgs)">
            <summary>
            Occurs when scroll columns changed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.SetExcelLikeHeaders(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetQueryRangeEventArgs)">
            <summary>
            Modify the Style of header cells based on selection like Excel
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.ShowOrHidePopup(System.Boolean)">
            <summary>
            Show or Hide the FillSeries, Paste and ContextMenu popup.
            </summary>
            <param name="show">If true the show the popup else hide it.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.ProcessShortCutKeys(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Display the current date like Excel when press the (Ctrl+;) keys.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.SetCellValue(Syncfusion.XlsIO.IRange,System.String)">
            <summary>
            Sets the value or formula to the given <see cref="T:Syncfusion.XlsIO.IRange"/> in the Workbook
            </summary>
            <param name="currentExcelRange">An instance of <see cref="T:Syncfusion.XlsIO.IRange"/></param>
            <param name="cellValue">Value to be displayed</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.GetCalculatedValue(Syncfusion.XlsIO.IRange)">
            <summary>
            Returns the calculated value (without formatting) for a formula cell.
            </summary>
            <param name="range">IRange.</param>
            <remarks>If the passed range is not a formula cell, then it returns null.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.DeleteValuesFromSelectedRanges">
            <summary>
            Helps to delete the value of cell in a selected ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.OnMouseWheelZoom(Syncfusion.Windows.Forms.MouseWheelZoomEventArgs)">
            <summary>
            Zoom the grid on mouse wheel.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            Since KeyDown Method is not fired we used the below method to performs keydown operations
            <summary>
            Used to Process key down operations
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Need to fix the issue while programatically import the graphic cells and while navigating the different tabs.
            </summary>
            <param name="levent"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.OnCurrentCellEndEdit(Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellEndEditEventArgs)">
            <summary>
            Commits and ends the edit operation on the current cell in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellEndEditEventArgs">CurrentCellEndEditEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.ShowHidePopup(System.Boolean)">
            <summary>
            To show and hide popup's when moved to another application
            </summary>
            <param name="show">True, if the popup is displayed; otherwise false</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.OnCurrentCellValidating(Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs)">
            <summary>
            Complete Datavalidation operation triggers from this overided OnCurrentCellValidating method
            </summary>
            <param name="e">CurrentCellValidatingEventArguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.GetDependentCellValue(System.Int32,System.Int32)">
            <summary>
            This method gets the dependent cell value of the corresponding row and column index of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <param name="rowIndex">Index of the corresponding cell's row.</param>
            <param name="colIndex">Index of the corresponding cell's column.</param>
            <returns>An instance of <see cref="T:Syncfusion.XlsIO.IRange"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.IsCommentEditorOpen">
            <summary>
            Return whether editor comment popup was open or not.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.OnCreateVisualContainer">
            <summary>
            To initialize the Visual Container
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.OnCreateGridColumn(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Creates a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridColumn"/> which holds the information 
            of the every cells in the grid.
            </summary>
            <param name="grid">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/>.</param>
            <returns>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn"/>. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.OnCreateCurrentCell">
            <summary>
            Creates a new instance of the <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridCurrentCell"/> which maintains the
            current cell in the grid.
            </summary>
            <returns>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn"/>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.UnWireEvents">
            <summary>
            Unwires or unloads the events in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.WireEvents">
            <summary>
            Wires or loads the events in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.InitializeCellRendererCollection">
            <summary>
            Initializes the CellRenderer Collection in the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.SetColumnWidth(System.Int32,System.Int32,System.Double)">
            <summary>
            Used to set the column width in the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <param name="startIndex">Start column index.</param>
            <param name="endIndex">End column index.</param>
            <param name="width">Width of the column to expand.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.SetRowHeight(System.Int32,System.Int32,System.Double)">
            <summary>
            Used to set the row height in the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <param name="startIndex">Start row's index.</param>
            <param name="endIndex">End row's index.</param>
            <param name="height">Height of the row to resize.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.OnCellRequestNavigateEvent(Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs)">
            <summary>
            Provides support for hyperlink navigation between different cells in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <param name="e">An instance of <see cref="T:Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs"/></param>
            <returns>True, if the navigation can be done in cell; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.GetDisplayText(System.Int32,System.Int32)">
            <summary>
            Used to get the display text of the cell.
            </summary>
            <param name="rowIndex">RowIndex of the cell.</param>
            <param name="colIndex">ColumnIndex of the cell.</param>
            <returns>Returns the display text.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.GetCellValue(System.Int32,System.Int32)">
            <summary>
            Used to get the value of the cell.
            </summary>
            <param name="rowIndex">RowIndex of the cell.</param>
            <param name="colIndex">ColumnIndex of the cell.</param>
            <returns>Returns the cell value.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Occurs before the KeyDown event when a key is pressed while focus is on this control.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp"/> attached event reaches an element in its route that is derived from this
            class. Implement this method to add class handling for this event. 
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"/> that
            contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.CanPerformAutoScroll">
            <summary>
            Below code is used to Check whether Autro Scrolling can be performed or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.GetPointerDownRowColumnIndex">
            <summary>
            Used to get the pointer down rowcolumnindex by considering formularange selection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.GetPointerMoveRowColumnIndex">
            <summary>
            Used to get the pointer move rowcolumnindex, formularange selection considered
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.GetActiveRange">
            <summary>
            Used to get the Active range, formularange selection considered
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the.
            <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid">SpreadsheetGrid</see>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.OnCellContextMenuOpening(Syncfusion.Windows.Forms.CellGrid.Helpers.CellContextMenuOpeningEventArgs)">
            <summary>
            Customize the visibility of of items in the contextmenu
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.RefreshCellContextMenu">
            <summary>
            Set the visibility of all the contextmenu items as visible.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.OnGraphicCellContextMenuOpening(Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCellContextMenuOpeningEventArgs)">
            <summary>
            Customize the visibility of of items in the GraphicCell contextmenu
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.CurrentCell">
            <summary>
            Gets the value indicating the instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell"/> which maintains the current cell in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.Model">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel"/> which holds
            the operation on rows and columns in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGridModel"/></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.SheetName">
            <summary>
            Gets the value indicating the name of the worksheet in the Workbook.
            </summary>
            <value>Name of the worksheet.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.GraphicModel">
            <summary>
            Gets the value indicating the instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.GraphicModel"/> which holds all
            the information about graphic cells.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.GraphicModel"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.Worksheet">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/> in the Workbook.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.CellRenderers">
            <summary>
            Gets a value indicating the instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection"/> 
            which holds the collection of cellrenderer objects.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererCollection"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.RowGroupPanel">
            <summary>
            Gets or sets the Panel used for Row Grouping
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.ColumnGroupPanel">
            <summary>
            Gets or sets the Panel used for Column Grouping
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.FillSeriesController">
            <summary>
            Gets or sets the value indicating the instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.FillSeriesController"/>
            which provides support to autofill the data.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.FillSeriesController"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.ZoomFactor">
            <summary>
            Gets or sets the zoom factor of the grid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.Container">
            <summary>
            Gets or sets the visual container.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.Spreadsheet">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.GridConditionalFormats">
            <summary>
            Gets or sets the conditional formats.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.QueryRange">
            <summary>
            Occurs when grid queries for <see cref="T:Syncfusion.XlsIO.IRange"/> information about a specifc cell while rendering.
            </summary>
            <example>
            <code lang="C#">
            var grid = spreadsheet.ActiveGrid;
            grid.QueryRange+=grid_QueryRange;
            void grid_QueryRange(object sender, SpreadsheetQueryRangeEventArgs e)
            {
               if (e.Cell.ColumnIndex == 5)
                   e.ExcelStyle.ColorIndex = ExcelKnownColors.Blue;
            }
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid.CreateParams">
            <summary>
            Used this to avoid the flickering in formula bar when open and close the backstage.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController">
            <summary>
            Controller to select the cell or range references directly while editing the formula.
            </summary>
            <remarks>Handles the keyboard and mouse interaction to select the formula range references. And also it visually denotes the range references if the cell has formula while editing. </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController">FormulaRangeSelectionController</see> class. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.lastSelectedRange">
            <summary>
            Used to maintain the last selected formula range
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.isInSelection">
            <summary>
            Used to notify whether the Formula Range selection is in process
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.isInKeyNavigation">
            <summary>
            Used to notify whether the key navigation is in process
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.isInMove">
            <summary>
            Used to notify whether the Formula range drag selection is in process
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.isCtrlKeyPressed">
            <summary>
            Used to Check whether the Control key is pressed or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.rText">
            <summary>
            Used to get the text to be set as rendered text while navigating grid
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.StartRowColumnIndex">
            <summary>
            Used to notify the Starting RowColumnIndex of the formula range
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.LastRowColumnIndex">
            <summary>
            Used to maintain the last selected RowColumnIndex of the formula range
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.FormulaRange">
            <summary>
            Used to update the current formula range while navigating through Shift + key navigation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.ActiveGrid">
            <summary>
            Used to get information about the Active Grid
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.HandlePointerOperations(Syncfusion.Windows.Forms.CellGrid.GridPointerEventArgs,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Handles the mouse pointer operations in SfSpreadsheet
            </summary>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.CellGrid.GridPointerEventArgs">GridPointerEventArgs</see> that contains the event data.</param>
            <param name="rowcolIndex">The row and column index where the pointer is positioned</param>
            <returns>True or False</returns>
            <remarks>Based on the one of the enumeration <see cref="T:Syncfusion.Windows.Forms.CellGrid.PointerOperation"/> values, corresponding pointer operation is performed in SfSpreadsheet</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.OnUiElement_PointerPressed">
            <summary>
            Used to Notify that the Pointer pressed on UiElement
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.OnUiElementGotFocus">
            <summary>
            Used to notify that the UiElement got focus
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.SetEditingGrid(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Sets the Editing Grid Where the Current Cell will be in Editing
            </summary>
            <param name="grid"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.ActiveGridChanging(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Used to Notify that the Active Grid is to be Changed
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.ActiveGridChanged(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Used to Notify that the Active Grid is Changed
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.OnCurrentCellValidating">
            <summary>
            Used to Notify the Current Cell is on Validating and Auto Correct formula if it is a formula cell
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.OnCurrentCellStartEditing">
            <summary>
            used to notify when the Current Cell Starts editing
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.OnCurrentCellEndEdit">
            <summary>
            Used to Nofify that the Current Cell Completes editing
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.OnTextChanged">
            <summary>
            Used to Notify When the CurrentCellRenderer Text is changed
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.OnFormulaBarLeftButtonDown">
            <summary>
            Used to Notify when the Formulabar is Clicked
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.OnFormulaBarKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Used to Notify that the Key is pressed when the Formula Bar is in focus
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.CanSelectFormulaRange(System.String)">
            <summary>
            Determines whether the formula range selection happens or not.
            </summary>
            <param name="renderedText">Text in the current range.</param>
            <returns>True if the formula range is selection was successful;otherwise, False.</returns>
            <remarks>Used to determine whether the selection can be done in the given range which starts with equal sign.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.HandleKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the key down operations in SfSpreadsheet.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>
            <remarks>Invoked when the key is pressed while the <see cref="!:SfSpreadsheet"/> has its focus and handles the key navigations/operations for the selected formula ranges.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.OnPointerPressed(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Invoked when the mouse pointer is pressed while the <see cref="!:SfSpreadsheet"/> has its focus.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
            <param name="rowColIndex">The row and column index where the mouse pointer is pressed.</param>
            <returns>True or False.</returns>
            <remarks>The mouse interactions are received, processed, and managed as pointer input in SfSpreadsheet.Clicking on any of the mouse buttons(left,wheel,right) invokes this function which
            determines the action to be performed in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/> with the formula range.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.OnPointerMoved(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Invoked when the mouse pointer is moved while the <see cref="!:SfSpreadsheet"/> has its focus.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
            <param name="rowColIndex">The row and column index where the mouse pointer is positioned.</param>
            <returns>True or False.</returns>
            <remarks>The mouse interactions are received, processed, and managed as pointer input in SfSpreadsheet. Hence whenever the mouse moves over an element's bounds, even if no mouse button is pressed at the time also invokes this function which
            determines the action to be performed in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/> with the formula range.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.OnPointerReleased(System.Windows.Forms.MouseEventArgs,Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Invoked when the mouse pointer is released while the <see cref="!:SfSpreadsheet"/> has its focus.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.MouseEventArgs">MouseEventArgs</see> that contains the event data.</param>
            <param name="rowColIndex">The row and column index where the mouse pointer is positioned.</param>
            <returns>True or False</returns>
            <remarks>The mouse interactions are received, processed, and managed as pointer input in SfSpreadsheet.
            Invoked only when that same mouse button is released (no other button can be associated with the pointer until this event is complete).</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.ProcessHeaderSelection(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Updates the formula range for the selection in header cells based on the given row and column index of <see cref="!:SfSpreadsheet"/>. 
            </summary>
            <param name="rowColIndex">The Row and Column index where the pointer is positioned.</param>
            <remarks>Invoked by OnPointerMoved, OnPointerPressed and ProcessKeyNavigation methods to update the selection.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.ProcessShiftKeyNavigation(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Process and selects the formula ranges when any arrow key is pressed along with Shift key.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <remarks>Invoked by ProcessKeyNavigation method and maintains the last selected row and column index of the formula range.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.ProcessKeyNavigation(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Process and selects the formula ranges when any arrow key is pressed.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Input.KeyEventArgs">KeyEventArgs</see> that contains the event data.</param>
            <remarks>To customize the Keyboard interactions in <see cref="!:SfSpreadsheet"/>.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.ParseRendererText(System.String)">
            <summary>
            Parse the Rendered Text and if the cells is a valid range then add it in the corresponding collection
            </summary>
            <param name="renderedText"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.SetRendererText(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Used to Set the CurrentCellRenderer Text
            </summary>
            <param name="gridRange"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.GetGridRange(System.String)">
            <summary>
            Used to get the Grid range from the string value
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.GetParsedText(System.String)">
            <summary>
            Used to get the Parsed Text from the Rendered Text
            </summary>
            <param name="text">Rendered Text</param>
            <returns>returns string list which denotes the formula ranges of the Current Cell</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.ProcessAutoScrollFormulaRangeSelection(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex)">
            <summary>
            Below code is used to Process Auto Scroll when Formula Range Selection is Performed
            </summary>
            <param name="rowColIndex"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.CurrentCellRendererElement">
            <summary>
            Used to get the CurrentCell Renderer Element
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.AllowMouseSelection">
            <summary>
            Gets or sets a value indicating whether the user is allowed to perform the formula range selection with mouse or keyboard.
            </summary>
            <value><see langword="true"/> if the user can perform the formula range selection with mouse or keyboard; otherwise, <see langword="false"/></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.AllowSelectionOnEditing">
            <summary>
            Gets or sets a value indicating whether it visually denotes the range references if the cell has formula while editing .
            </summary>
            <value><see langword="true"/> if the cell has formula for selection while editing ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.IsFormulaEditing">
            <summary>
            Determines whether the formula is in editing
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.CurrentFormulaRange">
            <summary>
            Used to update the currentFormulaRange while doing selection with mouse
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.BackToEditingGrid">
            <summary>
            Used to Notify that the Sheet is to be moved to the editing grid
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.IsInSheetReference">
            <summary>
            Used to notify that the Formula range selection is to be done with Sheet Reference
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.IsSheetNavigated">
            <summary>
            Used to indicated that the sheet is navigated
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.EnableKeyNavigation">
            <summary>
            Used to specify whether Key Navigation can be performed
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.EditingGrid">
            <summary>
            Used to get information about the Editing Grid
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.SelectedFormulaRanges">
            <summary>
            Gets or sets the collection of newly Selected formula ranges
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionController.ExistingFormulaRanges">
            <summary>
            Gets or sets the collection of existing formula range of a cell
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionPanel">
            <summary>
            Panel used for displaying the formula ranges in the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionPanel.NormalBorders">
            <summary>
            Contains the list of Normal Borders used in this panel to intimate the Selection with Colors
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionPanel.DottedBorders">
            <summary>
            Contains the list of Dotted borders used in this panel to intimate the Dotted border selection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionPanel.EnsureFormulaRanges">
            <summary>
            used to ensure the Formula Range Elements used in this panel
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionPanel.GetBorderBrush(System.Int32)">
            <summary>
            Gets the color of the border color to be used for intimating the Formula range selection
            </summary>
            <param name="index">position of the specified range in the current cell formula range. </param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionPanel.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionPanel">FormulaRangeSelectionPanel</see>.
            </summary> 
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionPanel.ActiveGrid">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionPanel.FormulaRangeElement">
            <summary>
            Represents a class that maintains the information about the borders in the FormulaRangeSelection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionPanel.FormulaRangeElement.Pen">
            <summary>
            Gets or Sets the Selection Color to indicate formula ranges
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionPanel.FormulaRangeElement.Visibility">
            <summary>
            Gets or Sets whether the Formula Range Selection is to be drawn or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionPanel.FormulaRangeElement.Range">
            <summary>
            Intimates the Formula Range
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaRangeSelectionPanel.FormulaRangeElement.IsEnsured">
            <summary>
            Gets or sets true if the Element is ensured else false
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel">
            <summary>
            Represents a panel which is used to position and arrange the grouping elements such as expand buttons, collapse buttons, etc.
            </summary>
            <remarks>Holds all the operations involved with the Grouping elements. </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Used to make the HitTestVisible as false
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.AddGroupingElements(Syncfusion.XlsIO.Parser.Biff_Records.IOutlineWrapper)">
            <summary>
            Add the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGroupButton"/> as a <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel"/> element and updates the grouping state
            </summary>
            <param name="outlineWrapper">Contains the information about the outline</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.AddOutlineLabelButtons(Syncfusion.XlsIO.Implementation.WorksheetImpl)">
            <summary>
            Adds the Outline label buttons as <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel"/> elements.
            </summary>
            <param name="worksheetImpl">An instance of <see cref="T:Syncfusion.XlsIO.Implementation.WorksheetImpl"/></param>
            <remarks>Invokes the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.CollapseAllGroupCommand"/> to perform expand/collapse operations based on outline value</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.Group(Syncfusion.XlsIO.ExcelGroupBy)">
            <summary>
            Method used to Add Grouping Elements, when Grouping/Ungrouping Operation is Performed
            </summary>
            <param name="GroupBy">Grouping Type either ByRows or ByColumns</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.ArrangeUIElements(System.Drawing.Size)">
            <summary>
            To Arrange the Elementes in the Outline Panels
            </summary>
            <param name="finalSize"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.InitializeGroupingElements(Syncfusion.XlsIO.ExcelGroupBy)">
            <summary>
            Used to Initialize the Grouping Elements, while importing or navigating to next sheet
            </summary>
            <param name="GroupBy">Grouping Types either ByRows or ByColumns</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.RefreshButtonState">
            <summary>
            Used to Refresh the Button State while Resizing
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.UpdateGroupingState(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGroupButton)">
            <summary>
            Used to set the Grouping State for the SpreadsheetGroupButton
            </summary>
            <param name="button">The SpreadsheetGroupButton</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.ConvertRangeToRect(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Method used to Convert the Specified range into Rect
            </summary>
            <param name="range">Range to be Converted as Rect</param>
            <returns>returns Rect for the Specified range</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.GetLastRowHeight(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Gets the row height for the last row in the specified range if summary row below else
            gets the row height for the first row in the specified range
            </summary>
            <param name="range"></param>
            <returns>returns the first/last row height</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.GetLastColumnWidth(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Gets the column width for the last column in the specified range if summary column right else
            gets the column width for the first column in the specified range
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.GetButtonHeight(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Double)">
            <summary>
            Gets the Button Height, used to check when the Group Buttons are to be displayed at the Top / Bottom corner of the screen
            </summary>
            <param name="GroupingRange"></param>
            <param name="AdjacentRowHeight">indicates the next row height when summary row below else indicates previous row height</param>
            <returns>returns the button height</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.GetAdjacentRowHeight(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Gets the Adjacent Row Height
            </summary>
            <param name="range">Grouping range</param>
            <returns>returns the row height of the next row if Summary Row below else returns the row height
            of the previous row</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.GetAdjacentColumnWidth(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Gets the Adjacent Column Width
            </summary>
            <param name="range">Grouping range</param>
            <returns>returns the next column width if Summary Column Right else returns the Previous Column width </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.Dispose">
             <summary>
             Dispose all the instance used by the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel"/> class.
             </summary>
            <remarks>Performs application-defined tasks associated with freeing, releasing, or
             resetting unmanaged resources.</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.SfSpreadsheet">
            <summary>
            Gets or sets the instance of the <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.SfSpreadsheet"/> which is used to view, edit and create excel files.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.SfSpreadsheet"/>. </value>        
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.ActiveGrid">
            <summary>
            Gets or sets the instance of the active <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/> which displays the data in SfSpreadsheet.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.IsSummaryRowBelow">
            <summary>
            Gets or sets the Page Setup of the Active sheet, if Summary Rows to be displayed below, returns true else false
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.IsSummaryColumnRight">
            <summary>
            Gets or sets the Page Setup of the Active sheet, if Summary Columns to be displayed Right, returns true else false
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.Orientation">
            <summary>
            Gets or sets the orientation of the Outlines panel.
            </summary>
            <value>One of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.GroupingOrientaion"/> enumeration that specifies the panel orientation.</value>
            <remarks>The Orientation of the panel is either horizontal or vertical.</remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.GroupingOrientaion">
            <summary>
            Defines the direction that specifies orientation for outlines panel.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.GroupingOrientaion.Vertical">
            <summary>
            Vertical orientation of the outlines panel
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel.GroupingOrientaion.Horizontal">
            <summary>
            Horizontal orientation of the outlines panel 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGroupButton">
            <summary>
            Class for Expand/Collapse buttons placed in the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.OutlinesPanel"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGroupButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGroupButton">SpreadsheetGroupButton</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGroupButton.#ctor(Syncfusion.XlsIO.Parser.Biff_Records.IOutlineWrapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGroupButton">SpreadsheetGroupButton</see> class. 
            </summary>
            <param name="outlineWrapper">Holds the information about the outlines</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGroupButton.Checked">
            <summary>
            To indicate the State of the Grouping button
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGroupButton.OutlineWrapper">
            <summary>
            Gets or sets an instance of <see cref="T:Syncfusion.XlsIO.Parser.Biff_Records.IOutlineWrapper"/> which contains the information about outlines .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.Parser.Biff_Records.IOutlineWrapper"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.DataValidation">
            <summary>
            Represents the class which holds all the data validation operations in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.DataValidation.Validate(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Validating current cell data
            </summary>
            <param name="worksheet">Worksheet</param>
            <param name="currentCell">currentCell</param>
            <param name="args"></param>
            <param name="spreadsheet"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.DataValidation.FormulaDataValidation(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Datavalidation support with formulas and cell references.
            </summary>
            <param name="currentCell"> Data validation applied cell</param>
            <param name="ExcelSheet">current excel sheet</param>
            <param name="args">currentcell validating event arguments</param>
            <param name="spreadsheet"> spreadsheet need to access formulaengine</param>
            <returns>boolean result</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.DataValidation.CurrentCellIntegerDataValidation(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Integer Data validation
            </summary>
            <param name="currentCell">CurrentCell</param>
            <param name="ExcelSheet">Excelsheet</param>
            <param name="args"></param>
            <param name="spreadsheet"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.DataValidation.CurrentCellDecimalDataValidation(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Decimal Validation
            </summary>
            <param name="currentCell">CurrentCell</param>
            <param name="ExcelSheet">ExcelSheet</param>
            <param name="args"></param>
            <param name="spreadsheet"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.DataValidation.DisplayErrorMessage(Syncfusion.XlsIO.IDataValidation,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            DisplayErrorMessage while get invalid data
            </summary>
            <param name="validation">IDataValidation rule</param>
            <param name="currentCell">Current Cell</param>
            <param name="ExcelSheet">ExcelSheet</param>
            <param name="spreadsheet"></param>
            <param name="args"></param>
            <returns>result</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.DataValidation.SelectAll(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell)">
            <summary>
            select all the text on the datavalidation applied cells if the condition fails.
            </summary>
            <param name="currentCell">datavalidation applied cell</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.DataValidation.CurrentCellDateDataValidation(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Date validation
            </summary>
            <param name="currentCell">CurrentCell</param>
            <param name="ExcelSheet">Excel sheet</param>
            <param name="args"></param>
            <param name="spreadsheet"></param>
            <returns>result</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.DataValidation.CurrentCellTextLengthDataValidation(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            TextLength Validation
            </summary>
            <param name="currentCell">CurrentCell</param>
            <param name="ExcelSheet">ExcelSheet</param>
            <param name="args"></param>
            <param name="spreadsheet"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.DataValidation.CurrentCellListValuesValidation(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCurrentCell,Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.CellGrid.Helpers.CurrentCellValidatingEventArgs,Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            List validation
            </summary>
            <param name="currentCell">CurrenCell</param>
            <param name="ExcelSheet">ExcelSheet</param>
            <param name="args"></param>
            <param name="spreadsheet"></param>
            <returns>result</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.DataValidation.ValidateFormula(Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid)">
            <summary>
            Validate the formula if the cellvalue present in the list or not.
            </summary>
            <param name="rangeToConvert"></param>
            <param name="sheet"></param>
            <param name="spreadsheetgrid"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar">
            <summary>
            Class which holds the properties and operations related with controls such as NameBox, FormulaTextBox, EndEdit button and CancelEdit button in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <remarks>
            <para>The Formula Bar is located above the worksheet area of the spreadsheet. The formula bar displays the data or formula stored in the active cell.</para>
            <para>The Name Box is located next to the formula bar above the worksheet area. The Name Box normally displays the cell reference of the active cell.</para>
            <para>The EndEdit Button is used to save the entered the data and end edit the cell.</para>
            <para>The CancelEdit Button is used to revert the newly entered data and end edit the cell.</para>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar">FormulaBar</see> class. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Resizing the formulabar.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.OnPointerReleased">
            <summary>
            Used to update the NameBox when the Pointer is Released
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.UpdateNameBox">
            <summary>
            Used to update the namebox text
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.SetNameBoxText(System.String)">
            <summary>
            Used to Set the NameBox Text
            </summary>
            <param name="text">Text to be displayed in the NameBox</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.GetNameBoxText">
            <summary>
            Used to get the Text entered in the NameBox
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.WireEvents">
            <summary>
            Hook the events
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.FormulaTextBox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Refreshes formula bar here to avoid flickering of text in formula bar while typing in a cell.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.UpdateNameBoxItems">
            <summary>
            Add named ranges items to combobox.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.SpliterLocationChanged(System.Object,System.EventArgs)">
            <summary>
            Update spliter panel location
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.SpliterMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Move Spliter
            </summary>
            <param name="sender">SpliterPanel</param>
            <param name="e">MouseEvents</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.SpliterPanelMaouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Update cursor state
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.UnWireEvents">
            <summary>
            Unhook the events
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.UpdateFormulaTextBoxBinding(System.Boolean)">
            <summary>
            Used to update the formula textbox binding
            </summary>
            <param name="isEditing"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.GetCellName(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Gets the cellname for the specified range
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.AddSelection">
            <summary>
            Used to Add Selection using the Specified Text (i.e) Text entered in the NameBox
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.AddNamedRange(System.String,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Add the named range to the GridFormulaEngine and Workbook
            </summary>
            <param name="name">NamedRange Name</param>
            <param name="range">GridRangeInfo</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.Dispose">
            <summary>
            Dispose the live instances
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.FormulaBar.CreateParams">
            <summary>
            Used this to avoid the flickering in formula bar when open and close the backstage.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager">
            <summary>
            Class which provides support to find or replace the text in the document with advanced search options. 
            And also provides support to select all cells with formulas, conditional formatting, constants, data validation, etc.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.spreadsheet">
            <summary>
            Below variable is used to access the spreadsheet.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.foundRanges">
            <summary>
            Below IRange array variable is used to maintain and return the found ranges.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.foundRange">
            <summary>
            Below IRange variable is used to maintain and return the found range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.findNextPosition">
            <summary>
            Below int variable is used to move the position to Next found range.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.sheetOption">
            <summary>
            Below string variable is used to maintain the sheet option for compare with new sheet option given by the user.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.findText">
            <summary>
            Below string variable is used to maintain the find text for compare with new find text given by the user.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.searchOption">
            <summary>
            Below string variable is used to maintain the search option for compare with new search option given by the user.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.findOption">
            <summary>
            Below string variable is used to maintain the find option for compare with new find option given by the user.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.isMatchCase">
            <summary>
            Below string variable is used to maintain the match case for compare with new match case option given by the user.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.isMatchEntireCell">
            <summary>
            Below string variable is used to maintain the match entire cell content for compare with new match entire cell content given by the user.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Hold the spreadsheet instance.
            </summary>
            <param name="spreadsheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.UpdateHistoryManager(Syncfusion.XlsIO.IRange)">
            <summary>
            Maintain the history manager when perform replace and replace all operations.
            </summary>
            <param name="range">Source range that is which range is going to be replace.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.FindAll(System.String,Syncfusion.XlsIO.IWorksheet,System.String,Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns all matched ranges based on the given options. 
            <param name="searchWithinOption">Search within option is determine the find all opeartion to perform whether in workbook or worksheet.</param>
            <param name="worksheet">Need to specify the worksheet to perform find all operation.</param>
            <param name="searchText">Need to specify the search text to perform find all operation.</param>
            <param name="searchByOption">Searchby option is used to determine the find all operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the find all operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the find all operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the find all operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns found ranges in array format</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.FindNext(System.String,Syncfusion.XlsIO.IWorksheet,System.String,Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns immediate matched range from the current range based on the given options.
            <param name="searchWithinOption">Search within option is determine the find next opeartion to perform whether in workbook or worksheet.</param>
            <param name="worksheet">Need to specify the worksheet to perform find next operation.</param>
            <param name="searchText">Need to specify the search text to perform find next operation.</param>
            <param name="searchByOption">Searchby option is used to determine the find next operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the find next operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the find next operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the find next operation perform on in which cell content is matched with given find text.</param>
            <param name="isReplace">Determine whether perform replace or find next operation</param>
            <returns>Returns found range otherwise return null</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.Replace(System.String,Syncfusion.XlsIO.IWorksheet,System.String,System.String,Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns which range is going to be replace next from the current cell based on the given parameters.
            <param name="searchWithinOption">Search within option is determine the replace opeartion to perform whether in workbook or worksheet.</param>
            <param name="worksheet">Need to specify the worksheet to perform replace operation.</param>
            <param name="searchText">Need to specify the search text to perform replace operation.</param>
            <param name="replaceText">Need to specify the replace text to perform replace operation.</param>
            <param name="searchByOption">Searchby option is used to determine the replace operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the replace operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the replace operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the replace operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns found range otherwise return null</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.ReplaceAll(System.String,Syncfusion.XlsIO.IWorksheet,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Replace all matched ranges with replace text based on the given options.
            <param name="searchWithinOption">Search within option is determine the replace all opeartion to perform whether in workbook or worksheet.</param>
            <param name="worksheet">Need to specify the worksheet to perform replace all operation.</param>
            <param name="searchText">Need to specify the search text to perform replace all operation.</param>
            <param name="replaceText">Need to specify the replace text to perform replace all operation.</param>
            <param name="matchCase">Match case option is used to determine the replace all operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the replace all operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns all replaced ranges.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.IsValueChanged(System.String,System.String,Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Used to ensure whether user changed the given parameters.
            <param name="option">Need to specify option is workbook or worksheet.</param>
            <param name="searchText">Need to specify the search text.</param>
            <param name="findType">Need to specify find type is whether formula or values.</param>
            <param name="searchByOption">Need to specify searchby option is whether row wise or column wise.</param>
            <param name="matchCase">Need to specify whether match case option is enabled or disabled.</param> 
            <param name="matchEntireCell">Need to specify whether match entire cell content option is enabled or disabled.</param>
            <returns>returns boolean type</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.Replace(Syncfusion.XlsIO.IWorksheet,System.String,System.String,Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns which range is going to be replaced from the current cell within the worksheet.
            <param name="worksheet">Need to specify the worksheet to perform replace operation.</param>
            <param name="searchText">Need to specify the search text to perform replace operation.</param>
            <param name="replaceText">Need to specify the replace text to perform replace operation.</param>
            <param name="searchByOption">Searchby option is used to determine the replace operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the replace operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the replace operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the replace operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns which range is going to be replaced.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.Replace(Syncfusion.XlsIO.IWorkbook,System.String,System.String,Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns which range is going to be replaced from the current cell within the workbook.
            <param name="workbook">Need to specify the workbook to perform replace operation.</param>
            <param name="searchText">Need to specify the search text to perform replace operation.</param>
            <param name="replaceText">Need to specify the replace text to perform replace operation.</param>
            <param name="searchByOption">Searchby option is used to determine the replace operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the replace operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the replace operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the replace operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns which range is going to be replaced.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.ClearFoundRanges">
            <summary>
            Clear the found ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.OnGridCellClicked(System.Int32,System.Int32)">
            <summary>
            Invoked when click on the GridCell.
            </summary>
            <param name="row"> CurrentCell Row index</param>
            <param name="col">CurrentCell Column index</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.FindAll(Syncfusion.XlsIO.IWorkbook,System.String,Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns all matched ranges within the workbook based on the given options.
            <param name="workbook">Need to specify the workbook to perform find all operation.</param>
            <param name="searchText">Need to specify the search text to perform find all operation.</param>
            <param name="searchByOption">Searchby option is used to determine the find all operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the find all operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the find all operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the find all operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns found ranges in array format</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.FindAll(Syncfusion.XlsIO.IWorksheet,System.String,Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns all matched ranges within the specified worksheet based on the given options.
            <param name="worksheet">Need to specify the worksheet to perform find all operation.</param>
            <param name="searchText">Need to specify the search text to perform find all operation.</param>
            <param name="searchByOption">Searchby option is used to determine the find all operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the find all operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the find all operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the find all operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns found ranges in array format</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.FindNext(Syncfusion.XlsIO.IWorkbook,System.String,Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns immediate matched range from the current range within the workbook based on the given options.
            <param name="workbook">Need to specify the workbook to perform find next operation.</param>
            <param name="searchText">Need to specify the search text to perform find next operation.</param>
            <param name="searchByOption">Searchby option is used to determine the find next operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the find next operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the find next operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the find next operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns found range.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.FindNext(Syncfusion.XlsIO.IWorksheet,System.String,Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchBy,Syncfusion.XlsIO.ExcelFindType,System.Boolean,System.Boolean)">
            <summary>
            Returns immediate matched range from the current range within the specified worksheet based on the given options.
            <param name="worksheet">Need to specify the worksheet to perform find next operation.</param>
            <param name="searchText">Need to specify the search text to perform find next operation.</param>
            <param name="searchByOption">Searchby option is used to determine the find next operation performed in row wise or column wise.</param>
            <param name="findType">Find type option is used to determine the find next operation perform whether on formulas or values.</param>
            <param name="matchCase">Match case option is used to determine the find next operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the find next operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns found range.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.ReplaceAll(Syncfusion.XlsIO.IWorksheet,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns replaced ranges within the specified worksheet based on the given options.
            <param name="worksheet">Need to specify the worksheet to perform replace all operation.</param>
            <param name="searchText">Need to specify the search text to perform replace all operation.</param>
            <param name="replaceText">Need to specify the replace text to perform replace all operation.</param>
            <param name="matchCase">Match case option is used to determine the replace all operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the replace all operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns replaced ranges.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.ReplaceAll(Syncfusion.XlsIO.IWorkbook,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns replaced ranges within the workbook based on the given options.
            <param name="workbook">Need to specify the workbook to perform replace all operation.</param>
            <param name="searchText">Need to specify the search text to perform replace all operation.</param>
            <param name="replaceText">Need to specify the replace text to perform replace all operation.</param>
            <param name="matchCase">Match case option is used to determine the replace all operation perform whether on case sensitive text or not.</param>
            <param name="matchEntireCell">Match entire cell contents option is used to determine the replace all operation perform on in which cell content is matched with given find text.</param>
            <returns>Returns all replaced ranges.</returns>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.FindFormulas(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns ranges which have formulas within the specified worksheet..
            </summary>
            <param name="worksheet">Need to specify the worksheet to find the formulas.</param>
            <returns>Returns array ranges</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.FindConstants(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns ranges which have constants within the specified worksheet..
            </summary>
            <param name="worksheet">Need to specify the worksheet to find the constants.</param>
            <returns>Returns array ranges</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.FindDataValidation(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns ranges which have data validation within the specified worksheet..
            </summary>
            <param name="worksheet">Need to specify the worksheet to find the datavalidation applied range.</param>
            <returns>Returns array ranges</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.FindConditionalFormatting(Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Returns ranges which have conditional formatting within the specified worksheet..
            </summary>
            <param name="worksheet">Need to specify the worksheet to find the conditional format applied ranges.</param>
            <returns>Returns array ranges.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchManager.Dispose">
            <summary>
            Dispose maintained instances.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.SearchBy">
            <summary>
            Provides option to determine whether search have performed in row or column wise.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.NamespaceDoc">
            <summary>
            Contains classes which are required to create Spreadsheet.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet">
            <summary>
            SfSpreadsheet is a control for viewing, editing and creating Excel files.
            </summary>
            <remarks>SfSpreadsheet is an Excel inspired control which represents the data as cells organized in the form of rows and columns 
            It is built on XlsIO which features a full-fledged object model similar to the Microsoft Office Automation libraries.</remarks>
            <example>
            	<code lang="XAML">
            		<Window x:Class="SpreadsheetDemo.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Title="Window1" Height="300" Width="300" xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
            			<Grid>
            				<syncfusion:SfSpreadsheet x:Name="spreadsheet" />  				
            			</Grid>
            		</Window>
            	</code>
            	<code lang="C#">
            using System;
            using System.Windows;
            using System.IO;
            using System.Windows.Controls;
            using System.Windows.Input;
            using System.Windows.Media;
            using using Syncfusion.UI.Xaml.Spreadsheet;
            namespace SpreadsheetDemo
            {
            /// <summary>
            /// Interaction logic for MainWindow.xaml
            /// </summary>
            public partial class MainWindow : Window
            {
            public Window1()
            {
              InitializeComponent();
              SfSpreadsheet spreadsheet = new SfSpreadsheet();
              grid.Children.Add(spreadsheet);
            }
            }
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.isDisposingInstance">
             <summary>
            Gets the state of the  Old instance disposing.
            When a huge workbook imported in Spreadsheet. Its formulas are parsing by background thread.
            When suddenly opened new workbook  or other workbook. Backgroup execution should be stopped.
            Suppose if missed, Thread will try to get the value for disposed workbook.
            The field should not be used for any other purpose.
             </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:SfSpreadsheet">SfSpreadsheet</see> class. 
            </summary>        
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SelectRanges(System.String)">
            <summary>
            Used to select the ranges based on given cell reference.
            </summary>
            <param name="nameBoxText">Namebox which have cell reference for select the ranges in the spreadsheet.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.OnRequestCellReferenceNavigate(System.String)">
            <summary>
            Used to navigate the cell based on given cell reference.
            </summary>
            <param name="nameBoxText">Namebox which have cell reference for cell navigation in the spreadsheet.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.OnCreateControl">
            <summary>
            When overridden in a derived class, is invoked whenever application code or
            internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
            <remarks>Builds a visual tree for the <see cref="!:SfSpreadsheet"/> when a new template is applied.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SetWorkbook(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Used to set the workbook and create the predefined styles in the workbook.
            </summary>
            <param name="workbook"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.OpenFile(System.IO.Stream)">
            <summary>
            Opens the excel workbook with the given stream.
            </summary>
            <param name="file">Stream of the file to be imported.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.ImportNamedRanges">
            <summary>
            Used to add the NamedRanegs in the Workbook in a collection
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.GetDefaultCellContextMenu">
            <summary>
            Create the default context menu with specified menu items like in MSExcel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.GetToolStripItems">
            <summary>
            Customize the copy paste options tool strip based on the clipboard and source range content.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.FindContextMenuPosition">
            <summary>
            Calculate the context menu position based on the context menu view in the screen. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.pastevalueformat_Click(System.Object,System.EventArgs)">
            <summary>
            Paste commands needs to execute when click the paste value format icon.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.pasteformula_Click(System.Object,System.EventArgs)">
            <summary>
            paste formula commands needs to execute when click the paste formula icon in option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.pasteformat_Click(System.Object,System.EventArgs)">
            <summary>
            paste format commands needs to execute when click the paste format icon in option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.pastevalue_Click(System.Object,System.EventArgs)">
            <summary>
            paste value commands needs to execute when click the paste value icon in option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.pasteall_Click(System.Object,System.EventArgs)">
            <summary>
            paste commands needs to execute when click the paste icon in option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.removeyperlink_Click(System.Object,System.EventArgs)">
            <summary>
            Remove hyperlink command needs to execute when click the remove hyperlink option in contextmenu.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.openhyperlink_Click(System.Object,System.EventArgs)">
            <summary>
            Open hyperlink command needs to execute when click the open hyperlink option in contextmenu.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.edithyperlink_Click(System.Object,System.EventArgs)">
            <summary>
            Edit hyperlink command needs to execute when click the edit hyperlink option in contextmenu.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.inserthyperlink_Click(System.Object,System.EventArgs)">
            <summary>
            Insert hyperlink command needs to execute when click the insert hyperlink option in contextmenu.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.formatcells_Click(System.Object,System.EventArgs)">
            <summary>
            Define format cells command need to execute when click the format cells option in contextmenu.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.definename_Click(System.Object,System.EventArgs)">
            <summary>
            Define name command needs to execute when click the define name option in contextmenu.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.deletecomment_Click(System.Object,System.EventArgs)">
            <summary>
            delete comments command needs to execute when click the delete comment option in contextmenu.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.editcomment_Click(System.Object,System.EventArgs)">
            <summary>
            Edit comments command needs to execute when click the edit comment option in contextmenu.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.insertcomment_Click(System.Object,System.EventArgs)">
            <summary>
            Insert comments command needs to execute when click the insert comment option in contextmenu.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.unhidecol_Click(System.Object,System.EventArgs)">
            <summary>
            Need to unhide the rows or column based on the contextmenu option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.hidecol_Click(System.Object,System.EventArgs)">
            <summary>
            Need to hide the rows or column based on the contextmenu option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.columnwidth_Click(System.Object,System.EventArgs)">
            <summary>
            Need to set the columnwidth and rowheight based on the context menu option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.clearcontents_Click(System.Object,System.EventArgs)">
            <summary>
            Needs to execute the clear command option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.deletecells_Click(System.Object,System.EventArgs)">
            <summary>
            Needs to execute the delete rows or columns commands based on the option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.insertcells_Click(System.Object,System.EventArgs)">
            <summary>
            Needs to execute the insertcells command option based on the contextmenu option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.copy_Click(System.Object,System.EventArgs)">
            <summary>
            Needs to execute the copy command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.cut_Click(System.Object,System.EventArgs)">
            <summary>
            Needs to execute the cut command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.GetDefaultTabItemContextMenu">
            <summary>
            Create the context menu strip with default items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.unhidesheet_Click(System.Object,System.EventArgs)">
            <summary>
            Command needs to unhide the sheet. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.hidesheet_Click(System.Object,System.EventArgs)">
            <summary>
            Commands needs to hides the sheet.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.rename_Click(System.Object,System.EventArgs)">
            <summary>
            commands needs to rename the sheet.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.protectsheet_Click(System.Object,System.EventArgs)">
            <summary>
            commands needs to protect the sheet.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.deletesheet_Click(System.Object,System.EventArgs)">
            <summary>
            commands needs to delete the sheet.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.insertsheet_Click(System.Object,System.EventArgs)">
            <summary>
            commands needs to insert the sheet.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.ExcelTabControl_TabBarMouseDown(System.Object,Syncfusion.Windows.Forms.TabBarSelectionArgs)">
            <summary>
            Customize the contextmenu items based on the sheet visibility.
            </summary>
            <param name="sender"></param>
            <param name="arg"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.UpdateTabSheetName(System.String,System.String)">
            <summary>
            Update the sheet name to grid and worksheets in XlsIO if renamed.
            </summary>
            <param name="currentSheetName"></param>
            <param name="prevSheetName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.CheckTabSheetNameExists(System.String,System.String)">
            <summary>
            Used to find the sheet name is already exists in worksheets.
            </summary>
            <param name="prevSheetName"></param>
            <param name="currentSheetName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.Bar_SelectedIndexChanging(System.Object,Syncfusion.Windows.Forms.SelectedIndexEventArgs)">
            <summary>
            Occurs when the selected index of the tab changes.
            </summary>
            <remarks>This event is used to cancel or allow the selection of tab</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.InitializeGrid(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.XlsIO.ITabSheet,Syncfusion.Windows.Forms.TabBarPage)">
            <summary>
            Initializes the Grid with Default Row Count and Default Column count
            </summary>
            <param name="grid">Spreadhseet Grid to be Initialized</param>
            <param name="sheet">Sheet to be loaded in the grid</param>
            <param name="tab"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.InitializeOutlinesPanels">
            <summary>
            To Initialize Outlines Panels
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.RefreshFormulaBarRowDefinition">
            <summary>
            To refresh the formula bar visibility whether to visible or hidden
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.GetDecryptedStream(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Convert encrypted stream into decrypted stream.
            ZipArchive can't open encrypted file. So we have decrypt it.
            </summary>
            <param name="encryptedWorkbook"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.CreateCustomXML">
            <summary>
            CalcChain.xml support not available in XlsIO. So we have maintained formula cells manually and stored as Custom.Xml.
            Whenever specified workbook(Saved by XlsIO) open by SfSpreadsheet, formula cells can read from Custom.xml.
            FYI-> If the file opened by excel, it will create CalcChain.xml
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SuspendFormulaCalculation">
            <summary>
            Suspends the automatic formula calculation
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.ResumeFormulaCalculation">
            <summary>
            Resumes the automatic formula calculation
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.RenameSheet(System.String,System.String)">
            <summary>
            Renames the specified sheet name in Spreadsheet.
            </summary>
            <param name="oldName">Old name of the sheet.</param>
            <param name="newName">New name of the sheet.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.AddSheet">
            <summary>
            Adds a new worksheet in the workbook.
            </summary>
            <remarks>By default, this method sets the index for the newly added sheet.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.AddSheet(System.String,System.Int32)">
            <summary>
            Add the new worksheet at the given position.
            </summary>
            <param name="name">Name of the sheet.</param>
            <param name="insertAt">Index position where the sheet is to be inserted.</param>
            <remarks>Inserts the newly added sheet at the user defined position.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.RemoveSheet(System.String)">
             <summary>
             Removes the specified sheet from the Workbook.
             </summary>
             <param name="name">Name of the sheet to be removed.</param>
            <remarks>If the total sheet count is 1 or if the sheet contains some data, then a warning message is shown. </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.HideSheet(System.String)">
            <summary>
            Hides the specified sheet in the workbook.
            </summary>
            <param name="name">Name of the sheet to be hided.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.UnhideSheet(System.String)">
            <summary>
             Unhides the specified sheet in the workbook.
            </summary>
            <param name="name">Name of the sheet to be unhided.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.Create(System.Int32)">
            <summary>
            Creates a new workbook with sheets based on the sheet count.
            </summary>
            <param name="sheetCount">Number of sheets to be present in the workbook.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.Open(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Opens the specifed workbook in <see cref="!:SfSpreadsheet"/> .
            </summary>
            <param name="workbook">An instance of <see cref="T:Syncfusion.XlsIO.IWorkbook"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.Open(System.IO.Stream)">
            <summary>
            Opens the excel workbook with the given stream.
            </summary>
            <param name="file">Stream of the file to be imported.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.Open(System.String)">
            <summary>
            Opens the excel workbook with the given file name.
            </summary>
            <param name="file">Name of the file to be imported.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SaveAs(System.String)">
            <summary>
            Save the changes that are made in the specified file name.
            </summary>
            <param name="filename">file name to save into</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SaveAs(System.IO.Stream)">
            <summary>
            Save the workbook as stream.
            </summary>
            <param name="stream">Stream that will receive workbook data</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.Save">
            <summary>
            Save the changes that are made in the file else if file is not created yet, then it prompts to enter the filename to save
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SaveAs">
            <summary>
            Save the changes made in the file using SaveFileDialog.
            </summary>
            <returns>True if the file saved successfully; otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.UnProtectSheet(Syncfusion.XlsIO.IWorksheet,System.String)">
            <summary>
            Unprotect the worksheet with given password.
            </summary>
            <param name="worksheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="password">Password to unlock.</param>
            <returns>Returns true if the sheet is unprotected ,else false.</returns>       
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.ProtectSheet(Syncfusion.XlsIO.IWorksheet,System.String)">
            <summary>
            Protects the worksheet's content with password.
            </summary>
            <param name="worksheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="password">Password to lock.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.ProtectSheet(Syncfusion.XlsIO.IWorksheet,System.String,Syncfusion.XlsIO.ExcelSheetProtection)">
            <summary>
            Protects the worksheet based on option.
            </summary>
            <param name="worksheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="password">Password to lock.</param>
            <param name="option">One of the enum options <see cref="T:Syncfusion.XlsIO.ExcelSheetProtection"/>, which user selected.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.Protect(System.Boolean,System.Boolean,System.String)">
            <summary>
            Protect the workbook with the specified password.
            </summary>
            <param name="isProtectWindow">Indicates if workbook window is to be protected.</param>
            <param name="isProtectContent">Indicates if workbook content is to be protected.</param>
            <param name="password">Password to protect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.Unprotect(System.String)">
            <summary>
            Unprotect the workbook with the specified password.
            </summary>
            <param name="password">Password to unprotect.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SetZoomFactor(System.String,System.Int32)">
            <summary>
            Sets the zoom level of the worksheet. Value must be within 50 to 400.
            </summary>
            <param name="sheetName">Name of the <see cref="!:IWorksheeet"/>.</param>
            <param name="zoomFactor">Zoom factor.</param>
            <remarks>The value with 0 indicates there is no zoom applied to the control.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.OnZoomFactorChanging(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.Int32@,Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomTrigger)">
            <summary>
            Used to trigger ZoomFactorChanging event
            </summary>
            <param name="grid"></param>
            <param name="zoomFactor"></param>
            <param name="trigger"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.OnZoomFactorChanged(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,System.Int32,Syncfusion.Windows.Forms.Spreadsheet.Helpers.ZoomTrigger)">
            <summary>
            Used to trigger ZoomFactorChanged event.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.ChangeColumnWidth(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Double)">
            <summary>
            Used to Change the Column Width
            </summary>
            <param name="gridRange"></param>
            <param name="width">value to be set as width</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.ChangeRowHeight(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Double)">
            <summary>
            Change the Row Height for the Specified range
            </summary>
            <param name="gridRange">grid range where the height to be changed </param>
            <param name="height">height to be changed for the specified range</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.ChangeDefaultColumnWidth(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,System.Double)">
            <summary>
            Change the Default Column Width for the Specified Sheet
            </summary>
            <param name="worksheet"></param>
            <param name="gridRange"></param>
            <param name="standardwidth"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.Group(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.XlsIO.ExcelGroupBy)">
            <summary>
            Used to Group the specified range in the <see cref="!:SfSpreadsheet"/>.
            </summary>
            <param name="worksheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="gridRange">Range to be grouped.</param>
            <param name="GroupBy">Grouping Types such as group by rows or group by columns.</param>
            <remarks>Based on the group types, the specified range is grouped in the <see cref="!:SfSpreadsheet"/>.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.UnGroup(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo,Syncfusion.XlsIO.ExcelGroupBy)">
            <summary>
            Used to UnGroup the specified range in the <see cref="!:SfSpreadsheet"/>.
            </summary>
            <param name="worksheet">An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="gridRange">Range to be ungrouped.</param>
            <param name="GroupBy">Grouping Types such as group by rows or group by columns.</param>
            <remarks>Based on the group types, the specified range is ungrouped in the spreadsheet.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.RefreshOutlines(System.Boolean,System.Boolean)">
            <summary>
            Used to refresh the outline(grouping) elements in the worksheet.
            </summary>
            <param name="refreshRows">True if you need to refresh rows;otherwise false.</param>
            <param name="refreshColumns">True if you need to refresh columns;otherwise false.</param>
            <remarks>This function is invoked while Insert, Delete,Hide and Unhide of rows/columns are perfomed to refresh the outline panel elements.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.AddNamedRange(System.String,System.String,System.String)">
            <summary>
            Used to add new name for the specified range in the workbook.
            </summary>
            <param name="namerange">Name of the range.</param>
            <param name="refersto">Address for the range.</param>
            <param name="scope">scope of the named range. It can be workbook or any worksheet in a workbook. If any worksheet name is provided, then the name can be used only within that worksheet.</param>
            <remarks>
            The address should be a string such as Sheet1!$D$5.
            </remarks>
            <example>
            <code lang="C#">
            spreadsheet.AddNamedRange("sample", "A3:B3", "Sheet1");
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.EditNamedRange(System.String,System.String,Syncfusion.XlsIO.IName)">
            <summary>
            Used to edit the already defined name in the workbook.
            </summary>
            <param name="namerange">New name for the range.</param>
            <param name="refersto">Address for the range.</param>
            <param name="name">An interface of <see cref="T:Syncfusion.XlsIO.IName"/>.</param>
            <remarks>       
            It also updates the named range collection and the NameBox.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.DeleteNamedRange(Syncfusion.XlsIO.IName)">
            <summary>
            Used to delete the defined name for the ranges in the workbook.
            </summary>
            <param name="iname">An instace of <see cref="T:Syncfusion.XlsIO.IName"/>.</param>
            <remarks>Removes the name object from collection and also updates the namebox. </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SetGridLinesVisibility(System.Boolean)">
            <summary>
            Used to set the visibility of the grid lines in <see cref="!:SfSpreadsheet"/>.
            </summary>
            <param name="isVisible">True or False.</param>
            <remarks>if true, then the grid lines are displayed; else no grid lines are displayed in the view.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SetRowColumnHeadersVisibility(System.Boolean)">
            <summary>
            Used to set the visibility of row/column header in <see cref="!:SfSpreadsheet"/>.
            </summary>
            <param name="isVisible">True or false.</param>
            <remarks>If true, header row/column are visible;otherwise header rows/column are hidden. </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SetActiveSheet(System.String)">
            <summary>
            Used to change the active sheet of the Spreadsheet.
            </summary>
            <param name="sheetName">Name of the sheet to be activated</param>
            <returns>If true, mentioned sheet is activated.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.GetNameRange(Syncfusion.XlsIO.IName)">
            <summary>
            Gets the NameRange object for specified name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.UpdateNameRanges(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>        
            Need to update the NamedRanges in spreadsheet and formula engine while delete/insert the rows and columns.
            </summary>
            <param name="activerange"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SetCurrentGridChanged(System.String)">
            <summary>
            To set the properties for changed Grid
            </summary>
            <param name="sheetName">Name of the Sheet</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.RefreshRowGroupPanel">
            <summary>
            Sets the RowGroupPanel Width when the OutlineRowCount greater than 0 and Invalidates the RowGroupPanel
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.DisplayMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Displays the message boxes in SfSpreadsheet if the display alert is set to true.
            </summary>
            <returns>True or False</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.RefreshColumnGroupPanel">
            <summary>
            Sets the ColumnGroupPanel Height when the ColumnOutlineLevels are greater than 0 and Invalidate the ColumnGroupPanel
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.RefreshCurrentCell">
            <summary>
            Refreshes the CurrentCellValue
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.RaiseCellRequestNavigate(Syncfusion.Windows.Forms.CellGrid.Helpers.CellRequestNavigateEventArgs)">
            <summary>
            Hyperlink bookmark support that is to navigate cells between different sheets or same sheets.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SetGroupingSettings(System.Boolean)">
            <summary>
            To set the Grouping Settings (i.e) to set the Page Setup for the Active Sheet
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.OnCreateCommands">
            <summary>
            Create commands during the initialization of <see cref="!:SfSpreadsheet"/>.
            </summary>
            <returns>An instance of <see cref="!:Spreadsheet.Commands.Commands"/>. </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.OnWorkbookUnloaded(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Invoked to unload or clean the objects of the workbook in <see cref="!:SfSpreadsheet"/>. 
            </summary>
            <remarks>This method raises the <see cref="!:SfSpreadsheet.WorkbookUnloaded"/> event and it is the last event to be called while removing the workbook object.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.OnWorkbookLoaded">
            <summary>
            Invoked to load the objects of the workbook in <see cref="!:SfSpreadsheet"/>.
            </summary>
            <remarks>This method raises the <see cref="!:SfSpreadsheet.WorkbookLoaded"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.OnWorksheetAdding(Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetAddingEventArgs)">
            <summary>
            Invoked when a new worksheet is going to be added in <see cref="!:SfSpreadsheet"/>.
            </summary>
            <param name="args">An <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Helpers.WorksheetAddingEventArgs">WorksheetAddingEventArgs</see> that contains the event data.</param>
            <returns>True or False.</returns>
            <remarks>This method raises the <see cref="E:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.WorksheetAdding"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.OnWorksheetAdded(System.String)">
            <summary>
            Invoked when a new worksheet is added in <see cref="!:SfSpreadsheet"/>.
            </summary>
            <param name="name">Name of the worksheet to be added.</param>
            <remarks>This method raises the <see cref="!:SfSpreadsheet.WorksheetAdded"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.OnWorksheetRemoved(System.String)">
            <summary>
            Invoked when a worksheet is removed in <see cref="!:SfSpreadsheet"/>.
            </summary>
            <param name="name">Name of the worksheet.</param>
            <remarks>This method raises the <see cref="!:SfSpreadsheet.WorksheetRemoved"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.OnWorksheetRemoving(System.String)">
            <summary>
            Invoked when a worksheet is going to be removed in <see cref="!:SfSpreadsheet"/>.
            </summary>
            <param name="name">Name of the worksheet.</param>
            <returns>True or False.</returns>
            <remarks>This method raises the <see cref="!:SfSpreadsheet.WorksheetRemoving"/> event.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.DisposeOldInstances(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Disposes the Old instances that are maintained
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.Dispose">
            <summary>
            Dispose all the resources used by the Spreadsheet.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the Spreadsheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SelectedTabItem">
            <summary>
            Gets or sets the selected tab item of spreadsheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SelectedTabIndex">
            <summary>
            Gets or sets the selected tab index of Spreadsheet
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.BusyIndicator">
            <summary>
            Holds the instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.BusyIndicator"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.CopyPaste">
            <summary>
            Holds the instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetCopyPaste"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.GraphicCopyPaste">
            <summary>
            Holds the instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.GraphicCells.GraphicCopyPasteController"/> used to perform cut,copy,paste operations on ShapeImpl (TextBox, Picture, Charts, etc.).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SearchManager">
            <summary>
            Holds the instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SearchManager"/> class that used to find or replace the text in the document with advanced search options.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.GridCollection">
            <summary>
            Gets the collection of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.
            </summary>
            <value>A collection that contains the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.AllowZooming">
            <summary>
            Gets or sets a value indicating whether to allow the end users to zoom the <see cref="!:SfSpreadsheet"/> or not .
            </summary>
            <value><see langword="true"/> if the user can perform the zooming in sfspreadsheet; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.AllowTabItemContextMenu">
            <summary>
            Gets or sets a value indicating whether the context menu for the TabItem in <see cref="!:SfSpreadsheet"/> is displayed or not.
            </summary>
            <value><see langword="true"/>if the user wants to display the TabItem context menu ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.TabItemContextMenu">
             <summary>
             Gets or sets a value indicating the context menu items in TabItem of <see cref="!:SfSpreadsheet"/>.
             </summary>
            <value>An instance of <see cref="T:System.Windows.Forms.ContextMenu"/></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.IsCustomTabItemContextMenuEnabled">
            <summary>
            Gets or sets a value indicating whether the Custom context menu of TabItem in <see cref="!:SfSpreadsheet"/> can be enabled or not.
            </summary>
            <value><see langword="true"/> if the custom TabItem context menu is enabled ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.AllowCellContextMenu">
            <summary>
            Gets or sets a value indicating whether the  context menu for cells in <see cref="!:SfSpreadsheet"/> is to be displayed or not .
            </summary>
            <value><see langword="true"/> if the user wants to display the cell level context menu; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.Commands">
            <summary>
            Gets or sets the value indicating the instance of <see cref="!:Commands.Commands"/>/&gt; for performing the common actions in <see cref="!:SfSpreadsheet"/> .
            </summary>
            <value>An instance of <see cref="!:Commands.Commands"/>.</value>     
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.HistoryManager">
            <summary>
            Gets the instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.HistoryManager"/> which maintains the undo/redo operations in <see cref="!:SfSpreadsheet"/>.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.HistoryManager"/>.</value>
            <remarks>By default, it is enabled in <see cref="!:SfSpreadsheet"/> and it maintains in the command stack.</remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.FileName">
            <summary>
            Gets or sets the value indicating the name of the file in <see cref="!:SfSpreadsheet"/>.
            </summary>
            <value>Name of the file.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.AllowExtendRowColumnCount">
            <summary>
            Gets or sets a value indicating whether the row/column count in <see cref="!:SfSpreadsheet"/> can be extended or not .
            </summary>
            <value><see langword="true"/> if the row and column count can be extended in <see cref="!:SfSpreadsheet"/>; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.DefaultRowCount">
            <summary>
            Gets or sets a value indicating the default row count used by the <see cref="!:SfSpreadsheet"/> .
            </summary>
            <value>Number of rows.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.DefaultColumnCount">
            <summary>
            Gets or sets a value indicating the default column count used by the <see cref="!:SfSpreadsheet"/>.
            </summary>
            <value>Number of columns</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.DisplayAlerts">
            <summary>
            Gets or sets a value indicating whether warning or alert messages should be shown in Spreadsheet or not.
            </summary>
            <value>True or False.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.ActiveGrid">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/> for Active sheet .
            </summary>
            <value>An instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.Workbook">
            <summary>
            Gets the value indicating the instance of  <see cref="T:Syncfusion.XlsIO.IWorkbook"/> which represents an Excel Workbook.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IWorkbook"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.ActiveSheet">
            <summary>
            Gets or sets a value indicating the instance of active <see cref="T:Syncfusion.XlsIO.IWorksheet"/> of Workbook.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.CurrentCellRange">
            <summary>
            Gets the value indicating the instance of  <see cref="T:Syncfusion.XlsIO.IRange"/> of current cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IRange"/>. </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.CurrentCellStyle">
            <summary>
            Gets the value indicating the instance of <see cref="T:Syncfusion.XlsIO.IStyle"/> of current cell.
            </summary>
            <value>An instance of <see cref="T:Syncfusion.XlsIO.IStyle"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.CurrentCellValue">
            <summary>
            Gets  the value of the current cell in <see cref="!:SfSpreadsheet"/> .
            </summary>
            <value>Value of the current cell.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.FormulaRangeSelectionController">
            <summary>
            Gets or sets the  <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.FormulaRangeSelectionController"/> for formula range selection.
            </summary>
            <value>An instance of <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.FormulaRangeSelectionController"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.AllowFormulaRangeSelection">
            <summary>
            Gets or sets a value indicating whether the user is allowed to perform the formula range selection in <see cref="!:SfSpreadsheet"/> or not.
            </summary>
            <value><see langword="true"/> if the user can perform the formula range selection ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.FormulaBarVisibility">
            <summary>
            Gets or sets the visibilty of formulabar.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.ShowBusyIndicator">
            <summary>
            Gets or sets the value indicating whether <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.BusyIndicator"/> is to be displayed in Spreadsheet or not.
            </summary>
            <value><see langword="true"/> if the busy indicator is to be displayed ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.GraphicChartCellRenderer">
            <summary>
            Gets or sets the GraphicCellRenderer for Chart
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.Graphic3DChartCellRenderer">
            <summary>
            Gets or sets the GraphicCellRenderer for 3D-Chart
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SparklineCellRenderer">
            <summary>
            Gets or sets the CellRenderer for Sparkline
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.NamedRanges">
            <summary>
            Contains all the NamedRanges in the Workbook
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.IsFormulaParsingInProgress">
            <summary>
            Gets/Sets the value to find out an initial formula parsing completed or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.HasSelectedRange">
            <summary>
            Determines whether the grid has selection on single cell or multiple cells
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.SheetCollection">
            <summary>
            Holds the collection of the worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.ParsedFormulas">
            <summary>
            Formulas are parsed into the formula engine and tha parsed values are stored in the list for reusing, when calculating the value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.DirtyCells">
             <summary>
            Holds the collection of the dirty cells of the specified precedent cell. 
             While updating precedent cell, It holds the collection which needs to be calculate.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.CalculatedValue">
            <summary>
            While updating the precedent cells, the dependency cells has been recalculated and stored in the list.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.EditedCells">
            <summary>
            Holds edited cell collection for formula optimization.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.ParsedFormulaCount">
            <summary>
            Gets/sets the parsed formula count at run time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.TotalFormulasCount">
            <summary>
            The number of formulas are present for initial parsing.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.FilePath">
            <summary>
            Gets or sets the Path of the Excel File to be opened
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.FormatStyle">
            <summary>
            Returns the <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.FormatStyle"/> which is used to apply the 
            formatted(conditional format,table format or some other custom format) style while rendering.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.HeaderStyle">
            <summary>
            Returns the <see cref="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.HeaderStyle"/> which is used to apply formatted style for header cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.FormulaCellsList">
            <summary>
            Holds the collection of the formula cells in XML format.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.ZoomFactorChanged">
            <summary>
            Occurs when the zoom factor in <see cref="!:SfSpreadsheet"/> is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.ZoomFactorChanging">
            <summary>
            Occurs when the zoom factor in <see cref="!:SfSpreadsheet"/> is going to be changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.WorkbookCreating">
            <summary>
            Occurs when new <see cref="T:Syncfusion.XlsIO.IWorkbook"/> is going to be created in <see cref="!:SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.WorksheetAdding">
            <summary>
            Occurs when new <see cref="T:Syncfusion.XlsIO.IWorksheet"/> is going to be added in <see cref="!:SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.WorksheetAdded">
            <summary>
            Occurs when new <see cref="T:Syncfusion.XlsIO.IWorksheet"/> is added in <see cref="!:SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.WorksheetRemoving">
            <summary>
            Occurs when the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> is going to be removed in <see cref="!:SfSpreadsheet"/>
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.WorksheetRemoved">
            <summary>
            Occurs when the <see cref="T:Syncfusion.XlsIO.IWorksheet"/> is removed in SfSpreadsheet.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.WorkbookUnloaded">
            <summary>
            Occurs after the exisiting <see cref="T:Syncfusion.XlsIO.IWorkbook"/> is unloaded from <see cref="!:SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.WorkbookLoaded">
            <summary>
            Occurs after the <see cref="T:Syncfusion.XlsIO.IWorkbook"/> is loaded into <see cref="!:SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.PropertyChanged">
            <summary>
            Occurs when property value has changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet.PropertyChanging">
            <summary>
            Occurs when property value is changing.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetListener">
            <summary>
            Holds the information about all the actions related with cell, worksheet and workbook in <see cref="!:SfSpreadsheet"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetListener">SpreadsheetListener</see> class. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.NameRange">
            <summary>
            Represents the class which holds the information regarding the Named Ranges in the SfSpreadsheet. <b>It is used for internal purpose</b>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.NameRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.NameRange">NameRange</see> class. 
            </summary>      
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.NameRange.Name">
            <summary>
            Gets or sets the value indicating the name of the named ranges.
            </summary>
            <value>Name of the range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.NameRange.RefersTo">
            <summary>
            Gets or sets the value indicating the cell address of the named ranges.
            </summary>
            <value>Cell Address.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.NameRange.Scope">
            <summary>
            Gets or sets the value indicating the scope for the named ranges.
            </summary>
            <value>Scope for the range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.NameRange.Visible">
            <summary>
            Gets or sets the value indicates whether the name is visible or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.NameRange.RefersToRange">
            <summary>
            Gets or sets the value indicates the reference range.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.NameRange.PropertyChanged">
            <summary>
            Occurs when a property is changed on the component. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandExtensions">
            <summary>
            Provides the Interaction logic for commands in SfSpreadsheet
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandExtensions.FocusActiveGrid(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Set the Focus to the Active SpreadsheetGrid<see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SpreadsheetGrid"/>
            </summary>
            <param name="spreadsheet">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandExtensions.ChangeFontFamily(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Changes the font family for the selected cell/range of cells.
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/> </param>
            <param name="fontFamily">Name of the FontFamily to be changed</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandExtensions.ChangeFontSize(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.Double)">
            <summary>
            Changes the size of the font for the selected cell/range of cells.
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="size">Size of the Font to be changed</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandExtensions.ChangeFillColor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.Drawing.Color)">
            <summary>
            Fills the color for the Selected cell/range of cells.
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="fillColor">Color to be Filled in the selected range</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandExtensions.ChangeFontColor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.Drawing.Color)">
            <summary>
            Changes the color of the font for the selected cell/range of cells.
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="fontColor">Font Color to be changed</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandExtensions.FormatIndent(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.Boolean)">
            <summary>
            For changing the alignment of the selected cell/range of cells.
            </summary>
            <param name="spreadsheet">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="canincrease">True or False</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandExtensions.FormatIndentLevel(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.Int32)">
            <summary>
            Set the indent based on the indent level value for the selected cell/range of cells
            </summary>
            <param name="spreadsheet">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="size">The indent level for the range</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandExtensions.ConvertColor(System.Drawing.Color)">
            <summary>
            Converts ARGB to the color 
            </summary>
            <param name="color">Color to be converted</param>
            <returns>Color</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandExtensions.ChangeNumberFormat(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Sets the NumberFormat for the selected cell/range of cells
            </summary>
            <param name="SfSpreadsheet">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="numberFormat">The number format to be set for the cell</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandExtensions.SetDatesOccuringConditionalFormat(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,System.String,Syncfusion.XlsIO.CFTimePeriods)">
            <summary>
            Set the dates occuring conditional formats in range based on the input from conditional format ribbon window.
            </summary>
            <param name="currentworksheet">current spreadsheet</param>
            <param name="range">XlsIO range</param>
            <param name="style">style name</param>
            <param name="timeperiodtype">XlsIO time period type </param>
            <param name="sfspreadsheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandExtensions.SetContainsConditionalFormat(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,System.String,System.String,Syncfusion.XlsIO.ExcelComparisonOperator)">
            <summary>
            Set the contains text conditional formats in range based on the input from conditional format ribbon window.
            </summary>
            <param name="currentworksheet">current spreadsheet</param>
            <param name="range">XlsIO range</param>
            <param name="value">condition value</param>
            <param name="style">style name</param>
            <param name="Operator">XlsIO operator such as greater,less</param>
            <param name="sfspreadsheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandExtensions.SetConditionConditionalFormat(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,System.String,System.String,System.String,Syncfusion.XlsIO.ExcelComparisonOperator)">
            <summary>
            Set the conditional formats based on the cell value in range with input from conditional format ribbon window.
            </summary>
            <param name="currentworksheet">current spreadsheet</param>
            <param name="range">XlsIO range</param>
            <param name="value1">condition value1</param>
            <param name="value2">condition value2</param>
            <param name="style">style name</param>
            <param name="Operator">XlsIO operator such as greater,less</param>
            <param name="sfspreadsheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandExtensions.SetConditionalFormatStyle(System.String,Syncfusion.XlsIO.IConditionalFormat)">
            <summary>
            Set the conditional format style into XlsIO based on the style option chosen from conditionalformat style ribbon combobox.
            </summary>
            <param name="style">different combination of styles</param>
            <param name="condition">XlsIO IConditionalFormat</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CommandExtensions.ApplyDataValidation(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.ExcelDataType,Syncfusion.XlsIO.ExcelDataValidationComparisonOperator,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Apply the data validation for the selected range of cells with the specified criterias
            </summary> 
            <param name="spreadsheet">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="worksheet">Current worksheet</param>
            <param name="validationRange">Range where the data validation applied</param>
            <param name="allowType">Type of Validation test to be performed</param>
            <param name="ComparisonOperator">The comparison Operation for the data validation</param>
            <param name="conditionvalue1">Condition set for the first part of data validation</param>
            <param name="conditionvalue2">Condition set for the second part of data validation</param>
            <param name="PromptBoxTitle">Title of the PromptBox</param>
            <param name="PromptBoxText">Text in the PromptBox</param>
            <param name="ErrorBoxTitle">Title in the ErrorBox</param>
            <param name="ErrorBoxText">Text in the ErrorBox</param>
            <param name="ShowPromptBox">True if PromptBox need to be shown, else False</param>
            <param name="ShowErrorBox">True if ErrorBox need to be shown, else False</param>
            <param name="IgnoreBlank">True if empty values are allowed, else False</param>
            <param name="InCellDropDown">True if the dropdown needs to be visible, else False</param>
            <returns>True or False</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.DV_ExcelDataTypeInfo">
            <summary>
            Represents a class that is to maintain the information about different data types for DataValidation
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DV_ExcelDataTypeInfo.#ctor">
            <summary>
            Initializes a new instance of DV_ExcelDataTypeInfo class
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.DV_ExcelDataTypeInfo.DV_ExcelDataTypeName">
            <summary>
            Gets or sets the name of the data types in DataValidation 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.DV_ExcelDataTypeInfo.DV_ExcelDataType">
            <summary>
            Gets or sets the type of the data in DataValidation
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.DV_ComparisionOperatorInfo">
            <summary>
            Represents a class that is to maintain the information about the comparison operators in DataValidation
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DV_ComparisionOperatorInfo.#ctor">
            <summary>
            Initializes a new instance of DV_ComparisionOperatorInfo
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.DV_ComparisionOperatorInfo.DV_ComparisionOperatorName">
            <summary>
            Gets or sets the name of the comparison operator in DataValidation
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.DV_ComparisionOperatorInfo.DV_ComparisionOperator">
            <summary>
            Gets or sets the comparison operators in DataValidation
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.NamespaceDoc">
            <summary>
            Contains classes and dialog windows to perform all user actions.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.CutCommand">
            <summary>
            Command Used to Cut the Cells in the Range
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ClipboardCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for ClipboardCommand.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ClipboardCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Cut, Copy and Paste Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ClipboardCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the cut, copy and paste command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CutCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Cut Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CutCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the Cut Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.CopyCommand">
            <summary>
            Command used to copy the values in the Range
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CopyCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Copy Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.CopyCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the Copy Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.PasteCommand">
            <summary>
            Command used to Paste the Values 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.PasteCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Paste Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.PasteCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the Paste Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ShrinkFontSizeCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for ShrinkFontSize Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ShrinkFontSizeCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if ShrinkFontSize Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ShrinkFontSizeCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the ShrinkFontSize command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GrowFontSizeCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for GrowFontSize Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GrowFontSizeCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if GrowFontSize Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GrowFontSizeCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the GrowFontSize command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontUnderlineCommand">
            <summary>
            Command used to Underline the text in the Cell 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontUnderlineCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for FormatFontUnderline
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontUnderlineCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if FormatFontUnderline can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontUnderlineCommand.OnExecute(System.Object)">
            <summary>
            Used to execute Underline Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontItalicCommand">
            <summary>
            To Set Italic Style for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontItalicCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for FormatFontItalic
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontItalicCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Italic Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontItalicCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Italic Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontBoldCommand">
            <summary>
            To set Bold for the range of Cells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontBoldCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for Bold Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontBoldCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Bold Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatFontBoldCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Bold Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatBorderCommand">
            <summary>
            To set borders for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatBorderCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for Border Command
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatBorderCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Border Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatBorderCommand.OnExecute(System.Object)">
            <summary>
            used to execute the Border command
            </summary>
            <param name="parameter">Type of Borders such as BottomBorder, TopBorder, LeftBorder, RightBorder, AllBorder, OutSideBorder
            ThickBoxBorder, ThickBottomBorder, TopAndBottomBorder, TopAndThickBottomBorder, OutsideBorder
            </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatBorderCommand.ChangeBorder(Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatBorderCommand.ExcelBorderStyle,System.Drawing.Color,Syncfusion.XlsIO.ExcelLineStyle)">
            <summary>
            Sets the border for the Cells or for a range
            </summary>
            <param name="excelBorderStyle">Type of Borders</param>
            <param name="excelbordercolor"> Borders color</param>
            <param name="excel_linestyle"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatBorderCommand.ChangeCellBorder(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatBorderCommand.ExcelBorderStyle,System.Drawing.Color,Syncfusion.XlsIO.ExcelLineStyle)">
            <summary>
            Sets the Border for the Current Excel range
            </summary>
            <param name="range">Current Excel Range</param>
            <param name="excelBorderStyle">Type of Borders</param>
            <param name="excelbordercolor"></param>
            <param name="linestyle"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatBorderCommand.ExcelBorderStyle">
            <summary>
            Gets the type of BorderStyles
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.AlignmentCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for Alignment Command.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.AlignmentCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if Horizontal/VerticalAlignment, Increase/Decrease indent, MergeCells, WrapText Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.AlignmentCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the Horizontal/VerticalAlignment, Increase/Decrease indent, MergeCells, WrapText command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatVerticalAlignmentCommand">
            <summary>
            Command used to set the Vertical Alignment for the cell
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatVerticalAlignmentCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for VerticalAlignment Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatVerticalAlignmentCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if VerticalAlignment command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatVerticalAlignmentCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the VerticalAlignment Command
            </summary>
            <param name="parameter">Pass parameter as type of Vertical Alignment such as Top, Center and Bottom </param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatHorizontalAlignmentCommand">
            <summary>
            To set the Horizontal Alignment for the Range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatHorizontalAlignmentCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for HorizontalAlignment Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatHorizontalAlignmentCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if HorizontalAlignment Commmand can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatHorizontalAlignmentCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the HorizontalAlignment Command
            </summary>
            <param name="parameter">Passes type of Horizontal Alignment like Center, Right and Left</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.WrapTextCommand">
            <summary>
            Command used to set TextWrapping
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.WrapTextCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for WrapText
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.WrapTextCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if WrapText can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.WrapTextCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the WrapText
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.IncreaseIndentCommand">
            <summary>
            To increase indent level of the cell/range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.IncreaseIndentCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for IncreaseIndent Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.IncreaseIndentCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if IncreaseIndent can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.IncreaseIndentCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Increase Indent Command
            </summary>
            <param name="parameter">true if indent level to be incresed else false if indent level to be decreased</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DecreaseIndentCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for IncreaseIndent Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DecreaseIndentCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if IncreaseIndent can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DecreaseIndentCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Increase Indent Command
            </summary>
            <param name="parameter">true if indent level to be incresed else false if indent level to be decreased</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.MergeCellsCommand">
            <summary>
            To perform merge operations for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.MergeCellsCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for MergeCells
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.MergeCellsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if MergeCells can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.MergeCellsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the MergeCells
            </summary>
            <param name="parameter">Merge options such as MergeAndCenter,MergeAcross,MergeCells,UnMerge</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.MergeCellsCommand.FindSelectionOverlapped(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            returns true if the Selection overlapped else false
            </summary>
            <param name="activerange">active range</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.MergeCellsCommand.CanMerge(Syncfusion.XlsIO.IRange)">
            <summary>
            Merges the cells.
            </summary>
            <param name="range">Specifies the mergeoptions like MergeAcross, MergeAndCenter, MergeCells and UnMergeCells</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NumberCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for Number Command.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NumberCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if NumberFormat and IncreaseDecreaseDecimal Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NumberCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the NumberFormat and IncreaseDecreaseDecimal command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatNumberCommand">
            <summary>
            To apply the number format for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatNumberCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for NumberFormat Command
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatNumberCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if NumberFormat Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatNumberCommand.OnExecute(System.Object)">
            <summary>
            used to execute the NumberFormat Command
            </summary>
            <param name="parameter">passes the parameter as Format as string values</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.IncreaseDecreaseDecimalCommand">
            <summary>
            To increase the Decimal digit of a number
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.IncreaseDecreaseDecimalCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for IncreaseDecimalCommand
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.IncreaseDecreaseDecimalCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if IncreaseDecreaseDecimalCommand can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.IncreaseDecreaseDecimalCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the IncreaseDecreaseDecimalCommand
            </summary>
            <param name="parameter">true if decimal digits are to be increased else false if decimal digits are to decreased</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.IncreaseDecreaseDecimalCommand.GetNumberFormat(Syncfusion.XlsIO.IRange,System.Boolean)">
            <summary>
            To Get the number format for the Current Excel Range
            </summary>
            <param name="range">Range to get the number format</param>
            <param name="increase">Whether to increase or decrease the decimal digits of a number</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormattingCommand.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if HighlightCellRules, DataBars, ColorScales and IconSets Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the HighlightCellRules, DataBars, ColorScales and IconSets command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditonalFormattingHighlightCellsRulesCommand">
            <summary>
            To set the conditionalformat for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditonalFormattingHighlightCellsRulesCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormat Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditonalFormattingHighlightCellsRulesCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if HighlightCellsRules Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditonalFormattingHighlightCellsRulesCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the HighlightCellsRules Command
            </summary>
            <param name="parameter">Passes parameter as ExcelComparison Operator such as NotBetween,Between, Greater than, Equal To,etc..,</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingDataBarsCommand">
            <summary>
            Set the conditional formatting of data bars for ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingDataBarsCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormattingDataBarsCommand Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingDataBarsCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if DataBars Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingDataBarsCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the DataBars command.
            </summary>
            <param name="parameter">Colors for data bar either Gradient or Solid</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingIconSetsCommand">
            <summary>
            Set the conditional formatting of Icon sets for ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingIconSetsCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormattingIconSetsCommand Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingIconSetsCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if IconSets Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingIconSetsCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the IconSets command.
            </summary>
            <param name="parameter">IconSets type from ExcelIconSetType</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingColorScalesCommand">
            <summary>
            Set the conditional formatting of Color Scales for ranges.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingColorScalesCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormattingColorScalesCommand Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingColorScalesCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if ColorScales Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingColorScalesCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the ColorScales command.
            </summary>
            <param name="parameter">Different Color sets</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingClearRulesCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for ConditionalFormattingClearRulesCommand
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingClearRulesCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if ClearRules Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormattingClearRulesCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the ClearRules command.
            </summary>
            <param name="parameter">SelectedCells or EntireSheet</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableCommand">
            <summary>
            To Apply Table formats in the sheet
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellStyleCommand">
            <summary>
            To set styles for the cell
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellStyleCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for FormatCellStyle
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellStyleCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the CellStyle Command
            </summary>
            <param name="parameter">BuiltuInStyles such as Normal, Bad, Good, Accent1, Accent 2, etc..,</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for Insert Command.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if InsertCells, InsertSheetRows, InsertSheetColumns and InsertSheet Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the InsertCells, InsertSheetRows, InsertSheetColumns and InsertSheet command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCellsCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for InsertCells
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCellsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if InsertCells Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCellsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the InsertCells Command
            </summary>
            <param name="parameter">Pass parameter as InsertCells if Rows/Columns are to be inserted
            to delete entire row/column</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertSheetColumnsCommand">
            <summary>
            To insert column in the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertSheetColumnsCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for InsertColumn Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertSheetColumnsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if InsertSheetColumns can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertSheetColumnsCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the InsertSheetColumns
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertSheetRowsCommand">
            <summary>
            To insert rows in the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertSheetRowsCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for InsertSheetRows
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertSheetRowsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if InsertSheetRows can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertSheetRowsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the InsertRow Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertSheetCommand">
            <summary>
            To insert/add the sheet in the workbook
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertSheetCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for InsertSheet
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertSheetCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if InsertSheetComamnd can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertSheetCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the InsertSheet command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for Delete Command.
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if DeleteCells, DeleteSheetRows, DeleteSheetColumns and DeleteSheet Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the DeleteCells, DeleteSheetRows, DeleteSheetColumns and DeleteSheet command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteCellsCommand">
            <summary>
            Command used to Delete a row/column
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteCellsCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for DeleteCells
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteCellsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if DeleteCells Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteCellsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the DeleteCells Command
            </summary>
            <param name="parameter">Pass parameter as DeleteCells if Rows/Columns are to be inserted else pass parameter as DeleteCells
            to delete entire row/column</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteSheetColumnsCommand">
            <summary>
            To delete the columns from the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteSheetColumnsCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for Delete Column Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteSheetColumnsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when DeleteColumn Command can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteSheetColumnsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the DeleteColumn Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteSheetRowsCommand">
            <summary>
            To delete the Rows from the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteSheetRowsCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for DelteRowCommand
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteSheetRowsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when DeleteSheetRows can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteSheetRowsCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the Delete Row Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteSheetCommand">
            <summary>
            To delete the Current Sheet
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteSheetCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for DeleteSheet
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteSheetCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if DeleteCurrentSheet command can be Executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteSheetCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the DeleteCurrentSheet Command
            </summary>
            <param name="parameter">Null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatColumnWidthCommand">
            <summary>
            To set the Column Width for the range of cells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatColumnWidthCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for the Column Width Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatColumnWidthCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if ColumnWidth Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatColumnWidthCommand.OnExecute(System.Object)">
            <summary>
            used to execute the ColumnWidth Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.AutoFitCommand">
            <summary>
            To Set AutoFit for RowHeight/ColumnWidth
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.AutoFitCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for AutoFitCommand
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.AutoFitCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when the AutoFit Command can be Executed else false
            </summary>
            <param name="parameter">pass parameter as RowHeight when RowHeight is to be executed else pass parameter as ColumnWidth</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.AutoFitCommand.OnExecute(System.Object)">
            <summary>
            used to Execute the Command AutoFit RowHeight/ AutoFit ColumnWidth
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatDefaultColumnWidthCommand">
            <summary>
            Setting the default width of the column in SfSpreadsheet
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatDefaultColumnWidthCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Initializes a new instance of the FormatDefaultColumnWidthCommand class
            </summary>
            <param name="spreadsheetControl">An instance of <see cref="!:Syncfusion.UI.Xaml.Spreadsheet.SfSpreadsheet"/></param>
            <param name="commandName">Name of the command</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatDefaultColumnWidthCommand.OnCanExecute(System.Object)">
            <summary>
            Determines the FormatDefaultColumnWidthCommand can be executed or not
            </summary>
            <param name="parameter">True or False</param>
            <returns>True or False</returns>
            <remarks>This command will not be executed when the current sheet is protected or the cell is in edit mode </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatDefaultColumnWidthCommand.OnExecute(System.Object)">
            <summary>
            Executes the FormatDefaultColumnWidthCommand to set the default width for the selected columns in SfSpreadsheet
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatRowHeightCommand">
            <summary>
            To set the RowHeight of the cell/range of cellsS
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatRowHeightCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for RowHeight Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatRowHeightCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if RowHeigth Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatRowHeightCommand.OnExecute(System.Object)">
            <summary>
            Used to exeute the Row Height Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.HideColumnsCommand">
            <summary>
            To Hide the Selected columns from the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HideColumnsCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for HideColumn command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HideColumnsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if HideColumn Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HideColumnsCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute HideColumn Command
            </summary>
            <param name="parameter">pass true if Column(s) are to be Hided and pass false if Column(s) are to be Unhided</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.HideRowsCommand">
            <summary>
            To hide the Selected Rows from the sheet
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HideRowsCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for HideRows
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HideRowsCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if HideRows can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HideRowsCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the HideRow Command
            </summary>
            <param name="parameter">passes true if Rows are to be hided else pass false if Rows are to be unhided</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.HideSheetCommand">
            <summary>
            To Hide the CurrentSheet
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HideSheetCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for HideCurrentSheet Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HideSheetCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if HideCurrentSheet Command is to be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HideSheetCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the HideCurrentSheet Command
            </summary>
            <param name="parameter">pass true when Sheet is to be hided and pass false when sheet is to be unhided</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.LockCellCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for LockCellCommand
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.LockCellCommand.OnCanExecute(System.Object)">
            <summary>
            Returns true if LockCell Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.LockCellCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the LockCellCommand
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectSheetCommand">
            <summary>
            To Protect the current sheet from the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectSheetCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for ProtectCurrentSheet Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectSheetCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if ProtectCurrenteSheet command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectSheetCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the ProtectCurrentSheet command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.RenameSheetCommand">
            <summary>
            To rename the current sheet from the workbook
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.RenameSheetCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for RenameSheet
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.RenameSheetCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if RenameSheet Command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.RenameSheetCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the RenameSheet Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.WindowCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for WindowCommand
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.WindowCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the WindowCommand
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FreezePanesCommand">
            <summary>
            To Set Frozen Rows and Frozen Columns
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FreezePanesCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for FreezePanesCommand
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FreezePanesCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the FreezePanesCommand.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FreezeFirstColumnCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for FreezeFirstColumn command
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FreezeFirstColumnCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the FreezeFirstColumn command
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FreezeTopRowCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for FreezeTopRow command
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FreezeTopRowCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the FreezeTopRow command
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnFreezePanesCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for UnFreezePanesCommand command
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnFreezePanesCommand.OnExecute(System.Object)">
            <summary>
            Used to excute the UnFreezePanesCommand command
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookCommand">
            <summary>
            Command used for Protecting the Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for ProtectWorkbook
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if ProtectWorkbook command can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookCommand.OnExecute(System.Object)">
            <summary>
            used to execute the ProtectWorkbook Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommentCommandBase">
            <summary>
            Command used to Insert/Add Comment for the CurrentCell
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommentCommandBase.OnExecute(System.Object)">
            <summary>
            Executes the InsertComment Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewCommentCommand">
            <summary>
            Command used to Insert a new Comment for the CurrentCell
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.EditCommentCommand">
            <summary>
            Command used to edit an existing cell comment
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.EditCommentCommand.HideCommentPopUp">
            <summary>
            Hides the comment editing form.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteCommentCommand">
            <summary>
            Command used to Delete the Comment in the Range
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteCommentCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if the DeleteComment can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DeleteCommentCommand.OnExecute(System.Object)">
            <summary>
            Executed the DeleteComment
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileNewCommand">
            <summary>
            Command used for Creating a NewWorkbook
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileNewCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for FileNew
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileNewCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if FileNew can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileNewCommand.OnExecute(System.Object)">
            <summary>
            used to execute the Newcommand
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileNewCommand.ShowDialog">
            <summary>
            Method used to display the message whether to save the changes or not, if ok is clicked it saves the changes else rejects the changes
            and create a New Workbook
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileSaveCommand">
            <summary>
            Command used to save the Current Workbook
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileSaveCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for FileSave
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileSaveCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if FileSave can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileSaveCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the FileSave
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileCloseCommand">
            <summary>
            To exit the Application
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileCloseCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for FileClose
            </summary>
            <param name="spreadsheetControl"></param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileCloseCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if FileClose can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileCloseCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the Exit command
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileSaveAsCommand">
            <summary>
            To Export the Application to Excel
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileSaveAsCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for FileSaveAsCommand
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileSaveAsCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute the FileSaveAsCommand Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileOpenCommand">
            <summary>
            To import the Excel File
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileOpenCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for ImportFromExcelCommand
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileOpenCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if ImportFromExcelCommand can be executed else false
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileOpenCommand.OnExecute(System.Object)">
            <summary>
            Used to Execute ImportFromExcel Command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileEncryptCommand">
            <summary>
            Command used for Encrypt the Application with a Password
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileEncryptCommand.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,System.String)">
            <summary>
            Constructor for Encrypt Command
            </summary>
            <param name="spreadsheetControl">The SfSpreadsheet Control</param>
            <param name="commandName"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileEncryptCommand.OnCanExecute(System.Object)">
            <summary>
            returns true if Encrypt Command can be Executed
            </summary>
            <param name="parameter">true or false</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FileEncryptCommand.OnExecute(System.Object)">
            <summary>
            Used to execute the Encrypt command
            </summary>
            <param name="parameter">null</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.GridLinesVisibilityCommand">
            <summary>
            Used to Set the Grid Lines Visibility
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GridLinesVisibilityCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when the AutoFit Command can be Executed else false
            </summary>
            <param name="parameter">pass parameter as RowHeight when RowHeight is to be executed else pass parameter as ColumnWidth</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GridLinesVisibilityCommand.OnExecute(System.Object)">
            <summary>
            used to Execute the Command AutoFit RowHeight/ AutoFit ColumnWidth
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormulaBarVisibilityCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when the AutoFit Command can be Executed else false
            </summary>
            <param name="parameter">pass parameter as RowHeight when RowHeight is to be executed else pass parameter as ColumnWidth</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormulaBarVisibilityCommand.OnExecute(System.Object)">
            <summary>
            used to Execute the Command AutoFit RowHeight/ AutoFit ColumnWidth
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.HeadingsVisibilityCommand">
            <summary>
            Used to set the HeaderRowColumn Visibility
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HeadingsVisibilityCommand.OnCanExecute(System.Object)">
            <summary>
            returns true when the AutoFit Command can be Executed else false
            </summary>
            <param name="parameter">pass parameter as RowHeight when RowHeight is to be executed else pass parameter as ColumnWidth</param>
            <returns>returns true or false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HeadingsVisibilityCommand.OnExecute(System.Object)">
            <summary>
            used to Execute the Command AutoFit RowHeight/ AutoFit ColumnWidth
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.BetweenNotBetweenConditionForm">
            <summary>
            Interaction logic for date time conditionformat operation through ribbon dialog form.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.CommandBaseForm">
            <summary>
            CommandBaseForm is a generic class and all the command forms are derived from this class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CommandBaseForm.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Perform the required operation when press Escape or enter key.
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CommandBaseForm.SfSpreadsheet">
            <summary>
            Gets or sets the SfSpreadsheet Control
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CommandBaseForm.WorkSheet">
            <summary>
            Gets or sets the SheetName to be Protected
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.BetweenNotBetweenConditionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.BetweenNotBetweenConditionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.BetweenNotBetweenConditionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.BetweenNotBetweenConditionForm.apply_Click(System.Object,System.EventArgs)">
            <summary>
            Apply the changes into XlsIO workbook.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.BetweenNotBetweenConditionForm.cancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close the form when cancel button was clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.BetweenNotBetweenConditionForm.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Perform the required operation when press Escape or enter key.
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.BetweenNotBetweenConditionForm.OnApplySettings">
            <summary>
            Apply the changes into XlsIO.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.BetweenNotBetweenConditionForm.WireEvents">
            <summary>
            Hook the required events from this method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.BetweenNotBetweenConditionForm.UnWireEvents">
            <summary>
            Unhook the triggered events from this method.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.BetweenNotBetweenConditionForm.Description">
            <summary>
            Gets or Sets the Description to be displayed in the conditionalformat window
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.BetweenNotBetweenConditionForm.Operator">
            <summary>
            Gets or sets the ExcelComparison Operator to be used for conditional formatting
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Commands.BetweenNotBetweenConditionForm.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormatForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormatForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormatForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormatForm.cancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close the form when cancel button was pressed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormatForm.apply_Click(System.Object,System.EventArgs)">
            <summary>
            Apply the changes into XlsIO when ok button was pressed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormatForm.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Perform the required operation when press Escape or enter key.
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormatForm.OnLoaded">
            <summary>
            Initialize the values to form when it was initially loaded.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormatForm.OnApplySettings">
            <summary>
            Apply the changes into the xlsio workbook.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormatForm.WireEvents">
            <summary>
            Hook the required events from this method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormatForm.UnWireEvents">
            <summary>
            Unhook the triggered events from this method.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormatForm.Description">
            <summary>
            Gets or Sets the Description to be displayed in the conditionalformat window
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormatForm.Operator">
            <summary>
            Gets or sets the ExcelComparison Operator to be used for conditional formatting
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Commands.ConditionalFormatForm.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm">
            <summary>
            Datavalidation interaction operations are done here.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.Checkvalues(Syncfusion.XlsIO.IRange)">
            <summary>
            Check the values based on the validation rule.
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.ShowErrorMessage(System.String)">
            <summary>
            Display error message.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.InitializeValues">
            <summary>
            Intialize the combobox values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.SetVisibility(Syncfusion.XlsIO.ExcelDataType,Syncfusion.XlsIO.ExcelDataValidationComparisonOperator)">
            <summary>
            Change the visibility of controls based on the selected option.
            </summary>
            <param name="allowtypecomboboxsselectedValue"></param>
            <param name="CompareOperator"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.StyleComboBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Set the image based on the selected option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.ShowErrorCheckBox_Click(System.Object,System.EventArgs)">
            <summary>
            Disable the items based on the checkbox checked value.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.ShowPromptBox_Click(System.Object,System.EventArgs)">
            <summary>
            Disable the items based on the checkbox checked value.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.Cancel_Button_Click(System.Object,System.EventArgs)">
            <summary>
            Close the window when cancel operation was done.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.OKButton_Click(System.Object,System.EventArgs)">
            <summary>
            Apply the required values into xlsio.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.ClearAllButton_Click(System.Object,System.EventArgs)">
            <summary>
            Clear the values from the specified controls.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.TabControl_Selecting(System.Object,System.Windows.Forms.TabControlCancelEventArgs)">
            <summary>
            Tab navigation was restricted based on the values in the window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.AllowComboBox_SelectedValueChanged(System.Object,System.EventArgs)">
            <summary>
            Controls visibility was changed based on the selected item.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.DataComboBox_SelectedValueChanged(System.Object,System.EventArgs)">
            <summary>
            Controls visibility was changed based on the selected item.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.WireEvents">
            <summary>
            Trigger the required events form this method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.OnClosed(System.EventArgs)">
            <summary>
            close the form.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.OnLoaded">
            <summary>
            Set the initial settings when load the form.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.OnApplySettings">
            <summary>
            Set the required values into XlsIO.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.AllowTypeList">
            <summary>
            Gets or sets the allow combobox list.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.DataList">
            <summary>
            Gets or sets the comparison operator combo box list.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.DataValidationForm.ValidationRange">
            <summary>
            Gets or Sets the Range of the Cells where DataValidation is applied or to be applied
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.DatesOccuringConditionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DatesOccuringConditionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DatesOccuringConditionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DatesOccuringConditionForm.apply_Click(System.Object,System.EventArgs)">
            <summary>
            Apply the changes into XlsIO workbook.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DatesOccuringConditionForm.cancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close the form when cancel button was pressed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DatesOccuringConditionForm.OnApplySettings">
            <summary>
            Apply the changes into XlsIO workbook.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DatesOccuringConditionForm.WireEvents">
            <summary>
            Hook the required events from this method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DatesOccuringConditionForm.UnWireEvents">
            <summary>
            Unhook the triggered events from here.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.DatesOccuringConditionForm.Description">
            <summary>
            Gets or Sets the Description to be displayed in the conditionalformat window
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.DatesOccuringConditionForm.Operator">
            <summary>
            Gets or sets the ExcelComparison Operator to be used for conditional formatting
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Commands.DatesOccuringConditionForm.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.DefaultWidthForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DefaultWidthForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DefaultWidthForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DefaultWidthForm.Apply_Click(System.Object,System.EventArgs)">
            <summary>
            Apply the modified values into xlsio workbook.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DefaultWidthForm.Cancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close the form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DefaultWidthForm.WireEvents">
            <summary>
            Hook the required events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DefaultWidthForm.UnWireEvents">
            <summary>
            Unhook the triggered events
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DefaultWidthForm.OnLoaded">
            <summary>
            Initialize the settings when form was initially loaded.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.DefaultWidthForm.OnApplySettings">
            <summary>
            Apply the modified values into xlsio workbook.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.EncryptCommandForm">
            <summary>
            Encrypt password interaction operations are done here.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.EncryptCommandForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.EncryptCommandForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.EncryptCommandForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.EncryptCommandForm.cancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close the form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.EncryptCommandForm.apply_Click(System.Object,System.EventArgs)">
            <summary>
            Apply the changes into the XlsIO range.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.EncryptCommandForm.WireEvents">
            <summary>
            Hook the required events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.EncryptCommandForm.UnWireEvents">
            <summary>
            Unhook the triggered events from this method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.EncryptCommandForm.OnApplySettings">
            <summary>
            Apply the changes into XlsIO range.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.EncryptCommandForm.OnLoaded">
            <summary>
            Apply the initial settings when form was loaded.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.formattextbox_PreviewKeyDown(System.Object,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Sets the isValueChanged property as true.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.cancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close the form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.apply_Click(System.Object,System.EventArgs)">
            <summary>
            Apply the values into the XlsIO Range.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Perform the required operation when press Escape or enter key.
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.WireEvents">
            <summary>
            Hook the required events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.UnWireEvents">
            <summary>
            Unhook the triggered events from this method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.OnLoaded">
            <summary>
            Load the initial values when form was loaded initially.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.OnApplySettings">
            <summary>
            Apply the changes into the XlsIO Range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.FormatText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.Value">
            <summary>
            Gets or sets the IRange.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.TableStyle">
            <summary>
            Gets or sets the table style.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.IsRangeSingleCell">
            <summary>
            Gets or sets the value of IsRangeIntersectCell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatAsTableForm.IsIntersectCell">
            <summary>
            Gets or sets the value of IsIntersectCell.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.oldnumberformat">
            <summary>
            We have shown the sample text in window by getting the display text after applying the numberformats directly into
            range so we have to maintain it for the purpose to revert the number format if the user cancel the operation.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.numberformat">
            <summary>
            currentexcelrange numberformat
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.formattabcontrol">
            <summary>
            Need to open the window with different tab in active.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Perform the required operation when press Escape or enter key.
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.WireEvents">
            <summary>
            Initialize the required events from here.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.OnClosed(System.EventArgs)">
            <summary>
            Close the window.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.UnWireEvents">
            <summary>
            Unhook the required events from here.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.OnApplySettings">
            <summary>
            Apply the required changes into xlsio range by using commands.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.OnLoaded">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.borderpage_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Drawing the required border lines for preview window of border tab.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.applybutton_Click(System.Object,System.EventArgs)">
            <summary>
            Apply the required changes into XlsIO once ok button was clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.cancelbutton_Click(System.Object,System.EventArgs)">
            <summary>
            Need to revert the changes after press the cancel button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.bottomborder_checkbox_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Bottom border settings needs to applies into Form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.horizoncenter_checkbox_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Horizontal center border settings needs to applies into Form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.topborder_checkbox_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Top border settings needs to applies into Form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.rightborder_checkbox_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Right border settings needs to applies into Form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.verticalcenter_checkbox_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            vertical center border settings needs to applies into Form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.leftborder_checkbox_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Left border settings needs to applies into Form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.outlinebtn_Click(System.Object,System.EventArgs)">
            <summary>
            Outline border settings needs to applies into Form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.insidebtn_Click(System.Object,System.EventArgs)">
            <summary>
             Inside border settings needs to applies into Form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.GetBorderLineStyle(System.Int32)">
            <summary>
            returns the border style based on the selected border index in the borders collection in window.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.nonebtn_Click(System.Object,System.EventArgs)">
            <summary>
            border settings needs to applies into Form when none button was chosen.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.bordercolorpicker_Picked(System.Object,Syncfusion.Windows.Forms.Tools.ColorPickerUIAdv.ColorPickedEventArgs)">
            <summary>
            Set the selected color into the split button.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.fontsizelistbox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            FontSize text box needs to updated when selected item was changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.fonttypelistbox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            FontType text box needs to updated when selected item was changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.fontstylelistbox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            FontStyle text box needs to updated when selected item was changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.customtextbox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            number format needs to updated when selected item was changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.hiddencheckbox_Click(System.Object,System.EventArgs)">
            <summary>
            Add the hidden item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.lockcheckbox_Click(System.Object,System.EventArgs)">
            <summary>
            Add the locked item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.fillcolorpicker_Click(System.Object,System.EventArgs)">
            <summary>
            Excel like toggle button should be unchecked if mouse pressed in fillcolor palette.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.nocolorbtn_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Excel like default color should be applied when click the NoColor toggle button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.fillcolorpicker_Picked(System.Object,Syncfusion.Windows.Forms.Tools.ColorPickerUIAdv.ColorPickedEventArgs)">
            <summary>
            Update the preview color when changed color from the fill color picker.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.fontsizetextbox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Add the Fontsize item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.fonttypetextbox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Add the Fonttype item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.fontstyletextbox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Add the Fontstyle item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.fontcolorpicker_Picked(System.Object,Syncfusion.Windows.Forms.Tools.ColorPickerUIAdv.ColorPickedEventArgs)">
            <summary>
            Color picker dropdown should be closed once choose the value.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.normalcheckbox_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Apply the settings when the value gets changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.underlinecombo_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Update the underline in preview window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.strikeghroughcheck_Click(System.Object,System.EventArgs)">
            <summary>
            Update the strikethrough in preview window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.degreesupdown_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Add the degress item to command list to execute command.
            </summary>
            <param name="sender"></param> 
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.mergecheckbox_Click(System.Object,System.EventArgs)">
            <summary>
            Add the mergecells item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.wrapcheckbox_Click(System.Object,System.EventArgs)">
            <summary>
            Add the wraptext item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.verticalcombo_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Add the vertical item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.horizontalcombo_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Add the horizontal item to command list to execute command.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.indentupdown_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Excel like Horizontal combobox option should be changed when Indent value was changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.customtextbox_PreviewKeyDown(System.Object,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Excel like delete button should be enabled when try to edit the custom textbox.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.separator_checkbox_Click(System.Object,System.EventArgs)">
            <summary>
            Need to update the values in the preview text if the checkbox value changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.decimal_updown_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Need to update the values in the sample text if the decimalupdown values are changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.deletebutton_Click(System.Object,System.EventArgs)">
            <summary>
            Delete the items from the custom type list.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.customlistbox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Delete button should be enable if the selected listvalue is not default one.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.typelistbox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Update the number format once if the index was changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.negativelistbox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Update the numberformat once if the neagtivelist box value changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.FormatCellsForm_Load(System.Object,System.EventArgs)">
            <summary>
            Apply the initial settings into form based on XlsIO properties.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.InitializeBorderTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initialize the borders in format cells window.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.InitializeFillTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initialize the fill tab item values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.InitializeProtectionTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initialize the protection tab item values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.InitializeFontTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initialize the font tab item values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.UpdateTextDecorations">
            <summary>
            Apply the style changes into preview text label.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.ApplyFontStyles(System.Boolean,System.Boolean,System.Double,Syncfusion.XlsIO.ExcelUnderline)">
            <summary>
            Set the font styles such as font size,underline,bold or italic in formatcells window.
            </summary>
            <param name="hasbold"></param>
            <param name="hasitalic"></param>
            <param name="fontsize"></param>
            <param name="underline"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.InitializeAlignmentTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initialize the alignment tab item values.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.ArrangeVisibleItems">
            <summary>
            Shows the items based on selected item in category list.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.categorylistbox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Shows the items based on selected item in category list.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.InitializeNumberTabItems(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Intializes the items in number tab of format cell window.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.UpdateNumberFormat">
            <summary>
            Refresh the numberformats.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.CalculateNumberFormat">
            <summary>
            Generate unique numberformats based on the selected values in number tab.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.CalculateDecimalDigitsCount(System.String)">
            <summary>
            calculate the decimal digits count based on the numberformat to set into decima updown control value.
            </summary>
            <param name="numberformat"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.InitializeNegativeNumberList">
            <summary>
            Generate the negative number list values for number tab.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.RefreshNumberTabItems">
             <summary>
            Refresh the numbertabitems. 
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatCellsForm.SelectedTabIndex">
            <summary>
            Need to open the window with different tab in active.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.GetPasswordForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GetPasswordForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GetPasswordForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GetPasswordForm.apply_Click(System.Object,System.EventArgs)">
            <summary>
            Event raised when ok button is clicked
            </summary>
            <param name="sender">The Source</param>
            <param name="e">The <see cref="!:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GetPasswordForm.cancel_Click(System.Object,System.EventArgs)">
            <summary>
            Event raised when Cancel button is clicked
            </summary>
            <param name="sender">The Source</param>
            <param name="e">The <see cref="!:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GetPasswordForm.WireEvents">
            <summary>
            Hook the required events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GetPasswordForm.UnWireEvents">
            <summary>
            Unhook the triggered events.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.GetPasswordForm.PasswordText">
            <summary>
            Gets or Sets the Text
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.GetPasswordForm.FileName">
            <summary>
            Gets or sets the Name of the File is Protected
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Commands.GetPasswordForm.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupForm.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Perform the required operation when press Escape or enter key.
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.GroupForm.NeedToGroup">
            <summary>
            Gets or Sets true if the Rows/Columns are to be grouped else false
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommentForm">
            <summary>
            Implementation comment editor form.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommentForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommentForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommentForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommentForm.AddComment">
            <summary>
            Used to Add a comment for the CurrentCell
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommentForm.WireEvents">
            <summary>
            Hook the required events from the this method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommentForm.InsertCommentForm_Resize(System.Object,System.EventArgs)">
            <summary>
            Resize the textbox based on the form size.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommentForm.CommentTextBox_LostFocus(System.Object,System.EventArgs)">
            <summary>
            Commit the value into comment textbox when out of focus.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommentForm.UnWireEvents">
            <summary>
            Unhook the triggered events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommentForm.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Close the form when escape key was pressed.
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommentForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Wnd process
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommentForm.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Refresh the selection status of comment buttons from the ribbon.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertCommentForm.OnLoad(System.EventArgs)">
            <summary>
            Initialize the values while load the edit comment form.
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.OutlineSettingsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.OutlineSettingsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.OutlineSettingsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.OutlineSettingsForm.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Perform the required operation when press Escape or enter key.
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.OutlineSettingsForm.IsSummaryColumnAtRight">
            <summary>
            Gets or Sets true if the Summary Column to displayed at the right 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectSheetForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectSheetForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectSheetForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectSheetForm.OnLoaded">
            <summary>
            Initialize the values when the window is loaded.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectSheetForm.OnApplySettings">
            <summary>
            This function is invoked to apply the protection to the sheet based on options
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectSheetForm.WireEvents">
            <summary>
            To Hook the required events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectSheetForm.CheckBoxList_ItemCheck(System.Object,System.Windows.Forms.ItemCheckEventArgs)">
            <summary>
            This event is fired when locked selected cells checkbox is clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectSheetForm.Cancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close the wiindow 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectSheetForm.UnWireEvents">
            <summary>
            To Unhook the required events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectSheetForm.GetProtectSheetOptions">
            <summary>
            To get the protect sheet options
            </summary>
            <returns></returns>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookForm.Cancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close the form when cancel operation was done.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookForm.Apply_Click(System.Object,System.EventArgs)">
            <summary>
            Event raised when the cancel Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="!:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookForm.WireEvents">
            <summary>
            Hook the required events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookForm.UnWireEvents">
            <summary>
            Unhook the triggered events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookForm.OnLoaded">
            <summary>
            Initialize the values on the window.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookForm.OnApplySettings">
            <summary>
            Apply the changes into XlsIO.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookForm.IsStructure">
            <summary>
            Gets or Sets true if the Structure is to be Protected else false
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookForm.IsWindows">
            <summary>
            Gets or Set true if the Window is to be protected else false
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Commands.ProtectWorkbookForm.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnHideForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnHideForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnHideForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnHideForm.cancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close the form when cancel button was clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnHideForm.apply_Click(System.Object,System.EventArgs)">
            <summary>
            Apply the values into xlsio workbook when ok button was clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnHideForm.sheetListBox_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Event raised when the ListBoxItem is double clicked
            </summary>
            <param name="sender">The Source of the Event.</param>
            <param name="e">The <see cref="!:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnHideForm.OnApplySettings">
            <summary>
            Apply the changes into xlsio workbook.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnHideForm.OnLoaded">
            <summary>
            Initialize the values when form was initially loaded.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnHideForm.WireEvents">
            <summary>
            Hook the required events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnHideForm.UnWireEvents">
            <summary>
            Unhook the required events.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm">
            <summary>
            Hyperlink interaction operations are done here.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Perform the required operation when press Escape or enter key.
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.OnClosed(System.EventArgs)">
            <summary>
            Close the window.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.OnApplySettings">
            <summary>
            Apply the hyperlink settings into XlsIO.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.UnWireEvents">
            <summary>
            Unhooh the events from this method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.HyperlinkWindowEvents">
            <summary>
            Hook the required events from this method.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.EmailTextBox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            set the display text when text changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.RemoveButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handle to remove the existing hyperlink from the currentcell range when remove 
            button pressed in hyperlink window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.ChangeButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handle the change button operation in Create New Window option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.BrowseButton_Click(System.Object,System.EventArgs)">
            <summary>
            Handle the browse button operation in ExistingFile or webpage option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.OkButton_Click(System.Object,System.EventArgs)">
            <summary>
            Apply the settings when click ok button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.CreateFile">
            <summary>
            Creat a file
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.CreateWorkBook(System.String)">
            <summary>
            Create the Excel file.
            </summary>
            <param name="extension"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.TextToDisplayTextBox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Commit the displaytext when changes made in display textbox.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.TextToDisplayTextBox_PreviewKeyDown(System.Object,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Commit the displaytext when changes made in display textbox.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.EmailTextBox_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Encode the email address with "mailto" text.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.RefBtn_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Set the default display text when change over to other buttons from place in document button.       
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.AddressTextBox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Enable or disable the hyperlink okay button when address was changed and encode the address with "http:"
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.OnLoaded">
            <summary>
            set the initialze values while load the form.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.CancelButon_Click(System.Object,System.EventArgs)">
            <summary>
            Close the hyperlink window when cancel buttton was clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>        
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.Options_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Set the visibility of items based on the selected option.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.ResetItemsVisibility">
            <summary>
            Resets the visibility of items in window.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.HyperlinkForm.OptionsBtn_Click(System.Object,System.EventArgs)">
            <summary>
            apply the checked state for only selected tool strip button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.CustomToolStripRenderer">
            <summary>
            Custom tool strip rendere to update the selection background color.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertDeleteCellsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertDeleteCellsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertDeleteCellsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertDeleteCellsForm.apply_Click(System.Object,System.EventArgs)">
            <summary>
            Applies the values into xlsio workbook.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertDeleteCellsForm.cancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close the form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertDeleteCellsForm.WireEvents">
            <summary>
            Hook the required events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertDeleteCellsForm.UnWireEvents">
            <summary>
            Unhook the triggered events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertDeleteCellsForm.OnLoaded">
            <summary>
            Load the initial settings into form.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertDeleteCellsForm.OnApplySettings">
            <summary>
            Applies the changes into the xlsio workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.InsertDeleteCellsForm.InsertDeleteCells">
            <summary>
            Gets or Sets true if the Cell is to be inserted and returns false when the Cells is to be deleted
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm">
            <summary>
            Intercations for name manager window done here.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.GridSettings">
            <summary>
            Initialize DataGrid
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.UpdatePictureBox(System.Boolean)">
            <summary>
            Updating picture box mode
            </summary>
            <param name="enable"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.Commit_textValue">
            <summary>
            Commit the values entered to edit name range or create a new namerange
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.UpdateNameRangeReference(Syncfusion.XlsIO.IName,Syncfusion.Windows.Forms.Spreadsheet.NameRange)">
            <summary>
            Update edited name ranges of the workbook.
            </summary>
            <param name="name">Specified Name which have to update</param>
            <param name="selectedItem">Selected item of the NameRanges grid</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.AllFilter(System.Object)">
            <summary>
            Filters the name ranges
            </summary>
            <param name="filter"></param>
            <returns>Filtered results</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.OnLoaded">
            <summary>
            Load the required settings
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.WireEvents">
            <summary>
            Initialize the required events
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.UnWireEvents">
            <summary>
            Unhook the triggered events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.Editor_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Trigger the method when edito text was changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.CancelEditButton_Click(System.Object,System.EventArgs)">
            <summary>
            Event Raised when the CancelEdit Button is Clicked
            </summary>
            <param name="sender">The Soruce.</param>
            <param name="e">The <see cref="!:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.EndEditButton_Click(System.Object,System.EventArgs)">
            <summary>
            Event Raised When the EndEdit Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="!:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.CloseButton_Click(System.Object,System.EventArgs)">
            <summary>
            Event Raised when the Close Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="!:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.Editor_PreviewKeyDown(System.Object,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Event Raised When the Key is Pressed when the Editor TextBox in Focus
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="!:System.Windows.Input.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.NameRanges_SelectionChanged(System.Object,System.EventArgs)">
            <summary>
            Event raised when the Selection is changed in the DataGrid
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="!:System.Windows.Controls.SelectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.UpdateRefersToTextBox">
            <summary>
            Update the refers to text box based on the selected row in data grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.NameRanges_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Event Raised when the Double click operation is performed on the DataGrid
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="!:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.NameRanges_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Event Raised when the DataGrid is clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="!:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.NameswithoutErrors_Click(System.Object,System.EventArgs)">
            <summary>
            Event Raised when the NamesWithOutErrors Menu Item is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="!:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.NameswithErrors_Click(System.Object,System.EventArgs)">
            <summary>
            Event Raised When the NamesWithErrors MenuItem is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="!:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.ScopedtoWorksheet_Click(System.Object,System.EventArgs)">
            <summary>
            Event Raised when ScopedtoWorksheet MenuItem is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="!:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.ScopedtoWorkbook_Click(System.Object,System.EventArgs)">
            <summary>
            Event Raised when the ScopedtoWorkbook Menu Item is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="!:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.ClearFilter_Click(System.Object,System.EventArgs)">
            <summary>
            Event Raised When the ClearFilter MenuItem is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="!:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.FilterButton_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Event Raised When the Filter Button is clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="!:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.DeleteButton_Click(System.Object,System.EventArgs)">
            <summary>
            Event Raised When the Delete Button is clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="!:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.EditButton_Click(System.Object,System.EventArgs)">
            <summary>
            Event Raised when the Edit Button is Clicked
            </summary>
            <param name="sender">The Source.</param>
            <param name="e">The <see cref="!:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.NewButton_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.ApplyFilter">
            <summary>
            To Apply Filter for the Data used in DataGrid
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.ComputeValue(Syncfusion.XlsIO.IName)">
            <summary>
            To Compute the Value for the Given Name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.UpdateNameManagerBinding">
            <summary>
            Resets the binding of name manager datasource property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.DataGrid_SelectedIndex">
            <summary>
            Gets or sets the DataGrid Selected Item's index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.SelectedAddress">
            <summary>
            Gets or sets the SelectedAddress from the gridselected item.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.NameManagerForm.NameRangeGrid">
            <summary>
            Gets the namernage applied grid.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeForm.RangeToAddress(Syncfusion.Windows.Forms.CellGrid.GridRangeInfo)">
            <summary>
            Converts the Grid Range to the Address (e.g) 'Sheet1' !$A$1
            </summary>
            <param name="range">Current Grid Range</param>
            <returns>returns the string value as Address (e.g) 'Sheeet1' !$A$1</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeForm.GetCellRef(System.Int32,System.Int32)">
            <summary>
            Get Cell Reference of the specified row,col index. 
            </summary>
            <param name="col"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeForm.DisplayMessageBox">
            <summary>
            Displaying error message when try to inserting a name range that has been already exist in the name collection.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeForm.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Perform the required operation when press Escape or enter key.
            </summary>
            <param name="msg"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeForm.NameManagerForm">
            <summary>
            Gets or sets the instance for the NameManagerWindow
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeForm.RefersTO">
            <summary>
            Gets or sets the Cell Address for the Named Ranges.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeForm.NamedRangeText">
            <summary>
            Gets or Sets the Name of the Selected NamedRanges.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeForm.RangeAddress">
            <summary>
            Gets or sets the Cell address of the Selected NamedRanges.
            for ex: RangeAddress = "=Sheet1!$A$1".
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeForm.Scope">
            <summary>
            Gets or sets the Scope for the Named Ranges.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.NewNameRangeForm.IsEditName">
            <summary>
            gets or sets true if the NameRange is to be Edited else false
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectSheetForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectSheetForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectSheetForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectSheetForm.cancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close the form when cancel button was pressed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectSheetForm.apply_Click(System.Object,System.EventArgs)">
            <summary>
            Set the values to XlsIO when ok button was clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectSheetForm.UnWireEvents">
            <summary>
            Unhook the triggered events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectSheetForm.OnApplySettings">
            <summary>
            Apply the enterd values into XlsIO.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectSheetForm.OnLoaded">
            <summary>
            Method gets executed when the form was initially loaded.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectWorkbookForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectWorkbookForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectWorkbookForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectWorkbookForm.Cancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close the form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectWorkbookForm.Apply_Click(System.Object,System.EventArgs)">
            <summary>
            Apply the changed into XlsIO.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectWorkbookForm.OnLoaded">
            <summary>
            Initial settings when the form was loaded.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectWorkbookForm.WireEvents">
            <summary>
            Hook the required events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectWorkbookForm.UnWireEvents">
            <summary>
            Unhook the required events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.UnProtectWorkbookForm.OnApplySettings">
            <summary>
            Apply the changed into xlsio workbook.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatForm.ChangeColumnWidth(System.Double)">
            <summary>
            Used to Change the Column Width for the Specified range
            </summary>
            <param name="width">Width to be set for the Specified range</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatForm.ChangeRowHeight(System.Double)">
            <summary>
            Change the Row Height for the Specified range
            </summary>
            <param name="height">height to be set for the specified range</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatForm.Cancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close the form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatForm.Apply_Click(System.Object,System.EventArgs)">
            <summary>
            Apply the changes into XlsIO.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatForm.WireEvents">
            <summary>
            Hook the required events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatForm.UnWireEvents">
            <summary>
            Unhook the triggered events.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatForm.OnLoaded">
            <summary>
            Initialize the required values while load the form.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatForm.OnApplySettings">
            <summary>
            Apply the modifed values into XlsIO workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatForm.CellFormat">
            <summary>
            Gets or sets the Format of the CurrentCell either RowHeight or ColumnWidth
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatForm.Value">
            <summary>
            Gets or sets the value to be displayed for rowheight or columnwidth
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Spreadsheet.Commands.FormatForm.PropertyChanged">
            <summary>
            Event to handle if the Property is Changed
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.CellGrid.TouchController">
            <summary>
            A class which is used to control the touch operations (i.e.,) Panning, Selection, Resizing, etc.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.TouchController.#ctor(Syncfusion.Windows.Forms.CellGrid.SfCellGrid)">
            <summary>
            Create a new instance.
            </summary>
            <param name="cellgrid"><see cref="T:Syncfusion.Windows.Forms.CellGrid.SfCellGrid"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.TouchController.OnGestureNotify(System.Windows.Forms.Message@)">
            <summary>
            Used to enable the gesture and set gesture configuration.
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.TouchController.IsTouch">
            <summary>
            Used to determine whether the interaction performed by touch or mouse.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.TouchController.OnGesture(System.Windows.Forms.Message@)">
            <summary>
            Decode the gesture config and info to perform the panning and touch selection operations.
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.TouchController.DisableGesture">
            <summary>
            Used to disable the Gesture.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.TouchController.OnTouchPanBegin">
            <summary>
            Set the constraints while begin the panning in grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.TouchController.OnTouchPan">
            <summary>
            Used to perform the panning or selection in the grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.TouchController.OnTouchPanEnd">
            <summary>
            Set the constraints while end the panning in grid.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.CellGrid.TouchController.AllowPanning">
            <summary>
            Used to determine whether allow panning or not. If touch over header cells or selection bubbles, panning will be skipped.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.TouchController.SkipPanning">
            <summary>
            Gets or sets whether skip panning or not. If touch over header cells or selection bubbles, panning will be skipped.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.TouchController.AllowVerticalPanning">
            <summary>
            Determines whether allow vertical panning or not. Vertical panning will be disabled if pan over frozen rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.CellGrid.TouchController.AllowHorizontalPanning">
            <summary>
            Determines whether allow horizontal panning or not. Horizontal panning will be disabled if pan over frozen columns.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.FontsCache">
            <summary>
            cache of all the font used not to create same font again and again
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.Graphics">
            <summary>
            The wrapped WinForms graphics object
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.Hdc">
            <summary>
            the initialized HDC used
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.#ctor(System.Drawing.Graphics)">
            <summary>
            Initialize.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.MeasureText(System.String,System.Drawing.Font)">
            <summary>
            Measure the width and height of string <paramref name="str"/> when drawn on device context HDC
            using the given font <paramref name="font"/>.
            </summary>
            <param name="str">the string to measure</param>
            <param name="font">the font to measure string with</param>
            <returns>the size of the string</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.MeasureText(System.String,System.Drawing.Font,System.Int32,System.Boolean)">
            <summary>
            Measure the text size by MeasureString of Graphics object. 
            </summary>
            <param name="text">The string to measure</param>
            <param name="font">The font to measure string with</param>
            <param name="width">The max width to measure string</param>
            <param name="wrapText">If true, the text wrapping has applied else not.</param>
            <returns>The size of the string</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.MeasureText(System.String,System.Drawing.Font,System.Single,System.Int32@,System.Int32@)">
            <summary>
            Measure the width and height of string <paramref name="str"/> when drawn on device context HDC
            using the given font <paramref name="font"/>.<br/>
            Restrict the width of the string and get the number of characters able to fit in the restriction and
            the width those characters take.
            </summary>
            <param name="str">the string to measure</param>
            <param name="font">the font to measure string with</param>
            <param name="maxWidth">the max width to render the string in</param>
            <param name="charFit">the number of characters that will fit under maxWidth restriction</param>
            <param name="charFitWidth"></param>
            <returns>the size of the string</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.FillRectangle(System.Drawing.Color,System.Drawing.Rectangle)">
            <summary>
            Fill the rectangle.
            </summary>
            <param name="color">fill color</param>
            <param name="rect">Rectangle area</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.FillGradientRectangle(System.Drawing.Color,System.Drawing.Color,System.Drawing.Rectangle)">
            <summary>
            Fill the rectangle.
            </summary>
            <param name="color1">start color</param>
            <param name="color2">end color</param>
            <param name="rect">Rectangle area</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw the line.
            </summary>
            <param name="pen">Pen</param>
            <param name="x1">Start X position</param>
            <param name="y1">Start Y position</param>
            <param name="x2">End X position</param>
            <param name="y2">End Y position</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
            <summary>
            Draw the rectangle
            </summary>
            <param name="pen">Pen</param>
            <param name="rect">Rectangle area</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.DrawText(System.Drawing.Rectangle,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Draw the text
            </summary>
            <param name="rect">Rectangle area</param>
            <param name="clipRect">Clipped rectangle area</param>
            <param name="column"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.DrawRichText(System.Drawing.Rectangle,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Draw the RichText
            </summary>
            <param name="rect">Rectangle area</param>
            <param name="clipRect">Clipped rectangle area</param>
            <param name="column">see cref="SpreadsheetColumn"/></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.DrawBitMap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Draws the BitMap into the rectangle area.
            </summary>
            <param name="bitmap">Bitmap</param>
            <param name="cellRect">Rectangle area</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.DrawWrapText(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the wrapped text.
            </summary>
            <param name="column"><see cref="T:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn"/></param>
            <param name="rect">rectangle area to draw text</param>
            <param name="clipRect">clipped area</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.DrawUsingExtTextOut(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draw the given string using the given font and foreground color at given location.
            </summary>
            <param name="str">the string to draw</param>
            <param name="font">the font to use to draw the string</param>
            <param name="color">the text color to set</param>
            <param name="rect">rectangle area to draw text</param>
            <param name="clipRect">clipped area</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.DrawUsingDrawText(System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Windows.Forms.HorizontalAlignment,Syncfusion.Windows.Forms.VerticalAlignment,System.Boolean)">
            <summary>
            Draw the given string using the given font and foreground color at given location.<br/>
            </summary>
            <param name="str">the string to draw</param>
            <param name="font">the font to use to draw the string</param>
            <param name="color">the text color to set</param>
            <param name="rect">the rectangle in which the text is to be formatted</param>
            <param name="hAlign">Horizontal alignment</param>
            <param name="vAlign">Vertical alignment</param>
            <param name="isWrap">WrapText or not</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.SetFont(System.Drawing.Font)">
            <summary>
            Set a resource (e.g. a font) for the specified device context.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.GetCachedHFont(System.Drawing.Font)">
            <summary>
            Get cached unmanaged font handle for given font.<br/>
            </summary>
            <param name="font">the font to get unmanaged font handle for</param>
            <returns>handle to unmanaged font</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.DrawTriangle(System.Drawing.Color,System.Drawing.Rectangle)">
            <summary>
            Draws the triangle. 
            </summary>
            <param name="color">Fill color of the triangle</param>
            <param name="rect">Triangle draws at top right corner of this rectangle area</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.GetDisplayText(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetGrid,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn,System.Drawing.Size)">
            <summary>
            Used to convert the formula error, datetime or number value into exponential format or replace
            its all character with "#" to fit the displaytext into cellsize.
            </summary>
            <param name="grid"></param>
            <param name="column"></param>
            <param name="cellSize"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.Dispose">
            <summary>
            Release current HDC to be able to use <see cref="F:Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint.Graphics"/> methods.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Design.SpreadsheetDesign">
            <summary>
            Smart Tag Design for Spreadsheet
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Design.SpreadsheetDesign.ActionLists">
            <summary>
            Returns the spreadsheet action lists.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Design.SpreadsheetActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Constructor for SpreadsheetActionList
            </summary>
            <param name="component">Spreadsheet</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.Design.SpreadsheetActionList.GetSortedActionItems">
            <summary>
            Returns the collection action items which are displayed in Smart Tag Panel
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Design.SpreadsheetActionList.AllowExtendRowColumnCount">
            <summary>
            Gets or sets a value indicating whether the row/column count in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/> can be extended or not .
            </summary>
            <value><see langword="true"/> if the row and column count can be extended in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Design.SpreadsheetActionList.FormulaBarVisibility">
            <summary>
            Gets or sets the visibilty of formulabar.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Design.SpreadsheetActionList.DefaultRowCount">
            <summary>
            Gets or sets a value indicating the default row count used by the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/> .
            </summary>
            <value>Number of rows.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Design.SpreadsheetActionList.DefaultColumnCount">
            <summary>
            Gets or sets a value indicating the default column count used by the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>.
            </summary>
            <value>Number of columns</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Design.SpreadsheetActionList.AllowTabItemContextMenu">
            <summary>
            Gets or sets a value indicating whether the context menu for the TabItem in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/> is displayed or not.
            </summary>
            <value><see langword="true"/>if the user wants to display the TabItem context menu ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Design.SpreadsheetActionList.AllowCellContextMenu">
            <summary>
            Gets or sets a value indicating whether the  context menu for cells in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/> is to be displayed or not .
            </summary>
            <value><see langword="true"/> if the user wants to display the cell level context menu; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Design.SpreadsheetActionList.AllowFormulaRangeSelection">
            <summary>
            Gets or sets a value indicating whether the user is allowed to perform the formula range selection in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/> or not.
            </summary>
            <value><see langword="true"/> if the user can perform the formula range selection ; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Design.SpreadsheetActionList.AllowZooming">
            <summary>
            Gets or sets a value indicating whether to allow the end users to zoom the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/> or not .
            </summary>
            <value><see langword="true"/> if the user can perform the zooming in sfspreadsheet; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Design.NamespaceDoc">
            <summary>
            Contains classes which handles the design-time configuartion of Spreadsheet.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Accounting">
            <summary>
              Looks up a localized string similar to Accounting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Alignment">
            <summary>
              Looks up a localized string similar to Alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.All">
            <summary>
              Looks up a localized string similar to All.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.AllBorder">
            <summary>
              Looks up a localized string similar to All Borders.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Allow">
            <summary>
              Looks up a localized string similar to Allow :.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.And">
            <summary>
              Looks up a localized string similar to and.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.AngleClockwise">
            <summary>
              Looks up a localized string similar to Angle Clockwise.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.AngleCounterclockwise">
            <summary>
              Looks up a localized string similar to Angle Counterclockwise.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.AnyValue">
            <summary>
              Looks up a localized string similar to Any value.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.AutoFitColumnWidth">
            <summary>
              Looks up a localized string similar to AutoFit Column Width.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.AutoFitRowHeight">
            <summary>
              Looks up a localized string similar to AutoFit Row Height.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.AvailableTemplate">
            <summary>
              Looks up a localized string similar to Available Template.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Between">
            <summary>
              Looks up a localized string similar to Between....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Between_Lower">
            <summary>
              Looks up a localized string similar to between.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.BetweenWindowDescription">
            <summary>
              Looks up a localized string similar to Format cells that are BETWEEN:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.BetweenWindowTitle">
            <summary>
              Looks up a localized string similar to Between.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.BlankWorkbook">
            <summary>
              Looks up a localized string similar to Blank workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.BlankWorkbookDescription">
            <summary>
              Looks up a localized string similar to Creates an Empty Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Border">
            <summary>
              Looks up a localized string similar to Borders.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.BottomAlign">
            <summary>
              Looks up a localized string similar to BottomAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.BottomBorder">
            <summary>
              Looks up a localized string similar to Bottom Border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Caption">
            <summary>
              Looks up a localized string similar to Message.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Caution">
            <summary>
              Looks up a localized string similar to Caution: If you lose or forget the password, it cannot be recovered. It is advisable to keep a list of passwords and their corresponding document names in a safe place.(Remember that passwords are case sensitive.).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Cells">
            <summary>
              Looks up a localized string similar to Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.CellSize">
            <summary>
              Looks up a localized string similar to Cell Size.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.CellStyles">
             <summary>
               Looks up a localized string similar to Cell 
            Styles.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.CenterAlign">
            <summary>
              Looks up a localized string similar to CenterAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.CF_IconSets_Directional">
            <summary>
              Looks up a localized string similar to Directional.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.CF_IconSets_Indicators">
            <summary>
              Looks up a localized string similar to Indicators.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.CF_IconSets_Ratings">
            <summary>
              Looks up a localized string similar to Ratings.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.CF_IconSets_Shapes">
            <summary>
              Looks up a localized string similar to Shapes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Change">
            <summary>
              Looks up a localized string similar to Change....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ClearAll">
            <summary>
              Looks up a localized string similar to Clear All.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ClearFilter">
            <summary>
              Looks up a localized string similar to Clear Filter.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ClearRules">
            <summary>
              Looks up a localized string similar to Clear Rules.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ClearRules_FromEntireSheet">
            <summary>
              Looks up a localized string similar to Clear Rules from Entire Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ClearRules_FromSelectedCells">
            <summary>
              Looks up a localized string similar to Clear Rules from Selected Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Clipboard">
            <summary>
              Looks up a localized string similar to Clipboard.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Close">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ColorScales">
            <summary>
              Looks up a localized string similar to Color Scales.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Columns">
            <summary>
              Looks up a localized string similar to Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ColumnWidth">
            <summary>
              Looks up a localized string similar to Column Width....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ColumnWidthDescription">
            <summary>
              Looks up a localized string similar to Column width:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ColumnWidthTitle">
            <summary>
              Looks up a localized string similar to Column Width.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.CommaStyle">
            <summary>
              Looks up a localized string similar to CommaStyle.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Comment">
            <summary>
              Looks up a localized string similar to Comment:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Comments">
            <summary>
              Looks up a localized string similar to Comments.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ConditionalFormatting">
             <summary>
               Looks up a localized string similar to Conditional 
            Formatting.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ConditionValueError">
            <summary>
              Looks up a localized string similar to Please enter only numeric values, cannot apply condition value as string value..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ContainsTextDescription">
            <summary>
              Looks up a localized string similar to Format cells that contain the text:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ContainsTextTitle">
            <summary>
              Looks up a localized string similar to Text That Contains.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_ClearContents">
            <summary>
              Looks up a localized string similar to Clear Contents.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_DefineName">
            <summary>
              Looks up a localized string similar to Define Name....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_Delete">
            <summary>
              Looks up a localized string similar to Delete....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_DeleteComment">
            <summary>
              Looks up a localized string similar to Delete Comment.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_EditComment">
            <summary>
              Looks up a localized string similar to Edit Comment.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_EditHyperlink">
            <summary>
              Looks up a localized string similar to Edit Hyperlink....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_FormatCells">
            <summary>
              Looks up a localized string similar to Format Cells....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_Hyperlink">
            <summary>
              Looks up a localized string similar to Hyperlink....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_Insert">
            <summary>
              Looks up a localized string similar to Insert....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_InsertComment">
            <summary>
              Looks up a localized string similar to Insert Comment.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_KeepTextOnly">
            <summary>
              Looks up a localized string similar to Keep Text Only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_OpenHyperlink">
            <summary>
              Looks up a localized string similar to Open Hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_PasteAll">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_PasteFormat">
            <summary>
              Looks up a localized string similar to Formatting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_PasteFormulas">
            <summary>
              Looks up a localized string similar to Formulas.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_PasteOptions">
            <summary>
              Looks up a localized string similar to PasteOptions.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_PasteValues">
            <summary>
              Looks up a localized string similar to Values.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_RemoveHyperlink">
            <summary>
              Looks up a localized string similar to Remove Hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Context_ValuesAndFormatting">
            <summary>
              Looks up a localized string similar to Values &amp; Formatting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Copy">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Currency">
            <summary>
              Looks up a localized string similar to Currency.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Custom">
            <summary>
              Looks up a localized string similar to Custom.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Cut">
            <summary>
              Looks up a localized string similar to Cut.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Data">
            <summary>
              Looks up a localized string similar to DATA.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DataBars">
            <summary>
              Looks up a localized string similar to Data Bars.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Datatitle">
            <summary>
              Looks up a localized string similar to Data :.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Datatools">
            <summary>
              Looks up a localized string similar to Data Tools.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DataValidation">
             <summary>
               Looks up a localized string similar to Data 
            Validation.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Date">
            <summary>
              Looks up a localized string similar to Date :.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DateAndTime">
            <summary>
              Looks up a localized string similar to Date.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DateError">
            <summary>
              Looks up a localized string similar to The date you entered for the Date is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DateOccuring">
            <summary>
              Looks up a localized string similar to A Date Occurring....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DateOccuringDescription">
            <summary>
              Looks up a localized string similar to Format cells that contain a date occurring:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DateOccuringTitle">
            <summary>
              Looks up a localized string similar to A Date Occurring.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Decimal">
            <summary>
              Looks up a localized string similar to Decimal.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DecreaseIndent">
            <summary>
              Looks up a localized string similar to DecreaseIndent.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DefaultValidationError">
            <summary>
              Looks up a localized string similar to The value you entered is not valid.                                                                   A user has restricted values that can be entered into this cell..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DefaultValidationMessage">
             <summary>
               Looks up a localized string similar to The value you entered is not valid.
            A user has restricted value that can be entered into this cell..
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DefaultWidth">
            <summary>
              Looks up a localized string similar to Default Width...  .
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DefinedNames">
            <summary>
              Looks up a localized string similar to Defined Names.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DelCols">
            <summary>
              Looks up a localized string similar to Delete columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Delete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DeleteCells">
            <summary>
              Looks up a localized string similar to Delete Cells....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DeleteColumn">
            <summary>
              Looks up a localized string similar to Delete Sheet Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DeleteComment">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DeleteNameRange">
            <summary>
              Looks up a localized string similar to Are you sure you want to delete the name .
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DeleteRow">
            <summary>
              Looks up a localized string similar to Delete Sheet Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DeleteSheet">
            <summary>
              Looks up a localized string similar to Delete Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DelRows">
            <summary>
              Looks up a localized string similar to Delete rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Direction">
            <summary>
              Looks up a localized string similar to Direction.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Document">
            <summary>
              Looks up a localized string similar to Create New Document.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentMask_AppName">
            <summary>
              Looks up a localized string similar to Add an application name.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentMask_Author">
            <summary>
              Looks up a localized string similar to Add an author.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentMask_Category">
            <summary>
              Looks up a localized string similar to Add a category.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentMask_Comments">
            <summary>
              Looks up a localized string similar to Add comments.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentMask_Company">
            <summary>
              Looks up a localized string similar to Specify the company.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentMask_Manager">
            <summary>
              Looks up a localized string similar to Specify the manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentMask_Subject">
            <summary>
              Looks up a localized string similar to Specify the subject.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentMask_Tag">
            <summary>
              Looks up a localized string similar to Add a tag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentMask_Title">
            <summary>
              Looks up a localized string similar to Add a title.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperties">
            <summary>
              Looks up a localized string similar to Properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_AppName">
            <summary>
              Looks up a localized string similar to AppName.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_Author">
            <summary>
              Looks up a localized string similar to Author.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_Category">
            <summary>
              Looks up a localized string similar to Categories.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_Comments">
            <summary>
              Looks up a localized string similar to Comments.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_Company">
            <summary>
              Looks up a localized string similar to Company.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_Created">
            <summary>
              Looks up a localized string similar to Created.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_LastModified">
            <summary>
              Looks up a localized string similar to Last Modified.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_LastModifiedBy">
            <summary>
              Looks up a localized string similar to Last Modified By.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_LastPrinted">
            <summary>
              Looks up a localized string similar to Last Printed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_Manager">
            <summary>
              Looks up a localized string similar to Manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_RelatedDates">
            <summary>
              Looks up a localized string similar to Related Dates.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_RelatedDocuments">
            <summary>
              Looks up a localized string similar to Related Documents.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_RelatedPeople">
            <summary>
              Looks up a localized string similar to Related People.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_Subject">
            <summary>
              Looks up a localized string similar to Subject.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_Tag">
            <summary>
              Looks up a localized string similar to Tags.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DocumentProperty_Title">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.DoubleValueError">
            <summary>
              Looks up a localized string similar to Your entry cannot be used. An integer or decimal number may be required..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Edit">
            <summary>
              Looks up a localized string similar to Edit....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EditComment">
             <summary>
               Looks up a localized string similar to Edit 
            Comment.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EditLater">
            <summary>
              Looks up a localized string similar to Edit the new document later.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EditName">
            <summary>
              Looks up a localized string similar to Edit Name.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EditNow">
            <summary>
              Looks up a localized string similar to Edit the new document now.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EditObjs">
            <summary>
              Looks up a localized string similar to Edit objects.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EmailAddress">
            <summary>
              Looks up a localized string similar to E-mail address:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EncryptDescription">
            <summary>
              Looks up a localized string similar to Encrypt the contents of this file.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EncryptDocument">
            <summary>
              Looks up a localized string similar to Encrypt Document.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EncryptWithPassword">
            <summary>
              Looks up a localized string similar to Encrypt with Password.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EncryptWithPasswordDesc">
            <summary>
              Looks up a localized string similar to Require a password to open this workbook..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EndDate">
            <summary>
              Looks up a localized string similar to End date :.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EndDateError">
            <summary>
              Looks up a localized string similar to The date you entered for the End Date is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EndDateErrorText">
            <summary>
              Looks up a localized string similar to You must enter a End Date..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EndDateStartDateErrorText">
            <summary>
              Looks up a localized string similar to You must enter both a End Date and a Start Date.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EndTime">
            <summary>
              Looks up a localized string similar to End time:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EndTimeError">
            <summary>
              Looks up a localized string similar to The time you entered for the End Time is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EnterDate">
            <summary>
              Looks up a localized string similar to You must enter a Date..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EnterEndDate">
            <summary>
              Looks up a localized string similar to You must enter a End Date..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EnterEndTime">
            <summary>
              Looks up a localized string similar to You must enter a End Time..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EnterFormula">
            <summary>
              Looks up a localized string similar to You must enter a Formula..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EnterLength">
            <summary>
              Looks up a localized string similar to You must enter a Length..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EnterMaximum">
            <summary>
              Looks up a localized string similar to You must enter a Maximum.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EnterMinimum">
            <summary>
              Looks up a localized string similar to You must enter a Minimum..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EnterMinMaxValue">
            <summary>
              Looks up a localized string similar to You must enter both a Maximum and a Minimum. .
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EnterSource">
            <summary>
              Looks up a localized string similar to You must enter a Source..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EnterStartDate">
            <summary>
              Looks up a localized string similar to You must enter a Start Date..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EnterStartEndDate">
            <summary>
              Looks up a localized string similar to You must enter both an End Date and a Start Date..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EnterStartEndTime">
            <summary>
              Looks up a localized string similar to You must enter both an End Time and a Start Time..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EnterStartTime">
            <summary>
              Looks up a localized string similar to You must enter a Start Time..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EnterTime">
            <summary>
              Looks up a localized string similar to You must enter a Time..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EnterValue">
            <summary>
              Looks up a localized string similar to You must enter a Value..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EntireColumn">
            <summary>
              Looks up a localized string similar to Entire column.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EntireRow">
            <summary>
              Looks up a localized string similar to Entire row.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EqualTo">
            <summary>
              Looks up a localized string similar to Equal To....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Equalto_Lower">
            <summary>
              Looks up a localized string similar to equal to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EqualToWindowDescription">
            <summary>
              Looks up a localized string similar to Format cells that are EQUAL TO:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EqualToWindowTitle">
            <summary>
              Looks up a localized string similar to Equal To.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ErrorAlert">
            <summary>
              Looks up a localized string similar to Error Alert.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ErrorAlertDescription">
            <summary>
              Looks up a localized string similar to When user enters invalid data, show this error alert:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ErrorMessage">
            <summary>
              Looks up a localized string similar to Error message:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ErrorMessage_DeleteSheet">
            <summary>
              Looks up a localized string similar to A workbook must contain atleast one visible sheet.                                  To hide, delete or move the selected sheet(s), you must first insert a new sheet or unhide a sheet which is already hidden..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.EssentialXlsio">
            <summary>
              Looks up a localized string similar to EssentialXlsio.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ExceedColumnWidthWarning">
            <summary>
              Looks up a localized string similar to Column width must be between 0 and 255 characters..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ExceedRowHeightWarning">
            <summary>
              Looks up a localized string similar to Row height must be between 0 and 409.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ExistingName">
            <summary>
              Looks up a localized string similar to Cannot rename a sheet to the same name as other sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Exit">
            <summary>
              Looks up a localized string similar to Exit.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.File">
            <summary>
              Looks up a localized string similar to FILE.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FillOption_CopyCells">
            <summary>
              Looks up a localized string similar to Copy Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FillOption_FillDays">
            <summary>
              Looks up a localized string similar to Fill Days.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FillOption_FillMonths">
            <summary>
              Looks up a localized string similar to Fill Months.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FillOption_FillSeries">
            <summary>
              Looks up a localized string similar to Fill Series.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FillOption_FillWeekDays">
            <summary>
              Looks up a localized string similar to Fill Weekdays.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FillOption_FillYears">
            <summary>
              Looks up a localized string similar to Fill Years.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FillOption_FormatOnly">
            <summary>
              Looks up a localized string similar to Fill Formatting Only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FillOption_WithoutFormat">
            <summary>
              Looks up a localized string similar to Fill Without Formatting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Filter">
            <summary>
              Looks up a localized string similar to Filter.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Font">
            <summary>
              Looks up a localized string similar to Font.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FontSizeError">
            <summary>
              Looks up a localized string similar to Font size must be between 1 and 409 points.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Format">
            <summary>
              Looks up a localized string similar to Format.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatAsTable">
             <summary>
               Looks up a localized string similar to Format as 
            Table.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatAsTableDescription">
            <summary>
              Looks up a localized string similar to Where is the data for your table?.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatAsTableWindowTitle">
            <summary>
              Looks up a localized string similar to Format As Table.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCellAlignment">
            <summary>
              Looks up a localized string similar to Format Cell Alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Formatcells">
            <summary>
              Looks up a localized string similar to Format cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Accounting_Instruction">
            <summary>
              Looks up a localized string similar to Accounting formats line up the currency symbols and decimal points in a column..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_BackgroundColor">
            <summary>
              Looks up a localized string similar to Background Color:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Bold">
            <summary>
              Looks up a localized string similar to Bold.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_BoldItalic">
            <summary>
              Looks up a localized string similar to BoldItalic.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Border_FooterText">
            <summary>
              Looks up a localized string similar to The selected border style can be applied by clicking the presets, preview diagram or the buttons above..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Bottom">
            <summary>
              Looks up a localized string similar to Bottom.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Category">
            <summary>
              Looks up a localized string similar to Category:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Center">
            <summary>
              Looks up a localized string similar to Center.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Color">
            <summary>
              Looks up a localized string similar to Color:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Currency_Instruction">
            <summary>
              Looks up a localized string similar to Currency formats are used for general monetary values. Use Accounting formats to align decimal points in a column..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Custom_Instruction">
            <summary>
              Looks up a localized string similar to Type the number format code, using one of the existing codes as a starting point..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Date">
            <summary>
              Looks up a localized string similar to Date.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Date_Instruction">
            <summary>
              Looks up a localized string similar to Date formats display date and time serial numbers as date values. Date formats that begin with an asterisk(*) respond to changes in regional date and time settings that are specified for the operating system. Formats without an asterisk are not affected by operating system settings..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Datelist1">
            <summary>
              Looks up a localized string similar to * wednesday,March 14,2012.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Datelist2">
            <summary>
              Looks up a localized string similar to 14-Mar.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Datelist3">
            <summary>
              Looks up a localized string similar to 14-Mar-12.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Datelist4">
            <summary>
              Looks up a localized string similar to Mar-12.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Datelist5">
            <summary>
              Looks up a localized string similar to March-12.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Datelist6">
            <summary>
              Looks up a localized string similar to March 14,2012.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Datelist7">
            <summary>
              Looks up a localized string similar to 14-Mar-2012.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_DecimalPlaces">
            <summary>
              Looks up a localized string similar to Decimal places:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Degrees">
            <summary>
              Looks up a localized string similar to Degrees:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_DoubleUnderline">
            <summary>
              Looks up a localized string similar to Double.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Effects">
            <summary>
              Looks up a localized string similar to Effects.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Fill">
            <summary>
              Looks up a localized string similar to Fill.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Font">
            <summary>
              Looks up a localized string similar to Font:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Font_FooterText">
            <summary>
              Looks up a localized string similar to This is a true type font. The same font will be used on both your printer and your screen..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_FontSize">
            <summary>
              Looks up a localized string similar to Size:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_FontStyle">
            <summary>
              Looks up a localized string similar to Font Style:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_FractionType1">
            <summary>
              Looks up a localized string similar to Up to one digit(1/4).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_FractionType2">
            <summary>
              Looks up a localized string similar to Up to two digits(21/25).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_FractionType3">
            <summary>
              Looks up a localized string similar to Up to three digits(312/943).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_FractionType4">
            <summary>
              Looks up a localized string similar to As halves(1/2).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_FractionType5">
            <summary>
              Looks up a localized string similar to As quarters(2/4).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_FractionType6">
            <summary>
              Looks up a localized string similar to As eighths(4/8).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_FractionType7">
            <summary>
              Looks up a localized string similar to As sixteenths(8/16).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_FractionType8">
            <summary>
              Looks up a localized string similar to As tenths(3/10).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_FractionType9">
            <summary>
              Looks up a localized string similar to As hundredths(30/100).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_General_Instruction">
            <summary>
              Looks up a localized string similar to General format cells have no specific number format.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_HeaderFont">
            <summary>
              Looks up a localized string similar to Font.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Hidden">
            <summary>
              Looks up a localized string similar to Hidden.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Horizontal">
            <summary>
              Looks up a localized string similar to Horizontal:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Indent">
            <summary>
              Looks up a localized string similar to Indent:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Inside">
            <summary>
              Looks up a localized string similar to Inside.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Italic">
            <summary>
              Looks up a localized string similar to Italic.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Left">
            <summary>
              Looks up a localized string similar to Left.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_LeftIndent">
            <summary>
              Looks up a localized string similar to Left(Indent).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Line">
            <summary>
              Looks up a localized string similar to Line.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Locked">
            <summary>
              Looks up a localized string similar to Locked.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_NegativeNumber">
            <summary>
              Looks up a localized string similar to Negative number:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_NoColor">
            <summary>
              Looks up a localized string similar to No Color.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_None">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_NormalFont">
            <summary>
              Looks up a localized string similar to Normal Font.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Number_Instruction">
            <summary>
              Looks up a localized string similar to Number is used for general display of numbers. Currency And Accounting offer specialized formatting for monetary value..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Outline">
            <summary>
              Looks up a localized string similar to Outline.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Percentage_Instruction">
            <summary>
              Looks up a localized string similar to Percentage formats multiply the cell value by 100 and display the result with a percent symbol..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Presets">
            <summary>
              Looks up a localized string similar to Presets.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Preview">
            <summary>
              Looks up a localized string similar to Preview.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Protection">
            <summary>
              Looks up a localized string similar to Protection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Protection_FooterText">
            <summary>
              Looks up a localized string similar to Locking cells or hiding formulas has no effect untill you protect the worksheet(View tab,Protect sheet button)..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Regular">
            <summary>
              Looks up a localized string similar to Regular.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Right">
            <summary>
              Looks up a localized string similar to Right.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_RightIndent">
            <summary>
              Looks up a localized string similar to Right(Indent).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Sample">
            <summary>
              Looks up a localized string similar to Sample.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_SeparatorText">
            <summary>
              Looks up a localized string similar to Use 1000 Separator (,).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Single">
            <summary>
              Looks up a localized string similar to Single.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Special_Instruction">
            <summary>
              Looks up a localized string similar to Special formats are useful for tracking list and database values..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Special1">
            <summary>
              Looks up a localized string similar to Zip Code.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Special2">
            <summary>
              Looks up a localized string similar to Zip Code +4.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Special3">
            <summary>
              Looks up a localized string similar to Phone Number.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Special4">
            <summary>
              Looks up a localized string similar to Social Security Number.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Strikethrough">
            <summary>
              Looks up a localized string similar to Strikethrough.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Style">
            <summary>
              Looks up a localized string similar to Style:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Symbol">
            <summary>
              Looks up a localized string similar to Symbol:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_TextAlignment">
            <summary>
              Looks up a localized string similar to Text Alignment.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_TextControl">
            <summary>
              Looks up a localized string similar to Text Control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Time_Instruction">
            <summary>
              Looks up a localized string similar to Time formats display date and time serial numbers as date values. Date formats that begin with an asterisk(*) respond to changes in regional date and time settings that are specified for the operating system. Formats without an asterisk are not affected by operating system settings..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Title">
            <summary>
              Looks up a localized string similar to Format Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Top">
            <summary>
              Looks up a localized string similar to Top.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Type">
            <summary>
              Looks up a localized string similar to Type:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Underline">
            <summary>
              Looks up a localized string similar to Underline:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCells_Vertical">
            <summary>
              Looks up a localized string similar to Vertical:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatCols">
            <summary>
              Looks up a localized string similar to Format columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormatRows">
            <summary>
              Looks up a localized string similar to Format rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Formula">
            <summary>
              Looks up a localized string similar to Formula.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormulaBar">
            <summary>
              Looks up a localized string similar to Formula Bar.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FormulaError">
            <summary>
              Looks up a localized string similar to The formula you typed contains an error..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Formulas">
            <summary>
              Looks up a localized string similar to Formulas.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Fraction">
            <summary>
              Looks up a localized string similar to Fraction.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Freeze">
            <summary>
              Looks up a localized string similar to Freeze.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FreezeFirstColumn">
            <summary>
              Looks up a localized string similar to Freeze First Column.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FreezeFirstColumnDescription">
            <summary>
              Looks up a localized string similar to Keep the first column visible while scrolling through the rest of the worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FreezePanes">
             <summary>
               Looks up a localized string similar to Freeze 
            Panes.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FreezePanes1">
            <summary>
              Looks up a localized string similar to Freeze Panes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FreezePanesDescription">
            <summary>
              Looks up a localized string similar to Keep rows and columns visible while the rest of the worksheet scrolls(based on current selection)..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FreezeTopRow">
            <summary>
              Looks up a localized string similar to Freeze Top Row.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FreezeTopRowDescription">
            <summary>
              Looks up a localized string similar to Keep the top row visible while scrolling through the rest of the worksheet..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.FullPath">
            <summary>
              Looks up a localized string similar to FullPath:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.General">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.GoodBadNeutral">
            <summary>
              Looks up a localized string similar to Good, Bad and Neutral.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.GradientFill">
            <summary>
              Looks up a localized string similar to Gradient Fill.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.GreaterThan">
            <summary>
              Looks up a localized string similar to Greater Than....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.GreaterThan_Lower">
            <summary>
              Looks up a localized string similar to greater than.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.GreaterThanOrEqualTo_Lower">
            <summary>
              Looks up a localized string similar to greater than or equal to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.GreaterThanWindowDescription">
            <summary>
              Looks up a localized string similar to Format cells that are GREATER THAN: .
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.GreaterThanWindowTitle">
            <summary>
              Looks up a localized string similar to Greater Than.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.GreenFillWithDarkGreenText">
            <summary>
              Looks up a localized string similar to Green Fill with Dark Green Text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Gridlines">
            <summary>
              Looks up a localized string similar to Gridlines.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Group">
            <summary>
              Looks up a localized string similar to Group.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.H_Workbook">
            <summary>
              Looks up a localized string similar to Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.H_www">
            <summary>
              Looks up a localized string similar to www..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.H_Xlsx">
            <summary>
              Looks up a localized string similar to .xlsx.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.H_Xlsx2">
            <summary>
              Looks up a localized string similar to (xlsx).
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Headings">
            <summary>
              Looks up a localized string similar to Headings.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Hide">
            <summary>
              Looks up a localized string similar to Hide.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HideAndUnhide">
            <summary>
              Looks up a localized string similar to Hide &amp;&amp; Unhide.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HideColumns">
            <summary>
              Looks up a localized string similar to Hide Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HideRows">
            <summary>
              Looks up a localized string similar to Hide Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HideSheet">
            <summary>
              Looks up a localized string similar to Hide Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HighlightCellRules">
            <summary>
              Looks up a localized string similar to Highlight Cells Rules.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_BrowseFilter">
            <summary>
              Looks up a localized string similar to Office Files.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_Change">
            <summary>
              Looks up a localized string similar to Change....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_DefaultCell">
            <summary>
              Looks up a localized string similar to A1.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_Document">
            <summary>
              Looks up a localized string similar to Create New
            Document.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_EditLater">
            <summary>
              Looks up a localized string similar to Edit the new document later.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_EditNow">
            <summary>
              Looks up a localized string similar to Edit the new document now.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_EditWindowName">
            <summary>
              Looks up a localized string similar to Edit Hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_EmailAddress">
            <summary>
              Looks up a localized string similar to E-mail address:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_Exist">
             <summary>
               Looks up a localized string similar to Existing File 
            or Web Page.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_File">
            <summary>
              Looks up a localized string similar to File.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_FullPath">
            <summary>
              Looks up a localized string similar to Full path:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_HyperlinkAddress">
            <summary>
              Looks up a localized string similar to Address:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_InsertWindowName">
            <summary>
              Looks up a localized string similar to Insert Hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_LinkTo">
            <summary>
              Looks up a localized string similar to Link to:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_Mail">
            <summary>
              Looks up a localized string similar to E-mail
            Address.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_MailTo">
            <summary>
              Looks up a localized string similar to mailto.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_Nameofnewdocument">
            <summary>
              Looks up a localized string similar to Name of new document:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_Reference">
            <summary>
              Looks up a localized string similar to Place in This
            Document.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_RemoveLink">
            <summary>
              Looks up a localized string similar to Remove Link.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_ScreenTip">
            <summary>
              Looks up a localized string similar to ScreenTip:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_SelectInDocument">
            <summary>
              Looks up a localized string similar to &lt;&lt;Selection in Document&gt;&gt;.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_Subject">
            <summary>
              Looks up a localized string similar to Subject:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_TexttoDisplay">
            <summary>
              Looks up a localized string similar to Text to display:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_ToolTip">
            <summary>
              Looks up a localized string similar to Click once to follow .
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_Typethecellreference">
            <summary>
              Looks up a localized string similar to Type the cell reference:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HLink_Whentoedit">
            <summary>
              Looks up a localized string similar to When to edit:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Home">
            <summary>
              Looks up a localized string similar to HOME.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Hyperlink">
            <summary>
              Looks up a localized string similar to Hyperlink.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HyperlinkAddress">
            <summary>
              Looks up a localized string similar to Address:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HyperlinkCancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.HyperlinkOk">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Hyperlinks">
            <summary>
              Looks up a localized string similar to Hyperlinks.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.IconSets">
            <summary>
              Looks up a localized string similar to Icon Sets.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.IgnoreBlank">
            <summary>
              Looks up a localized string similar to Ignore blank.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Illustrations">
            <summary>
              Looks up a localized string similar to Illustrations.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.InCellDropDown">
            <summary>
              Looks up a localized string similar to In-cell Dropdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Incorrect">
             <summary>
               Looks up a localized string similar to You typed invalid name for a sheet. Make sure that:
            
            1. The name that you type does not exceed 31 characters.
            2. The name does not contain any of following characters:  : \ / ? * [ or ]
            3. You did not leave the name blank..
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.IncreaseIndent">
            <summary>
              Looks up a localized string similar to IncreaseIndent.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Info">
            <summary>
              Looks up a localized string similar to Info.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Information">
            <summary>
              Looks up a localized string similar to Information.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.InformationAbout">
            <summary>
              Looks up a localized string similar to Information about.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.InputMessage">
            <summary>
              Looks up a localized string similar to Input Message.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Inputmessagedesc">
            <summary>
              Looks up a localized string similar to Input message:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.InputmessageDescription">
            <summary>
              Looks up a localized string similar to When cell is selected, show this input message:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.InsCols">
            <summary>
              Looks up a localized string similar to Insert columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Insert">
            <summary>
              Looks up a localized string similar to Insert.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.InsertCells">
            <summary>
              Looks up a localized string similar to Insert Cells....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.InsertColumn">
            <summary>
              Looks up a localized string similar to Insert Sheet Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.InsertDeleteCellsError">
            <summary>
              Looks up a localized string similar to Unable to perform this action on multiple ranges. Select a single range and try again..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.InsertRow">
            <summary>
              Looks up a localized string similar to Insert Sheet Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.InsertSheet">
            <summary>
              Looks up a localized string similar to Insert Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.InsHyper">
            <summary>
              Looks up a localized string similar to Insert hyperlinks.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.InsRows">
            <summary>
              Looks up a localized string similar to Insert rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Inthelast7days">
            <summary>
              Looks up a localized string similar to In the last 7 days.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.IsSummaryColumnAtRight">
            <summary>
              Looks up a localized string similar to Summary columns to right of detail.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.IsSummaryRowBelow">
            <summary>
              Looks up a localized string similar to Summary rows below detail.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.LastMonth">
            <summary>
              Looks up a localized string similar to Last Month.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.LastWeek">
            <summary>
              Looks up a localized string similar to Last Week.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.LeftAlign">
            <summary>
              Looks up a localized string similar to LeftAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.LeftBorder">
            <summary>
              Looks up a localized string similar to Left Border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Length">
            <summary>
              Looks up a localized string similar to Length:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.LessThan">
            <summary>
              Looks up a localized string similar to Less Than....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Lessthan_Lower">
            <summary>
              Looks up a localized string similar to less than.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.LessThanOrEqualTo_Lower">
            <summary>
              Looks up a localized string similar to less than or equal to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.LessThanWindowDescription">
            <summary>
              Looks up a localized string similar to Format cells that are LESS THAN:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.LessThanWindowTitle">
            <summary>
              Looks up a localized string similar to Less Than.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.LightRedFill">
            <summary>
              Looks up a localized string similar to Light Red Fill.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.LightRedFillWithDarkRedText">
            <summary>
              Looks up a localized string similar to Light Red Fill with Dark Red Text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Links">
            <summary>
              Looks up a localized string similar to Links.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.LinkTo">
            <summary>
              Looks up a localized string similar to LinkTo:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.List">
            <summary>
              Looks up a localized string similar to List.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.LockCell">
            <summary>
              Looks up a localized string similar to Lock Cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Locked">
            <summary>
              Looks up a localized string similar to Select locked cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.LongDate">
            <summary>
              Looks up a localized string similar to Long Date.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Mail">
            <summary>
              Looks up a localized string similar to E-Mail Address.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Maximum">
            <summary>
              Looks up a localized string similar to Maximum :.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.MaximumErrorText">
            <summary>
              Looks up a localized string similar to You must enter a Maximum..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.MaxNumericValueError">
            <summary>
              Looks up a localized string similar to The Maximum must be a numeric value, numeric expression, or refer to a cell containing a numeric value..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.MergeAcross">
            <summary>
              Looks up a localized string similar to Merge Across.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.MergeAndCenter">
            <summary>
              Looks up a localized string similar to Merge &amp;&amp;  Center.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.MergeCells">
            <summary>
              Looks up a localized string similar to Merge Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.MiddleAlign">
            <summary>
              Looks up a localized string similar to MiddleAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Minimum">
            <summary>
              Looks up a localized string similar to Minimum :.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.MinimumErrorText">
            <summary>
              Looks up a localized string similar to You must enter a Minimum..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.MinimumMaximumErrorText">
            <summary>
              Looks up a localized string similar to You must enter both a Maximum and a Minimum..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.MinMaxDateError">
            <summary>
              Looks up a localized string similar to The End Date must be greater than or equal to the Start Date..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.MinMaxError">
            <summary>
              Looks up a localized string similar to The Maximum must be greater than or equal to the Minimum..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.MinMaxTimeError">
            <summary>
              Looks up a localized string similar to The End Time must be greater than or equal to Start Time..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.MinNumericValueError">
            <summary>
              Looks up a localized string similar to The Minimum must be a numeric value, numeric expression, or refer to a cell containing a numeric value..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.MoreBorders">
            <summary>
              Looks up a localized string similar to More Borders....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.MultipleSelectionsError">
            <summary>
              Looks up a localized string similar to The command you chose cannot be performed with multiple selections. Select a single range and click the command again..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Name">
            <summary>
              Looks up a localized string similar to Name:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NameAlreadyExist">
            <summary>
              Looks up a localized string similar to The name entered already exists. Enter a unique name..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NameManager">
             <summary>
               Looks up a localized string similar to Name 
            Manager.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Nameofnewdocument">
            <summary>
              Looks up a localized string similar to Name of new document:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NameRangeError">
            <summary>
              Looks up a localized string similar to A named range you specified cannot be found..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NamesScopedtoWorkbook">
            <summary>
              Looks up a localized string similar to Names Scoped to Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NamesScopedtoWorksheet">
            <summary>
              Looks up a localized string similar to Names Scoped to Worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NameswithErrors">
            <summary>
              Looks up a localized string similar to Names with Errors.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NameswithoutErrors">
            <summary>
              Looks up a localized string similar to Names without Errors.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.New">
            <summary>
              Looks up a localized string similar to New.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NewComment">
             <summary>
               Looks up a localized string similar to New 
            Comment.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NewName">
            <summary>
              Looks up a localized string similar to New....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NewNameRange">
            <summary>
              Looks up a localized string similar to New Name.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NextMonth">
            <summary>
              Looks up a localized string similar to Next Month.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NextWeek">
            <summary>
              Looks up a localized string similar to Next Week.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NoBorder">
            <summary>
              Looks up a localized string similar to No Border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NotBetween">
            <summary>
              Looks up a localized string similar to Not Between.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Notbetween_Lower">
            <summary>
              Looks up a localized string similar to not between.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NotBetweenWindowDescription">
            <summary>
              Looks up a localized string similar to Format cells that are NOT BETWEEN:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NotBetweenWindowTitle">
            <summary>
              Looks up a localized string similar to Not Between.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NotEqualTo_Lower">
            <summary>
              Looks up a localized string similar to not equal to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NotSavedYet">
            <summary>
              Looks up a localized string similar to Not saved yet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Number">
            <summary>
              Looks up a localized string similar to Number.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NumberFormat">
            <summary>
              Looks up a localized string similar to Number Format.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.NumericValueError">
            <summary>
              Looks up a localized string similar to The Value must be a numeric value, numeric expression, or refer to a cell containing a numeric value..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Ok">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Open">
            <summary>
              Looks up a localized string similar to Open.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.OpenFileLocation">
            <summary>
              Looks up a localized string similar to Open File Location.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.OrganizeSheets">
            <summary>
              Looks up a localized string similar to Organize Sheets.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Others">
            <summary>
              Looks up a localized string similar to Others.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Outline">
            <summary>
              Looks up a localized string similar to Outline.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.OutSideBorder">
            <summary>
              Looks up a localized string similar to Outside Borders.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Password">
            <summary>
              Looks up a localized string similar to Password (optional):.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.PasswordTitle">
            <summary>
              Looks up a localized string similar to Password.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.PasswordtoUnProtect">
            <summary>
              Looks up a localized string similar to Password:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Paste">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.PasteOption_FormulaFormat">
            <summary>
              Looks up a localized string similar to Formula and Source Formatting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.PasteOption_ValueFormat">
            <summary>
              Looks up a localized string similar to Values and Formatting.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.PasteOptions">
            <summary>
              Looks up a localized string similar to Paste Options:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Percentage">
            <summary>
              Looks up a localized string similar to Percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Permissions">
            <summary>
              Looks up a localized string similar to Permissions.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.PermissionsDescription">
            <summary>
              Looks up a localized string similar to PermissionsDescription.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Picture">
            <summary>
              Looks up a localized string similar to Picture.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Protect">
            <summary>
              Looks up a localized string similar to Protect Sheet....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectCurrentSheet">
            <summary>
              Looks up a localized string similar to Protect Current Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectCurrentSheetDesc">
            <summary>
              Looks up a localized string similar to Control what types of changes people can make to the current sheet..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Protection">
            <summary>
              Looks up a localized string similar to Protection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectOptions_Deletecolumns">
            <summary>
              Looks up a localized string similar to Delete columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectOptions_Deleterows">
            <summary>
              Looks up a localized string similar to Delete rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectOptions_EditObjects">
            <summary>
              Looks up a localized string similar to Edit objects.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectOptions_Formatcells">
            <summary>
              Looks up a localized string similar to Format cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectOptions_Formatcolumns">
            <summary>
              Looks up a localized string similar to Format columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectOptions_Formatrows">
            <summary>
              Looks up a localized string similar to Format rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectOptions_Insertcolumns">
            <summary>
              Looks up a localized string similar to Insert columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectOptions_InsertHyperlink">
            <summary>
              Looks up a localized string similar to Insert hyperlinks.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectOptions_Insertrows">
            <summary>
              Looks up a localized string similar to Insert rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectOptions_Locked">
            <summary>
              Looks up a localized string similar to Select locked cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectOptions_Unlocked">
            <summary>
              Looks up a localized string similar to Select unlocked cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectSheet">
             <summary>
               Looks up a localized string similar to Protect 
            Sheet.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectSheetDesc">
            <summary>
              Looks up a localized string similar to Protect worksheet and contents of locked cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectSheetDescription">
            <summary>
              Looks up a localized string similar to Password to unprotect sheet:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectSheetLabel">
            <summary>
              Looks up a localized string similar to Allow all users of this worksheet to:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectSheetLarge">
            <summary>
              Looks up a localized string similar to Protect Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectWorkbook">
             <summary>
               Looks up a localized string similar to Protect 
            Workbook.
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectWorkbook1">
            <summary>
              Looks up a localized string similar to Protect Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectWorkbookDescription">
            <summary>
              Looks up a localized string similar to Protect workbook for.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectWorkbookDescriptionText">
            <summary>
              Looks up a localized string similar to Password:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectWorkbookStructure">
            <summary>
              Looks up a localized string similar to Protect Workbook Structure.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectWorkbookStructureDesc">
            <summary>
              Looks up a localized string similar to Prevent unwanted changes to the structure of the workbook, such as adding sheets..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectWorkbookText">
            <summary>
              Looks up a localized string similar to Control what type of changes people can make to this workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ProtectWorkbookTitle">
            <summary>
              Looks up a localized string similar to Protect Structure and Windows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.RedBorder">
            <summary>
              Looks up a localized string similar to Red Border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.RedText">
            <summary>
              Looks up a localized string similar to Red Text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Reference">
            <summary>
              Looks up a localized string similar to Place in This Document.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ReferenceError">
            <summary>
              Looks up a localized string similar to This type of reference cannot be used in a Data Validation formula.  Change the reference to a single cell, or use a reference with worksheet function, such as =SUM(A1:E5)..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Refers_To">
            <summary>
              Looks up a localized string similar to Refers to:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.RemoveLink">
            <summary>
              Looks up a localized string similar to RemoveLink.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Rename">
            <summary>
              Looks up a localized string similar to Rename.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.RenameSheet">
            <summary>
              Looks up a localized string similar to Rename Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Retry">
            <summary>
              Looks up a localized string similar to Retry.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.RightAlign">
            <summary>
              Looks up a localized string similar to RightAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.RightBorder">
            <summary>
              Looks up a localized string similar to Right Border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.RotateTextDown">
            <summary>
              Looks up a localized string similar to Rotate Text Down.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.RotateTextUp">
            <summary>
              Looks up a localized string similar to Rotate Text Up.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.RowHeight">
            <summary>
              Looks up a localized string similar to Row Height....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.RowHeightDescription">
            <summary>
              Looks up a localized string similar to Row height:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.RowHeightTitle">
            <summary>
              Looks up a localized string similar to Row Height.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Rows">
            <summary>
              Looks up a localized string similar to Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Save">
            <summary>
              Looks up a localized string similar to Save.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.SaveAs">
            <summary>
              Looks up a localized string similar to Save As.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.SaveChanges">
            <summary>
              Looks up a localized string similar to Do you want to save changes you made to the name reference?.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Scientific">
            <summary>
              Looks up a localized string similar to Scientific.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Scope">
            <summary>
              Looks up a localized string similar to Scope:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ScreenTip">
            <summary>
              Looks up a localized string similar to ScreenTip:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.SelectAll">
            <summary>
              Looks up a localized string similar to Test.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Settings">
            <summary>
              Looks up a localized string similar to Settings.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Sheet">
            <summary>
              Looks up a localized string similar to Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.SheetProtected">
            <summary>
              Looks up a localized string similar to The Cell that you are trying to change is Protected and therefore read only.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ShortDate">
            <summary>
              Looks up a localized string similar to Short Date.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Show">
            <summary>
              Looks up a localized string similar to Show.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ShowAllProperties">
            <summary>
              Looks up a localized string similar to Show All Properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ShowErrorMessage">
            <summary>
              Looks up a localized string similar to Show error alert after invalid data is entered.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ShowFewerProperties">
            <summary>
              Looks up a localized string similar to Show Fewer Properties.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ShowInputMessage">
            <summary>
              Looks up a localized string similar to Show input message when cell is selected.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.SolidFill">
            <summary>
              Looks up a localized string similar to Solid Fill.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Source">
            <summary>
              Looks up a localized string similar to Source :.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.SourceErrorText">
            <summary>
              Looks up a localized string similar to You must enter the Source..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Special">
            <summary>
              Looks up a localized string similar to Special.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.StandardWidth">
            <summary>
              Looks up a localized string similar to Standard Width.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.StandardWidthError">
            <summary>
              Looks up a localized string similar to Your entry cannot be used. An integer or decimal number may be required..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.StandardWidthText">
            <summary>
              Looks up a localized string similar to Standard column width:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.StartDate">
            <summary>
              Looks up a localized string similar to Start date :.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.StartDateError">
            <summary>
              Looks up a localized string similar to The date you entered for the Start Date is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.StartDateErrorText">
            <summary>
              Looks up a localized string similar to You must enter a Start Date..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.StartTime">
            <summary>
              Looks up a localized string similar to Start time:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.StartTimeError">
            <summary>
              Looks up a localized string similar to The time you entered for the Start Time is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Stop">
            <summary>
              Looks up a localized string similar to Stop.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.String1">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Structure">
            <summary>
              Looks up a localized string similar to Structure.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Style">
            <summary>
              Looks up a localized string similar to Style:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Styles">
            <summary>
              Looks up a localized string similar to Styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Subject">
            <summary>
              Looks up a localized string similar to Subject.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.TableFormat_CheckBoxContent">
            <summary>
              Looks up a localized string similar to My table has headers.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.TableFormatDark">
            <summary>
              Looks up a localized string similar to Dark.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.TableFormatLight">
            <summary>
              Looks up a localized string similar to Light.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.TableFormatMedium">
            <summary>
              Looks up a localized string similar to Medium.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.TableFormatTextBlockText">
            <summary>
              Looks up a localized string similar to Where is the data for your table?.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.TableNames">
            <summary>
              Looks up a localized string similar to Table Names.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.TextContains">
            <summary>
              Looks up a localized string similar to Text that Contains....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.TextLength">
            <summary>
              Looks up a localized string similar to Text Length.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.TexttoDisplay">
            <summary>
              Looks up a localized string similar to Text to Display:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ThemedCellStyles">
            <summary>
              Looks up a localized string similar to Themed Cell Styles.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ThickBottomBorder">
            <summary>
              Looks up a localized string similar to Thick Bottom Border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ThickBoxBorder">
            <summary>
              Looks up a localized string similar to Thick Box Border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ThisMonth">
            <summary>
              Looks up a localized string similar to This Month.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ThisWeek">
            <summary>
              Looks up a localized string similar to This Week.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Time">
            <summary>
              Looks up a localized string similar to Time.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.TimeError">
            <summary>
              Looks up a localized string similar to The time you entered for the Time is invalid..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Title">
            <summary>
              Looks up a localized string similar to Title:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.TitlesAndHeadings">
            <summary>
              Looks up a localized string similar to Titles and Headings.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Today">
            <summary>
              Looks up a localized string similar to Today.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Tomorrow">
            <summary>
              Looks up a localized string similar to Tomorrow.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.TopAlign">
            <summary>
              Looks up a localized string similar to TopAlign.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.TopAndBottomBorder">
            <summary>
              Looks up a localized string similar to Top And Bottom Border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.TopandThickBottomBorder">
            <summary>
              Looks up a localized string similar to Top and Thick Bottom Border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.TopBorder">
            <summary>
              Looks up a localized string similar to Top Border.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Typethecellreference">
            <summary>
              Looks up a localized string similar to Type the cell reference:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.UnfreezePanes">
            <summary>
              Looks up a localized string similar to Unfreeze Panes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.UnfreezePanesDescription">
            <summary>
              Looks up a localized string similar to Unlock all rows and columns to scroll through the entire worksheet..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Ungroup">
            <summary>
              Looks up a localized string similar to Ungroup.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.UngroupError">
            <summary>
              Looks up a localized string similar to Cannot ungroup. To start an outline, select the detail rows or columns and group them..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.UnHide">
            <summary>
              Looks up a localized string similar to UnHide....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.UnHideColumns">
            <summary>
              Looks up a localized string similar to Unhide Columns.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.UnHideDescription">
            <summary>
              Looks up a localized string similar to Select the Sheet to be hided.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.UnHideRows">
            <summary>
              Looks up a localized string similar to Unhide Rows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.UnHideSheet">
            <summary>
              Looks up a localized string similar to Unhide Sheet....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.UnhideSheet_Title">
            <summary>
              Looks up a localized string similar to Unhide.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.UnHideSheetDescription">
            <summary>
              Looks up a localized string similar to Unhide Sheet:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Unlocked">
            <summary>
              Looks up a localized string similar to Select unlocked cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.UnMergeCells">
            <summary>
              Looks up a localized string similar to Unmerge Cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.UnProtect">
            <summary>
              Looks up a localized string similar to Unprotect Sheet....
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.UnProtectSheet">
            <summary>
              Looks up a localized string similar to Unprotect
            Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.UnProtectSheetDesc">
            <summary>
              Looks up a localized string similar to Enter Password to UnProtect the Sheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.UnprotectWorkbookTitle">
            <summary>
              Looks up a localized string similar to Unprotect Workbook.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Validation_Edit_NameRanges">
            <summary>
              Looks up a localized string similar to The name you entered is invalid. Reasons for this can include :                  1.The name does not begin with a letter or underscore.                              2.The name contains white spaces or special characters.                          3.The name conflicts with an Excel built-in name or the name of another object in the workbook..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Validation_Edit_NameRanges_Refers_To">
            <summary>
              Looks up a localized string similar to The Formula you typed contains an error..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationCriteria">
            <summary>
              Looks up a localized string similar to Validation criteria.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_ClipboardPaste">
            <summary>
              Looks up a localized string similar to The data you&apos;re pasting isn&apos;t the same size as your selection, Do you want to paste anyway?.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_ContainsMutidatavalidation1">
            <summary>
              Looks up a localized string similar to The selection contains more than one type of validation..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_ContainsMutidatavalidation2">
            <summary>
              Looks up a localized string similar to Erase current settings and continue.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_ContainsValidationWithNormalCell">
            <summary>
              Looks up a localized string similar to The selection contains some cells without Data Validation settings. Do you want to extend Data Validation to these results?.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_CreateFiles">
            <summary>
              Looks up a localized string similar to No procedure for creating files of this type is registered with the shell.Do you want to create an empty file.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_CutTablePartially">
            <summary>
              Looks up a localized string similar to This operation is not allowed.The operation is attempting to shift cells in a table on your worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_DeleteSheet">
            <summary>
              Looks up a localized string similar to You can&apos;t undo deleting sheets, and you might be removing some data. If you don&apos;t need it, click OK..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_EnteredInvalidData">
            <summary>
              Looks up a localized string similar to The value you entered is not a valid number, date, time or string .
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_EnterValidRange">
            <summary>
              Looks up a localized string similar to Enter a valid Range.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_Error">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_FileExist1">
            <summary>
              Looks up a localized string similar to You already have a file named.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_FileExist2">
            <summary>
              Looks up a localized string similar to Do you want to replace it with this one.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_FileOpen">
            <summary>
              Looks up a localized string similar to Cannot open the specified file..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_Fill_MergeError">
            <summary>
              Looks up a localized string similar to To do this, all the merged cells need to be the same size.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_InavalidFile">
            <summary>
              Looks up a localized string similar to Invalid file name.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_InCorrectPassword">
            <summary>
              Looks up a localized string similar to The password you supplied is not correct. Verify that the CAPS LOCK key is off and be sure to use correct capitalization..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_InvalidFileVersion">
            <summary>
              Looks up a localized string similar to File version is not supported.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_InvalidRerence">
            <summary>
              Looks up a localized string similar to Reference is not valid.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_MergeAndCenter">
            <summary>
              Looks up a localized string similar to Merging cells only keeps the upper-left cell value, and discards the other values..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_MergeCells">
            <summary>
              Looks up a localized string similar to We can&apos;t do that to a merged cell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_MergeCutCells">
            <summary>
              Looks up a localized string similar to This operation will cause some merged cells to unmerge, Do you wish to continue?.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_MergedTableFormat">
            <summary>
              Looks up a localized string similar to This operation was not allowed. Merging over the table format cells was restricted..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_MultipleSelections">
            <summary>
              Looks up a localized string similar to That command cannot be used on multiple selections.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_NotEnoughSpaceToPaste">
            <summary>
              Looks up a localized string similar to We can&apos;t paste because the Copy area and paste area aren&apos;t the same size.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_ReadOnlyCells">
            <summary>
              Looks up a localized string similar to The cell that you are trying to change is on a protected sheet and therefore readonly..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_SaveChanges">
            <summary>
              Looks up a localized string similar to Do you want to save changes that you made to this file?.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_TableFormatInvalidFormula">
            <summary>
              Looks up a localized string similar to We found problem with this formula. We couldn&apos;t find a range reference or a defined name..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidationMessage_TableFormatInvalidRange">
            <summary>
              Looks up a localized string similar to This operation is not allowed. The operation is attempting to shift cells in a table on your worksheet..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValidNameRange">
            <summary>
              Looks up a localized string similar to You must enter a Valid reference you want to go to, or type a valid name for selection.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Value">
            <summary>
              Looks up a localized string similar to Value:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.ValueErrorText">
            <summary>
              Looks up a localized string similar to You must enter a Value..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.VerticalText">
            <summary>
              Looks up a localized string similar to Vertical Text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.View">
            <summary>
              Looks up a localized string similar to VIEW.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Visibility">
            <summary>
              Looks up a localized string similar to Visisbility.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Warning">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Warning_GroupingWholeTable">
            <summary>
              Looks up a localized string similar to Cannot Group the Whole Table. To start an outline, select the detail rows or columns and group them..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Web">
            <summary>
              Looks up a localized string similar to Existing File or Web Page.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Whentoedit">
            <summary>
              Looks up a localized string similar to When to edit:.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.WholeNumber">
            <summary>
              Looks up a localized string similar to Whole number.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.WholeNumberError">
            <summary>
              Looks up a localized string similar to Decimal values cannot be used for Whole Number conditions..
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Window">
            <summary>
              Looks up a localized string similar to Window.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Windows">
            <summary>
              Looks up a localized string similar to Windows.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.With">
            <summary>
              Looks up a localized string similar to with.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.WrapText">
            <summary>
              Looks up a localized string similar to Wrap Text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.WrongPassword">
            <summary>
              Looks up a localized string similar to The Password you supplied is not correct. Verify that CAPSLOCK is off and try again.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.YellowFillWithDarkYellowText">
            <summary>
              Looks up a localized string similar to Yellow Fill with Dark Yellow Text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.Resources.Syncfusion_Spreadsheet_Windows.Yesterday">
            <summary>
              Looks up a localized string similar to Yesterday.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.BackStageTabItem">
            <summary>
            BackStage control for New and Info Tab panel
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.BackStageTabItem.#ctor(System.Boolean)">
            <summary>
            Constructor for the NewTabPanel
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.BackStageTabItem.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.BackStageTabItem.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.BackStageTabItem.InitializeComponent(System.Boolean)">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.BackStageTabItem.InitializeNewTab">
            <summary>
            Initialize the backstage of new tab.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.BackStageTabItem.InitializeInfoTab">
            <summary>
            Initialize the back stage info tab.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.BackStageTabItem.UpdateDocumentProperties(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Update the document info
            </summary>
            <param name="spreadsheet"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.BackStageTabItem.ConvertDateToString(System.DateTime)">
            <summary>
            Convert the date to string
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.#ctor">
            <summary>
            Constructor for Ribbon manager
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.UpdateBorderStyle(System.String)">
            <summary>
            Update the border style
            </summary>
            <param name="parameter">Represent the border type</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.SetSfSpreadsheet(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon)">
            <summary>
            Set SfSpreadsheet and Ribbon
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.OpenBackStageButtonClick(System.Object,System.EventArgs)">
            <summary>
            Open the dialog for import excel sheet
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.SaveBackStageButtonClick(System.Object,System.EventArgs)">
            <summary>
            Save file
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.ExitBackStageButtonClick(System.Object,System.EventArgs)">
            <summary>
            Exit the current form when press Exit button on Ribbon BackStage
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.SaveAsBackStageButton_Click(System.Object,System.EventArgs)">
            <summary>
            Save as with user given name of Spreadsheet
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.NewWorkBookToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Create the new workbook when click new in backstage
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.ProtectWorkbook_Click(System.Object,System.EventArgs)">
            <summary>
            Protect the workbook when click protectWorkbook in BackStage.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.ProtectSheet_Click(System.Object,System.EventArgs)">
            <summary>
            Protect the sheet when click protect sheet in BackStage.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.EncryptPassward_Click(System.Object,System.EventArgs)">
            <summary>
            Encrypt the workbook with password
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.CutToolStripButtonClick(System.Object,System.EventArgs)">
            <summary>
            Cut command operation
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.PasteToolStripButtonClick(System.Object,System.EventArgs)">
            <summary>
            Paste command operation
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.CopyToolStripButtonClick(System.Object,System.EventArgs)">
            <summary>
            Copy command operation
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.ShrinkFontSizeToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the decreased font size
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.GrowFontSizeToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the increased font size
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.UnderlineToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the underline style
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.ItalicToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the Italic style
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.BoldToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the bold style
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.BorderStyleToolStripSplitButton_DropDownItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
            <summary>
            Apply the Border styles.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.BorderStyleToolStripSplitButton_Click(System.Object,System.EventArgs)">
            <summary>
            Update the Selected Border Item.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.FontColorToolStripSplitButton_ButtonClick(System.Object,System.EventArgs)">
            <summary>
            Set the selected foreground color to XlsIO and update that color in ribbon
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.FontColorPicker_Picked(System.Object,Syncfusion.Windows.Forms.Tools.ColorPickerUIAdv.ColorPickedEventArgs)">
            <summary>
            Set the selected foreground color to XlsIO and update that color in ribbon
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.FillColorCustomToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the selected background color to XlsIO and update that color in ribbon
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.FillColorPicker_Picked(System.Object,Syncfusion.Windows.Forms.Tools.ColorPickerUIAdv.ColorPickedEventArgs)">
            <summary>
            Set the selected background color to XlsIO and update that color in ribbon
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.FontSizeComboBoxExt_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Update the font size
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.FontNameComboBox_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Save the selected font family when dropdown closed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.RightAlignToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the horizontal right alignment to XlsIO
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.CenterHAlignToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the horizontal center alignment to XlsIO
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.LeftAlignToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the horizontal left alignment to XlsIO
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.BottomAlignToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the vertical bottom alignment to XlsIO
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.CenterAlignToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the vertical center alignment to XlsIO
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.TopAlignToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the vertical top alignment to XlsIO
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.MergeToolStripSplitButton_DropDownItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
            <summary>
            Set the merge operation to XlsIO
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.MergeToolStripSplitButton_ButtonClick(System.Object,System.EventArgs)">
            <summary>
            Set the Merge and Center option when click the merge split button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.DecreaseIndentToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the Decreased indent to XlsIO
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.IncreaseIndentToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the Increased indent to XlsIO
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.WrapTextToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the WrapText to XlsIO
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.PercentageToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the Percentage format to XlsIO
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.AccountingToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the Accounting format to XlsIO
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.CurrencyToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the Currency format to XlsIO
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.DecreaseDecimalToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the Decreased decimal to XlsIO
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.IncreaseDecimalToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Set the increased decimal to XlsIO
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.NumberComboBoxExt_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Set and update the number format.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.RatingGallery_GalleryItemClicked(System.Object,Syncfusion.Windows.Forms.Tools.ToolStripGalleryItemEventArgs)">
            <summary>
            Execute the command for Rating IconsSetType.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.IndicatorsGallery_GalleryItemClicked(System.Object,Syncfusion.Windows.Forms.Tools.ToolStripGalleryItemEventArgs)">
            <summary>
            Execute the command for Indicators IconsSetType
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.ShapesGallery_GalleryItemClicked(System.Object,Syncfusion.Windows.Forms.Tools.ToolStripGalleryItemEventArgs)">
            <summary>
            Execute the command for Shapes IconsSetType
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.DirectionalGallery_GalleryItemClicked(System.Object,Syncfusion.Windows.Forms.Tools.ToolStripGalleryItemEventArgs)">
            <summary>
            Execute the command for Directional IconsSetType
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.ColorScalesGallery_GalleryItemClicked(System.Object,Syncfusion.Windows.Forms.Tools.ToolStripGalleryItemEventArgs)">
            <summary>
            Execute the command for ColorScales
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.SolidFillGallery_GalleryItemClicked(System.Object,Syncfusion.Windows.Forms.Tools.ToolStripGalleryItemEventArgs)">
            <summary>
            Execute the command for SolidFill DataBars
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.GradientFillGallery_GalleryItemClicked(System.Object,Syncfusion.Windows.Forms.Tools.ToolStripGalleryItemEventArgs)">
            <summary>
            Execute the command for GradientFill DataBars
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.DateOccuringMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for DataOccuring.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.TextContainsMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for TextContains
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.EqualToMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for EqualTo
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.BetweenMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for Between
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.LessThanMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for LessThan
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.GreaterThanMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for GreaterThan
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.ClearEntireSheet_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for CleatEntireSheet
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.ClearSelectedCells_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for ClearSelectedCells
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.FormatTableDarkGallery_GalleryItemClicked(System.Object,Syncfusion.Windows.Forms.Tools.ToolStripGalleryItemEventArgs)">
            <summary>
            Execute the command for TableFormat of Dark
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.FormatTableMediumGallery_GalleryItemClicked(System.Object,Syncfusion.Windows.Forms.Tools.ToolStripGalleryItemEventArgs)">
            <summary>
            Execute the command for TableFormat of Medium
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.FormatTableLightGallery_GalleryItemClicked(System.Object,Syncfusion.Windows.Forms.Tools.ToolStripGalleryItemEventArgs)">
            <summary>
            Execute the command for TableFormat of Light
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.CellStyleNumberFormatGallery_GalleryItemClicked(System.Object,Syncfusion.Windows.Forms.Tools.ToolStripGalleryItemEventArgs)">
            <summary>
            Execute the command for CellStyle of NumberFormat
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.CellStyleThemedStylesGallery_GalleryItemClicked(System.Object,Syncfusion.Windows.Forms.Tools.ToolStripGalleryItemEventArgs)">
            <summary>
            Execute the command for CellStyle of ThemedStyles
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.CellStyleTitlesHeadtingGallery_GalleryItemClicked(System.Object,Syncfusion.Windows.Forms.Tools.ToolStripGalleryItemEventArgs)">
            <summary>
            Execute the command for CellStyle of Titles and Headings
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.CellStyleGoodBadNeutralGallery_GalleryItemClicked(System.Object,Syncfusion.Windows.Forms.Tools.ToolStripGalleryItemEventArgs)">
            <summary>
            Execute the command for CellStyle of Good Bad and Neutral
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.FormatCellsToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for FormatCells
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.UnhideSheetsToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for UnHideSheets
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.UnhideColumnsToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for UnHideColumns
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.UnhideRowsToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for UnHideRows
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.HideSheetsToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for HideSheets
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.HideColumnsToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for HideColumns
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.HideRowsToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for HideRows
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.LockCellsToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for LockCells
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.formatCellsToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for format cells window. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.ProtectSheetToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for ProtectSheet
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.RenameSheetToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for Rename
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.DefaultWidthToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for DefaultWidth
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.AutoFitColumnWidthToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for AutoFitColumnWidth
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.ColumnWidthToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for ColumnWidth
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.AutoFitRowHeightToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for AutoFitRowHeight
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.RowHeightToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for RowHeight
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.DeleteSheetToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for DeleteSheets
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.DeleteSheetColumnToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for DeleteColumns
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.DeleteSheetRowsToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for DeleteRows
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.DeleteCellsToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for DeleteCells
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.InsertSheetToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for InsertSheet
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.InsertSheetColumnToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for InsertColumns
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.InsertSheetRowsToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for InsertRows
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.InsertCellsToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for InsertCells
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.DeleteCommentButton_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the delete comment operation
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.NewCommentButton_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the new comment operation
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.ProtectSheetButton_Click(System.Object,System.EventArgs)">
            <summary>
            Protect the sheet.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.ProtectWorkbookButton_Click(System.Object,System.EventArgs)">
            <summary>
            Protect the workbook
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.FreezePanesControlExt_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the freeze panes command
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.FreezeFirstColumnControlExt_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the freeze first column command
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.FreezeTopRowControlExt_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the freeze top row command
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.UnfreezePanesControlExt_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the unfreeze command
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.HeadingsCheckbox_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the Heading command
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.GridlinesCheckbox_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the gridlines command
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.FormulaBarCheckbox_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Execute the Formula Bar command
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.HyperlinksToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for Hyperlink
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.OutlineToolStrip_LauncherClick(System.Object,System.EventArgs)">
            <summary>
            Execute the outline setting when press launcher
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.UngroupButton_Click(System.Object,System.EventArgs)">
            <summary>
            Shows the ungroup form when press ungroup button
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.GroupButton_Click(System.Object,System.EventArgs)">
            <summary>
            Shows the group form when press group button
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.DataValidationButton_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for DataValidation
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.NameManagerButton_Click(System.Object,System.EventArgs)">
            <summary>
            Execute the command for NameManager
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.alignmentToolStrip_LauncherClick(System.Object,System.EventArgs)">
            <summary>
            FormarCellsForm opened with alignment tab.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.numberToolStrip_LauncherClick(System.Object,System.EventArgs)">
            <summary>
            FormarCellsForm opened with number tab.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.Ribbon_MenuButtonClick(System.Object,System.EventArgs)">
            <summary>
            To avoid the flickering when open and close the backstage.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.RibbonManager.fontToolStrip_LauncherClick(System.Object,System.EventArgs)">
            <summary>
            FormarCellsForm opened with font tab.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeRibbonComponent">
            <summary>
            Initialize the spreadsheet ribbon
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeRibbonControlAdv">
            <summary>
            Initialize the RibbonControlAdv
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeBackStage">
            <summary>
            Initialize the Back Stage
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.SpreadsheetRibbon_ParentChanged(System.Object,System.EventArgs)">
            <summary>
            Set the backstage host form
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.Parent_ParentChanged(System.Object,System.EventArgs)">
            <summary>
            Initialize the BackStage host form
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeHomeTab">
            <summary>
            Initialize the home tab
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeClipboard">
            <summary>
            Initialize Clipboard Section
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeFont">
            <summary>
            Initialize the font section
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeAlignment">
            <summary>
            Initialize the alignment section
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeNumber">
            <summary>
            Initialize the number section
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeStyles">
            <summary>
            Initialize the Styles section
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeFormatTableGallery">
            <summary>
            Initialize the Format Table as ToolStripGallery
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeCellStylesGallery">
            <summary>
            Initialize the Cell Styles as ToolStripGallery
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeConditionalFormat">
            <summary>
            Initialize the conditional formatting
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeCells">
            <summary>
            Initialize the Cells Section
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.SetFormatTableGalleryItemImage(System.Boolean)">
            <summary>
            Update the Format Table Gallery Icon based on Excel Version
            </summary>
            <param name="isExcel2010">If true, Set 2010 or 2007 Format Table icons else 2013 or 97-2003</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.SetCellStyleGalleryItemImage(System.Boolean)">
            <summary>
            Update the Cells Themed Style Gallery Icon based on Excel Version
            </summary>
            <param name="isExcel2010">If true, Set 2010 or 2007 Cells Themed Style icons else 2013 or 97-2003</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeDataTab">
            <summary>
            Initilize Data Tab
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeHyperlink">
            <summary>
            Initialize the hyperlink section
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeOutlines">
            <summary>
            Initialize Outlines section
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeDataValidation">
            <summary>
            Initialize the Data Validation section
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeNameManager">
            <summary>
            Initialize the Formulas section
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeComments">
            <summary>
            Initialize the comments section
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeShowSection">
            <summary>
            Initialise the show section
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeWindowSection">
            <summary>
            Initialize the Widow Section
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeSheetSection">
            <summary>
            Initialize the Sheet Section
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateFreezeMenuItems(System.Boolean)">
            <summary>
            Update the freeze options when freeze and unfreeze
            </summary>
            <param name="isFreeze"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.InitializeToolStrip">
            <summary>
            Initialize the ToolStripExt, BackStage and ToolStripTabItem.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.SuspendAllLayout">
            <summary>
            Suspend layout for ToolStripExt, BackStage and ToolStripTabItem.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.ResumeAllLayout">
            <summary>
            Resume layout for ToolStripExt, BackStage and ToolStripTabItem.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.WireEvents">
            <summary>
            Wire the events
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UnWireEvents">
            <summary>
            Unwire the events
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.Wire(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            To Wire the Events that are to be used in SfSpreadsheet Control
            </summary>
            <param name="spreadsheet">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UnWire(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            To UnWire Events that are Wired in SfSpreadsheet Control
            </summary>
            <param name="spreadsheet">The SfSpreadsheet Control</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.fontSizeComboBoxExt_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Save the font size to XlsIO when press Enter key
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.fontSizeComboBoxExt_PreviewKeyDown(System.Object,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Reset the font size when press Escape key
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.fontNameComboBox_PreviewKeyDown(System.Object,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Save the font family to XlsIO when press Enter and Escape key
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.numberComboBoxExt_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Save the number format to XlsIO when press Enter key
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.numberComboBoxExt_PreviewKeyDown(System.Object,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Reset number format when press Escape key
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.StateButton_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            Reset the back color for Automatic Color.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.StateButton_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            Set the back color for Automatic Color.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.OnCurrentCellEndEdit">
            <summary>
            Edit and disable the ribbon items when end edit
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.OnCurrentCellEditing">
            <summary>
            Enable and disable the ribbon items when editing
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.OnCurrentCellActivated">
            <summary>
            Update the Ribbon items on CurrentCellActivated
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.OnCommentEndEdit">
            <summary>
            Enable and disable the ribbon items when edit the comments
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.OnCommentEditing">
            <summary>
            Enable and disable the ribbon items when comments editing
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.OnFontStyleChanged(System.String)">
            <summary>
            Update the font styles in ribbon.
            </summary>
            <param name="fontStyle">Font styles are bold, italic, underline, grow or shrink font size</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.OnSheetVisiblityChanged">
            <summary>
            Update the hide sheet in ribbon
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.RaiseCanExecute">
            <summary>
            Enable and disable ribbon items when protect option changed
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateRibbonItems(System.Boolean,System.Boolean)">
            <summary>
            Update the RibbonItems when edit, protect workbook or worksheet.
            </summary>
            <param name="isInProtection">If true, need to update for protect or unprotect workbook or worksheet else in cell editing or comment editing</param>
            <param name="enable">If true, Need to enable item else disable</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.OnCurrentCellStyleChanged">
            <summary>
            Update the ribbon buttons when current cell style changed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateFontSize">
            <summary>
            Update the font size to Font Size combobox.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateFontFamily">
            <summary>
            Update the font family on FontFamily Combobox.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateFontStyle">
            <summary>
            Update the font style in ribbon
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateNumberFormat">
            <summary>
            Update the number format.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateCommentsStatus">
            <summary>
            Update the comments status
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateTableFormats">
            <summary>
            Enable and disable the visibility when enable and disable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateInsertDeleteCells">
            <summary>
            Update the ribbon commands enable and disable for Insert and delete cells
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateCellsFormat">
            <summary>
            Update the ribbon items for cells formats are row height, column width, auto fit row and column, hide and unhide row and column, etc.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateProtectSheet">
            <summary>
            Update the protect menu in ribbon
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.SaveFontFamily">
            <summary>
            Update the font family for selected cells to XlsIO 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.SaveFontSize">
            <summary>
            Save the font size to XlsIO and update to Font size combobox.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.SaveForegroundBackgroundColor(System.Boolean)">
            <summary>
            Save the selected foreground and background color to XlsIO
            <param name="isBackColor">If true, apply background color else foreground color</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateVerticalAlignment">
            <summary>
            Update the Vertical alignment in ribbon
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateHorizontalAlignment">
            <summary>
            Update the Horizontal alignment in ribbon
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateMergeAndCenter">
            <summary>
            Maintain the selection of merge and center option button in ribbon if the selected ranges intersects the merged cells.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.HideRibbonBackStage">
            <summary>
            Hide the ribbon back stage
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.HideProtectWorkBookDropDown(System.Boolean)">
            <summary>
            Hide the Ribbon backstage and protect workbook drop down button on Ribbon BackStage
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateFreezePanesDropDown(System.Boolean)">
            <summary>
            Hide and Update the freeze pane control
            </summary>
            <param name="isFreezeorUnfreeze">If true, Update the freeze pane drop item, else not</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateCommentsMenuItems(System.Boolean)">
            <summary>
            Update the New and Edit commands when select
            </summary>
            <param name="newComment">If True, Enable new comment, else edit command</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdatedNumberFormatDropDown">
            <summary>
            Update the number format when select from combo box.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateForegroundColorPicker">
            <summary>
            Update the foreground color and hide the color picker.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateBackgroundColorPicker">
            <summary>
            Update the background color and hide the color picker.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateWrapText">
            <summary>
            Update the wrap text in Ribbon.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateWorkbookProtection">
            <summary>
            Update the workbook selection when click
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.UpdateLockCell">
            <summary>
            Update the lock cell toggle button when current cell changed
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.Dispose(System.Boolean)">
            <summary>
            Dispose objects
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.Spreadsheet">
            <summary>
            Gets or sets the SfSpreadsheet Control
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.IsSpreadsheetRibbon">
            <summary>
            Gets whether the conttrol is spreadsheet ribbon
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.Ribbon">
            <summary>
            SpreadsheetRibbon 
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetRibbon.RibbonSize">
            <summary>
            Ribbon default size
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.AllowEditInFormulaBar">
            <summary>
            Determines whether we can edit the cell using formula bar or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.HasCurrentCellState">
            <summary>
            Determines whether the renderer has current cell or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.Grid">
            <summary>
            Returns the Grid
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.ISpreadsheetCellRenderer.CurrentCellRendererElement">
            <summary>
            Returns the edit UIElement of CurrentCell.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.CurrentCellIndex">
            <summary>
            Returns the cell's row column index.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.CurrentCellRendererElement">
            <summary>
            Returns the content of the current cell element.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.MoveCurrentCell">
            <summary>
            Set as true, when current cell is first time edit the text or directly edit the text if that cell is not in edit mode whether cell is empty or not empty.
            And also if true, then only move the current cell when up or down key is pressed otherwise not move.
            Otherwise set as false.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetCellRendererBase.AllowEditInFormulaBar">
            <summary>
            Determines whether we can edit the cell using formula bar or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetVirtualizingCellRendererBase`1.AllowRecycle">
            <summary>
            Gets or sets a value indicating whether elements can be recycled when scrolled out of view.
            In this case when a cell is scrolled out of view
            it is moved into a recycle bin and the next time a new element is scrolled into
            view the element is recovered from the recycle bin and reinitialized with the
            new content of the cell. The default value is false.
            </summary>
            <value><c>true</c> if elements can be recycled when scrolled out of view; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnInitializeEditElement(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex,System.Windows.Forms.ComboBox,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Initialize the edit element of combobox while loading in the grid.
            </summary>
            <param name="rowColumnIndex">edit element rowcolumnindex</param>
            <param name="uiElement">combobox</param>
            <param name="column"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnWireEditUIElement(System.Windows.Forms.ComboBox)">
            <summary>
            Hook the required editelement events from this method.
            </summary>
            <param name="uiElement"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnUnwireEditUIElement(System.Windows.Forms.ComboBox)">
            <summary>
            UnHook the required editelement events from this method.
            </summary>
            <param name="uiElement"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetComboBoxCellRenderer.OnSaveChanges">
            <summary>
            save the modified text into the specified range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.IsMouseHoverOnText(Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn,System.Drawing.Point)">
            <summary>
            Returns true if mouse over position contains any text else returns false
            </summary>
            <param name="column"></param>
            <param name="mousePos"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetHyperlinkCellRenderer.OnSaveChanges">
            <summary>
            save the modified text into the specified range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnRender(Syncfusion.Windows.Forms.Spreadsheet.Helpers.SpreadsheetPaint,System.Drawing.Rectangle,System.Drawing.Rectangle,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn)">
            <summary>
            Richtextbox rendering operations are performed.
            </summary>
            <param name="paint">drawingcontext</param>
            <param name="cellRect">rect of cell</param>
            <param name="column"></param>
            <param name="clipRect"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnInitializeEditElement(Syncfusion.Windows.Forms.CellGrid.ScrollAxis.RowColumnIndex,System.Windows.Forms.RichTextBox,Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetColumn)">
            <summary>
            load the edit element
            </summary>
            <param name="rowColumnIndex">cell rowcolumnindex</param>
            <param name="uiElement">richtextbox</param>
            <param name="column">current column</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.GetControlValue">
            <summary>
            Gets the richtextbox control value as flowdocument.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnSaveChanges">
            <summary>
            save edited changes into xlsio by converting from flowdocument to richtextbox.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.GetFormattedText(Syncfusion.XlsIO.IStyle)">
            <summary>
            Gets the text from richtextbox.
            </summary>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnWireEditUIElement(System.Windows.Forms.RichTextBox)">
            <summary>
            Wire the edit uielement events.
            </summary>
            <param name="uiElement"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetRichTextBoxCellRenderer.OnUnwireEditUIElement(System.Windows.Forms.RichTextBox)">
            <summary>
            Unwire the edit uielement events.
            </summary>
            <param name="uiElement"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.NamespaceDoc">
            <summary>
            Contains interface and classes to create the renderers for all supported cell types. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.CellRenderer.SpreadsheetTextBoxCellRenderer.uiElement_GotFocus(System.Object,System.EventArgs)">
            <summary>
            Method is used to set the Selection start since if the focus is set to a text box then the selection start moves to the first index
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.FontComboBoxExt">
            <summary>
            Draw the border of Font Combo Box with required border color and border style.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.BorderComboBox">
            <summary>
            Draw the border of Combo Box with required border color and border style.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.ComboBoxExtn">
            <summary>
            Customized combobox needs to adjust height of the items in the combobox.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.ToolStripSplitButtonExt">
            <summary>
            Class for CustomizedToolStripSplitButton
            </summary>5
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.ToolStripSplitButtonExt.#ctor">
            <summary>
            Constructor for CustomizedToolStripMenuItem
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.ToolStripSplitButtonExt.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides the Onpaint method
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.ToolStripSplitButtonExt.PickerSelectedColor">
            <summary>
            Gets or Sets the picker selected color
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.ToolStripSplitButtonExt.Background">
            <summary>
            Gets or Sets the Background color for Split button
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.ToolStripSplitButtonExt.CanApplyBackground">
            <summary>
            Gets or sets bool value, if true apply background only otherwise not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.ToolStripSplitButtonExt.IsFormatCells">
            <summary>
            Gets or sets the boolean value of isformatcells property.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.ToolStripDropDownExt">
            <summary>
            Class for CustomDropDown for toolstripdropdown
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.ToolStripDropDownExt.#ctor(System.Object)">
            <summary>
            Constructor for custom dropdown
            </summary>
            <param name="controls"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.ToolStripDropDownExt.#ctor(System.Windows.Forms.ToolStripItem[])">
            <summary>
            Constructor for custom dropdown
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.ToolStripDropDownExt.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides the onpaint method
            </summary>
            <param name="e">paint event data</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.ToolStripDropDownExt.IsGalleryItem">
            <summary>
            For avoid the draw rectangle for gallery control.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.ToolStripMenuItemExt">
            <summary>
            Class for customize toolstrip menu item.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.ToolStripMenuItemExt.#ctor">
            <summary>
            Constructor for ToolStripLabelExt
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.ToolStripMenuItemExt.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides the Onpaint method
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.ToolStripMenuItemExt.IsHeader">
            <summary>
            Draw the background with gray color
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.ToolStripMenuItemExt.IsDrawImage">
            <summary>
            If true, draw the image on OnPaint method else not draw.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.ToolStripMenuItemExt.IsImageBackground">
            <summary>
            If True, draw the background for the image, else draw image.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.ToolStripMenuItemExt.IsDrawTextWithImage">
            <summary>
            If True, draw the image with text.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.ToolStripLabelExt">
            <summary>
            Class for customize ToolStripLabel
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.ToolStripLabelExt.#ctor">
            <summary>
            Constructor for ToolStripLabelExt
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.ToolStripLabelExt.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides the Onpaint method
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.ToolStripRendererExt">
            <summary>
            Remove the unwanted border shown at the bottom of the copy paste tool strip in context menu.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.DropDownItemControl">
            <summary>
            Class for DropDownItem as Control
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.DropDownItemControl.#ctor">
            <summary>
            Constructor for ToolStripLabelExt
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.DropDownItemControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides the Onpaint method
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.DropDownItemControl.OnMouseLeave(System.Object,System.EventArgs)">
            <summary>
            Mouse leave event for Menu
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.DropDownItemControl.OnMouseEnter(System.Object,System.EventArgs)">
            <summary>
            Mouse enter event for Menu
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.DropDownItemControl.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.DropDownItemControl.ItemText">
            <summary>
            Gets or sets the Item text
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.DropDownItemControl.ItemImage">
            <summary>
            Gets or sets Item image
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.ToolStripDropDownButtonExt">
            <summary>
            Class for CustomDropDown for toolstripdropdown
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.ToolStripDropDownButtonExt.#ctor">
            <summary>
            Constructor for custom dropdown
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.ToolStripDropDownButtonExt.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides the onpaint method
            </summary>
            <param name="e">paint event data</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.MaskedEditBoxExt">
            <summary>
            Class for customize the MaskEditBox 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.MaskedEditBoxExt.UpdateWaterMarkText">
            <summary>
            Update the water mark text for MaskEditBox
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.MaskedEditBoxExt.WatarMarkText">
            <summary>
            Get or Set the water mark text for MaskEditBox
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.ButtonExt">
            <summary>
            Class for customize the Button
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.SpreadsheetPopup.IsOpen">
            <summary>
             Gets or sets a value that indicates whether the Popup is visible.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.RadioButtonExt">
            <summary>
            Since the Radio Button is to be used as Menu item for FillOptions in FillSeries ,Extension Class is used
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Spreadsheet.BusyIndicator">
            <summary>
            Class used to indicate Spreadsheet control is busy in doing some processing (For example, loading a workbook).
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.BusyIndicator.spreadsheet">
            <summary>
            Holds the instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.BusyIndicator.isBusy">
            <summary>
            Decides whether busy indicator need to be shown or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Spreadsheet.BusyIndicator.spreadsheetPosition">
            <summary>
            Position of spreadsheet
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.BusyIndicator.#ctor(Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet)">
            <summary>
            Holds the instance of <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.BusyIndicator"/>
            </summary>
            <param name="control">Control in which the busy indicator need to be displayed</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.BusyIndicator.ShowBusyIndicator">
            <summary>
            Used to show Busy Indicator in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.BusyIndicator.HideBusyIndicator">
            <summary>
            Used to hide the Busy Indicator which gets displayed in <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.Spreadsheet"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Spreadsheet.BusyIndicator.RaiseSpreadsheetPaint(System.Object,System.EventArgs)">
            <summary>
            A method that invokes the loading animation aside during long running operation in spredsheet.
            </summary>
            <param name="o">sender</param>
            <param name="e">event argument</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.BusyIndicator.IsBusy">
            <summary>
            Gets or sets a value indicates whether the <see cref="T:Syncfusion.Windows.Forms.Spreadsheet.BusyIndicator"/> should be displayed or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Spreadsheet.BusyIndicator.BusyImage">
            <summary>
            Gets or sets the Busy Image which will be shown when doing some processing (For example, loading a workbook)
            </summary>
        </member>
    </members>
</doc>
