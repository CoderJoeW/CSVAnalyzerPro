<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Scripting.Base</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Scripting.AssemblyDescriptor">
            <summary>
            Summary description for AssemblyDescriptor.
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.AssemblyDescriptorCollection">
            <summary>
            Type-safe collection for AssemblyDescriptor objects.
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.CSharpScriptEngine">
            <summary>
            Summary description for CSharpScriptEngine.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.DEF_LANGUAGE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.DEF_GLOBAL_NAME">
            <summary>
            Name of the global class for accessing to global objects.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.DEF_WHITESPACE">
            <summary>
            Whitespace keyword.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.DEF_BRACE_OPEN">
            <summary>
            Open brace keyword.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.DEF_BRACE_CLOSE">
            <summary>
            Close brace keyword.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.DEF_GLOBAL_CLASS_SOURCE1">
            <summary>
            Source of global class for accerssing global objects.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.DEF_GLOBAL_CLASS_SOURCE2">
            <summary>
            Source of global class for accerssing global objects.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.DEF_GLOBAL_VAR">
            <summary>
            String for adding global variables.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_codeProvider">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_codeCompiler">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_isCompiled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_isRunning">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_isClosed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_isInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_isBusy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_sRootMoniker">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_sRootNamespace">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_sName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_vsaItems">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_pe">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_pdb">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_compilerParams">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_compiledAssembly">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_vsaSite">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_hashOptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpScriptEngine.m_appDomain">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.SaveSourceState(Microsoft.Vsa.IVsaPersistSite)">
            <summary>
            NOT IMPLEMENTED
            </summary>
            <param name="site"></param>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.SaveCompiledState(System.Byte[]@,System.Byte[]@)">
            <summary>
            Saves the compiled state of the script engine; 
            optionally, it also saves debugging information
            </summary>
            <param name="pe"></param>
            <param name="pdb"></param>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.GetOption(System.String)">
            <summary>
            Gets implementation-specific options for a script engine.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.InitNew">
            <summary>
            NOT IMPLEMENTED
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.RevokeCache">
            <summary>
            NOT IMPLEMENTED
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.Close">
            <summary>
            Closes the script engine and releases all resources. 
            If the script engine is currently running, 
            the IVsaEngine.Reset method is called first.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.Compile">
            <summary>
            Causes the script engine to compile the existing source state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.LoadSourceState(Microsoft.Vsa.IVsaPersistSite)">
            <summary>
            NOT IMPLEMENTED
            </summary>
            <param name="site"></param>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.Run">
            <summary>
            Initiates execution of compiled code in the script engine 
            and binds all event handlers.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.IsValidIdentifier(System.String)">
            <summary>
            Checks whether the supplied identifier is valid for the script engine.
            </summary>
            <param name="identifier"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.SetOption(System.String,System.Object)">
            <summary>
            Checks whether the supplied identifier is valid for the script engine
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.LoadReferences">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.GenerateAdditionalCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpScriptEngine.GetCompilerResults">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.IsClosed">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.IsInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.IsBusy">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.GenerateDebugInfo">
            <summary>
            NOT IMPLEMENTED
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.RootNamespace">
            <summary>
            Sets or gets the root namespace used by the script engine
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.IsCompiled">
            <summary>
            Gets a Boolean value that signifies whether a script engine 
            has successfully compiled the current source state
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.RootMoniker">
            <summary>
            Sets or gets a script engine's root moniker.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.LCID">
            <summary>
            NOT IMPLEMENTED
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.Assembly">
            <summary>
            Gets a compiled assembly
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.Items">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.Evidence">
            <summary>
            NOT IMPLEMENTED
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.Name">
            <summary>
            Sets or gets the display name of the script engine that 
            is used primarily for identifying individual script engines 
            to users in a hosted environment
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.Version">
            <summary>
            NOT IMPLEMENTED
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.IsRunning">
            <summary>
            Gets a Boolean value that reports whether 
            the script engine is currently in run mode
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.IsDirty">
            <summary>
            NOT IMPLEMENTED
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.Language">
            <summary>
            Gets the nonlocalized name of the 
            programming language supported by the script engine
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpScriptEngine.Site">
            <summary>
            Sets or gets the host-implemented IVsaSite object 
            that is used by the script engine to communicate with the host
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.CSharpVsaCodeItem">
            <summary>
            Summary description for CSharpCodeItem.
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.CSharpVsaItem">
            <summary>
            Implements an interface for all items added to the CSharpVsaEngine, 
            including code items, reference items, and global items. 
            It defines generic properties and methods that apply to all item types 
            recognized by the engine.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaItem.m_engine">
            <summary>
            The reference to script engine.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaItem.m_name">
            <summary>
            The name of item.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaItem.#ctor">
            <summary>
            Disable default constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaItem.#ctor(Syncfusion.Scripting.CSharpScriptEngine)">
            <summary>
            Construct a CSharpVsaItem given a script engine
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaItem.#ctor(Syncfusion.Scripting.CSharpScriptEngine,System.String)">
            <summary>
            Construct a CSharpVsaItem given a script engine and item name
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaItem.GetOption(System.String)">
            <summary>
            Gets implementation-specific options for a script engine
            </summary>
            <param name="name">The name of the option to retrieve</param>
            <returns>Returns the value of the specified option</returns>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaItem.SetOption(System.String,System.Object)">
            <summary>
            Sets implementation-specific options for a script engine.
            </summary>
            <param name="name">The name of the option to set. </param>
            <param name="value">A new value for the option.</param>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpVsaItem.ItemType">
            <summary>
            Gets the specified object's type, as determined by the IVsaItems.CreateItem method.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpVsaItem.Name">
            <summary>
            Gets or sets the item name.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpVsaItem.IsDirty">
            <summary>
            Returns a value indicating whether the current 
            in-memory representation of the item differs from the persisted representation.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaCodeItem.m_sSourceText">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaCodeItem.m_hashEventSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaCodeItem.m_flag">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaCodeItem.#ctor(Syncfusion.Scripting.CSharpScriptEngine,System.String)">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaCodeItem.#ctor(Syncfusion.Scripting.CSharpScriptEngine,System.String,Microsoft.Vsa.VsaItemFlag)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaCodeItem.AppendSourceText(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaCodeItem.AddEventSource(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="eventSourceName"></param>
            <param name="eventSourceType"></param>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaCodeItem.RemoveEventSource(System.String)">
            <summary>
            
            </summary>
            <param name="eventSourceName"></param>
            <param name="eventSourceType"></param>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpVsaCodeItem.CodeDOM">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpVsaCodeItem.SourceText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpVsaCodeItem.ItemType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.CSharpVsaError">
            <summary>
            Summary description for CSharpVsaError.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaError.m_sourceItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaError.m_sourceMoniker">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaError.m_startColumn">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaError.m_descr">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaError.m_endColumn">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaError.m_severity">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaError.m_number">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaError.m_line">
            <summary>
            
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaError.m_lineText">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaError.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaError.#ctor(Microsoft.Vsa.IVsaItem,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.CSharpVsaGlobalItem">
            <summary>
            Describes global objects added to the script engine.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaGlobalItem.m_bExposeMembers">
            <summary>
            The value indicating whether the members of the global object 
            should be made available to the script engine. 
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaGlobalItem.m_sTypeString">
            <summary>
            The type of the global item.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaGlobalItem.#ctor(Syncfusion.Scripting.CSharpScriptEngine,System.String)">
            <summary>
            Construct a CSharpVsaGlobalItem given a script engine and item name.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaGlobalItem.GetTypeString">
            <summary>
            Gets the type of the global item.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpVsaGlobalItem.ExposeMembers">
            <summary>
            Sets a value indicating whether the members of the 
            global object should be made available to the script engine. 
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpVsaGlobalItem.TypeString">
            <summary>
            Sets the type of the global item.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpVsaGlobalItem.ItemType">
            <summary>
            Gets the specified object's type, 
            as determined by the IVsaItems.CreateItem method.
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.CSharpVsaItems">
            <summary>
            Implements an interface for a collection of IVsaItem objects, 
            which can be addressed either by name or by index.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaItems.m_hasItemsToIndex">
            <summary>
            Keeps the name-to-index hashtable for searched item by name.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaItems.m_items">
            <summary>
            Keeps the vsa items.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.CSharpVsaItems.m_engine">
            <summary>
            Reference to script enginew
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaItems.#ctor(Syncfusion.Scripting.CSharpScriptEngine)">
            <summary>
            Construct a CSharpVsaItems given a script engine.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaItems.Remove(System.Int32)">
            <summary>
             Removes an item from the collection.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaItems.Microsoft#Vsa#IVsaItems#Remove(System.String)">
            <summary>
            Overloaded. Removes an item from the collection by item name.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaItems.CreateItem(System.String,Microsoft.Vsa.VsaItemType,Microsoft.Vsa.VsaItemFlag)">
            <summary>
            Creates a new instance of one of the IVsaItem types, 
            as defined in the VsaItemType enumeration.
            </summary>
            <param name="name">The name to associate with the new item</param>
            <param name="itemType">The type of item created, as defined in the VsaItemType enumeration</param>
            <param name="itemFlag">The optional flag to specify the initial content of a Code item. </param>
            <returns>Returns a reference to the IVsaItem object created</returns>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaItems.GetEnumerator">
            <summary>
            Gets the VsaItems enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaItems.ContainsName(System.String)">
            <summary>
            Checks if contains item with specified name.
            </summary>
            <param name="name">Item name.</param>
            <returns>tru if item exists or false if not</returns>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpVsaItems.Item(System.Int32)">
            <summary>
            Gets an item from the collection by its index value.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpVsaItems.Item(System.String)">
            <summary>
            Gets an item from the collection by its name.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpVsaItems.Count">
            <summary>
            Gets the number of items in the specified collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.CSharpVsaReferenceItem">
            <summary>
            Describes a reference added to the script engine.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.CSharpVsaReferenceItem.#ctor(Syncfusion.Scripting.CSharpScriptEngine,System.String)">
            <summary>
            Construct a CSharpVsaReferenceItem given a script engine and item name
            </summary>
            <param name="engine"></param>
            <param name="name"></param>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpVsaReferenceItem.AssemblyName">
            <summary>
            Gets or sets the name of the referenced assembly.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.CSharpVsaReferenceItem.ItemType">
            <summary>
            Gets the specified object's type, as determined by the IVsaItems.CreateItem method.
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.ScriptLanguages">
            <summary>
            Languages supported by the scripting subsystem.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.ScriptLanguages.VisualBasic">
            <summary>
            Visual Basic .NET script engine
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.ScriptLanguages.JScript">
            <summary>
            JScript .NET script engine
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.ScriptLanguages.CSharp">
            <summary>
            C# .NET script engine
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.Script">
            <summary>
            Encapsulates the source code, references, and global instances of a script.
            </summary>
            <remarks>
            <para>
            A script consists of source code, assembly references, global instances, and
            event sources. A script also has a name associated with it.
            </para>
            </remarks>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_NAME">
            <summary>
            Default name of the script.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_NAMESPACE">
            <summary>
            Default namespace for the script.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_DELIMITER">
            <summary>
            Delimiter for moniker value constructing.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_CLASS">
            <summary>
            Class keyword.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_VB_CLASS">
            <summary>
            Class keyword definition for Visual Basic.NET.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_JS_CLASS">
            <summary>
            Class keyword definition for JScript.NET.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_CS_CLASS">
            <summary>
            Class keyword defintion for CSharp.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_CLASS_NAME">
            <summary>
            Place holder for class name.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_CS_CLASS_HEADER">
            <summary>
            Class header for CSharp.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_CS_CLASS_FOOTER">
            <summary>
            Class footer for CSharp.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_VB_CLASS_HEADER">
            <summary>
            Class header for Visual Basic Net.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_VB_CLASS_FOOTER">
            <summary>
            Class footer for Visual Basic Net.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_JS_CLASS_HEADER">
            <summary>
            Class header for Java Script Net.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_JS_CLASS_FOOTER">
            <summary>
            Class footer for Java Script Net.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_NAMESPACE_KEY">
            <summary>
            Namespace keyword.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_WHITESPACE">
            <summary>
            Whitespace keyword.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_BRACE_OPEN">
            <summary>
            Open brace keyword.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_BRACE_CLOSE">
            <summary>
            Close brace keyword.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEFAULT_ASSEMBLIES">
            <summary>
            List of assemblies attached automatically to engine on execution
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.DEF_WORD_DELIMITERS">
            <summary>
            Delimiters between class keyword and name of the class.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.Script.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.Script.#ctor(System.String)">
            <summary>
            Construct a script with the given source code.
            </summary>
            <param name="sourceText">Source code to assign to the script</param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization constructor for script objects.
            </summary>
            <param name="info">Serialization state information</param>
            <param name="context">Streaming context information</param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.LoadSourceFile(System.String)">
            <summary>
            Loads the contents of the specified file into the script.
            </summary>
            <param name="fileName">Name of file containing the script source</param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.LoadSource(System.IO.Stream)">
            <summary>
            Loads the given stream into the script.
            </summary>
            <param name="strm">Stream containing the script source</param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.SaveSourceFile(System.String)">
            <summary>
            Saves the script source text into the specified file.
            </summary>
            <param name="fileName">Name of file to save source into</param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.AddReference(Syncfusion.Scripting.AssemblyDescriptor)">
            <summary>
            Adds the specified assembly reference to the script.
            </summary>
            <param name="descriptor">The AssemblyDescriptor representing the assembly.</param>
            <returns>
            true if successfully added; false if the assembly reference already exists
            in the script
            </returns>
        </member>
        <member name="M:Syncfusion.Scripting.Script.ContainsReference(Syncfusion.Scripting.AssemblyDescriptor)">
            <summary>
            Determines if the script contains the specified assembly reference.
            </summary>
            <param name="descriptor">The AssemblyDescriptor representing the assembly.</param>
            <returns>
            true if script contains a reference to the assembly; otherwise false
            </returns>
        </member>
        <member name="M:Syncfusion.Scripting.Script.GetReferences(Syncfusion.Scripting.AssemblyDescriptorCollection)">
            <summary>
            
            </summary>
            <param name="assemblyReferences"></param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.PutReferences(Syncfusion.Scripting.AssemblyDescriptorCollection)">
            <summary>
            
            </summary>
            <param name="assemblyReferences"></param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.AddEventSource(System.String,System.String)">
            <summary>
            Adds an event source to the script.
            </summary>
            <param name="name">Name of event source to add</param>
            <param name="typeName">Type of event source as a string</param>
            <returns>true if added successfully; false if it already exists</returns>
        </member>
        <member name="M:Syncfusion.Scripting.Script.ContainsEventSource(System.String)">
            <summary>
            Indicates if the specified event source exists in the script.
            </summary>
            <param name="name">Name of global instance to search for</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.Script.GetEventSources(Syncfusion.Scripting.ScriptObjectCollection)">
            <summary>
            
            </summary>
            <param name="eventSources"></param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.PutEventSources(Syncfusion.Scripting.ScriptObjectCollection)">
            <summary>
            
            </summary>
            <param name="eventSources"></param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.AddGlobalInstance(System.String,System.String)">
            <summary>
            Adds a global instance to the script.
            </summary>
            <param name="name">Name of global instance to add</param>
            <param name="typeName">Type of global instance as a string</param>
            <returns>true if added successfully; false if it already exists</returns>
        </member>
        <member name="M:Syncfusion.Scripting.Script.ContainsGlobalInstance(System.String)">
            <summary>
            Indicates if the specified global instance exists in the script.
            </summary>
            <param name="name">Name of global instance to search for</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.Script.GetGlobalInstances(Syncfusion.Scripting.ScriptObjectCollection)">
            <summary>
            
            </summary>
            <param name="globalInstances"></param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.PutGlobalInstances(Syncfusion.Scripting.ScriptObjectCollection)">
            <summary>
            
            </summary>
            <param name="globalInstances"></param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.LoadScriptEngineItems(Microsoft.Vsa.IVsaEngine)">
            <summary>
            
            </summary>
            <param name="scriptEngine"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.Script.InvokeMethod(Microsoft.Vsa.IVsaEngine,System.String)">
            <summary>
            
            </summary>
            <param name="scriptEngine"></param>
            <param name="methodName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.Script.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.Script.LoadSource(Microsoft.Vsa.IVsaEngine)">
            <summary>
            
            </summary>
            <param name="scriptEngine"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.Script.LoadReferences(Microsoft.Vsa.IVsaEngine)">
            <summary>
            Load assembly references required by the script into the given
            scripting engine.
            </summary>
            <param name="scriptEngine">Script engine to load</param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.LoadEventSources(Microsoft.Vsa.IVsaCodeItem)">
            <summary>
            Load the event sources required by the script into the given
            scripting engine code item.
            </summary>
            <param name="codeModule">Code module contained by a scripting engine</param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.LoadGlobalInstances(Microsoft.Vsa.IVsaEngine)">
            <summary>
            Load the global instances required by the script into the given
            scripting engine.
            </summary>
            <param name="scriptEngine">Scripting engine to load.</param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.LoadEventSourcesAsGlobalInstances(Microsoft.Vsa.IVsaEngine)">
            <summary>
            Loads the event sources required by the script as global objects. Used by languages that do not support implicit event-binding.
            </summary>
            <param name="scriptengine">Scripting engine to load.</param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.OnChanged(Syncfusion.Scripting.ScriptEventArgs)">
            <summary>
            Called when the script is changed.
            </summary>
            <param name="evtArgs"></param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.OnSourceTextChanged(Syncfusion.Scripting.ScriptEventArgs)">
            <summary>
            Raises when source text has been changed.
            </summary>
            <param name="evtArgs"></param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.NeedToAdd(System.String)">
            <summary>
            Checks if variable with such name can be added as Event Source.
            </summary>
            <param name="varName">Name of variable.</param>
            <returns>TRUE - if can be added, FALSE - otherwise.</returns>
        </member>
        <member name="M:Syncfusion.Scripting.Script.ChangeMoniker">
            <summary>
            Changes rootmoniker according to Name or RootNamespace changing.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.Script.SetNameFromSourceText(System.String)">
            <summary>
            Sets name of the script according to class name in the source text.
            </summary>
            <param name="source">Text source of the script.</param>
            <remarks>If language is C#, also defines Root namespace.</remarks>
        </member>
        <member name="M:Syncfusion.Scripting.Script.SetClassName(System.String)">
            <summary>
            Defines name of the class from soure text.
            </summary>
            <param name="source">Source text of the script.</param>
        </member>
        <member name="M:Syncfusion.Scripting.Script.SetNamespace(System.String)">
            <summary>
            If language is C#, defines root namespace.
            </summary>
            <param name="source">Source text.</param>
            <returns>TRUE - if namespace recognized and defined or nothing
            namespace is clear, FALSE - if namespace is needed to add
            to source text. </returns>
        </member>
        <member name="F:Syncfusion.Scripting.Script.monikerWasSet">
            <summary>
            Indicates if rootmoniker property was changed by user.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Script.setName">
            <summary>
            Indicates parse source text of the script and set name of 
            the script according to class name or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.Script.Name">
            <summary>
            Name of the script.
            </summary>
            <remarks>Name of the script must be the same as name of the class in the script source.</remarks>
        </member>
        <member name="P:Syncfusion.Scripting.Script.AssemblyReferences">
            <summary>
            Names of assemblies referenced by the script.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.Script.GlobalInstances">
            <summary>
            Names of global instances declared by the script.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.Script.EventSources">
            <summary>
            Names of event sources referenced by the script.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.Script.SourceText">
            <summary>
            Source code for the script.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.Script.RootMoniker">
            <summary>
            Root moniker for the script.
            </summary>
            <remarks>The moniker, or root moniker, is the unique name by which
            a script engine is identified. 
            However, an engine may throw a RootMonikerInUse
            exception if it detects that the moniker you are attempting to assign
            it is already assigned to another script engine. 
            The root moniker cannot exceed 256 characters in length.
            By default this property is constructed from RootNamespace and 
            Name property. If you use several scripts on the same host, 
            be sure that RootNamespace or Name properties are different.</remarks>
        </member>
        <member name="P:Syncfusion.Scripting.Script.RootNamespace">
            <summary>
            Root namespace for declarations in the script.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.Script.Language">
            <summary>
            Script language that the source code is written in.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.Script.EntryPoint">
            <summary>
            The starting method that will be called when the script is run.
            </summary>
            <remarks>
            <para>
            If this property is null, then no method is called when the script
            is started. It is null by default.
            </para>
            </remarks>
        </member>
        <member name="P:Syncfusion.Scripting.Script.ScriptStartCall">
            <summary>
            The ScriptStartCall method is invoked right after the script is started.
            </summary>				
        </member>
        <member name="P:Syncfusion.Scripting.Script.ScriptStopCall">
            <summary>
            The ScriptStopCall method is invoked just before the script is stopped.
            </summary>		
        </member>
        <member name="P:Syncfusion.Scripting.Script.EventsEnabled">
            <summary>
            Flag indicating if firing of events is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.Script.SetNameFromSource">
            <summary>
            Gets or sets if parsing of source text and assigning of Name property
            by class name is required or not.
            </summary>
        </member>
        <member name="E:Syncfusion.Scripting.Script.Changed">
            <summary>
            Fired when the script is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.PropertyType">
            <summary>
            Describe the property type for showing in ScriptObjectBrowser
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.PropertyType.None">
            <summary>
            The common type property
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.PropertyType.Collection">
            <summary>
            Property is a collection
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.PropertyType.Item">
            <summary>
            Property is a item of collection
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.ScriptBrowsableAttribute">
            <summary>
            Attribute alow to specify which element of class accessable for Script
            engine edit control can be show in model tree.
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.ScriptBrowsableAttribute.m_visible">
            <summary>
            storage of IsVisible property
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.ScriptBrowsableAttribute.m_propType">
            <summary>
            storage of property property
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.ScriptBrowsableAttribute.m_itemName">
            <summary>
            storage of name property
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.ScriptBrowsableAttribute.m_itemType">
            <summary>
            storage of type property
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptBrowsableAttribute.#ctor">
            <summary>
            Disabel default constructor for end-user
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptBrowsableAttribute.#ctor(System.Boolean)">
            <summary>
            Main constructor for our own use
            </summary>
            <param name="visible">True - element of class is visible to ScriptEditControl, otherwise False</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptBrowsableAttribute.#ctor(Syncfusion.Scripting.PropertyType,System.String)">
            <summary>
            Using this constructor for mark "Item" class
            </summary>
            <param name="property">Type property - must be equal PropertyType.Item</param>
            <param name="name">Name of property that using for showing name of Item.</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptBrowsableAttribute.#ctor(Syncfusion.Scripting.PropertyType,System.Type,System.String)">
             <summary>
            
             </summary>
             <param name="property"></param>
             <param name="type"></param>
             <param name="name"></param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptBrowsableAttribute.#ctor(Syncfusion.Scripting.PropertyType,System.Type)">
            <summary>
            Using this constructor for mark "Colleciton" property
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.ScriptBrowsableAttribute.IsVisible">
            <summary>
            Indicated whether class property is visible
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.ScriptBrowsableAttribute.PropertyType">
            <summary>
            Indicated way for show property.
            Readonly
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.ScriptBrowsableAttribute.Name">
            <summary>
            Gets the name of property that using for showing name of Item.
            Readonly
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.ScriptEngineFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptEngineFactory.#cctor">
            <summary>
            Static Constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptEngineFactory.RegisterScriptEngine(Syncfusion.Scripting.ScriptLanguages,System.Type)">
            <summary>
            
            </summary>
            <param name="lang"></param>
            <param name="scriptEngineType"></param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptEngineFactory.CreateScriptEngine(Syncfusion.Scripting.ScriptLanguages)">
            <summary>
            
            </summary>
            <param name="lang"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Scripting.ScriptEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.ScriptEventArgs.Script">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.ScriptEventHandler">
            <summary>
            Signature for script event handlers.
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.VsaErrorEventArgs">
            <summary>
            Encapsulates arguments for VSA error events.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.VsaErrorEventArgs.#ctor(Microsoft.Vsa.IVsaError)">
            <summary>
            
            </summary>
            <param name="vsaError"></param>
        </member>
        <member name="P:Syncfusion.Scripting.VsaErrorEventArgs.Error">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.VsaErrorEventHandler">
            <summary>
            Signature for VSA error event handlers.
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.ScriptingManager">
            <summary>
            Encapsulates a script, script site, and script engine as a single component.
            </summary>
            <remarks>
            <para>
            This class provides a convenient wrapper around a script, script site, and
            script engine. It can be added to a form using the toolbox and configured
            using the property editor.
            </para>
            <para>
            The ScriptingManager creates the <see cref="T:Syncfusion.Scripting.ScriptSite"/>
            and <see cref="T:Syncfusion.Scripting.Script"/> objects by calling the virtual
            <see cref="M:Syncfusion.Scripting.ScriptingManager.CreateScriptSite"/> and
            <see cref="M:Syncfusion.Scripting.ScriptingManager.CreateScript"/> methods,
            respectively. These methods can be overriden in derived ScriptingManager
            classes in order to create custom Script and ScriptSite objects. After
            creating the ScriptSite and Script, the ScriptingManager attaches these
            objects to the <see cref="P:Syncfusion.Scripting.ScriptingManager.ScriptSite"/>
            and <see cref="P:Syncfusion.Scripting.ScriptingManager.Script"/> properties,
            respectively. Another way to attach a custom ScriptSite or Script to the
            ScriptingManager is to pass them to one of the overloaded constructors.
            </para>
            <para>
            The <see cref="P:Syncfusion.Scripting.ScriptingManager.ScriptEngine"/> is
            created by the <see cref="T:Syncfusion.Scripting.ScriptEngineFactory"/>
            based on the value of the
            <see cref="!:Syncfusion.Scripting.ScriptingManager.ScriptLanguage"/>
            property.
            </para>
            <para>
            The <see cref="M:Syncfusion.Scripting.ScriptingManager.LoadScript(System.String)"/>
            method is used to load the script source code. Once the script is
            loaded, the
            </para>
            <para>
            <see cref="M:Syncfusion.Scripting.ScriptingManager.CompileScript"/>
            method can be called to compile the script.
            </para>
            <para>
            <see cref="M:Syncfusion.Scripting.ScriptingManager.CompileScript"/>
            method can be called to compile the script.
            </para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.#ctor(Syncfusion.Scripting.ScriptSite)">
            <summary>
            Construct a ScriptingManager given a script site.
            </summary>
            <param name="scriptSite">Script site to attach</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.#ctor(Syncfusion.Scripting.Script)">
            <summary>
            Construct a ScriptingManager given a script.
            </summary>
            <param name="script">Script to attach</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.#ctor(Syncfusion.Scripting.ScriptSite,Syncfusion.Scripting.Script)">
            <summary>
            Construct a ScriptingManager given a script site and a script.
            </summary>
            <param name="scriptSite">Script site to attach</param>
            <param name="script">Script to attach</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.LoadScript(System.String)">
            <summary>
            Loads the contents of the specified file into the script.
            </summary>
            <param name="fileName">Name of file containing the script source</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.LoadScript(System.IO.Stream)">
            <summary>
            Loads the given stream into the script.
            </summary>
            <param name="strm">Stream containing the script source</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.CompileScript">
            <summary>
            Compiles the script loaded in the ScriptEngine.
            </summary>
            <returns>true if successful; otherwise false</returns>
            <remarks>
            <para>
            The <see cref="M:Syncfusion.Scripting.ScriptingManager.OnCompileError(Syncfusion.Scripting.VsaErrorEventArgs)"/>
            method is called if an error occurs during compilation.
            </para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.RunScript">
            <summary>
            Runs the script that is compiled in the ScriptEngine.
            </summary>
            <remarks>
            <para>
            The script must be loaded and compiled before this method is called.
            An error occurs if the ScriptEngine is already running.
            </para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.ResetScriptEngine">
            <summary>
            Removes the script engine from the running state and disconnects
            automatically bound event handlers.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.CloseScriptEngine">
            <summary>
            Closes the script engine and releases all resources. If the script engine
            is currently running, the IVsaEngine.Reset method is called first.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.ClearScriptSite">
            <summary>
            Removes all event sources, global instances, and compiled code from the site.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.RegisterEventSource(System.String,System.Object)">
            <summary>
            Registers and event source with the site.
            </summary>
            <param name="name">Name of the event source</param>
            <param name="obj">Event source object</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.RegisterGlobalInstance(System.String,System.Object)">
            <summary>
            Registers a global instance with the site.
            </summary>
            <param name="name">Name of the global instance</param>
            <param name="obj">Global instance object</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.InvokeScriptMethod(System.String)">
            <summary>
            Invokes the specified method in the script.
            </summary>
            <param name="methodName">Name of method to invoke</param>
            <returns>Return value of the method</returns>
            <remarks>
            <para>
            This method throws an InvalidOperationException if the ScriptEngine
            or Script is null. The ScriptEngine must be running to call this
            method.
            </para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.Init">
            <summary>
            Initializes the ScriptingManager
            </summary>
            <remarks>
            <para>
            This method calls the
            <see cref="M:Syncfusion.Scripting.ScriptingManager.CreateScriptSite"/>
            and
            <see cref="M:Syncfusion.Scripting.ScriptingManager.CreateScript"/>
            methods and attaches the ScriptSite and Script to the ScriptingManager.
            If the ScriptingManager already has a ScriptSite attached, then a new
            one is not created. The same is true of the Script.
            </para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.CreateScriptEngine">
            <summary>
            Creates a new instance of the ScriptEngine and loads the script into it.
            </summary>
            <returns>true if successful; otherwise false</returns>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.CreateScriptSite">
            <summary>
            Creates the <see cref="T:Syncfusion.Scripting.ScriptSite"/> to attach to
            the ScriptingManager.
            </summary>
            <returns><see cref="T:Syncfusion.Scripting.ScriptSite"/> object</returns>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.CreateScript">
            <summary>
            Creates the <see cref="T:Syncfusion.Scripting.Script"/> to attach to
            the ScriptingManager.
            </summary>
            <returns><see cref="T:Syncfusion.Scripting.Script"/> object</returns>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.OnCompileError(Syncfusion.Scripting.VsaErrorEventArgs)">
            <summary>
            Called when an error occurs during compilation.
            </summary>
            <param name="evtArgs">Event arguments</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.OnScriptChanged(Syncfusion.Scripting.ScriptEventArgs)">
            <summary>
            Called when the script changes.
            </summary>
            <param name="evtArgs">Event arguments</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptingManager.SaveAssembly(System.Reflection.Assembly,System.String)">
            <summary>
            For testing.
            </summary>
            <param name="asm"></param>
        </member>
        <member name="P:Syncfusion.Scripting.ScriptingManager.ScriptEngine">
            <summary>
            The ScriptEngine compiles and executes the script.
            </summary>
            <remarks>
            <para>
            Each language uses a different ScriptEngine. The
            <see cref="T:Syncfusion.Scripting.ScriptEngineFactory"/> creates the
            appropriate ScriptEngine for a given language. New or alternate
            ScriptEngines can be registered with the
            <see cref="T:Syncfusion.Scripting.ScriptEngineFactory"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Syncfusion.Scripting.ScriptingManager.Script">
            <summary>
            Script to load into the.
            <see cref="P:Syncfusion.Scripting.ScriptingManager.ScriptEngine"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.ScriptingManager.ScriptSite">
            <summary>
            The ScriptSite provides for host-implemented callbacks, describes interaction between
            the engine and the host's object model, and allows the reporting of compilation errors.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.ScriptingManager.IsScriptCompiled">
            <summary>
            Indicates if the script has been loaded and compiled in the script engine.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.ScriptingManager.IsScriptRunning">
            <summary>
            Indicates if the script engine is currently running the script.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.ScriptingManager.NeedToCompile">
            <summary>
            Indicates if the script needs to be compiled.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.ScriptingManager.ApplicationBase">
            <summary>
            Sets the root folder where non-system assemblies are located.
            </summary>
        </member>
        <member name="E:Syncfusion.Scripting.ScriptingManager.CompileError">
            <summary>
            Fired when an error occurs during compilation.
            </summary>
        </member>
        <member name="E:Syncfusion.Scripting.ScriptingManager.ScriptChanged">
            <summary>
            Fired when the script changes
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.ScriptObject">
            <summary>
            Encapsulates the name and type of an object in a script.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptObject.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptObject.#ctor(Syncfusion.Scripting.ScriptObject)">
            <summary>
            Copy constructor
            </summary>
            <param name="src"></param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptObject.#ctor(System.String,System.String)">
            <summary>
            Construct a script object given a name and type.
            </summary>
            <param name="name">Name of object</param>
            <param name="typeName">Type of object as a string</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization constructor for script objects.
            </summary>
            <param name="info">Serialization state information</param>
            <param name="context">Streaming context information</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptObject.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Syncfusion.Scripting.ScriptObject.Name">
            <summary>
            Name of object.
            </summary>
        </member>
        <member name="P:Syncfusion.Scripting.ScriptObject.TypeName">
            <summary>
            Type of object as a string.
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.ScriptObjectCollection">
            <summary>
            Type-safe collection for ScriptObject objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptObjectCollection.Add(Syncfusion.Scripting.ScriptObject)">
            <summary>
            
            </summary>
            <param name="scriptObj"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptObjectCollection.Remove(Syncfusion.Scripting.ScriptObject)">
            <summary>
            
            </summary>
            <param name="scriptObj"></param>
        </member>
        <member name="P:Syncfusion.Scripting.ScriptObjectCollection.Item(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.ScriptSite">
            <summary>
            Provides the script engine with access to objects referenced by the
            script.
            </summary>
            <remarks>
            <para>
            A ScriptSite contains objects that are used as global variables and event
            sources by the script. The objects must be registered by the hosting
            application before the script is compiled and executed by the script
            engine. Objects are registered using the
            <see cref="M:Syncfusion.Scripting.ScriptSite.RegisterEventSource(System.String,System.Object)"/>
            and
            <see cref="M:Syncfusion.Scripting.ScriptSite.RegisterGlobalInstance(System.String,System.Object)"/>
            methods. The script engine accesses the objects using the
            <see cref="M:Syncfusion.Scripting.ScriptSite.GetGlobalInstance(System.String)"/>
            and
            <see cref="M:Syncfusion.Scripting.ScriptSite.GetEventSourceInstance(System.String,System.String)"/>
            methods.
            </para>
            <para>
            The ScriptSite also contains the compiled state of the script. The
            compiled state is the compiled byte-code and debug information used by
            the script engine during execution. The compiled state can be put into
            the ScriptSite by calling the
            <see cref="M:Syncfusion.Scripting.ScriptSite.SetCompiledState(Microsoft.Vsa.IVsaEngine)"/> method and
            passing it the script engine after the script has been compiled. The
            compiled state can be accessed by calling the
            <see cref="M:Syncfusion.Scripting.ScriptSite.GetCompiledState(System.Byte[]@,System.Byte[]@)"/> method. 
            </para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptSite.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptSite.Clear">
            <summary>
            Removes all event sources, global instances, and compiled code from the site.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptSite.RegisterEventSource(System.String,System.Object)">
            <summary>
            Registers and event source with the site.
            </summary>
            <param name="name">Name of the event source</param>
            <param name="obj">Event source object</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptSite.RegisterGlobalInstance(System.String,System.Object)">
            <summary>
            Registers a global instance with the site.
            </summary>
            <param name="name">Name of the global instance</param>
            <param name="obj">Global instance object</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptSite.ClearCompiledState">
            <summary>
            Clears out the compiled state of the script.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptSite.SetCompiledState(Microsoft.Vsa.IVsaEngine)">
            <summary>
            Attaches the compiled state of the given script engine to the site.
            </summary>
            <param name="scriptEngine">Script engine that contains compiled state</param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptSite.GetEventSourceInstance(System.String,System.String)">
            <summary>
            Gets a reference to an event source previously added to a script engine using
            the IVsaCodeItem.AddEventSource method.
            </summary>
            <param name="itemName"></param>
            <param name="eventSourceName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptSite.GetGlobalInstance(System.String)">
            <summary>
            Gets a reference to a global item, such as the host-provided application object.
            </summary>
            <param name="globInstanceName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptSite.Notify(System.String,System.Object)">
            <summary>
            Notifies the host about events generated by the .NET script engine.
            </summary>
            <param name="notify"></param>
            <param name="info"></param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptSite.OnCompilerError(Microsoft.Vsa.IVsaError)">
            <summary>
            Notifies the host about how to respond to compiler errors encountered
            by the script engine.
            </summary>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptSite.GetCompiledState(System.Byte[]@,System.Byte[]@)">
            <summary>
            Gets the compiled state of a script engine, and, optionally,
            associated debugging information.
            </summary>
            <param name="pe"></param>
            <param name="debugInfo"></param>
        </member>
        <member name="M:Syncfusion.Scripting.ScriptSite.OnCompileError(Syncfusion.Scripting.VsaErrorEventArgs)">
            <summary>
            Called when an error occurs during compilation.
            </summary>
            <param name="evtArgs"></param>
        </member>
        <member name="E:Syncfusion.Scripting.ScriptSite.CompileError">
            <summary>
            Fired when an error occurs during compilation.
            </summary>
        </member>
        <member name="T:Syncfusion.Scripting.DefaultScriptSite">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.DefaultScriptSite.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.DefaultScriptSite.Clear">
            <summary>
            Removes all event sources, global instances, and compiled code from the site.
            </summary>
        </member>
        <member name="M:Syncfusion.Scripting.DefaultScriptSite.RegisterEventSource(System.String,System.Object)">
            <summary>
            Registers and event source with the site.
            </summary>
            <param name="name">Name of the event source</param>
            <param name="obj">Event source object</param>
        </member>
        <member name="M:Syncfusion.Scripting.DefaultScriptSite.RegisterGlobalInstance(System.String,System.Object)">
            <summary>
            Registers a global instance with the site.
            </summary>
            <param name="name">Name of the global instance</param>
            <param name="obj">Global instance object</param>
        </member>
        <member name="M:Syncfusion.Scripting.DefaultScriptSite.GetEventSourceInstance(System.String,System.String)">
            <summary>
            Gets a reference to an event source previously added to a script engine using
            the IVsaCodeItem.AddEventSource method.
            </summary>
            <param name="itemName"></param>
            <param name="eventSourceName"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Scripting.DefaultScriptSite.GetGlobalInstance(System.String)">
            <summary>
            Gets a reference to a global item, such as the host-provided application object.
            </summary>
            <param name="globInstanceName"></param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Scripting.Library">
            <summary>
            Class help to simply version switching
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Library.Version">
            <summary>
            Current version of library controls
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Library.Culture">
            <summary>
            Culture for all controls
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Library.PublicKey">
            <summary>
            Public key for all controls
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Library.OwnVersion">
            <summary>
            Version of current library with culture and public key
            </summary>
        </member>
        <member name="F:Syncfusion.Scripting.Library.DesignerVersion">
            <summary>
            Designer library version with culture and public key
            </summary>
        </member>
    </members>
</doc>
