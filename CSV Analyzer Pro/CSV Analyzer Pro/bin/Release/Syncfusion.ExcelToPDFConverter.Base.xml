<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.ExcelToPDFConverter.Base</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.ExcelToPdfConverter.CurrentProgressChangedEventHandler">
            <summary>
            Represents the method that handles the CurrentProgressChanged Event.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.SheetBeforeDrawnEventHandler">
            <summary>
            Represents the method that handles the SheetBeforDrawn Event.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.SheetAfterDrawnEventHandler">
            <summary>
            Represents the method that handles the sheetAfterDrawn Event.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.CurrentProgressChangedEventArgs">
            <summary>
            Event occurs when current progress changed.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.CurrentProgressChangedEventArgs.#ctor(System.Int32,System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.CurrentProgressChangedEventArgs"/> class.
            </summary>
            <param name="noOfSheets">The no of sheets.</param>
            <param name="activeSheetIndex">Index of the active sheet.</param>
            <param name="source">The source.</param>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.CurrentProgressChangedEventArgs.CurrentProgressChanged">
            <summary>
            Gets the current progress changed.
            </summary>
            <value>The current progress changed.</value>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.SheetBeforeDrawnEventArgs">
            <summary>
            Event occurs before sheet is drawn.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.SheetBeforeDrawnEventArgs.#ctor(System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.SheetBeforeDrawnEventArgs"/> class.
            </summary>
            <param name="currentSheet">The current sheet.</param>
            <param name="source">The source.</param>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.SheetBeforeDrawnEventArgs.CurrentSheet">
            <summary>
            Gets or sets the current sheet.
            </summary>
            <value>The current sheet.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.SheetBeforeDrawnEventArgs.Skip">
            <summary>
            Gets or sets a value indicating whether to skip <see cref="T:Syncfusion.ExcelToPdfConverter.SheetBeforeDrawnEventArgs"/>. The default value is false.
            </summary>
            <value><c>true</c> if skip; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.SheetAfterDrawnEventArgs">
            <summary>
            Event occurs after sheet is drawn.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.SheetAfterDrawnEventArgs.#ctor(System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.SheetAfterDrawnEventArgs"/> class.
            </summary>
            <param name="afterSheet">The after sheet.</param>
            <param name="source">The source.</param>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.SheetAfterDrawnEventArgs.AfterSheet">
            <summary>
            Gets the current sheet.
            </summary>
            <value>The current sheet.</value>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.NamespaceDoc">
            <summary>
                The Syncfusion.ExcelToPdfConverter namespace contains classes for converting Excel documents into PDF.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter">
            <summary>
                Represents the conversion of Excel document to a PDF document.
            </summary>
            <remarks>
                Excel To Pdf Conversion is not supported in WinRT, Windows Phone, Universal, Portable and Silverlight platforms.
            </remarks>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.ScriptFactor">
            <summary>
                Defines a default script factor.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.NumberFormat">
            <summary>
                Defines a default number format.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.TextNumberFormat">
            <summary>
                Defines a text number format.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.ColumnBitsInCellIndex">
            <summary>
                Number of bits in cell index that holds column value.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._coordinates2007">
            <summary>
                Defines a default coordinates for TextBox.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._conditionalFormatApplier">
            <summary>
                Represents the object of Excel sheet conditional formatting .
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._pdfDocument">
            <summary>
                Indicates the object of the pdf document.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._currentPage">
            <summary>
                Indicates the current rendering pdf page in the document.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._workBook">
            <summary>
                Indicates the active workbook of the input document.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._workSheet">
            <summary>
                Indicates the active worksheet of the workbook.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._chartImpl">
            <summary>
                Indicates the chart object.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._workBookImpl">
            <summary>
                Indicates the object of the workbook Implementation class.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._pdfUnitConverter">
            <summary>
                This object is used for the conversion between the units.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._excelToPdfSettings">
            <summary>
                Indicates the object of the Excel to pdf converter settings object.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._pdfPageTemplate">
            <summary>
                Indicates the object of the pdf template in which the document is drawn first.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._pdfGraphics">
            <summary>
                Indicates the object of the pdf graphics of the current pdf page.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._excelEngine">
            <summary>
                Indicates the object of the excel engine.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._pdfSection">
            <summary>
                Indicates the object of the current Pdf section.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._pdfTemplateCollection">
            <summary>
                Represents the collection of Pdf templates.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._predefinedHeaderFooter">
            <summary>
                Represents the collection of Header and Footer representations and their respecive values.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._tableBorderColorList">
            <summary>
                Represents the collection of table style border color list.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._fontTableColors">
            <summary>
                Represents the collection of the table style font list.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._extBorders">
            <summary>
                Represents the collection of bordrs and its XF index.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._headerFooter">
            <summary>
                Represents the collection of the header and footer objects.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._borderWidth">
            <summary>
                Indicates the Excelborder index width.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._pageCount">
            <summary>
                Indicates the no of page counts in the Pdf/
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._bookmark">
            <summary>
                Indicates the Bookmark for the Pdf page.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._scaledPageWidth">
            <summary>
                Indicates the scaled page width to which the template should be drawn.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._scaledPageHeight">
            <summary>
                Indicates the scaled page height to which the template should be drawn.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._fontList">
            <summary>
                Indicates the list of the fonts collections to which the fonts are need to substituted.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._excludefontList">
            <summary>
                Indicates the list of the fonts to exclude in SwitchFont
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._latinfontList">
            <summary>
                Indicates the list of the fonts supported by latin font
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._tableStyle">
            <summary>
                Indicates the object of the Table style.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._cellDisplayText">
            <summary>
                Indicates the wrapped cell display text for a rotated text.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._sortedListCf">
            <summary>
                Indicates the sortedList for conditional Formatting
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._stylewithoutBorderFill">
            <summary>
                Style collection which dont have visible fill and borders
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._pageSetupOption">
            <summary>
                It's define the Pdf Page-setup.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._excelToPdfPageLayout">
            <summary>
                It's define the page layout settings.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._columnWidthGetter">
            <summary>
                It's define the used range coloum width
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._rowHeightGetter">
            <summary>
                It's define the used range row height
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._pageSetup">
            <summary>
                It's define the current draw sheet pagesetup information's
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._imageCodec">
            <summary>
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._sortedBorders">
            <summary>
                Represents the list of sorted border values.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._dicBorderLineStyle">
            <summary>
                Represents the list of border line styles.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._helper">
            <summary>
                Helper Methods.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._allowHeaderFooterOnce">
            <summary>
                Find Header Footer having the Rich Text.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._chartImageCollection">
            <summary>
                Represents maximum font size in a row
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._mergedRegions">
            <summary>
                Merged regions.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._printTitleTemplateCollection">
            <summary>
                Represents the collection of PrintTitle Pdf templates.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._printTitleTemplate">
            <summary>
                Indicates the object of the pdf template in which the PrintTitle is drawn first.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter._isFirstRowOfPage">
            <summary>
             Indicates the first row of each page.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.isFirstColumnOfPage">
            <summary>
            Indicates the first column of each page.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.isCurrentCellNotMerged">
            <summary>
             Indicates the current cell is merged.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.#ctor(Syncfusion.XlsIO.IWorkbook)">
            <summary>
                Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter"/> class with the specified workbook.
            </summary>
            <param name="workbook">The workbook.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.#ctor(Syncfusion.XlsIO.IWorksheet)">
            <summary>
                Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter"/> class with the specified worksheet.
            </summary>
            <param name="worksheet">The worksheet.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.#ctor(Syncfusion.XlsIO.IChart)">
            <summary>
                Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter"/> class with the specified chart.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter"/> class with the specified file name.
            </summary>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.#ctor(System.IO.Stream)">
            <summary>
                Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter"/> class with the specified stream.
            </summary>
            <param name="stream">The workbook stream.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetLayoutOptions(Syncfusion.XlsIO.Implementation.PageSetupBaseImpl)">
            <summary>
                Gets the <see cref="T:Syncfusion.ExcelToPdfConverter.LayoutOptions"/> LayoutOptions based on PageSetup.
            </summary>
            <param name="pageSetup">Current Page setup.</param>
            <returns>Returns the LayoutOptions.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.Convert">
            <summary>
                Converts the document.
            </summary>
            <returns>Returns the PDFDocument Object</returns>
            <example>
                The following code snippet illustrates how to convert the workbook.
                <code>
            // Convert the workbook.
            ExcelToPdfConverter converter = new ExcelToPdfConverter(workbook);
            converter.Convert();
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.UpdateInvisibleStyleCollection">
            <summary>
                Add the styles (Index) dont have visible fill and border
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawChartSheet(Syncfusion.XlsIO.IChart,System.Int32,Syncfusion.ExcelToPdfConverter.LayoutOptions)">
            <summary>
                To draw the chart Sheet in to pdf
            </summary>
            <param name="chart">workbook chart</param>
            <param name="sheetsCount">sheets count</param>
            <param name="layoutOptions">layout options for the chart sheet</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawChart(Syncfusion.XlsIO.IChart,Syncfusion.Pdf.Graphics.PdfTemplate)">
            <summary>
                To draw the workbook chart in pdf
            </summary>
            <param name="chart">It's represent the chart object</param>
            <param name="chartTemplate">pdf template for the workbook chart</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.Convert(Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings)">
            <summary>
                Converts the document with the specified converter settings.
            </summary>
            <param name="converterSettings">The converter settings.</param>
            <returns>Returns the PDFdocument object</returns>
            <example>
                The following code snippet illustrates how to convert the workbook.
                <code>
            // Convert the workbook.
            ExcelToPdfConverter converter = new ExcelToPdfConverter(workbook);
            // Initializes the Excel to PDF converter setting class.
            ExcelToPdfConverterSettings settings = new ExcelToPdfConverterSettings();
            // Layout the page using FitAllColumnsOnOnePage options.
            settings.LayoutOptions = LayoutOptions.FitAllColumnsOnOnePage;
            converter.Convert(settings);
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.OnProgressChanged(System.Int32,System.Int32)">
            <summary>
                Called when [progress changed].
            </summary>
            <param name="noOfSheets">The no of sheets.</param>
            <param name="activeSheetIndex">Index of the active sheet.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.OnSheetBeforeDrawn(Syncfusion.ExcelToPdfConverter.SheetBeforeDrawnEventArgs)">
            <summary>
                Raises the <see cref="E:SheetBeforeDrawn"/> event.
            </summary>
            <param name="args">
                The <see cref="T:Syncfusion.ExcelToPdfConverter.SheetBeforeDrawnEventArgs"/> instance containing the
                event data.
            </param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.OnSheetAfterDrawn(System.Int32)">
            <summary>
                Called when [sheet after drawn].
            </summary>
            <param name="activeSheetIndex">Index of the active sheet.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.RaiseSheetBeforeDrawn(System.Int32)">
            <summary>
                Raises the sheet before drawn.
            </summary>
            <param name="activeSheetIndex">Index of the active sheet.</param>
            <returns>the boolean values</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.Dispose">
            <summary>
                Releases both unmanaged and managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.Dispose(System.Boolean)">
            <summary>
                Releases unmanaged and optionally managed resources
            </summary>
            <param name="disposing">
                <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only
                unmanaged resources.
            </param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.UpdateCellScaledWidthHeight">
            <summary>
                To update the cell scaled width and height.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawSheet(Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange[])">
            <summary>
                Draws the sheet.
            </summary>
            <param name="wkSheet">The work sheet.</param>
            <param name="printAreas">Ranges to be Drawn</param>
            <returns>pdfdocument object</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.UpdateSheetWidthHeight(System.Int32,System.Int32)">
            <summary>
                Update the Sheet width and height.
            </summary>
            <param name="firstColumn">The first column.</param>
            <param name="firstRow">The first row.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetCenterValues(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{System.Single},System.Collections.Generic.List{System.Single})">
            <summary>
                Gets center width and height values according to the page templates.
            </summary>
            <param name="firstRow">First row that can be drawn in the Pdf page</param>
            <param name="firstColumn">First column that can be drawn in the Pdf page</param>
            <param name="lastRow">Last row that can be drawn in the Pdf page</param>
            <param name="lastColumn">Last column that can be drawn in Pdfpage</param>
            <param name="widthVal">List of center width values</param>
            <param name="heightVal">List of center height values</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.FindPageSettings(Syncfusion.Pdf.Graphics.PdfTemplate,Syncfusion.Pdf.PdfPage,Syncfusion.XlsIO.IWorksheet,System.Single@,System.Single@,System.Single,System.Single)">
            <summary>
                It's finding the scaled page width and height
            </summary>
            <param name="pdfTemplate"></param>
            <param name="page"></param>
            <param name="wkSheet"></param>
            <param name="startX"></param>
            <param name="headerHeight"></param>
            <param name="widthValue"></param>
            <param name="heightValue"></param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetMarginForCenterAlignment(System.Boolean)">
            <summary>
                Get margins for center alignment.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawSplitText(System.Collections.Generic.List{System.Single},System.Collections.Generic.List{System.Single})">
            <summary>
                Draws the split text.
            </summary>
            <param name="centerWidthValues">Center width values.</param>
            <param name="centerHeightValues">Center height values.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawSplitText(Syncfusion.ExcelToPdfConverter.SplitText)">
            <summary>
                Draws the split text.
            </summary>
            <param name="splitText">The split text.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawPdfPageHeaderFooter(Syncfusion.Pdf.PdfSection,System.Collections.Generic.List{Syncfusion.ExcelToPdfConverter.HeaderFooter},Syncfusion.XlsIO.Interfaces.IPageSetupBase,System.Single,System.Single,Syncfusion.Pdf.PdfPage,System.Single@,System.Single@)">
            <summary>
                Draws the Header and Footer to the PDF page .
            </summary>
            <param name="section">The Pdf section.</param>
            <param name="headerFooterCollection">The header footer collection.</param>
            <param name="pageSetupBase">The Worksheet.</param>
            <param name="page">The Pdf page.</param>
            <param name="headerHeight">Height of the header.</param>
            <param name="footerHeight">Height of the footer.</param>
            <param name="topmargin">Top Margin</param>
            <param name="bottomMargin">Bottom Margin</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetHeadeFooterTemplate(Syncfusion.XlsIO.Implementation.PageSetupBaseImpl,Syncfusion.Pdf.PdfPage,System.Single)">
            <summary>
                Returns header footer teample.
            </summary>
            <param name="pageSetupBase">The sheet page setup.</param>
            <param name="page">The pdf page.</param>
            <param name="height">Template height.</param>
            <returns>Pdf template.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawRow(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
                Draws the row.
            </summary>
            <param name="wkSheet">The wk sheet.</param>
            <param name="startColumn">The start column.</param>
            <param name="endColumn">The end column.</param>
            <param name="startRow">The start row.</param>
            <param name="endRow">The end row.</param>
            <param name="xValue">The x value.</param>
            <param name="yValue">The y value.</param>
            <param name="originalWidth">Width of the original.</param>
            <returns>The Object of Pdf Document.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawRow(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Draws the row.
            </summary>
            <param name="wkSheet">The wk sheet.</param>
            <param name="startColIndex">The start column.</param>
            <param name="endColIndex">The end column.</param>
            <param name="startRowIndex">The start row.</param>
            <param name="endRowIndex">The end row.</param>
            <param name="xValue">The x value.</param>
            <param name="yValue">The y value.</param>
            <param name="startX">The start x value.</param>
            <param name="startY">The start y value.</param>
            <param name="rangeHeight">The height of range</param>
            <param name="rangeWidth">The Width of range</param>
            <param name="originalWidth">Width of the original.</param>
            <returns>The Object of Pdf Document.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawShapes(Syncfusion.XlsIO.Implementation.WorksheetImpl,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
                Draws all necessary shapes.
            </summary>
            <param name="sheet">It's represent the worksheet</param>
            <param name="startRowIndex">One-based index of the first row to convert.</param>
            <param name="startColIndex">One-based index of the first column to convert.</param>
            <param name="endRowIndex">One-based index of the last row to convert.</param>
            <param name="endColIndex">One-based index of the last column to convert.</param>
            <param name="startX">The x value.</param>
            <param name="startY">The y value.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetBorderXandY(Syncfusion.XlsIO.IRange,System.Boolean)">
            <summary>
                Get Range Border X and Y
            </summary>
            <param name="Range">Cell</param>
            <param name="isXaxis">Identify the X or Y axis</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.ApplyTransparency(Syncfusion.Pdf.Graphics.PdfGraphics,Syncfusion.XlsIO.ITextBoxShape,System.Boolean)">
            <summary>
                Transparancy is applied if it is required
            </summary>
            <param name="graphics">The graphics</param>
            <param name="shape">The shape</param>
            <param name="line">Apply transparency for line</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawTextBox(Syncfusion.XlsIO.Implementation.Shapes.TextBoxShapeImpl,Syncfusion.Pdf.Graphics.PdfGraphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
                Draws the shape.
            </summary>
            <param name="shape">It's represent the Textbox</param>
            <param name="graphics">Pdf Graphics</param>
            <param name="firstRow">First row</param>
            <param name="firstColumn">First Column</param>
            <param name="lastRow">Last row of chart shape</param>
            <param name="lastColumn">Last column of chart shape</param>
            <param name="startX">Starting point of chartshape-X Point</param>
            <param name="startY">starting point of chartshape - Y point</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CacheMerges(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{Syncfusion.XlsIO.Parser.Biff_Records.MergeCellsRecord.MergedRegion})">
            <summary>
                Caches range's merges.
            </summary>
            <param name="firstRow">First Row.</param>
            <param name="firstColumn">First Column.</param>
            <param name="lastRow">Last Row.</param>
            <param name="lastColumn">Last Column.</param>
            <param name="mergedRegions">List to save merges in</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CreatePen(Syncfusion.XlsIO.IShapeLineFormat)">
            <summary>
                Creates the pen.
            </summary>
            <param name="lineFormat">The format of the line.</param>
            <returns>The PdfPen object.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetDashStyle(Syncfusion.XlsIO.IShapeLineFormat)">
            <summary>
                Gets the dash style.
            </summary>
            <param name="lineFormat">Theformat of the line.</param>
            <returns>The PdfDashStyle value.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetShapeLineWidth(Syncfusion.XlsIO.IShapeLineFormat)">
            <summary>
                Gets the width of the line
            </summary>
            <param name="lineFormat">The format of the line.</param>
            <returns>The borderWidth of the line index.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawHeadersAndFooters(Syncfusion.Pdf.PdfSection,Syncfusion.XlsIO.Implementation.WorksheetImpl,Syncfusion.XlsIO.Implementation.Charts.ChartImpl)">
            <summary>
                Draws the headers and footers.
            </summary>
            <param name="pdfSection">The PDF section.</param>
            <param name="sheetImpl">The sheet impl.</param>
            <param name="chart">The chart to be drawn</param>
            <returns>The collection of the header and footer objects.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawLines(Syncfusion.XlsIO.Implementation.WorksheetImpl,System.Int32,System.Int32,System.Int32,System.Int32,Syncfusion.Pdf.Graphics.PdfGraphics,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Draws the lines.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="firstRow">The first row.</param>
            <param name="firstColumn">The first column.</param>
            <param name="lastRow">The last row.</param>
            <param name="lastColumn">The last column.</param>
            <param name="graphics">The graphics.</param>
            <param name="startX">The x value.</param>
            <param name="startY">The y value.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.IterateMerges(Syncfusion.XlsIO.Implementation.WorksheetImpl,System.Int32,System.Int32,System.Int32,System.Int32,Syncfusion.Pdf.Graphics.PdfGraphics,Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.MergeMethod,System.Single,System.Single,System.Single)">
            <summary>
                Iterates the merges.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="firstRow">The first row.</param>
            <param name="firstColumn">The first column.</param>
            <param name="lastRow">The last row.</param>
            <param name="lastColumn">The last column.</param>
            <param name="graphics">The graphics.</param>
            <param name="startX">The x value.</param>
            <param name="startY">The y value.</param>
            <param name="method">The method.</param>
            <param name="originalWidth">Width of the i original.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawMerge(Syncfusion.XlsIO.Implementation.WorksheetImpl,Syncfusion.XlsIO.Parser.Biff_Records.MergeCellsRecord.MergedRegion,System.Int32,System.Int32,System.Int32,System.Int32,Syncfusion.Pdf.Graphics.PdfGraphics,System.Single,System.Single,System.Single)">
            <summary>
                Draws the merge.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="mergedRegion">The merged region.</param>
            <param name="firstRow">The first row.</param>
            <param name="firstColumn">The first column.</param>
            <param name="graphics">The graphics.</param>
            <param name="startX">The x value.</param>
            <param name="startY">The y value.</param>
            <param name="lastRow">The last row.</param>
            <param name="lastColumn">The last column.</param>
            <param name="originalWidth">Width of the i original.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawBackGround(Syncfusion.XlsIO.Implementation.WorksheetImpl,System.Int32,System.Int32,System.Int32,System.Int32,Syncfusion.Pdf.Graphics.PdfGraphics,Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CellMethod,System.Single,System.Single,System.Single)">
            <summary>
                Draws the back ground.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="firstRow">The first row.</param>
            <param name="firstColumn">The first column.</param>
            <param name="lastRow">The last row.</param>
            <param name="lastColumn">The last column.</param>
            <param name="graphics">The graphics.</param>
            <param name="startX">The x value.</param>
            <param name="startY">The y value.</param>
            <param name="method">The method.</param>
            <param name="originalWidth">Width of the i original.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.IsMerged(Syncfusion.XlsIO.IRange)">
            <summary>
                Indicates whether the cell is merged or not.
            </summary>
            <param name="cell">Cell.</param>
            <returns>Returns true if the cell is merged otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawBackground(Syncfusion.XlsIO.IRange,System.Drawing.RectangleF,Syncfusion.Pdf.Graphics.PdfGraphics)">
            <summary>
                Draws the background.
            </summary>
            <param name="cell">The cell range.</param>
            <param name="rectangle">The cell rectangle.</param>
            <param name="graphics">The pdf page graphics object.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawBackground(Syncfusion.XlsIO.Interfaces.IInternalExtendedFormat,System.Drawing.RectangleF,Syncfusion.Pdf.Graphics.PdfGraphics,Syncfusion.XlsIO.IRange)">
            <summary>
                Draws the background.
            </summary>
            <param name="internalExtendedFormat">The internal extended format.</param>
            <param name="rect">The cell rectangle.</param>
            <param name="graphics">The pdf page graphics.</param>
            <param name="cell">The cell range.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawMergedBackground(Syncfusion.XlsIO.Implementation.WorksheetImpl,Syncfusion.XlsIO.Parser.Biff_Records.MergeCellsRecord.MergedRegion,System.Int32,System.Int32,System.Int32,System.Int32,Syncfusion.Pdf.Graphics.PdfGraphics,System.Single,System.Single,System.Single)">
            <summary>
                Draws the merged background.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="mergedRegion">The merged region.</param>
            <param name="firstRow">The first row.</param>
            <param name="firstColumn">The first column.</param>
            <param name="graphics">The graphics.</param>
            <param name="startX">The x value.</param>
            <param name="startY">The y value.</param>
            <param name="lastRow">The last row.</param>
            <param name="lastColumn">The last column.</param>
            <param name="originalWidth">Width of the i original.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetMergedWidth(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Gets the width of the merged cells.
            </summary>
            <param name="firstColumn">The first column.</param>
            <param name="lastColumn">The last column.</param>
            <param name="mergedFirstColumn">The merged first column.</param>
            <param name="mergedLastColumn">The merged last column.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawCells(Syncfusion.XlsIO.Implementation.WorksheetImpl,System.Int32,System.Int32,System.Int32,System.Int32,Syncfusion.Pdf.Graphics.PdfGraphics,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Draws the cells.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="firstRow">The first row.</param>
            <param name="firstColumn">The first column.</param>
            <param name="lastRow">The last row.</param>
            <param name="lastColumn">The last column.</param>
            <param name="graphics">The graphics.</param>
            <param name="startX">The x value.</param>
            <param name="startY">The y value.</param>
            <param name="originalWidth">Width of the i original.</param>
            <param name="rangeWidth">Width of the cell</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawCell(Syncfusion.XlsIO.Implementation.MigrantRangeImpl,System.Drawing.RectangleF,System.Drawing.RectangleF,Syncfusion.Pdf.Graphics.PdfGraphics,System.Single)">
            <summary>
                Draws the cell.
            </summary>
            <param name="cell">The migrant cell range.</param>
            <param name="cellRect">The cell rectangle.</param>
            <param name="adjacentRect">The adjacent cell rectangle.</param>
            <param name="graphics">The pdf page graphics.</param>
            <param name="mergedWidth">The width of Merged Cell</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawCell(Syncfusion.XlsIO.Implementation.ExtendedFormatImpl,Syncfusion.XlsIO.IRange,System.Drawing.RectangleF,System.Drawing.RectangleF,Syncfusion.Pdf.Graphics.PdfGraphics,System.Single)">
            <summary>
                Draws the cell.
            </summary>
            <param name="extendedFormatImpl">The extended format impl.</param>
            <param name="cell">The cell range.</param>
            <param name="cellRect">The cell rectangle.</param>
            <param name="adjacentRect">The adjacent cell rect.</param>
            <param name="graphics">The pdf page graphics.</param>
            <param name="mergedWidth">The width of Merged Cell</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawIconSet(Syncfusion.Pdf.Graphics.PdfGraphics,Syncfusion.XlsIO.Implementation.ExtendedFormatImpl,System.Drawing.RectangleF@,Syncfusion.Pdf.Graphics.PdfFont)">
            <summary>
            Draws IconSet image.
            </summary>
            <param name="graphics">The pdf page graphics.</param>
            <param name="extendedFormatImpl">The extended format of the cell.</param>
            <param name="adjacentRect">The adjacent cell rect.</param>
            <param name="font">The Pdf font in the cell.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetRTLAlignment(System.UInt16[])">
            <summary>
                Returns right alignment if the first character is rtl otherwise left.
            </summary>
            <param name="characterCodes">Cell text character codes.</param>
            <returns>returns PdfTextAlignment.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.FillText(System.Drawing.RectangleF,System.String,Syncfusion.Pdf.Graphics.PdfFont)">
            <summary>
                Fill the text into the given bounds.
            </summary>
            <param name="bounds">Cell bounds</param>
            <param name="text">Cell text</param>
            <param name="pdfFont">Pdf font</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawRTFText(System.Drawing.RectangleF,System.Drawing.RectangleF,Syncfusion.Pdf.Graphics.PdfGraphics,System.Collections.Generic.List{Syncfusion.XlsIO.IFont},System.Collections.Generic.List{System.String})">
            <summary>
                Draw the RTf text.
            </summary>
            <param name="cellRect">The cell rectangle.</param>
            <param name="adjacentRect">The cell adjacent rectangle.</param>
            <param name="graphics">The pdf graphics.</param>
            <param name="richTextFont">Font collection.</param>
            <param name="drawString">DrawString collection.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawTextTemplate(System.Drawing.RectangleF,Syncfusion.Pdf.Graphics.PdfGraphics,System.Collections.Generic.List{Syncfusion.ExcelToPdfConverter.LineInfo},System.Single)">
            <summary>
                Draw the text template.
            </summary>
            <param name="bounds">The cell bounds.</param>
            <param name="graphics">Pdf graphics.</param>
            <param name="lineInfoCollection">The lineinfo collection.</param>
            <param name="y">shift y.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.SplitByCharacter(System.Drawing.RectangleF,System.Single@,System.Collections.Generic.List{Syncfusion.ExcelToPdfConverter.LineInfo},System.Collections.Generic.List{Syncfusion.ExcelToPdfConverter.TextInfo}@,System.Single@,System.Single@,System.Single@,System.String,Syncfusion.Pdf.Graphics.PdfFont,Syncfusion.Pdf.Graphics.PdfBrush,Syncfusion.XlsIO.IFont,System.Drawing.SizeF@,System.Single,System.Int32,System.String)">
            <summary>
                Split the text by character.
            </summary>
            <param name="shapeBounds">The cell bounds.</param>
            <param name="usedHeight">Used height.</param>
            <param name="lineInfoCollection">The lineinfo collection.</param>
            <param name="textInfoCollection">The textinfo collection.</param>
            <param name="usedWidth">Used width.</param>
            <param name="maxAscent">Maximun ascent.</param>
            <param name="maxHeight">Maximum height.</param>
            <param name="text">The text.</param>
            <param name="pdfFont">Pdf font.</param>
            <param name="pdfBrush">Pdf brush.</param>
            <param name="font">The font.</param>
            <param name="size">The text size.</param>
            <param name="ascent">The text ascent.</param>
            <param name="currPosition">Text current index.</param>
            <param name="originalText">the original text.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.LayoutSplittedText(System.Drawing.RectangleF,System.Single,System.Collections.Generic.List{Syncfusion.ExcelToPdfConverter.TextInfo},System.Single@,System.Single@,System.Single@,Syncfusion.XlsIO.IFont,Syncfusion.Pdf.Graphics.PdfFont,Syncfusion.Pdf.Graphics.PdfBrush,System.String,System.Drawing.SizeF@,System.Single,System.Int32@,System.Int32)">
            <summary>
                Layout the splitted text.
            </summary>
            <param name="shapeBounds">The cell bounds.</param>
            <param name="usedHeight">Used height.</param>
            <param name="textInfoCollection">The textinfo collection.</param>
            <param name="usedWidth">Used width.</param>
            <param name="maxAscent">Maximum ascent.</param>
            <param name="maxHeight">Maximum height.</param>
            <param name="font">The font.</param>
            <param name="pdfFont">Pdf font.</param>
            <param name="pdfBrush">Pdf brush.</param>
            <param name="text">The text.</param>
            <param name="size">The text size.</param>
            <param name="ascent">The text ascent.</param>
            <param name="currPosition">Text current index.</param>
            <param name="index">Text previous index.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.LayoutText(System.Drawing.RectangleF,System.Single@,System.Single,Syncfusion.XlsIO.IFont,Syncfusion.Pdf.Graphics.PdfFont,Syncfusion.Pdf.Graphics.PdfBrush,System.Drawing.SizeF,System.Single,System.Single@,System.Single@,System.String)">
            <summary>
                Layout the text.
            </summary>
            <param name="adjacentRect">The cell rectangle.</param>
            <param name="usedWidth">Used width.</param>
            <param name="usedHeight">Used height.</param>
            <param name="font">The font.</param>
            <param name="pdfFont">Pdf font.</param>
            <param name="pdfBrush">Pdf brush.</param>
            <param name="size">The text size.</param>
            <param name="ascent">The text ascent.</param>
            <param name="maxHeight">Maximum height.</param>
            <param name="maxAscent">Maximum ascent.</param>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.LayoutNewLine(System.Drawing.RectangleF,System.Single@,System.Collections.Generic.List{Syncfusion.ExcelToPdfConverter.LineInfo},System.Collections.Generic.List{Syncfusion.ExcelToPdfConverter.TextInfo}@,System.Single@,System.Single@,System.Single@,System.Boolean,System.String)">
            <summary>
                Layout the new line.
            </summary>
            <param name="shapeBounds">The cell rectangle.</param>
            <param name="usedHeight">Used height.</param>
            <param name="lineInfoCollection">The lineinfo collection.</param>
            <param name="textInfoCollection">The textinfo collection.</param>
            <param name="usedWidth">Used width.</param>
            <param name="maxAscent">Maximun ascent.</param>
            <param name="maxHeight">Maximum height.</param>
            <param name="isLastLine">Last line.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckPreviousElement(System.Collections.Generic.List{Syncfusion.ExcelToPdfConverter.LineInfo},System.Collections.Generic.List{Syncfusion.ExcelToPdfConverter.TextInfo}@,System.String,System.Single@,System.Single,System.Drawing.RectangleF)">
            <summary>
                Check the previous element.
            </summary>
            <param name="lineInfoCollection">The lineinfo collection.</param>
            <param name="currTextInfoCollection">The textinfo collection.</param>
            <param name="text">The text.</param>
            <param name="usedWidth">Used width.</param>
            <param name="usedHeight">Used height.</param>
            <param name="shapeBounds">The cell bounds.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.RemoveWhiteSpaces(System.Collections.Generic.List{Syncfusion.ExcelToPdfConverter.TextInfo})">
            <summary>
                Remove the white spaces.
            </summary>
            <param name="textInfoCollection">The textinfo collection.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.UpdateXPosition(System.Collections.Generic.IEnumerable{Syncfusion.ExcelToPdfConverter.TextInfo},System.Single)">
            <summary>
                Update the X position.
            </summary>
            <param name="textInfoCollection">The textinfo collection.</param>
            <param name="x">Shift X.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.LayoutXYPosition(System.Single,System.Single,System.Single,System.Collections.Generic.List{Syncfusion.ExcelToPdfConverter.TextInfo},System.Boolean,System.Single@,System.Single@)">
            <summary>
                Layout the XY position.
            </summary>
            <param name="usedWidth">Used width.</param>
            <param name="maxAscent">Maximum ascent.</param>
            <param name="shapeWidth">The cell width.</param>
            <param name="textInfoCollection">The textinfo collection.</param>
            <param name="isLastLine">Last line.</param>
            <param name="maxHeight">Maximum height.</param>
            <param name="usedHeight">Used height.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.LineJustify(System.Single@,System.Single,System.Single,System.Collections.Generic.List{Syncfusion.ExcelToPdfConverter.TextInfo})">
            <summary>
                Justify the line.
            </summary>
            <param name="usedWidth">Used width.</param>
            <param name="maxAscent">Maximum ascent.</param>
            <param name="shapeWidth">The cell width.</param>
            <param name="textInfoCollection">The textinfo collection.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.UpdateLineJustifyPosition(System.Collections.Generic.List{Syncfusion.ExcelToPdfConverter.TextInfo},System.Single,System.Int32)">
            <summary>
                Update the line position.
            </summary>
            <param name="textInfoCollection">The textinfo collection.</param>
            <param name="x">Shift X.</param>
            <param name="index">TextInfo index.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.UpdateXYPosition(System.Single,System.Collections.Generic.IEnumerable{Syncfusion.ExcelToPdfConverter.TextInfo},System.Single)">
            <summary>
                Update the XY position.
            </summary>
            <param name="maxAscent">Maximum ascent.</param>
            <param name="textInfoCollection">The textinfo collection.</param>
            <param name="x">Shift X.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetSystemFont(Syncfusion.XlsIO.IFont,System.String)">
            <summary>
                Gets the system font from XlsIO font.
            </summary>
            <param name="font">XlsIO font.</param>
            <param name="fontName">New font name for the font object.</param>
            <returns>returns system font.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetFont(Syncfusion.XlsIO.IFont)">
            <summary>
                Gets the system font from XlsIO font.
            </summary>
            <param name="font">XlsIO font.</param>
            <returns>returns system font.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetFontStyle(Syncfusion.XlsIO.IFont)">
            <summary>
                Gets the font style.
            </summary>
            <param name="font">XlsIO font.</param>
            <returns>return font style.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetFontSize(Syncfusion.XlsIO.IFont)">
            <summary>
                Gets the font size.
            </summary>
            <param name="font">XlsIO font.</param>
            <returns>returns font size based on superscript and subscript.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.FindAscent(System.Drawing.Font)">
            <summary>
                Gets the ascent value from the system font.
            </summary>
            <param name="font">System font.</param>
            <returns>returns the ascent value of the system font.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.AlignSuperOrSubScript(Syncfusion.XlsIO.IFont)">
            <summary>
                Gets the shift value for superscript and subscript.
            </summary>
            <param name="font">XlsIO font.</param>
            <returns>returns ShiftY value.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetTextIndexAfterSpace(System.String,System.Int32)">
            <summary>
                Gets the text index after the space.
            </summary>
            <param name="text">The text.</param>
            <param name="startIndex">Start index.</param>
            <returns>returns the index after the space.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetSpaceIndexBeforeText(System.String,System.Int32)">
            <summary>
                Gets the space index before the space.
            </summary>
            <param name="text">The text.</param>
            <param name="startIndex">Start index.</param>
            <returns>returns the index before the space.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.IsNullOrWhiteSpace(System.String)">
            <summary>
                Indicates whether the text is null or whitespace.
            </summary>
            <param name="text">The text.</param>
            <returns>returns true if the text is null or whitespace otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetScaledHeight(System.String,System.Double)">
            <summary>
            To get the cell scaled height.
            </summary>
            <param name="fontName">The cell font name.</param>
            <param name="fontSize">The cell font size.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawRotatedText(System.Drawing.RectangleF,Syncfusion.XlsIO.Implementation.ExtendedFormatImpl,Syncfusion.XlsIO.IRange,System.String,Syncfusion.Pdf.Graphics.PdfGraphics,Syncfusion.Pdf.Graphics.PdfFont,Syncfusion.Pdf.Graphics.PdfBrush,Syncfusion.Pdf.Graphics.PdfStringFormat,System.Drawing.SizeF,System.Single,System.Drawing.SizeF)">
            <summary>
                Draws the rotated text.
            </summary>
            <param name="adjacentRect">The adjacent cell rect.</param>
            <param name="extendedFormatImpl">The extended format impl of the cell.</param>
            <param name="cell">The cell range.</param>
            <param name="value">The cell display text.</param>
            <param name="graphics">The pdf page graphics.</param>
            <param name="nativeFont">The native font.</param>
            <param name="brush">The pdf brush.</param>
            <param name="format">The pdf string format.</param>
            <param name="firstCharWidth">First char width of the display text .</param>
            <param name="totalWidth">The total width of the display text.</param>
            <param name="lastCharSize">Last char size of the display text .</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.UpdatePdfAlignment(Syncfusion.Pdf.Graphics.PdfStringFormat,System.Int32)">
            <summary>
                Aligns the rotated text based on pdf string format.
            </summary>
            <param name="format">Pdf string format.</param>
            <param name="rotationAngle">Rotation angle.</param>
            <returns>returns Pdf string format.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawBorders(Syncfusion.XlsIO.IBorders,System.Drawing.RectangleF,Syncfusion.Pdf.Graphics.PdfGraphics,Syncfusion.XlsIO.IRange)">
            <summary>
                Draws the borders.
            </summary>
            <param name="borders">The border collections of the cell.</param>
            <param name="rect">The rectangle of the cell.</param>
            <param name="graphics">The pdf page graphics.</param>
            <param name="cell">The cell range.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawBordersAsMSExcel(Syncfusion.XlsIO.IBorders,System.Drawing.RectangleF,Syncfusion.Pdf.Graphics.PdfGraphics,Syncfusion.XlsIO.IRange)">
            <summary>
                Draws the borders as MS Excel.
            </summary>
            <param name="borders">The border collections of the cell.</param>
            <param name="rect">The rectangle of the cell.</param>
            <param name="graphics">The pdf page graphics.</param>
            <param name="cell">The cell range.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.SortBorderLineStyle">
            <summary>
                Sort border line style.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.FillBorderLineStyle(Syncfusion.XlsIO.IBorders)">
            <summary>
                Fill border line style.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.BorderColorContrast(Syncfusion.XlsIO.IBorders,Syncfusion.XlsIO.ExcelBordersIndex)">
            <summary>
                Calculate the color contrast of the cell borders.
            </summary>
            <param name="borders">The border collections of the cell.</param>
            <param name="index">Border index.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.SortDictionaryByValue">
            <summary>
                Sort the dictionary by its values.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawAllBorders(Syncfusion.XlsIO.IBorders,Syncfusion.XlsIO.IBorder,System.Drawing.RectangleF,Syncfusion.Pdf.Graphics.PdfGraphics,Syncfusion.XlsIO.IRange,System.Drawing.Color,Syncfusion.XlsIO.ExcelBordersIndex,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,Syncfusion.XlsIO.ExcelBordersIndex)">
            <summary>
                Draw all border lines.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawSingleBorder(Syncfusion.XlsIO.IBorders,Syncfusion.XlsIO.IBorder,System.Single,System.Single,System.Single,System.Single,Syncfusion.Pdf.Graphics.PdfGraphics,Syncfusion.XlsIO.IRange,System.Drawing.Color,Syncfusion.XlsIO.ExcelBordersIndex,System.Boolean,Syncfusion.XlsIO.ExcelBordersIndex)">
            <summary>
                Draw single border.
            </summary>
            <param name="borders">The borders collection of the cell.</param>
            <param name="border">The cell Excel border indez.</param>
            <param name="x1">The x1 point of the border line.</param>
            <param name="y1">The y1 point of the border line.</param>
            <param name="x2">The x2 point of the border line.</param>
            <param name="y2">The y2 point of the border line.</param>
            <param name="graphics">The pdf page graphics.</param>
            <param name="cell">The cell range.</param>
            <param name="borderColor">Color of the cell border.</param>
            <param name="index">border index.</param>
            <param name="isFirstBorder">check is this is first border.</param>
            <param name="fillEdge">Border index to fill edge.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckCFBorder(Syncfusion.XlsIO.ExcelBordersIndex,Syncfusion.XlsIO.IRange,System.Boolean)">
            <summary>
                Checks conditional formats and updates if border is to be drawn
            </summary>
            <param name="index">Border index of the cell</param>
            <param name="cell">Current cell being manipulated</param>
            <param name="canDrawBorder">Boolean value indicating if teh specified border index can be drawn</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawBorder(Syncfusion.XlsIO.IBorders,Syncfusion.XlsIO.IBorder,System.Single,System.Single,System.Single,System.Single,Syncfusion.Pdf.Graphics.PdfGraphics,Syncfusion.XlsIO.IRange,System.Drawing.Color,Syncfusion.XlsIO.ExcelBordersIndex)">
            <summary>
                Draws the border.
            </summary>
            <param name="borders">The borders collection of the cell.</param>
            <param name="border">The cell Excel border indez.</param>
            <param name="x1">The x1 point of the border line.</param>
            <param name="y1">The y1 point of the border line.</param>
            <param name="x2">The x2 point of the border line.</param>
            <param name="y2">The y2 point of the border line.</param>
            <param name="graphics">The pdf page graphics.</param>
            <param name="cell">The cell range.</param>
            <param name="borderColor">Color of the cell border.</param>
            <param name="index">Border Index of the cell</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetLeftCell(Syncfusion.XlsIO.Implementation.RangeImpl)">
            <summary>
            Gets left adjecent cell.
            </summary>
            <returns>Range</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetRightCell(Syncfusion.XlsIO.Implementation.RangeImpl)">
            <summary>
            Gets rigth adjecent cell.
            </summary>
            <returns>Range</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetTopCell(Syncfusion.XlsIO.Implementation.RangeImpl)">
            <summary>
            Gets top adjecent cell.
            </summary>
            <returns>Range</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetBottomCell(Syncfusion.XlsIO.Implementation.RangeImpl)">
            <summary>
            Gets bottom adjecent cell.
            </summary>
            <returns>Range</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetCell(System.Int32,System.Int32,Syncfusion.XlsIO.Implementation.RangeImpl)">
            <summary>
            Gets relative cell.
            </summary>
            <param name="rowDelta">Row</param>
            <param name="colDelta">Column</param>
            <param name="range">Range</param>
            <returns>Range</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawDoubleBorder(Syncfusion.XlsIO.IBorders,Syncfusion.XlsIO.IBorder,System.Single,System.Single,System.Single,System.Single,Syncfusion.Pdf.Graphics.PdfGraphics,Syncfusion.XlsIO.IRange,System.Drawing.Color)">
            <summary>
                Draws the double border.
            </summary>
            <param name="borders">The borders collection of the cell.</param>
            <param name="border">The Excel cell border Index.</param>
            <param name="x1">The x1 point of the border line.</param>
            <param name="y1">The y1 point of the border line.</param>
            <param name="x2">The x2 point of the border line.</param>
            <param name="y2">The y2 point of the border line.</param>
            <param name="graphics">The pdf page graphics.</param>
            <param name="cell">The cell range.</param>
            <param name="borderColor">Color of the cell border.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawOuterBorderLine(Syncfusion.Pdf.Graphics.PdfGraphics,Syncfusion.Pdf.Graphics.PdfPen,Syncfusion.XlsIO.ExcelBordersIndex,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,Syncfusion.XlsIO.IRange)">
            <summary>
                Draws the outer line.
            </summary>
            <param name="graphics">The pdf page graphics.</param>
            <param name="pen">The pdf pen to draw the border.</param>
            <param name="borderIndex">Index of the border .</param>
            <param name="x1">The x1 point of the border line.</param>
            <param name="y1">The y1 point of the border line.</param>
            <param name="x2">The x2 point of the border line.</param>
            <param name="y2">The y2 point of the border line.</param>
            <param name="deltaX">The delta X.</param>
            <param name="deltaY">The delta Y.</param>
            <param name="cell">The cell range.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawInnerBorderLine(Syncfusion.Pdf.Graphics.PdfGraphics,Syncfusion.Pdf.Graphics.PdfPen,Syncfusion.XlsIO.IBorders,Syncfusion.XlsIO.ExcelBordersIndex,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,Syncfusion.XlsIO.IRange)">
            <summary>
                Draws the inner line.
            </summary>
            <param name="graphics">The pdf page graphics.</param>
            <param name="pen">The pdf pen to draw the border.</param>
            <param name="borders">The borders collection of the cell.</param>
            <param name="borderIndex">Index of the border .</param>
            <param name="x1">The x1 point of the border line.</param>
            <param name="y1">The y1 point of the border line.</param>
            <param name="x2">The x2 point of the border line.</param>
            <param name="y2">The y2 point of the border line.</param>
            <param name="deltaX">The delta X.</param>
            <param name="deltaY">The delta Y.</param>
            <param name="cell">The cell range.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawOrdinaryBorder(Syncfusion.XlsIO.IBorder,System.Single,System.Single,System.Single,System.Single,Syncfusion.Pdf.Graphics.PdfGraphics,System.Drawing.Color,Syncfusion.XlsIO.ExcelBordersIndex)">
            <summary>
                Draws the ordinary border.
            </summary>
            <param name="border">The Excel border index.</param>
            <param name="x1">The x1 point of the border line.</param>
            <param name="y1">The y1 point of the border line.</param>
            <param name="x2">The x2 point of the border line.</param>
            <param name="y2">The y2 point of the border line.</param>
            <param name="graphics">The pdf page graphics.</param>
            <param name="borderColor">Color of the border.</param>
            <param name="index">Border index of the cell</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawImages(Syncfusion.XlsIO.Implementation.WorksheetImpl)">
            <summary>
                Draws the images.
            </summary>
            <param name="sheet">The sheet.</param>
            <returns>Return the Pdf document with the image.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawImage(Syncfusion.XlsIO.IShape,System.Drawing.Image,Syncfusion.Pdf.Graphics.PdfGraphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
                Draws all necessary images.
            </summary>
            <param name="shape">Shape to draw as image.</param>
            <param name="image">Image to draw in pdf page.</param>
            <param name="graphics">PdfGraphics to draw cells at.</param>
            <param name="firstRow">One-based index of the first row to convert.</param>
            <param name="firstColumn">One-based index of the first column to convert.</param>
            <param name="lastRow">One-based index of the last row to convert.</param>
            <param name="lastColumn">One-based index of the last column to convert.</param>
            <param name="startX">The x value.</param>
            <param name="startY">The y value.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.EmuToPoint(System.Int32)">
            <summary>
                Convert EMU to Point.
            </summary>
            <param name="emu">EMU value.</param>
            <returns>Point value.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.Rotate(Syncfusion.Pdf.Graphics.PdfGraphics,Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl,System.Drawing.RectangleF)">
            <summary>
                Rotate Shape.
            </summary>
            <param name="graphics">Pdf page graphics.</param>
            <param name="shapeImpl">Shape.</param>
            <param name="pictureRect">Shape bounds.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetTransformationMatrix(System.Drawing.RectangleF,System.Single)">
            <summary>
                Prepares a matrix to PDF.
            </summary>
            <param name="bounds">Render bounds.</param>
            <param name="angle">Rotation Angle.</param>
            <returns>
                A properly prepared PdfTransformationMatrix class instance.
            </returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.SetShapeHyperlink(Syncfusion.XlsIO.Implementation.Shapes.ShapeImpl,System.Drawing.RectangleF)">
            <summary>
                Set hyperlink to shape
            </summary>
            <param name="shape">The shape.</param>
            <param name="bounds">Shape bounds.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DrawChart(Syncfusion.XlsIO.Implementation.Shapes.ChartShapeImpl,Syncfusion.Pdf.Graphics.PdfGraphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
                It's draw the worksheet chart's to the pdf
            </summary>
            <param name="chart">It's represent the chartshape</param>
            <param name="graphics">Pdf Graphics</param>
            <param name="firstRow">First row</param>
            <param name="firstColumn">First Column</param>
            <param name="lastRow">Last row of chart shape</param>
            <param name="lastColumn">Last column of chart shape</param>
            <param name="startX">Starting point of chartshape-X Point</param>
            <param name="startY">starting point of chartshape - Y point</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CropImage(System.Drawing.Image,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
                Crops the image with the specified offset.
            </summary>
            <param name="cropableImage">Source image to crop.</param>
            <param name="leftOffset">Left offset to crop from.</param>
            <param name="topOffset">Top offset to crop from.</param>
            <param name="rightOffset">Right offset to crop.</param>
            <param name="bottomOffset">Bottom offset to crop.</param>
            <param name="isTransparent">Indicates whether the destination image is transparent.</param>
            <returns>Returns the cropped image for the offsets specified.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CropHFImage(System.Drawing.Image,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
                Crops the image with the specified offset.
            </summary>
            <param name="cropableImage">Source image to crop.</param>
            <param name="leftOffset">Left offset to crop from.</param>
            <param name="topOffset">Top offset to crop from.</param>
            <param name="rightOffset">Right offset to crop.</param>
            <param name="bottomOffset">Bottom offset to crop.</param>
            <param name="isTransparent">Indicates whether the destination image is transparent.</param>
            <returns>Returns the cropped image for the offsets specified.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetHFScaledWidthHeight(System.String)">
            <summary>
                returns float array which contains preserved height and width.
            </summary>
            <param name="preservedStyles">preserved style for header and footer</param>
            <returns> height and width of header/footer image</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetValueFromStyle(System.String)">
            <summary>
                returns float value from preserved style.
            </summary>
            <param name="style">Preserved style for width and height</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetHeaderFooterImages(Syncfusion.XlsIO.Interfaces.IPageSetupBase,System.Single@,System.Single@,Syncfusion.Pdf.Graphics.PdfTemplate,System.String,System.String,Syncfusion.Pdf.PdfSection)">
            <summary>
                Draws the header and footer images.
            </summary>
            <param name="pageSetupBase">The worksheet object.</param>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="pageTemplate">The pdf page template.</param>
            <param name="align">The alignment of the header and footer text.</param>
            <param name="name">The name represents the header part or footer part.</param>
            <param name="pdfSection">The PDF section.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CalculateZoomValue(Syncfusion.Pdf.PdfSection,System.Int32)">
            <summary>
            </summary>
            <param name="pdfSection"></param>
            <param name="zoomValue"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.InitializePdfPage">
            <summary>
                Initializes the PDF page.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.IntializeHeaderFooter(Syncfusion.XlsIO.IWorksheet)">
            <summary>
                Intializes the header and footer.
            </summary>
            <param name="sheet">The sheet.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.IntializeHeaderFooter(Syncfusion.XlsIO.IChart)">
            <summary>
                Initialize the default header and footer for chartsheet
            </summary>
            <param name="chart"></param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.IntializeFonts">
            <summary>
                Intializes the fonts.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.IntializeRemovableCharacters">
            <summary>
                Intializes the Remoable Characters
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.InitializeImageEncoder">
            <summary>
                Intializes the Image Encoders
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetAdjacentCells(Syncfusion.XlsIO.IRange,System.Drawing.RectangleF,System.Int32,Syncfusion.XlsIO.Implementation.MigrantRangeImpl,System.Single,System.Boolean@)">
            <summary>
                Gets the adjacent cell size.
            </summary>
            <param name="cell">The cell rnage.</param>
            <param name="rect">The cell rectangle.</param>
            <param name="lastColumnChanged">Denotes whether the last column is changed or not</param>
            <param name="firstColumn">The first column of the range.</param>
            <param name="cell2">The adjacent cell.</param>
            <param name="originalWidth">Width of the sheet.</param>
            <returns>The Adjacent cell RectangleF</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetBackgroundHeightCoordinates(System.Single,System.Single,System.Single,System.Single,System.Collections.Generic.Dictionary{System.Drawing.PointF,System.Drawing.SizeF},Syncfusion.Pdf.PdfPage)">
            <summary>
                Gets the vertical coordinates of image background.
            </summary>
            <param name="startX">The X coordinate.</param>
            <param name="startY">The Y coordinate.</param>
            <param name="imageWidth">Width of the image.</param>
            <param name="imageHeight">Height of the image.</param>
            <param name="imageCoordinates">The image coordinate.</param>
            <param name="pdfPage">The PDF page.</param>
            <returns>
                returns the vertical coordinates of image background.
            </returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetBackgroundWidthCoordinates(System.Single,System.Single,System.Single,System.Single,System.Collections.Generic.Dictionary{System.Drawing.PointF,System.Drawing.SizeF},Syncfusion.Pdf.PdfPage)">
            <summary>
                Gets the horizontal coordinates of image background.
            </summary>
            <param name="startX">The X coordinate.</param>
            <param name="startY">The Y coordinate.</param>
            <param name="imageWidth">Width of the image.</param>
            <param name="imageHeight">Height of the image.</param>
            <param name="imageCoordinates">The image coordinate.</param>
            <param name="pdfPage">The PDF page.</param>
            <returns>
                Returns the horizontal coordinates of background image.
            </returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetBorderWidth(Syncfusion.XlsIO.IBorder)">
            <summary>
                Gets the width of the border.
            </summary>
            <param name="border">The border.</param>
            <returns>The borderWidth of the Excel border Index.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetBottomText(System.String,System.Int32)">
            <summary>
                Gets the bottom text.
            </summary>
            <param name="value">The value.</param>
            <param name="rotationAngle">The rotation angle.</param>
            <returns>The text to be displayed in the rotated Text.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetBrush(Syncfusion.XlsIO.Interfaces.IInternalExtendedFormat)">
            <summary>
                Gets the brush.
            </summary>
            <param name="internalExtendedFormat">The internal extended format of the cell.</param>
            <returns>The PdfBrush object.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetCounterClockwiseRotation(System.Int32)">
            <summary>
                Gets the counter clockwise rotation.
            </summary>
            <param name="rotationAngle">The rotation angle.</param>
            <returns>The rotation angle as an MS Excel representation.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetDashStyle(Syncfusion.XlsIO.IBorder)">
            <summary>
                Gets the dash style.
            </summary>
            <param name="border">The border.</param>
            <returns>The PdfDashStyle value.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.SplitText(Syncfusion.Pdf.Graphics.PdfFont,Syncfusion.Pdf.Graphics.PdfStringFormat,System.Drawing.RectangleF,System.Single,System.Collections.ArrayList,System.Int32,System.Collections.ArrayList,System.String@)">
            <summary>
                Split the text.
            </summary>
            <param name="font">The pdf font object.</param>
            <param name="format">The pdf string format for the Excel cell display text.</param>
            <param name="cellRect">The cell rectangle.</param>
            <param name="shift">The shift value.</param>
            <param name="arrayValues">The text characters in array.</param>
            <param name="i">The character index.</param>
            <param name="splitArray">The splitted character in array.</param>
            <param name="splitValue">The splitted text.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetKeyowrds(System.String,System.Collections.ArrayList,System.Boolean)">
            <summary>
                Gets the keyowrds.
            </summary>
            <param name="value">The value.</param>
            <param name="arrayValues">The array values.</param>
            <param name="isRTL">if set to <c>true</c> [is RTL].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.UpdateSplitText(System.Collections.Generic.Dictionary{System.Int32,System.String},System.String@,System.String@,System.String)">
            <summary>
                Updates the split text.
            </summary>
            <param name="keywords">The keywords.</param>
            <param name="splitValue">The split value.</param>
            <param name="text">The text.</param>
            <param name="sourceString">The source string.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckIndex(System.Int32,System.String,System.String,System.String)">
            <summary>
                Checks the index.
            </summary>
            <param name="index">The index.</param>
            <param name="text">The text.</param>
            <param name="splitValue">The split value.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetDisplayWrapTextList(Syncfusion.Pdf.Graphics.PdfFont,Syncfusion.Pdf.Graphics.PdfStringFormat,System.String,System.Drawing.RectangleF)">
            <summary>
                Gets the display wrap text list.
            </summary>
            <param name="pdfFont">The PDF font.</param>
            <param name="pdfFormat">The PDF string format.</param>
            <param name="cellTextValue">The cell text value.</param>
            <param name="cellRect">The cell rectangle.</param>
            <returns>The list of wrapped text.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetDisplayWrapTextList(Syncfusion.Pdf.Graphics.PdfFont,Syncfusion.Pdf.Graphics.PdfStringFormat,System.String,System.Drawing.RectangleF,System.Collections.Generic.List{System.String})">
            <summary>
                Gets the display wrap text list.
            </summary>
            <param name="pdfFont">The PDF font.</param>
            <param name="pdfFormat">The PDF string format.</param>
            <param name="cellTextValue">The cell text value.</param>
            <param name="cellRect">The cell rectangle.</param>
            <param name="splitTextList">The split text list.</param>
            <returns>The List of wrapped text.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetFont(Syncfusion.XlsIO.IFont,System.String,System.Int32)">
            <summary>
                Gets the font.
            </summary>
            <param name="font">The font object of the cell.</param>
            <param name="fontName">Name of the font.</param>
            <param name="size">The size of the font.</param>
            <returns>Font object</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetFont(System.String,System.Int32,System.Boolean,System.Drawing.Font)">
            <summary>
                Gets the font.
            </summary>
            <param name="name">The name of the font.</param>
            <param name="size">The size of the font.</param>
            <param name="fontSettings">The settings of the font</param>
            <param name="hasUnderline">Denotes whether the font has underline or not</param>
            <returns>Font object</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetFont(System.String,System.Int32)">
            <summary>
                Gets the font.
            </summary>
            <param name="name">The name of the font.</param>
            <param name="size">The size of the font.</param>
            <returns>Font object</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetHeaderFooterInformation(Syncfusion.ExcelToPdfConverter.HeaderFooterSection,System.Collections.Generic.List{Syncfusion.ExcelToPdfConverter.HeaderFooter},Syncfusion.Pdf.PdfSection,Syncfusion.XlsIO.Interfaces.IPageSetupBase,System.Collections.Generic.Dictionary{System.String,Syncfusion.ExcelToPdfConverter.HeaderFooterFontColorSettings},Syncfusion.Pdf.Graphics.PdfTemplate,System.Single,System.Single,System.String,System.String,System.String)">
            <summary>
                Gets the header footer information.
            </summary>
            <param name="headerFooterCollection">The header footer collection.</param>
            <param name="hfsection">The header footer section </param>
            <param name="pdfSection">The PDF section.</param>
            <param name="fontColorSettings">The font color settings.</param>
            <param name="pdfTemplate">The PDF template.</param>
            <param name="width">The width of the header or footer.</param>
            <param name="height">The height of the header or footer.</param>
            <param name="align">The alignment of the header and footer text.</param>
            <param name="name">The name represents either the header or footer.</param>
            <param name="pageNumber">The page number of the pdf document.</param>
            <param name="pageSetupBase">The page setup for pdf document</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetHeaderInformation(Syncfusion.XlsIO.Interfaces.IPageSetupBase,System.Collections.Generic.Dictionary{System.String,Syncfusion.ExcelToPdfConverter.HeaderFooterFontColorSettings},System.String,System.String,System.Single@,System.Single@,System.Single)">
            <summary>
                Gets the header information.
            </summary>
            <param name="fontColorSettings">The font color settings.</param>
            <param name="align">The alignment of the header and footer Text.</param>
            <param name="name">The name represets either the header part or the footer part.</param>
            <param name="height">The height of the Header or Footer.</param>
            <param name="width">The width of the Header or Footer.</param>
            <param name="pageWidth">Width of the page.</param>
            <param name="pageSetupBase">The page setup for pdf document</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetHeaderFooterOptions(System.Collections.Generic.Dictionary{System.String,System.String},Syncfusion.Pdf.PdfSection,Syncfusion.XlsIO.Interfaces.IPageSetupBase,System.Single,System.String,System.String)">
            <summary>
                Gets the header footer options.
            </summary>
            <param name="pageSetups">The dictionart collection of the header and footer page setups.</param>
            <param name="pdfSection">The PDF section.</param>
            <param name="pageSetupBase">The worksheet object.</param>
            <param name="templateWidth">Width of the template.</param>
            <param name="name">The name represents either the header part or the footer part.</param>
            <param name="sheetOrchartname">It's Represent the sheet or chart name</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.FormatHeaderFooterString(System.String)">
            <summary>
                Modifies the specified string to pass String.Format().
            </summary>
            <param name="headerFooterString">The header or footer string to be modified to escape '{' or '}'.</param>
            <returns>Modified header/footer string.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetHeaderFooterValues(System.String[],System.Int32,Syncfusion.ExcelToPdfConverter.HeaderFooterFontColorSettings,System.Boolean)">
            <summary>
                To get the headerfooter font color settings
            </summary>
            <param name="headerFooterValues">The splitted header footer values.</param>
            <param name="count">Header footer values count.</param>
            <param name="hfFontColorSettings">The color settings for the header footer.</param>
            <param name="isControlRemoved">Specifies a boolean value indicating if ampersand (&amp;) is removed in header footer string.</param>
            <returns>The color settings loaded from header footer string.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetHeaderFooterColor(System.String)">
            <summary>
                Gets the color of the header footer text color.
            </summary>
            <param name="colorValue">The color value.</param>
            <returns>The HeaderFooter Text color.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckDigit(System.String)">
            <summary>
                Checks whether the string contains the digit or not.
            </summary>
            <param name="values">string values</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckFontValues(System.String)">
            <summary>
                Checks whether the string contains the digit or not.
            </summary>
            <param name="fontValue">font value</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetHorizontalAlignmentFromExtendedFormat(Syncfusion.XlsIO.IExtendedFormat,Syncfusion.XlsIO.IRange)">
            <summary>
                Gets the horizontal alignment from extended format.
            </summary>
            <param name="extendedFormatStyle">The extended format style.</param>
            <param name="cell">The cell range.</param>
            <returns>The PdfTextAlignment value.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetHorizontalLeft(System.Int32,System.Single,System.Drawing.RectangleF,Syncfusion.XlsIO.ExcelVAlign,System.Drawing.SizeF,Syncfusion.Pdf.Graphics.PdfFont,Syncfusion.Pdf.Graphics.PdfStringFormat)">
            <summary>
                Gets the horizontal left.
            </summary>
            <param name="rotationAngle">The rotation angle of the cell display text.</param>
            <param name="stringLength">Length of the string.</param>
            <param name="rect">The cell rectangle.</param>
            <param name="verticalAlign">The vertical alignment of the cell text.</param>
            <param name="firstCharSize">First char size of the display text .</param>
            <param name="nativeFont">The native font of the cell text.</param>
            <param name="format">The pdf string format.</param>
            <returns>The vector for the text rotation.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetHorizontalRight(System.Int32,System.Single,System.Drawing.RectangleF,Syncfusion.XlsIO.ExcelVAlign,System.Drawing.SizeF,System.Drawing.SizeF,Syncfusion.Pdf.Graphics.PdfFont,Syncfusion.Pdf.Graphics.PdfStringFormat)">
            <summary>
                Gets the horizontal right.
            </summary>
            <param name="rotationAngle">The rotation angle of the cell display text.</param>
            <param name="stringLength">Length of the string.</param>
            <param name="rect">The cell rectangle.</param>
            <param name="verticalAlign">The vertical alignment of the cell text.</param>
            <param name="lastCharSize">Last char size of the display text.</param>
            <param name="firstCharSize">First char size of the display text .</param>
            <param name="nativeFont">The native font of the cell text.</param>
            <param name="format">The pdf string format.</param>
            <returns>The vector for the text rotation.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetHorizontalCenter(System.Int32,System.Single,System.Drawing.RectangleF,Syncfusion.XlsIO.ExcelVAlign,System.Drawing.SizeF,System.Drawing.SizeF,Syncfusion.Pdf.Graphics.PdfFont,Syncfusion.Pdf.Graphics.PdfStringFormat)">
            <summary>
                Gets the horizontal center.
            </summary>
            <param name="rotationAngle">The rotation angle of the cell display text.</param>
            <param name="stringLength">Length of the string.</param>
            <param name="rect">The cell rectangle.</param>
            <param name="verticalAlign">The vertical alignment of the cell text.</param>
            <param name="lastCharSize">Last char size of the display text.</param>
            <param name="firstCharSize">First char size of the display text .</param>
            <param name="nativeFont">The native font of the cell text.</param>
            <param name="format">The pdf string format.</param>
            <returns>The vector for the text rotation.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetMaxHeight(System.Collections.Generic.List{Syncfusion.ExcelToPdfConverter.HeaderFooterSection})">
            <summary>
                Gets the Max height of the HeaderFooterSection.
            </summary>
            <param name="sections">The sections.</param>
            <returns>The Maximum value.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetMaxWidth(System.Collections.Generic.List{System.Drawing.SizeF})">
            <summary>
                Gets the width of the max.
            </summary>
            <param name="sizes">The sizes.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetMaxValue(System.Collections.Generic.List{System.Single})">
            <summary>
                Gets the max value.
            </summary>
            <param name="maxList">The max list.</param>
            <returns>The maximum value</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetMaxValue(System.Collections.Generic.List{System.Int32})">
            <summary>
                Gets the max value.
            </summary>
            <param name="maxList">The max list.</param>
            <returns>The maximum value.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetMergedRectangle(Syncfusion.XlsIO.Implementation.WorksheetImpl,Syncfusion.XlsIO.Parser.Biff_Records.MergeCellsRecord.MergedRegion,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
                Gets the merged rectangle.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="mergedRegion">The merged region.</param>
            <param name="firstRow">The first row.</param>
            <param name="firstColumn">The first column.</param>
            <param name="lastRow">The last row.</param>
            <param name="lastColumn">The last column.</param>
            <param name="startX">The start x value.</param>
            <param name="startY">The start y value.</param>
            <returns>The Merge Rectangle Coordinates.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetResizedImage(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
                Gets the resized image.
            </summary>
            <param name="originalImage">The original image.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>The resized Image.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetAdjacentRange(Syncfusion.XlsIO.IRange)">
            <summary>
                Gets the adjacent range.
            </summary>
            <param name="cell">The cell.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetScaledPage(System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
                Gets the scaled page.
            </summary>
            <param name="originalWidth">Width of the original.</param>
            <param name="originalHeight">Height of the original.</param>
            <param name="maxWidth">Width of the max.</param>
            <param name="maxHeight">Height of the max.</param>
            <param name="fitPage">if set to <c>true</c> [fit page].</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetScaledHFPage(System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
                Gets the scaled page.
            </summary>
            <param name="originalWidth">Width of the original.</param>
            <param name="originalHeight">Height of the original.</param>
            <param name="maxWidth">Width of the max.</param>
            <param name="maxHeight">Height of the max.</param>
            <param name="fitPage">if set to <c>true</c> [fit page].</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetScaledPicture(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
                Gets the scaled picture.
            </summary>
            <param name="originalImage">The original image.</param>
            <param name="maxWidth">Width of the max.</param>
            <param name="maxHeight">Height of the max.</param>
            <returns>The scaled Image</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetScaledPictureWidthHeight(System.Drawing.Image,System.Single@,System.Single@)">
            <summary>
                Gets the scaled picture width height.
            </summary>
            <param name="originalImage">The original image.</param>
            <param name="maxWidth">Width of the max.</param>
            <param name="maxHeight">Height of the max.</param>
            <returns>The scaled Image</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetSortedWidth(System.String,System.Collections.Generic.Dictionary{System.String,Syncfusion.Pdf.Graphics.PdfTemplate},System.Single)">
            <summary>
                Gets the width of the sorted.
            </summary>
            <param name="align">The align.</param>
            <param name="temps">The temps.</param>
            <param name="dividedWidth">Width of the divided.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetSplitted(System.String)">
            <summary>
                Gets the splitted header and footer text.
            </summary>
            <param name="pageSetup">The page setup.</param>
            <returns>The Array of splitted strings</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.ReplaceDollar(System.String[])">
            <summary>
                Replaces ascii character in the string with Dollar ($) symbol.
            </summary>
            <param name="arr">Array of header/footer strings.</param>
            <returns>Modified array of header/footer strings.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetStartEndBorderIndex(Syncfusion.XlsIO.ExcelBordersIndex,Syncfusion.XlsIO.ExcelBordersIndex@,Syncfusion.XlsIO.ExcelBordersIndex@)">
            <summary>
                Gets the start index of the end border.
            </summary>
            <param name="borderIndex">Index of the Excel border.</param>
            <param name="start">The start Excelborder index.</param>
            <param name="end">The end Excel border index.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetTemplateHeight(Syncfusion.XlsIO.Interfaces.IPageSetupBase,System.String,System.String,System.Int32@,System.Int32@)">
            <summary>
                Gets the height of the template.
            </summary>
            <param name="pageSetup">The page setup object of the sheet.</param>
            <param name="name">The name represents either the header part or the footer part.</param>
            <param name="align">The alignent of the header and footer text.</param>
            <param name="imageHeight">Height of the image.</param>
            <param name="imageWidth">Width of the image.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetImageWidthHeightInPoint(System.Drawing.Image,System.Int32@,System.Int32@)">
            <summary>
                Update the image width and height in points.
            </summary>
            <param name="image">The image.</param>
            <param name="imageHeight">Image height.</param>
            <param name="imageWidth">Image width.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetTextAlignmentFromShape(Syncfusion.XlsIO.ITextBoxShape)">
            <summary>
                Gets the text alignment from shape.
            </summary>
            <param name="shape">The shape.</param>
            <returns>The PdfTextAlignment value.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetVector(System.Int32,System.Single,System.Drawing.RectangleF,Syncfusion.XlsIO.ExcelHAlign,Syncfusion.XlsIO.ExcelVAlign,System.Drawing.SizeF,System.Drawing.SizeF,Syncfusion.Pdf.Graphics.PdfFont,Syncfusion.Pdf.Graphics.PdfStringFormat)">
            <summary>
                Gets the vector.
            </summary>
            <param name="rotationAngle">The rotation angle of the cell display text.</param>
            <param name="stringLength">Length of the string.</param>
            <param name="rect">The cell rectangle.</param>
            <param name="horizontalAlign">The horizontal alignment of the cell text.</param>
            <param name="verticalAlign">The vertical alignment of the cell text.</param>
            <param name="lastCharSize">Last char size of the display text.</param>
            <param name="firstCharSize">First char size of the display text .</param>
            <param name="nativeFont">The native font of the cell text.</param>
            <param name="format">The pdf string format.</param>
            <returns>The vector for the text rotation.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetVector(System.Int32,System.Single,System.Drawing.RectangleF,Syncfusion.XlsIO.Implementation.ExtendedFormatImpl,System.Drawing.SizeF,System.Drawing.SizeF,Syncfusion.Pdf.Graphics.PdfFont,Syncfusion.Pdf.Graphics.PdfStringFormat)">
            <summary>
                Gets the vector.
            </summary>
            <param name="rotationAngle">The rotation angle of the text within the cell.</param>
            <param name="width">The total width of the display text.</param>
            <param name="adjacentRect">The adjacent cell rect.</param>
            <param name="extendedFormatImpl">The extended format impl of the cell.</param>
            <param name="lastCharSize">Last char size of the display text. </param>
            <param name="firstCharSize">First char size of the display text .</param>
            <param name="nativeFont">The native font of the cell.</param>
            <param name="format">The pdf string format.</param>
            <returns>The vector for the text rotation</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetVerticalAlignmentFromExtendedFormat(Syncfusion.XlsIO.IExtendedFormat)">
            <summary>
                Gets the vertical alignment from extended format.
            </summary>
            <param name="style">The style.</param>
            <returns>The PdfVerticalAlignment value</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetVerticalAlignmentFromShape(Syncfusion.XlsIO.ITextBoxShape)">
            <summary>
                Gets the vertical alignment from shape.
            </summary>
            <param name="textBoxShape">The text box shape.</param>
            <returns>The pdfVerticalAlignment value</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.SetDocumentProperties">
            <summary>
                Sets the document properties.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.SetHyperLink(System.Drawing.RectangleF,Syncfusion.XlsIO.IRange)">
            <summary>
                Sets the hyper link.
            </summary>
            <param name="cellRect">The cell rectangle.</param>
            <param name="range">The range to which hyperlink is to be set</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.resize(System.Drawing.RectangleF)">
            <summary>
                To Resize the hyperlink position for fit in the pdf page.
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.GetActualUsedRange(Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,System.Boolean,System.Boolean)">
            <summary>
                Gets the actual used range.
            </summary>
            <param name="sheet">The sheet.</param>
            <returns>The IRange object</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.UpdateUsedRange(Syncfusion.XlsIO.Implementation.WorksheetImpl,Syncfusion.XlsIO.IRange)">
            <summary>
                Updates the used Range
            </summary>
            <param name="sheetImpl">The Worksheet</param>
            <param name="actualUsedRange">Actual used range of worksheet</param>
            <returns>Returns the updated used range</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.IsBlank(Syncfusion.XlsIO.IRange)">
            <summary>
                Check whether the given range is empty or not.
                Exclude hidden rows and columns.
            </summary>
            <param name="range">The range.</param>
            <returns>Returns True if the range is Blank otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.AddBookMark">
            <summary>
                Adds the book mark.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckRange(Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.IRange)">
            <summary>
                Checks the range.
            </summary>
            <param name="tableRange">The table range.</param>
            <param name="sheetRange">The sheet range.</param>
            <returns>True if the sheet range is within the table range else false will be returned.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckUnicode(System.String)">
            <summary>
                Checks the unicode.
            </summary>
            <param name="unicodeText">The unicode text.</param>
            <returns>
                True if the text is an unicode else false will returned.
            </returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckUnicodeWithoutPunctuation(System.String)">
            <summary>
                Checks whether the unicode characters are only punctuations
                8208,8286 are the starting and ending utf-8 value of punctuations
            </summary>
            <param name="unicodeText"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckMergedRegion(Syncfusion.XlsIO.IRange)">
            <summary>
                Determines whether [has merged region] [the specified i range].
            </summary>
            <param name="iRange">The i range.</param>
            <returns>
                <c>true</c> if [has merged region] [the specified i range]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckIfRTL(System.UInt16[])">
            <summary>
                Checks if array of flags contains at least on RTL symbol.
            </summary>
            <param name="characterCodes">Array of flags.</param>
            <returns>True if array of flags contains at least on RTL symbol, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CreatePen(Syncfusion.XlsIO.IBorder,System.Drawing.Color)">
            <summary>
                Creates the pen.
            </summary>
            <param name="border">The border.</param>
            <param name="borderColor">Color of the border.</param>
            <returns>The PdfPen object.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.DegreeToRadian(System.Double)">
            <summary>
                Degrees to radian.
            </summary>
            <param name="angle">The angle.</param>
            <returns>Radian value</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.NormalizeColor(System.Drawing.Color)">
            <summary>
                Normalizes the color.
            </summary>
            <param name="color">The color.</param>
            <returns>The Normailzed Color</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.RequiredWidth(System.Single,System.Single,System.Single)">
            <summary>
                The function used to identify the required width or height.
            </summary>
            <param name="excelSheetWidth">Width of the excel sheet.</param>
            <param name="shWidth">width of the sheet.</param>
            <param name="excelSheetHeight">Height of the excel sheet.</param>
            <returns>Returns the required height or width</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.UpdateBorderDelta(Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean,Syncfusion.XlsIO.IBorders,Syncfusion.XlsIO.ExcelBordersIndex,Syncfusion.XlsIO.ExcelBordersIndex,System.Boolean)">
            <summary>
                Updates the border delta.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="row">The row of the excel sheet.</param>
            <param name="column">The column of the excel sheet.</param>
            <param name="deltaX">The delta X.</param>
            <param name="deltaY">The delta Y.</param>
            <param name="deltaX1">The delta x1.</param>
            <param name="deltaY1">The delta y1.</param>
            <param name="isInvertCondition">if set to <c>true</c> [is invert condition].</param>
            <param name="borders">The borders collection of the cell.</param>
            <param name="start">The start Excel border index.</param>
            <param name="end">The end Excel border index.</param>
            <param name="isLineStart">if set to <c>true</c> [is line start].</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.UpdateRectangleCoordinates(System.Drawing.RectangleF,Syncfusion.XlsIO.IBorders)">
            <summary>
                Updates the rectangle coordinates.
            </summary>
            <param name="cellRect">The cell rectangle.</param>
            <param name="borders">The borders collection of the cell.</param>
            <returns>The updated Rectangle coordinates</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.UpdateShapeRange(Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange)">
            <summary>
                To update the used range for the shape
            </summary>
            <param name="sheet">Represents the worksheet</param>
            <param name="originalRange">Represents the actual range</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.UpdateChartsRange(Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange)">
            <summary>
                To update the used range for the chart shape
            </summary>
            <param name="sheetImpl"></param>
            <param name="originalRange"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.AddPDFHeaderFooter(Syncfusion.XlsIO.Interfaces.IPageSetupBase,Syncfusion.Pdf.PdfSection,System.Boolean,System.Boolean)">
            <summary>
                Draw the Pdf HeaderFooter
            </summary>
            <param name="PageSetup">The page setup for pdf document</param>
            <param name="PdfSection">Represent the pdf Section for drawing the HeaderOrFooter</param>
            <param name="IsHeader">Used to identify the Header or Footer</param>
            <param name="isChart">Used to identify the chart</param>
            <returns>Return the pdfpagetemplete element</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.AddHeaderFooterSection(Syncfusion.Pdf.PdfPageTemplateElement,Syncfusion.ExcelToPdfConverter.HeaderFooterSection)">
            <summary>
                Draw the Pdf Header Footer string
            </summary>
            <param name="pageTemplate">PdfPagetemplate-HeaderOrFooter</param>
            <param name="Section">HeaderOrFooter Section</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.SwitchFonts(System.String,System.Byte,System.String)">
            <summary>
                Modifies font name so as to render Unicode characters.
            </summary>
            <param name="testString">The sting in test for Unicode characters.</param>
            <param name="charSet">The Charset of the font.</param>
            <param name="fontName">The name of the font.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckForAmharic(System.String)">
            <summary>
                Checks for amharic characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string contain Amharic characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckForKhmer(System.String)">
            <summary>
                Checks for khmer characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string contain Khmer characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckForThai(System.String)">
            <summary>
                Checks for thai characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string contain Thai characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckForSinhala(System.String)">
            <summary>
                Checks for sinhala characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string contain Sinhala characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckForMyanmar(System.String)">
            <summary>
                Checks for myanmar characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string contain Myanmar characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckForTamil(System.String)">
            <summary>
                Checks for tamil characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string contain Tamil characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckForTelugu(System.String)">
            <summary>
                Checks for telugu characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string contain Telugu characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckForPunjabi(System.String)">
            <summary>
                Checks for punjabi characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string contain Punjabi characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckForMalayalam(System.String)">
            <summary>
                Checks for malayalam characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string contain Malayalam characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckForKanndada(System.String)">
            <summary>
                Checks for kannada characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string contain Kannada characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckForGujarati(System.String)">
            <summary>
                Checks for gujarati characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string contain Gujarati characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckForMarathi(System.String)">
            <summary>
                Checks for marathi characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string contain Marathi characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckForLatin(System.String)">
            <summary>
                Checks for Latin characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string does not contain Latin characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckForCJK(System.String)">
            <summary>
                Checks for CJK characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string contains CJK characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CheckForArabicOrHebrew(System.String)">
            <summary>
                Checks for Hebrew or Arabic characters in the Unicode string.
            </summary>
            <param name="unicodeText">Input Unicode string.</param>
            <returns>True if the Unicode string contains Arabic or Hebrew characters. False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.IsPixelFormatSupported(System.Drawing.Imaging.PixelFormat)">
            <summary>
                Checks whether the pixelFormat is supported or not.
            </summary>
            <param name="pixelFormat"></param>
            <returns>True for Supported pixelFormat.Otherwise False.</returns>
        </member>
        <member name="E:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CurrentProgressChanged">
            <summary>
                Occurs when current progress changed.
            </summary>
        </member>
        <member name="E:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.SheetBeforeDrawn">
            <summary>
                Occurs before the sheet is drawn.
            </summary>
        </member>
        <member name="E:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.SheetAfterDrawn">
            <summary>
                Occurs after the sheet is drawn.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.ChartToImageConverter">
            <summary>
                Represents the chart to image converter instance.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.IsPrintTitleRowPage">
            <summary>
                Gets a value indicating whether this instance is print title row page.
            </summary>
            <value>
                <c>true</c> if this instance is print title row page; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.IsPrintTitleColumnPage">
            <summary>
                Gets a value indicating whether this instance is print title column page.
            </summary>
            <value>
                <c>true</c> if this instance is print title column page; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.RowHeightGetter">
            <summary>
                Gets the row height getter.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.ColumnWidthGetter">
            <summary>
                Gets the column width getter.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.Pdf_UnitConverter">
            <summary>
                PDF Unit Converter.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.MergeMethod">
            <summary>
                Delegate for Merged cell rendering.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter.CellMethod">
            <summary>
                Delegate for background cell rendering.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.ExcelToPDFConverterException">
            <summary>
            Returns the <see cref="T:System.Exception"/> when trying to convert the Excel document to a PDF document.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPDFConverterException.DefaultMessage">
            <summary>
            Default message.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPDFConverterException.#ctor">
            <summary>
            Initializes a new instance of the class with an empty error message.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPDFConverterException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings">
            <summary>
                Represents the conversion Settings for Excel to  PDF Converter.
            </summary>
            <remarks>
                Excel To Pdf Conversion is not supported in WinRT, Windows Phone, Universal, Portable and Silverlight platforms.
            </remarks>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings._HFOption">
            <summary>
                Represents the Header footer option of the output document.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings._displayGridLines">
            <summary>
                Represents the display style of the gridlines in the output document.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings._embedFonts">
            <summary>
                Indicates whether to embed the fonts to the output pdf document.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings._enableRTL">
            <summary>
                Indicates whether the output pdf sheet should be rendered from right to left.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings._exportBookmarks">
            <summary>
                Indicates whether to export the bookmarks to the output pdf document.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings._exportDocumentProperties">
            <summary>
                Indicates whether to export the document properties to the output pdf document.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings._exportQulaityImage">
            <summary>
                TRUE - Use TIFF Quality Image while converting Excel to PDF document,otherwise FALSE
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings._layoutOptions">
            <summary>
                Represents the layout mode of the output sheet.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings._needBlankSheet">
            <summary>
                Represents the Need Blank Option
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings._convertBlankPage">
            <summary>
                Indicates whether to export the blank PDF page in the output pdf document.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings._pdfDocument">
            <summary>
                Represents the Pdf document object.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings._throwWhenExcelFileIsEmpty">
            <summary>
                TRUE - Throw exception when excel file is empty,otherwise FALSE
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings.GetExcelSheetSize(Syncfusion.XlsIO.ExcelPaperSize)">
            <summary>
                Gets the size of the excel sheet.
            </summary>
            <param name="paperSize">Size of the paper.</param>
            <returns>The Size of the output pdf page.</returns>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings.TemplateDocument">
            <summary>
                Gets or sets the PDF template document.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings.DisplayGridLines">
            <summary>
                Gets or sets the style of grid lines.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings.EmbedFonts">
            <summary>
                True if the font is an embedded font. The default value is False.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings.ExportBookmarks">
            <summary>
                Gets or sets a value indicating whether to export bookmarks. The default value is True.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings.ExportDocumentProperties">
            <summary>
                Gets or sets a value indicating whether to export document properties. The default value is True.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings.HeaderFooterOption">
            <summary>
                Gets the header and footer option.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings.LayoutOptions">
            <summary>
                Gets or sets the layout mode.
            </summary>
            <value>The layout mode.</value>
            <example>
                The following code snippet illustrates how to set the lay out options.
                <code>
            // Initializes the excel to PDF converter setting class.
            ExcelToPdfConverterSettings setting = new ExcelToPdfConverterSettings();
            // Set fit all columns on one page layout options.
            setting.LayoutOptions = LayoutOptions.FitAllColumnsOnOnePage;
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings.EnableRTL">
            <summary>
                Gets or sets a value indicating whether [enable RTL].
            </summary>
            <value><c>true</c> if [enable RTL]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings.ThrowWhenExcelFileIsEmpty">
            <summary>
                Gets or sets a value indicating whether to throw exception when empty Excel document is being converted to a PDF
                document.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings.ExportQualityImage">
            <summary>
                Gets or sets a value indicating whether to export quality image. The default value is False.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings.IsConvertBlankSheet">
            <summary>
                Gets or sets a value indicating whether to convert blank sheet. The default value is true.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings.IsConvertBlankPage">
            <summary>
                Gets or sets a value indicating whether to convert blank PDF page. The default value is true.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.HeaderFooter">
            <summary>
                The class has the functions and properties to manipulate the Header and footers of the output page.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HeaderFooter.headerFooterName">
            <summary>
                Indicates the name of the HeaderFooter.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HeaderFooter.headerFooterSections">
            <summary>
                Indicates the HeaderFooter Section collections.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HeaderFooter.templateSize">
            <summary>
                Indicates the template size of the HeaderFooter.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.HeaderFooter.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.HeaderFooter"/> class.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.HeaderFooter.TemplateSize">
            <summary>
                Gets or sets the size of the template.
            </summary>
            <value>The size of the template.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.HeaderFooter.HeaderFooterName">
            <summary>
                Gets or sets the name of the header footer.
            </summary>
            <value>The name of the header footer.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.HeaderFooter.HeaderFooterSections">
            <summary>
                Gets or sets the header footer sections.
            </summary>
            <value>The header footer sections.</value>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.HeaderFooterSection">
            <summary>
                The class has the properties to hold the header and footer section settings.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HeaderFooterSection.headerFooterCollections">
            <summary>
                Represents the collection of the HF.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HeaderFooterSection.headerFooterHeight">
            <summary>
                Represents the height of the HF Section.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HeaderFooterSection.headerFooterSectionName">
            <summary>
                Represents the HF Section name.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HeaderFooterSection.headerFooterWidth">
            <summary>
                Represents the width of the HF section.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HeaderFooterSection.m_rtf">
            <summary>
                Represents the collection of Richtext string.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HeaderFooterSection.m_textAlignment">
            <summary>
                Text Alignment of Header Footer String.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.HeaderFooterSection.Width">
            <summary>
                Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.HeaderFooterSection.Height">
            <summary>
                Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.HeaderFooterSection.SectionName">
            <summary>
                Gets or sets the name of the section.
            </summary>
            <value>The name of the section.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.HeaderFooterSection.HeaderFooterCollections">
            <summary>
                Gets or sets the header footer collections.
            </summary>
            <value>The header footer collections.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.HeaderFooterSection.RTF">
            <summary>
                Gets or sets the RTF.
            </summary>
            <value>The RTF.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.HeaderFooterSection.TextAlignment">
            <summary>
                Represents the Header Footer Section text alignmet
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.HeaderFooterFontColorSettings">
            <summary>
                The class has the properties and functions for the HF color and font settings.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HeaderFooterFontColorSettings.font">
            <summary>
                Represents the font of the header and footer text.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HeaderFooterFontColorSettings.fontColor">
            <summary>
                Represents the font color of the header and footer text.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HeaderFooterFontColorSettings.hasUnderline">
            <summary>
                Represents the Underline for the header and footer text.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.HeaderFooterFontColorSettings.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.HeaderFooterFontColorSettings"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.HeaderFooterFontColorSettings.Clone">
            <summary>
                Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
                A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.HeaderFooterFontColorSettings.Font">
            <summary>
                Gets or sets the font.
            </summary>
            <value>The font of the header and footer text.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.HeaderFooterFontColorSettings.HasUnderline">
            <summary>
                Gets or sets a value indicating whether this instance has underline.
            </summary>
            <value>
                <c>true</c> if this instance has underline; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.HeaderFooterFontColorSettings.FontColor">
            <summary>
                Gets or sets the color of the font.
            </summary>
            <value>The color of the font.</value>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.GridLinesDisplayStyle">
            <summary>
            Represents the display style of the grid lines.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.GridLinesDisplayStyle.Auto">
            <summary>
            Grid line is not rendered in the output page. The default value is Invisible.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.GridLinesDisplayStyle.Visible">
            <summary>
            Grid line is rendered in the output page.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.GridLinesDisplayStyle.Invisible">
            <summary>
            Grid line is not rendered in the output page.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.LayoutOptions">
            <summary>
            Represents the layout of the output document.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.LayoutOptions.FitSheetOnOnePage">
            <summary>
            Renders the sheet in one page.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.LayoutOptions.NoScaling">
            <summary>
            Print sheets at their actual size.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.LayoutOptions.FitAllColumnsOnOnePage">
            <summary>
            Renders all columns in one page.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.LayoutOptions.FitAllRowsOnOnePage">
            <summary>
            Renders all rows in one page.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.LayoutOptions.CustomScaling">
            <summary>
            Print sheets at specified scaling option.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.LayoutOptions.Automatic">
            <summary>
            Print sheets at their actual size. The default value is NoScaling.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.HeaderFooterOption">
            <summary>
                Represents the options for Header and footer.
            </summary>
            <remarks>
                The options of header and footer are show header and footer.
            </remarks>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HeaderFooterOption._showFooter">
            <summary>
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HeaderFooterOption._showHeader">
            <summary>
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.HeaderFooterOption.#ctor">
            <summary>
                The options for showing header and footer are set.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.HeaderFooterOption.ShowHeader">
            <summary>
                Gets or sets a value indicating whether to show header. The default value is true.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.HeaderFooterOption.ShowFooter">
            <summary>
                Gets or sets a value indicating whether to show footer. The default value is true.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.TableStyleRenderer">
            <summary>
                Class used for Table style rendering in the pdf page.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._borderColorList">
            <summary>
                Collection of List object ranges and their respective borders and bordercolors.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._borderList">
            <summary>
                Collection of built in styles bordercolors.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._colorFonts">
            <summary>
                Collection of font colors of listobjects.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._darkStyles">
            <summary>
                Collection of Dark built in styles for the Last and first column.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._doubleBorderList">
            <summary>
                Collection of double border built in styles.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._fontColorCollections">
            <summary>
                Collection of list object ranges and their font colors.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._lightStyleBorder">
            <summary>
                Collection of Light buit in Styles for the Row and column stripes.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._listObjects">
            <summary>
                Sheet List objects.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._mediumStyleBorder">
            <summary>
                Collection of Medium styles for the column stripes.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._mediumStyleWithBorder">
            <summary>
                Collection of Medium built in Styles for the Last and first column that has border settings.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._mediumStyleWithoutBorder">
            <summary>
                Collection of Medium built in Styles for the Last and first column that has no border settings.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._topSolidList">
            <summary>
                Collection of built in styles that has top border as solid.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._builtInStyle">
            <summary>
                List object built in style.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._columnStripes">
            <summary>
                Indicates whether the Column Stripes are shown.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._firstColumn">
            <summary>
                Indicates whether First Column is shown.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._headerColor">
            <summary>
                List Object Header color
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._headerRow">
            <summary>
                Indicates whether Header Row is shown.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._lastColumn">
            <summary>
                Indicates whether Last Column is shown.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer._rowStripes">
            <summary>
                Indicates whether the Row stripes are shown.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.TableStyleRenderer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.#ctor(Syncfusion.XlsIO.IListObjects)">
            <summary>
                Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.TableStyleRenderer"/> class.
            </summary>
            <param name="sheetListObjects">The sheet list objects.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.ApplyStyles(Syncfusion.XlsIO.IWorksheet,System.Collections.Generic.Dictionary{Syncfusion.XlsIO.IRange,System.Drawing.Color}@)">
            <summary>
                Applies the styles.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="fontColorCollection">The font color collection.</param>
            <returns>Range collection with the borders and their respective colors</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.InitializeLightStyle">
            <summary>
                Initializes the light style.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.InitializeBorders">
            <summary>
                Initializes the borders.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.InitializeColorFonts">
            <summary>
                Initializes the color fonts.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.InitializeDoubleBorders">
            <summary>
                Initializes the double borders.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.InitializeTopSolid">
            <summary>
                Initializes the top solid.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.InitializeColumnSettings">
            <summary>
                Initializes the column settings.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.InitializeMediumStyle">
            <summary>
                Initializes the medium style.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.DrawLocationAndStyle(Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.TableBuiltInStyles,Syncfusion.XlsIO.IRange,System.Boolean)">
            <summary>
                Draws the table style.
            </summary>
            <param name="sheet">The worksheet.</param>
            <param name="listObjectBuiltInStyle">The built in style.</param>
            <param name="objectLocation">The list object location.</param>
            <param name="showTotals">if set to <c>true</c> [show totals].</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.TotalStyle(Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,Syncfusion.ExcelToPdfConverter.TableStyleRenderer.BorderStyle,System.Drawing.Color,System.Boolean,System.Drawing.Color,Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle,System.Boolean,System.Drawing.Color,System.Boolean)">
            <summary>
                Renders the style to the total part of the table.
            </summary>
            <param name="sheet">The worksheet.</param>
            <param name="objectLocation">The listobject location.</param>
            <param name="borderStyle">The border style.</param>
            <param name="borderColor">Color of the border.</param>
            <param name="entireRow">if set to <c>true</c> [entire row].</param>
            <param name="backgroundColor">Color of the background.</param>
            <param name="solidStyle">The solid style.</param>
            <param name="showTotals">if set to <c>true</c> [show totals].</param>
            <param name="fontColor">Color of the font.</param>
            <param name="boldFont">if set to <c>true</c> [bold font].</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.ApplyFontColor(System.Drawing.Color,Syncfusion.XlsIO.IRange)">
            <summary>
                Apply text color.
            </summary>
            <param name="fontColor">Text color.</param>
            <param name="range">The Range.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.HeaderStyle(Syncfusion.XlsIO.IWorksheet,System.String,Syncfusion.ExcelToPdfConverter.TableStyleRenderer.BorderStyle,System.Drawing.Color,System.Boolean,System.Drawing.Color,Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle,System.Drawing.Color)">
            <summary>
                Renders the style to the header part of the table.
            </summary>
            <param name="sheet">The Worksheet.</param>
            <param name="headerRange">The header range.</param>
            <param name="headerBorderStyle">The header border style.</param>
            <param name="borderColor">Color of the border.</param>
            <param name="entireRow">if set to <c>true</c> [entire row].</param>
            <param name="backgroundColor">Color of the background.</param>
            <param name="solidLineStyle">The solid line style.</param>
            <param name="fontColor">Color of the font.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.ContentStyle(Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,Syncfusion.ExcelToPdfConverter.TableStyleRenderer.BorderStyle,System.Drawing.Color,System.Boolean,System.Drawing.Color,System.Drawing.Color,Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle,System.Drawing.Color,System.Boolean)">
            <summary>
                Renders the style to the content part of the table.
            </summary>
            <param name="sheet">The Worksheet.</param>
            <param name="headerRange">The header range.</param>
            <param name="contentBorderStyle">The content border style.</param>
            <param name="borderColor">Color of the border.</param>
            <param name="entireRow">if set to <c>true</c> [entire row].</param>
            <param name="backgroundFirstColor">First color of the Background.</param>
            <param name="backgroundSecondColor">Second color of the Background.</param>
            <param name="solidLineStyle">The solid line style.</param>
            <param name="fontColor">Color of the font.</param>
            <param name="showTotals">if set to <c>true</c> [show totals].</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.ApplyBGColor(System.Drawing.Color,Syncfusion.XlsIO.IRange)">
            <summary>
                Applies the background color.
            </summary>
            <param name="backgroundColor">Color of the background.</param>
            <param name="entireRange">Cells.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.ApplyBorder(Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle,Syncfusion.ExcelToPdfConverter.TableStyleRenderer.BorderStyle,System.Drawing.Color,System.Boolean)">
            <summary>
                Applies the border.
            </summary>
            <param name="sheet">The Worksheet.</param>
            <param name="borderRange">The border range.</param>
            <param name="solidStyle">The solid style.</param>
            <param name="borderStyle">The border style.</param>
            <param name="borderColor">Color of the border.</param>
            <param name="entireRow">if set to <c>true</c> [entire row].</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.ApplySingleBorder(Syncfusion.XlsIO.IRange,Syncfusion.XlsIO.ExcelBordersIndex,Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle,Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle,Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle,System.Drawing.Color)">
            <summary>
                Apply border to cell.
            </summary>
            <param name="borderRange">The cell.</param>
            <param name="borderIndex">Excel border index.</param>
            <param name="solidStyle">Solid style.</param>
            <param name="firstStyle">Solid style first.</param>
            <param name="secondStyle">Solid style second.</param>
            <param name="borderColor">Border color.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.ApplyFirstLastColumnBorder(Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle,Syncfusion.ExcelToPdfConverter.TableStyleRenderer.BorderStyle,System.Drawing.Color,System.Boolean)">
            <summary>
                Applies the border to the first and last column of the table.
            </summary>
            <param name="sheet">The Worksheet.</param>
            <param name="borderRange">The border range.</param>
            <param name="solidStyle">The solid style.</param>
            <param name="borderStyle">The border style.</param>
            <param name="borderColor">Color of the border.</param>
            <param name="entireRow">if set to <c>true</c> [entire row].</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.ApplyFirstLastColumnTopBorder(Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle,System.Drawing.Color)">
            <summary>
                Applies the cell top border.
            </summary>
            <param name="sheet">The Worksheet.</param>
            <param name="borderRange">The border range.</param>
            <param name="solidStyle">The solid style.</param>
            <param name="borderColor">Color of the border.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.ApplyFirstLastColumnStyle(Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
                Applies the first and last column style.
            </summary>
            <param name="sheet">The Worksheet.</param>
            <param name="contentRange">The content range.</param>
            <param name="fontColor">Color of the font.</param>
            <param name="backgroundFirstColor">First color of the bg.</param>
            <param name="showTotals">if set to <c>true</c> [show totals].</param>
            <returns>IRange Object</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.CheckStyle">
            <summary>
                Checks the style.
            </summary>
            <returns>
                Returns true if the built in style is within the this.lastColumn and first column list else false will be returned.
            </returns>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.BorderStyle">
            <summary>
                Enumeration of the Border Styles.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.BorderStyle.None">
            <summary>
                Represents that no ExcelBorderIndex is set.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.BorderStyle.Top">
            <summary>
                Represents that Top ExcelBorderIndex is set.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.BorderStyle.Bottom">
            <summary>
                Represents that Bottom ExcelBorderIndex is set.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.BorderStyle.Left">
            <summary>
                Represents that Left ExcelBorderIndex is set.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.BorderStyle.Right">
            <summary>
                Represents that Right ExcelBorderIndex is set.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.BorderStyle.TopBottom">
            <summary>
                Represents that both Top and Bottom ExcelBorderIndex is set.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.BorderStyle.LeftRight">
            <summary>
                Represents that both Left and Right ExcelBorderIndex is set.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.BorderStyle.All">
            <summary>
                Represents that all ExcelBorderIndex is set.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle">
            <summary>
                Enumeration of the Solid style in Borders
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle.None">
            <summary>
                Represents the No Solidstyle.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle.Top">
            <summary>
                Represents the solid style for the Top ExcelBorderIndex.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle.Bottom">
            <summary>
                Represents the solid style for the Bottom ExcelBorderIndex.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle.Right">
            <summary>
                Represents the solid style for the Right ExcelBorderIndex.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle.Left">
            <summary>
                Represents the solid style for the Left ExcelBorderIndex.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle.TopBottom">
            <summary>
                Represents the solid style for both Top and Bottom ExcelBorderIndex.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TableStyleRenderer.SolidStyle.LeftRight">
            <summary>
                Represents the solid style for both Right and Left ExcelBorderIndex.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.PageSetupOption">
            <summary>
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.PageSetupOption.Hash">
            <summary>
            Defines a hash reference of print title columns
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.PageSetupOption._isInvalidTitleRowOrColumn">
            <summary>
            Indicates whether print title row or print title column is invalid.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.#ctor(Syncfusion.XlsIO.Implementation.WorksheetImpl,Syncfusion.XlsIO.IRange)">
            <summary>
                Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.PageSetupOption"/> class.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="actualUsedRange">The actual used range</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.#ctor(Syncfusion.XlsIO.Implementation.WorksheetImpl,Syncfusion.XlsIO.IRange,Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter)">
            <summary>
                Initializes a new instance of the <see cref="T:Syncfusion.ExcelToPdfConverter.PageSetupOption"/> class.
            </summary>
            <param name="sheet">The sheet.</param>
            <param name="actualUsedRange">Used range.</param>
            <param name="excelToPdfConverter">The converter.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.#ctor">
            <summary>
                Empty constructor
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.IsPrintTitleValid(System.String[])">
            <summary>
            Validates row or column name wih the provided cell names.
            </summary>
            <param name="cellNames">The cell names to find column or row of.</param>
            <returns>True if print titles are valid. Otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.ParseTitleRows">
            <summary>
                Parses the title rows.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.ParseTitleColumns">
            <summary>
                Parses the title columns.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.ParsePrintArea">
            <summary>
                Parses the print area.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.GetValidRange(Syncfusion.XlsIO.Parser.Biff_Records.Formula.IRangeGetter,Syncfusion.XlsIO.Implementation.WorkbookImpl,Syncfusion.XlsIO.Implementation.WorksheetImpl)">
            <summary>
                From the input rangeHolder it returns the valid range
            </summary>
            <param name="rangeHolder">input range holder object</param>
            <param name="workbook">input workbook</param>
            <param name="worksheet">range holder's worksheet</param>
            <returns>the required range</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.TryParseTableOrNamedRange(System.String)">
            <summary>
                Parse the string and tries to retrive the required table
            </summary>
            <param name="value">input name range value</param>
            <returns>the required table range</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.GetTableRangeFromValues(System.String,System.Boolean,System.Boolean,System.Boolean,System.String[])">
            <summary>
                returns the required range from given table details
            </summary>
            <param name="tableName">input table name</param>
            <param name="isAll">boolean value indicates whether the table all values to be returned</param>
            <param name="isHeaders">boolean value indicates whether the table header values only to be returned</param>
            <param name="isFirstRow">boolean value indicates whether the table first row values to be returned</param>
            <param name="columnsFromTo">array having the columns to defind the region</param>
            <returns>the required range</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.GetSplittedTitle(System.String)">
            <summary>
                Gets the splitted title.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.GetRowHeight(Syncfusion.Pdf.Graphics.PdfUnitConvertor,Syncfusion.XlsIO.Implementation.ItemSizeHelper)">
            <summary>
                Gets the height of the row.
            </summary>
            <param name="converter">The converter.</param>
            <param name="rowHeightGetter">The row height getter.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.GetColumnWidth(Syncfusion.Pdf.Graphics.PdfUnitConvertor,Syncfusion.XlsIO.Implementation.ItemSizeHelper)">
            <summary>
                Gets the width of the column.
            </summary>
            <param name="converter">The converter.</param>
            <param name="columnWidthGetter">The column width getter.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.UpdateRange(Syncfusion.XlsIO.IRange)">
            <summary>
                Updates the range.
            </summary>
            <param name="range">The input range.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.CheckRowBounds(System.Int32,System.Int32)">
            <summary>
                Checks the row bounds.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.CheckColumnBounds(System.Int32,System.Int32)">
            <summary>
                Checks the column bounds.
            </summary>
            <param name="startIndex">The start index.</param>
            <param name="endIndex">The end index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.GetBreakRanges(Syncfusion.ExcelToPdfConverter.LayoutOptions,Syncfusion.XlsIO.IRange[])">
            <summary>
                Gets the break ranges.
            </summary>
            <param name="option">The option.</param>
            <param name="actualUsedRange">The actual used range.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.GetHorizontalBreaks(System.Collections.Generic.List{Syncfusion.XlsIO.IRange})">
            <summary>
                Gets the horizontal breaks.
            </summary>
            <param name="ranges">The ranges.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.PageSetupOption.GetVerticalBreaks(System.Collections.Generic.List{Syncfusion.XlsIO.IRange},System.Int32)">
            <summary>
                Gets the vertical breaks.
            </summary>
            <param name="veriRange">The veri range.</param>
            <param name="finalColumn">The final column.</param>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.PageSetupOption.PrintTitleFirstRow">
            <summary>
                Gets the print title first row.
            </summary>
            <value>The print title first row.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.PageSetupOption.PrintTitleFirstColumn">
            <summary>
                Gets the print title first column.
            </summary>
            <value>The print title first column.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.PageSetupOption.PrintTitleLastRow">
            <summary>
                Gets the print title last row.
            </summary>
            <value>The print title last row.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.PageSetupOption.PrintTitleLastColumn">
            <summary>
                Gets the print title last column.
            </summary>
            <value>The print title last column.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.PageSetupOption.HasPrintTitleRows">
            <summary>
                Gets a value indicating whether this instance has print title rows.
            </summary>
            <value>
                <c>true</c> if this instance has print title rows; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.PageSetupOption.HasPrintTitleColumns">
            <summary>
                Gets a value indicating whether this instance has print title columns.
            </summary>
            <value>
                <c>true</c> if this instance has print title columns; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.PageSetupOption.HasPrintArea">
            <summary>
                Gets a value indicating whether this instance has print area.
            </summary>
            <value>
                <c>true</c> if this instance has print area; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.PageSetupOption.TitleRowHeight">
            <summary>
                Gets the height of the title row.
            </summary>
            <value>The height of the title row.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.PageSetupOption.TitleColumnWidth">
            <summary>
                Gets the width of the title column.
            </summary>
            <value>The width of the title column.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.PageSetupOption.RowIndexes">
            <summary>
                Gets the row indexes.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.PageSetupOption.ColumnIndexes">
            <summary>
                Gets the column indexes.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.PageSetupOption.PrintAreas">
            <summary>
                Gets the print areas.
            </summary>
            <value>The print areas.</value>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.PageSetupOption.Worksheet">
            <summary>
                Gets the worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.PageSetupOption.PageSetup">
            <summary>
                Gets the page setup of the worksheet.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfLayoutSetting.#ctor(Syncfusion.ExcelToPdfConverter.ExcelToPdfConverter)">
            <summary>
                To assign the Excel to pdf converter
            </summary>
            <param name="excelToPdfConverter"></param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfLayoutSetting.FitAllColumnOnOnePage(Syncfusion.Pdf.PdfSection,Syncfusion.XlsIO.IPageSetup,System.Single,System.Single)">
            <summary>
                It reture the pdftemplate for FitAllcolumnOnOnePage.
            </summary>
            <param name="pdfSection"></param>
            <param name="sheetPageSetup"></param>
            <param name="usedRangeWidth"></param>
            <param name="usedRangeHeight"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfLayoutSetting.FitAllRowsOnOnePage(Syncfusion.Pdf.PdfSection,Syncfusion.XlsIO.IPageSetup,System.Single,System.Single)">
            <summary>
                It's Return the Pdf Template for FitAllrowsOnOnePage.
            </summary>
            <param name="pdfSection"></param>
            <param name="sheetPageSetup"></param>
            <param name="usedRangeWidth"></param>
            <param name="usedRangeHeight"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.ExcelToPdfLayoutSetting.NoScaling(Syncfusion.Pdf.PdfSection,Syncfusion.XlsIO.IPageSetup,System.Single,System.Single)">
            <summary>
                NoScaling Layout option
            </summary>
            <param name="pdfSection"></param>
            <param name="sheetPageSetup"></param>
            <param name="usedRangeWidth"></param>
            <param name="usedRangeHeight"></param>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HelperMethods._arrayValue">
            <summary>
                Represents font value.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HelperMethods._colTitle">
            <summary>
                Represents column title value.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.HelperMethods._rowTitle">
            <summary>
                Represents row title value.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.HelperMethods.PrintTitlesWidth">
            <summary>
                Get print title width for custom scaling.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.HelperMethods.PrintTitlesHeight">
            <summary>
                Get print title Height for custom scaling.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.HelperMethods.CalculateFontValue(Syncfusion.ExcelToPdfConverter.ExcelToPdfConverterSettings)">
            <summary>
                Calculate the font style value.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.HelperMethods.GetFontStyleValue(Syncfusion.XlsIO.IWorksheet)">
            <summary>
                Get the font style value.
            </summary>
        </member>
        <member name="T:Syncfusion.ExcelToPdfConverter.SplitText">
            <summary>
                Represents the splitting of text.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.SplitText._adjacentColumn">
            <summary>
                The column.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.SplitText._brush">
            <summary>
                Pdf brush.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.SplitText._format">
            <summary>
                Pdf string format.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.SplitText._originRect">
            <summary>
                Text Bounds.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.SplitText._pageTemplate">
            <summary>
                The pdf template.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.SplitText._pdfFont">
            <summary>
                Pdf font.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.SplitText._row">
            <summary>
                The row.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.SplitText._sheet">
            <summary>
                The sheet.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.SplitText._text">
            <summary>
                Splitted text.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.SplitText.OriginRect">
            <summary>
                Text Bounds.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.SplitText.Sheet">
            <summary>
                Splitted text.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.SplitText.Text">
            <summary>
                Splitted text.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.SplitText.TextFont">
            <summary>
                Pdf font.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.SplitText.Brush">
            <summary>
                Pdf brush.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.SplitText.Format">
            <summary>
                Pdf string format.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.SplitText.Row">
            <summary>
                The row.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.SplitText.AdjacentColumn">
            <summary>
                The column.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.SplitText.PageTemplate">
            <summary>
                The pdf template.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.LineInfo._textInfoCollection">
            <summary>
                Represents the TextInfo collection.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.LineInfo.#ctor">
            <summary>
                Initialize the new instace for LineInfo class.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.LineInfo.Dispose">
            <summary>
                Dispose the objects.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.LineInfo.TextInfoCollection">
            <summary>
                Represents the TextInfo collection.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.LineInfo.Text">
            <summary>
                Line Text.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.LineInfo.Width">
            <summary>
                Text width.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.LineInfo.Height">
            <summary>
                Returns the Max Height of the Line.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TextInfo._text">
            <summary>
                The text.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TextInfo._ascent">
            <summary>
                Text ascent.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TextInfo._bounds">
            <summary>
                Text bounds.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TextInfo._font">
            <summary>
                XlsIO font.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TextInfo._length">
            <summary>
                Text length.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TextInfo._pdfBrush">
            <summary>
                Pdf brush.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TextInfo._pdfFont">
            <summary>
                Pdf font.
            </summary>
        </member>
        <member name="F:Syncfusion.ExcelToPdfConverter.TextInfo._position">
            <summary>
                Text start index.
            </summary>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TextInfo.#ctor(System.String)">
            <summary>
                Initialize the new instance for TextInfo class.
            </summary>
            <param name="text">Original text.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TextInfo.GetOriginalText">
            <summary>
                Reperesents the original text.
            </summary>
            <returns>returns original text.</returns>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TextInfo.CopyTo(Syncfusion.ExcelToPdfConverter.TextInfo)">
            <summary>
                Copy the XlsIO font, Pdf font, Pdf brush and Text ascent to the destination object.
            </summary>
            <param name="destination">The destination object.</param>
        </member>
        <member name="M:Syncfusion.ExcelToPdfConverter.TextInfo.Dispose">
            <summary>
                Dispose the object.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.TextInfo.Text">
            <summary>
                The text.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.TextInfo.PdfFont">
            <summary>
                Pdf font.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.TextInfo.Font">
            <summary>
                XlsIO font.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.TextInfo.PdfBrush">
            <summary>
                Pdf brush.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.TextInfo.Bounds">
            <summary>
                Text bounds.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.TextInfo.Ascent">
            <summary>
                Text ascent.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.TextInfo.Position">
            <summary>
                Text start index.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.TextInfo.Length">
            <summary>
                Text length.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.TextInfo.X">
            <summary>
                X position.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.TextInfo.Y">
            <summary>
                Y position.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.TextInfo.Width">
            <summary>
                Text Width.
            </summary>
        </member>
        <member name="P:Syncfusion.ExcelToPdfConverter.TextInfo.Height">
            <summary>
                Text height.
            </summary>
        </member>
    </members>
</doc>
