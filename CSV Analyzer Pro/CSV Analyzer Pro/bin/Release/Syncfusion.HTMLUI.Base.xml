<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.HTMLUI.Base</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.HTMLUIBaseAssembly">
            <summary>
            This class holds the name of the Syncfusion.HTMLUI.Base assembly and provides a helper 
            routine that helps with resolving types when loading a serialization stream and when 
            the framework probes for assemblies by reflection. 
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUIBaseAssembly.Name">
            <summary>
            The full name of this assembly without version information: "Syncfusion.HTMLUI.Base".
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUIBaseAssembly.Assembly">
            <summary>
            A reference to the <see cref="T:System.Reflection.Assembly"/> for the grid assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUIBaseAssembly.RootNamespace">
            <summary>
            The root namespace of this assembly. Used internally for locating resources within the assembly.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUIBaseAssembly.AssemblyResolver(System.Object,System.ResolveEventArgs)">
             <summary>
             This delegate helps with resolving types and can be used as an event handler
             for a <see cref="E:System.AppDomain.AssemblyResolve"/> event.
             </summary>
             <param name="sender">The source of the event.</param>
             <param name="e">The event data with information about the type.</param>
             <returns>A reference to the assembly where the type is located.</returns>
             <remarks>
             Use this handler when reading back types from a serialization stream
             saved with an earlier version of this assembly.
             </remarks>
             <example>
             <code lang="C#">
             		public static GridModel LoadSoap(Stream s)
             		{
             			try
             			{
             				AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(GridAssembly.AssemblyResolver);
             				SoapFormatter b = new SoapFormatter();
             				b.AssemblyFormat = FormatterAssemblyStyle.Simple;
             				GridModel t = b.Deserialize(s) as GridModel;
             				t.Modified = false;
             				return t;
             			}
             			finally
             			{
             				AppDomain.CurrentDomain.AssemblyResolve -= new ResolveEventHandler(GridAssembly.AssemblyResolver);
             			}
             		}
            
             </code>
             </example>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Parser.CSS.CSSToken">
            <summary>
            Enumerator for noting expected token.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSToken.Name">
            <summary>
            Name of the CSS element is expected.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSToken.Open">
            <summary>
            Open '{' is expected.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSToken.AttrName">
            <summary>
            Name of the attribute is expected.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSToken.AttrValue">
            <summary>
            Value of the attribute is expected.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSToken.AttrDelimiter">
            <summary>
            Delimiter between attributes is expected.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSToken.Close">
            <summary>
            Close '}' is expected.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser">
            <summary>
            This class converts files / strings in CSS format to an XML document.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.DEF_TEMP_BUFFER">
            <summary>
            Buffer size for temporary StringBuilder objects used by the class.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.DEF_REGEX_OPTIONS">
            <summary>
            Default RegEx checks object's options.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.DEF_VALUE_REGEX">
            <summary>
            Pattern for attribute values in style.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.DEF_WHITESPACE_REGEX">
            <summary>
            Pattern for WhiteSpace.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.DEF_SKIPNEWLINE_REGEX">
            <summary>
            Pattern for new line symbols.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.DEF_NAME_REGEX">
            <summary>
            Pattern for symbol name.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.DEF_ATTRNAME_REGEX">
            <summary>
            Pattern for attribute name.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.DEF_DELIMITER_REGEX">
            <summary>
            Pattern for delimiter between attributes.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.DEF_OPEN_REGEX">
            <summary>
            Pattern for beginning of element style.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.DEF_CLOSE_REGEX">
            <summary>
            Pattern for close of element style.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.DEF_TRIM_NAME_REGEX">
            <summary>
            Trim this values at the beginning and end of the element name
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.DEF_WHITESPACE">
            <summary>
            Pattern for WhiteSpace.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.DEF_TOKENS">
            <summary>
            Tokens which consist of a few symbols but have some meaning.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_regName">
            <summary>
            Object used by IsName method for checks.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_regAttrName">
            <summary>
            Object used by IsAttrName method for checks.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_regValue">
            <summary>
            Object used by IsAttrValue method for checks.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_regDelimiter">
            <summary>
            Object used by IsDelimiter method for checks.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_regOpen">
            <summary>
            Object used by IsOpen method for checks.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_regClose">
            <summary>
            Object used by IsDClose method for checks.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_regWhiteSpace">
            <summary>
            Object used by IsWhitespace method for checks.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_regSkipNewLine">
            <summary>
            Object used by IsNewLine method for checks.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_regTrimBName">
            <summary>
            Object used by TrimElementName method for trimming bad symbols in element names.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_regTrimEName">
            <summary>
            Object used by TrimElementName method for trimming bad symbols in element names.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_regDelWhiteSpaces">
            <summary>
            Object used by Whitespace method for deleting multiple WhiteSpaces from string.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_reader">
            <summary>
            Holds input CSS data.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_writer">
            <summary>
            Writes output XML document.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_token">
            <summary>
            Enumerator. Corresponds to tokens in document.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_wasAnything">
            <summary>
            Indicates whether some data was read from reader or not.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_SkipBadOrError">
            <summary>
            Indicates whether to skip bad styles or throw exceptions (skip if True; make exception if False.)
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_temp1">
            <summary>
            Temporary object. Is member for performance needs.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_temp2">
            <summary>
            Temporary object. Is member for performance needs.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.m_temp3">
            <summary>
            Temporary object. Is member for performance needs.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.#ctor">
            <summary>
            Overloaded constructor. Initializes new object.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.#ctor(Syncfusion.HTMLUI.Base.TokenStream,System.Xml.XmlWriter)">
            <summary>
            Initializes new object with specified reader and writer.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ConfigureParser(Syncfusion.HTMLUI.Base.TokenStream,System.Xml.XmlWriter)">
            <summary>
            Prepares our parser for work.
            </summary>
            <param name="reader">Source object.</param>
            <param name="writer">Destination object.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.Process">
            <summary>
            Main method. Converts CSS document into an XML document.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ConvertStylesheet">
            <summary>
            Private method. Writes root element and converts CSS document into XML document.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ConvertData">
            <summary>
            Runs through all tokens in the document and invokes the corresponding methods.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ReadName">
            <summary>
            Reads element name from the document (until '{' is found).
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ReadOpen">
            <summary>
            Reads start of data of style name ( '{' ).
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ReadAttrName">
            <summary>
            Reads attribute name. From 'name:value', 'name' is the result.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ReadAttrValue">
            <summary>
            Reads attribute value. From 'name:value', 'value' is the result.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ReadDelimiter">
            <summary>
            Reads delimiter between attributes ';'.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ReadClose">
            <summary>
            Reads close element '}'.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ExtractName">
            <summary>
            Extracts name of element. From 'someStyle { ... }', 'someStyle' is the result.
            </summary>
            <returns>Name of style.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ExtractOpen">
            <summary>
            Extracts '{' element.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ExtractAttrName">
            <summary>
            Extracts attribute name of the element (untill ':').
            </summary>
            <returns>Name of the attribute.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ExtractAttrValue">
            <summary>
            Extracts attribute value of the element.
            </summary>
            <returns>Value of the attribute.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ExtractDelimiter">
            <summary>
            Extracts delimiter ';' between attributes.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ExtractClose">
            <summary>
            Extracts '}' element.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.PeekToken">
            <summary>
            Peeks next token from the TokenStream.
            </summary>
            <returns>Token from the stream.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.ReadToken">
            <summary>
            Reads next token from the TokenStream.
            </summary>
            <returns>Token from the stream.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.SkipSpaces">
            <summary>
             Skips all next WhiteSpaces.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.SkipAttribute">
            <summary>
            If bad attributes, skip all data for current element.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.SkipTillEndToken(System.String,System.Boolean)">
            <summary>
            Helper method. Extract from stream data till specified by user token.
            </summary>
            <param name="end">Token which ends read operation.</param>
            <param name="bAddEnd">Include or not end token into returned string.</param>
            <returns>String between start point and end token.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.SkipComments">
            <summary>
            Skips data within comments in a CSS document.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.SkipToName">
            <summary>
            Skips all bad tokens between elements (From '}' to 'someStyle { ... }').
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.TrimElementName(System.String)">
            <summary>
            Trims bad values from the beginning and end of the element name.
            </summary>
            <param name="elementName">Name of the style.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.RemoveBigSpaces(System.String)">
            <summary>
            Removes all whitespaces except simple space from the string.
            </summary>
            <param name="val">String token.</param>
            <returns>Result string.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.Eof">
            <summary>
            Indicates whether the end of file is reached.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.IsName(System.String)">
            <summary>
            Indicates whether token is good to be a name of an element.
            </summary>
            <param name="token">Token to check.</param>
            <returns>True if token is good for name; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.IsAttrName(System.String)">
            <summary>
            Indicates whether token is good to be an attribute name.
            </summary>
            <param name="token">Token to check.</param>
            <returns>True if token is good for name; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.IsAttrValue(System.String)">
            <summary>
            Indicates whether token is good to be an attribute value.
            </summary>
            <param name="token">Token to check.</param>
            <returns>True if token is good for name; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.IsDelimiter(System.String)">
            <summary>
            Indicates whether token is good to be a delimiter between attributes ';'.
            </summary>
            <param name="token">Token to check.</param>
            <returns>True if token is good for name; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.IsOpen(System.String)">
            <summary>
            Indicates whether token is good to be '{' - an open element.
            </summary>
            <param name="token">String token.</param>
            <returns>True if we are inside style.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.IsClose(System.String)">
            <summary>
            Indicates whether token is good to be '}' - a close element.
            </summary>
            <param name="token">String token.</param>
            <returns>True if we are going to exit from style.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.IsWhiteSpace(System.String)">
            <summary>
            Indicates whether token is a whitespace symbol.
            </summary>
            <param name="token">Token to check.</param>
            <returns>True if token is whitespace, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.IsNewLine(System.String)">
            <summary>
            Indicates whether token is a new line symbol.
            </summary>
            <param name="token">String token.</param>
            <returns>True if we are going to jump on new line.</returns>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.CSS.CSSParser.SkipBadStyles">
            <summary>
            Indicates whether to skip bad styles or throw exceptions (skip if True; make exception if False.)
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.HTMLUICSSParser">
            <summary>
            This class is responsible for CSS document parsing.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.HTMLUICSSParser.m_parser">
            <summary>
            Converts CSS document into an XML document.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.HTMLUICSSParser.m_document">
            <summary>
            Holds XML document after converting.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUICSSParser.#ctor">
            <summary>
            Overloaded Constructor. Initializes new object.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUICSSParser.#ctor(System.String)">
            <summary>
            Initializes new object.
            </summary>
            <param name="fileName">Path to file for parsing.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUICSSParser.#ctor(Syncfusion.HTMLUI.Base.TokenStream)">
            <summary>
            Initializes new object from the stream.
            </summary>
            <param name="stream">Token stream object.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUICSSParser.Parse(System.String)">
            <summary>
            Overloaded Utility method. Converts file to XML.
            </summary>
            <param name="fileName">Path to CSS document.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUICSSParser.Parse(Syncfusion.HTMLUI.Base.TokenStream)">
            <summary>
            Utility method. Converts file to XML.
            </summary>
            <param name="stream">Token stream object.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUICSSParser.ParseString(System.String)">
            <summary>
            Converts CSS string which contains style declaration to XML document.
            </summary>
            <param name="styleDeclaration">Declaration of CSS style(s).</param>
            <returns>Document which contains an XML interpretation of the CSS document.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUICSSParser.ConvertCSSToXML(Syncfusion.HTMLUI.Base.TokenStream)">
            <summary>
            Converts to XML.
            </summary>
            <param name="stream">Input stream.</param>
            <returns>The base stream infilled by parser.</returns>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.HTMLUICSSParser.Document">
            <summary>
            Gets the XML document.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Parser.CSS.Token">
            <summary>
            Specifies tokens which represent elements in a CSS document.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.EOF">
            <summary>
            End of file.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.S">
            <summary>
            Element which must be skipped (Whitespaces).
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.CDO">
            <summary>
            Comment is opened.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.CDC">
            <summary>
            Comment is closed.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.INCLUDES">
            <summary>
            Attribute has a list of values.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.DASHMATCH">
            <summary>
            Attribute has a hyphen-separated attribute selectors list of values.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.STRING">
            <summary>
            String token.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.IDENT">
            <summary>
            Identificator (name of function or keyword).
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.HASH">
            <summary>
            Hash value (for instance, color #xxxxxx).
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.IMPORT_SYM">
            <summary>
            Token is "@import" directive.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.PAGE_SYM">
            <summary>
            Token is "@page" directive.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.MEDIA_SYM">
            <summary>
            Token is "@media" directive.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.FONT_FACE_SYM">
            <summary>
            Token is "@font-face" directive.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.CHARSET_SYM">
            <summary>
            Token is "@charset" directive.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.ATKEYWORD">
            <summary>
            Token is "@"{IDENT} directive.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.IMPORTANT_SYM">
            <summary>
            Token is !important directive of priority.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.EMS">
            <summary>
            Token is NUMBERems.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.EXS">
            <summary>
            Token is NUMBERex.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.LENGTH">
            <summary>
            Token is NUMBERYY where YY = {px| in | cm | mm | pt | pc}.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.ANGLE">
            <summary>
            Token is NUMBERYY where YY = {deg | rad | grad}.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.TIME">
            <summary>
            Token is NUMBERYY where YY = {ms | s}.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.FREQ">
            <summary>
            Token is NUMBERYY where YY = {hz | Khz}.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.DIMEN">
            <summary>
            Token is NUMBERIDENT.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.PERCENTAGE">
            <summary>
            Token is NUMBER%.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.NUMBER">
            <summary>
            Token is number.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.URI">
            <summary>
            Token is url(STRING).
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.FUNCTION">
            <summary>
            Token is IDENT.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.UNICODERANGE">
            <summary>
            Token is U+RANGE.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.SYMBOL">
            <summary>
            Token is just a symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.CSS.Token.unrecognized">
            <summary>
            Not a recognized token.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.ParseException">
            <summary>
            This exception is thrown by CSS and HTML parsers when finding a problem
            in a document which cannot be resolved by the parser internally.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.ParseException.DEF_MESSAGE">
            <summary>
            Default text used by this exception when message is not specified by user.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.ParseException.#ctor">
            <summary>
            Overloaded constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.ParseException.#ctor(System.String)">
            <summary>
            Constructor with a user specified exception message.
            </summary>
            <param name="message">Message to be displayed on throwing an exception.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.ParseException.#ctor(System.Exception)">
            <summary>
            Create exception based on other exception - Wrap inner exception.
            </summary>
            <param name="inner">Inner exception.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.ParseException.#ctor(System.String,System.Exception)">
            <summary>
            Create exception class with a user specified message and inner exception.
            </summary>
            <param name="message">User specified message.</param>
            <param name="inner">Exception on which this instance of exception class is based.</param>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig">
            <summary>
            This class is used by pre-parser as configuration object.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.DEF_CONFIG1">
            <summary>
            Resource path for first config file.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.DEF_CONFIG2">
            <summary>
            Resource path for second config file.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig._config">
            <summary>
            Member holds default config based on config files from resources.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig._config1">
            <summary>
            First configuration XML document.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig._config2">
            <summary>
            Second configuration XML document.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.m_elements">
            <summary>
            Dictionary holds elements known to pre-parser.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.m_entities">
            <summary>
            Dictionary holds entities known to pre-parser.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.m_cache">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.#ctor">
            <summary>
            Hides default constructor to prevent construction without properties.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.#ctor(System.IO.Stream,System.IO.Stream)">
            <summary>
            Main constructor of configuration object.
            </summary>
            <param name="stream1">First config file which holds pre-parser elements rules.</param>
            <param name="stream2">Second config files which holds entities information.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.ExtractElements(System.Xml.XmlDocument,System.Xml.XmlDocument,System.Xml.XmlNamespaceManager)">
            <summary>
            Extracts from config files pre-parser rules and configuration information.
            </summary>
            <param name="document">Config file with pre-parser rules.</param>
            <param name="document2">Config file with entities rules.</param>
            <param name="nsm">namespaces</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.ExtractElementInfo(System.Xml.XmlDocument,Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement,System.Xml.XmlNamespaceManager)">
            <summary>
            Extracts from config file element with additional information.
            </summary>
            <param name="document">Config file with pre-parser rules.</param>
            <param name="element">Element with additional info that must be extracted.</param>
            <param name="nsm">Namespaces.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.ExtractEntities(System.Xml.XmlDocument)">
            <summary>
            Extracts entities from config files.
            </summary>
            <param name="document2">Config file with entities rules.</param>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.MainConfig">
            <summary>
            Extracts main config from assembly. Property returns configuration
            based on config files from assembly resources.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.Config1">
            <summary>
            Returns the first config stream from resources.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.Config2">
            <summary>
            Returns the second config stream from resources.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.XMLConfig1">
            <summary>
            Returns the first default configuration file as XML document.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.XMLConfig2">
            <summary>
            Returns the second default configuration file as XML document.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.Elements">
            <summary>
            Returns the elements as Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig.Entities">
            <summary>
            Returns the entities as Read-only.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement">
            <summary>
            This class interprets one HTML element. It is used by pre-parser for
            converting HTML to XHTML.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.m_strStartTag">
            <summary>
            Element's start tag string.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.m_strEndTag">
            <summary>
            Element's end tag string.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.m_strName">
            <summary>
            Element's name.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.m_bIsCData">
            <summary>
            Storage of IsCDATA property.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.m_children">
            <summary>
            Children of elements.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.m_childrenOptionalStart">
            <summary>
            Collection of optional elements.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.m_expression">
            <summary>
            xPath with special settings.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.m_preserveWhitespace">
            <summary>
            Indicates whether whitespaces must be deleted in element.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.#ctor">
            <summary>
            Private constructor to prevent empty class construction.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.#ctor(System.String)">
            <summary>
            Main constructor used for element initializing.
            </summary>
            <param name="name">Name of the element.</param>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.Empty">
            <summary>
            Returns an empty element which is not valid and cannot be used for any work.
            This value can be used as a NULL value replacer.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.Expression">
            <summary>
            Returns xPath with special settings.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.TagStart">
            <summary>
            Gets or sets the tag start string.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.TagEnd">
            <summary>
            Gets or sets the tag end string.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.Name">
            <summary>
            Returns the name of the element. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.SubName">
            <summary>
            Returns the subname of the element name == Name.Substring(5).
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.IsCDATA">
            <summary>
            Indicates whether element is a CDATA holder.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.Children">
            <summary>
            Collection of child elements. To check if collection contains any
            data, use IsChildrenUsed property. It does not create a collection. By default,
            element does not contain any collections and only on demand user will create one.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.Optional">
            <summary>
            Collection of optional elements. To check if collection contains any
            data, use IsOptionalUsed property. It does not create a collection. By default,
            element does not contains any collections and only on demand user will create one.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.IsOptionalUsed">
            <summary>
            Indicates whether optional collection is used.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.IsChildrenUsed">
            <summary>
            Indicates whether child collection contains. True if data is available.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement.PreserveWhiteSpaces">
            <summary>
            Indicates whether we have to delete whitespaces in element.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer">
            <summary>
            This class tokenizes input stream and returns it as a high-level abstraction.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.DEF_TEMP_BUFFER">
            <summary>
            Buffer size for temporary StringBuilder objects used by class.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.DEF_REGEX_OPTIONS">
            <summary>
            Default RegEx checks object's options.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.DEF_VALUE_REGEX">
            <summary>
            IsValueData method checks regular expression.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.DEF_WHITESPACE_REGEX">
            <summary>
            IsWhitespace method checks regular expression.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.DEF_NAME_REGEX">
            <summary>
            IsName method checks regular expression.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.DEF_START_NAME_REGEX">
            <summary>
            IsStartName method checks regular expression.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.DEF_WHITESPACE">
            <summary>
            Pattern for WhiteSpace.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.DEF_NEW_LINE">
            <summary>
            Pattern for new lines.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.DEF_CDATA">
            <summary>
            Pattern for CDATA.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.DEF_END_OF_VAL_AR1">
            <summary>
            Array of tokens which indicates end of attribute value.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.DEF_END_OF_VAL_AR2">
            <summary>
            Array of tokens which indicate end of attribute value.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_regValue">
            <summary>
            Object used by IsValueData method for checks.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_regWhiteSpace">
            <summary>
            Object used by IsWhitespace method for checks.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_regNewLine">
            <summary>
            Object used by IsWhitespace method for checks.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_regName">
            <summary>
            Object used by IsName method for checks.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_regStartName">
            <summary>
            Object used by IsName method for checks.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_regCDATA">
            <summary>
            Object used by ExtractDataFromCDATA method for extracting data.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_reader">
            <summary>
            Input stream which helps users to read HTML input files.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_CDataElementName">
            <summary>
            Storage for CDataElementName object.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_pointInParser">
            <summary>
            Global position of parser. For internal use only.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_tokenType">
            <summary>
            Token type. Type of data extracted from stream.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_entities">
            <summary>
            Dictionary of entities which must be converted to char symbols.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_token">
            <summary>
            Token which was last extracted by ReadToken method.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_temp1">
            <summary>
            Temporary buffer for class methods. To remove memory allocation
            code from methods, all temporary objects become class members.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_temp2">
            <summary>
            Temporary buffer for class methods. To remove memory allocation
            code from methods, all temporary objects become class members.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_temp3">
            <summary>
            Temporary buffer for class methods. To remove memory allocation
            code from methods, all temporary objects become class members.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_temp4">
            <summary>
            Temporary buffer for class methods. To remove memory allocation
            code from methods, all temporary objects become class members.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_temp5">
            <summary>
            Temporary buffer for class methods. To remove memory allocation
            code from methods, all temporary objects become class members.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_temp6">
            <summary>
            Temporary buffer for class methods. To remove memory allocation
            code from methods, all temporary objects become class members.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.m_temp7">
            <summary>
            Temporary buffer for class methods. To remove memory allocation
            code from methods, all temporary objects become class members.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.#ctor">
            <summary>
            Overloaded. Class can not be constructed by user without input stream.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.#ctor(Syncfusion.HTMLUI.Base.TokenStream)">
            <summary>
            Main constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.IsWhitespace(System.String)">
            <summary>
            Indicates whether user specified token is whitespace symbols or not.
            </summary>
            <param name="token">Token to check.</param>
            <returns>True if token is whitespace; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.IsNewLine(System.String)">
            <summary>
            Indicates whether user specified token is new line symbols or not.
            </summary>
            <param name="token">Token to check.</param>
            <returns>True if token is new line; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.IsName(System.String)">
            <summary>
            Indicates whether token is an attribute or tag name.
            </summary>
            <param name="token">Token to check.</param>
            <returns>True if token is good for name; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.IsStartName(System.String)">
            <summary>
            Indicates whether token is good to be in the start of an attribute or tag name.
            </summary>
            <param name="token">Token for checking.</param>
            <returns>True if token is good for start name; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.IsValueData(System.String)">
            <summary>
            Indicates whether token is good to be part of an attribute value.
            </summary>
            <param name="token">Token to check.</param>
            <returns>True if token is good for attribute value; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractTillEndToken(System.String)">
            <summary>
            Overloaded Helper method. Extracts from stream data until specified by user token.
            </summary>
            <param name="end">Token which ends read operation.</param>
            <returns>String between start point and end token.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractTillEndToken(System.String,System.Boolean)">
            <summary>
            Helper method. Extracts from stream data until specified by user token.
            </summary>
            <param name="end">Token which ends read operation.</param>
            <param name="bAddEnd">Indicates whether to include end token into returned string.</param>
            <returns>String between start point and end token.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractTillOneEndTokens(System.String[],System.String@)">
            <summary>
            Overloaded Helper method. Extracts text from stream until the end token is reached.
            End token can be any item from ends array.
            </summary>
            <param name="ends">Array of end tokens.</param>
            <param name="found">Found end token.</param>
            <returns>Returns extracted text until end token.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractTillOneEndTokens(System.String[],System.Boolean,System.String@)">
            <summary>
            Helper method. Extracts text from stream until the end token is reached.
            End token can be any item from ends array.
            </summary>
            <param name="ends">Array of end tokens.</param>
            <param name="bAddEnd">Indicates whether to include end token into output string.</param>
            <param name="found">Found end token.</param>
            <returns>Returns extracted text until end token.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractWhiteSpace">
            <summary>
            Extracts whitespace from all whitespace tokens.
            </summary>
            <returns>Returns extracted whitespace from stream.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractNewLine">
            <summary>
            Extracts new line from the token.
            </summary>
            <returns>Returns extracted new line from stream.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractTagStart">
            <summary>
            Extract tag name from stream.
            </summary>
            <returns>Tag name.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractName">
            <summary>
            Extracts name from stream.
            </summary>
            <returns>Extracted name.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractDefinition">
            <summary>
            Extracts definitions from stream.
            </summary>
            <returns>Extracted definition.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractComment">
            <summary>
            Extracts comment from stream.
            </summary>
            <returns>Extracted comment.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractEndOfTag">
            <summary>
            Extracts end of tag symbol.
            </summary>
            <returns>Extracted text from current position until end of tag symbol.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractMarkedSection">
            <summary>
            Extracts marked section from stream.
            </summary>
            <returns>Value of marked section.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractEntity">
            <summary>
            Extracts entity from stream and returns it as unicode char.
            If entity is not recognized, returns tested text.
            </summary>
            <returns>Entity to unicode symbol or text.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractNumberEntity">
            <summary>
            Extracts entity where it was written as integer value.
            </summary>
            <returns>Entity as unicode symbol or the unrecognized text.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractText">
            <summary>
            Extracts text from stream until next element for parsing.
            </summary>
            <returns>Extracted text.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractAttributeValue">
            <summary>
            Extracts attribute value.
            </summary>
            <returns>Value of attribute.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.SkipToAttrValueBegin">
            <summary>
            Skips all bad symbols before attribute value.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.SkipToNameBegin">
            <summary>
            Skips all bad symbols after '&lt;'.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ParseTokenIfText">
            <summary>
            Parses data if next will be text.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ParseTokenIfTag">
            <summary>
            Parses data if next will be tag.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ParseTokenIfAttribute">
            <summary>
            Parses data if next will be attribute.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ParseTokenIfCDataElement">
            <summary>
            Parses data if next will be CData.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ReadToken">
            <summary>
            Reads one token.
            </summary>
            <returns>Value of the token.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.ExtractDataFromCDATA(System.String)">
            <summary>
            Extracts data from CDATA block.
            </summary>
            <param name="data">Income data.</param>
            <returns>Real data of CDATA block.</returns>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.Encoding">
            <summary>
            Gets or sets the encoding of currently opened stream for tokenizing.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.TokenString">
            <summary>
            Returns the last extracted token.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.Token">
            <summary>
            Returns the last extracted token's type.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.Entities">
            <summary>
            Gets or sets the dictionary of entities which must be converted to unicode chars.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.CDataElement">
            <summary>
            CData element which must be found by parser for closing CDATA section of
            stream and start work in proper manner.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.Position">
            <summary>
            Parser point. Parser has four states with their own parse algorithms.
            This property is used for manually switching from one parse algorithm to another.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer.IsEof">
            <summary>
            Indicates whether the end of file is reached.
            </summary>
            <returns>True if end of file.</returns>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML">
            <summary>
            Class from HTMLParser (HTML->XHTML).
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.m_bSkipEvents">
            <summary>
            Indicates whether to raise event.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.m_parser">
            <summary>
            Corresponding for tokens of the document.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.m_writer">
            <summary>
            Writes XHTML document.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.m_contextStack">
            <summary>
            Stack for holding open tags.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.m_config">
            <summary>
            Configurator.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.m_root">
            <summary>
            Root element of the document.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.m_skipError">
            <summary>
            Flag indicates whether to skip bad situations or throw an exception.
            Default is skip.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.m_prefixes">
            <summary>
            Array of prefixes in the document.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.#ctor">
            <summary>
            Overloaded. Hides private constructor from end user.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.#ctor(Syncfusion.HTMLUI.Base.TokenStream,System.Xml.XmlWriter)">
            <summary>
            Creates a class with default configuration.
            Class gets input stream and output writer.
            </summary>
            <param name="input">Input stream.</param>
            <param name="output">Output writer.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.#ctor(Syncfusion.HTMLUI.Base.TokenStream,System.Xml.XmlWriter,Syncfusion.HTMLUI.Base.Parser.HTML.HTMLConfig,Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement)">
            <summary>
            Main constructor which allows the user to control all aspects of class creation.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.OnQuietModeChanged">
            <summary>
            Quiet mode property changed.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.RaiseQuietModeChangedEvent">
            <summary>
            Raises quiet mode event.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.CheckSubElements(Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement,System.String,System.Collections.IDictionary)">
            <summary>
            Returns a list of elements that MUST BE opened to allow current element
            at curent position.
            </summary>
            <param name="probe">Element object.</param>
            <param name="elementName">Name of the element.</param>
            <param name="probed"></param>
            <returns>List of elements that MUST BE opened to allow current element
            at curent position.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.iCheckAndAdjust(System.String,System.Boolean,System.Collections.IDictionary,Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement@,System.Collections.Stack@)">
            <summary>
            Indicates whether to check tag and adjust if needed.
            </summary>
            <param name="elementName"></param>
            <param name="tryClose"></param>
            <param name="probedToOpen"></param>
            <param name="resElement"></param>
            <param name="writtenElements"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.CheckAndAdjust(System.String)">
            <summary>
            Checks if the specified elementName is allowed in the current context
            and adjusts it as necessary.
            Function returns element describing the elementName or NULL if there is no such element.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.CheckAndAdjustEndTag(System.String)">
            <summary>
            Checks and adjusts tag for validity.
            </summary>
            <param name="fullElementName"></param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.RecognizeToken(Syncfusion.HTMLUI.Base.Parser.HTML.ParserToken,System.String@,System.Collections.Specialized.StringCollection,System.Boolean@)">
            <summary>
             Recognizes token and invokes the corresponding method.
            </summary>
            <param name="tok"></param>
            <param name="attributeName"></param>
            <param name="writtenAttributes"></param>
            <param name="inStartTag"></param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.DetectFileEncoding(Syncfusion.HTMLUI.Base.Parser.HTML.HTMLTokenizer)">
            <summary>
            Detects the encoding of the file.
            </summary>
            <param name="parser">String for encoding recognizing.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.Convert">
            <summary>
            Main method. Converts HTML document into XHTML document.
            </summary>
            <returns>Converts HTML to XHTML.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.CheckPrefix(System.String)">
            <summary>
            Checks if the specified tag name holds a prefix.
            Also adds prefix to collection.
            </summary>
            <param name="value">Name of the tag.</param>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.QuietMode">
            <summary>
            Indicates whether quiet mode is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.ContextElement">
            <summary>
            Returns the element from the stack.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.SkipError">
            <summary>
            Flag indicates whether to skip bad situations or throw an exception.
            Default is skip.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.Prefixes">
            <summary>
            Returns an array of prefixes that occurred in the document.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.Encoding">
            <summary>
            Returns the encoding used for data converting.
            </summary>
        </member>
        <member name="E:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.QuietModeChanged">
            <summary>
            Event that is to be raised when mode is changed.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.Context">
            <summary>
            Helper class for parsing HTML document.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.Context._element">
            <summary>
            HTML element which is parsing.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.Context._xmlIsland">
            <summary>
            True if element is NULL.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.Context._fullElementName">
            <summary>
            Name of the tag.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.Context.#ctor">
            <summary>
            Hide default constructor from user hands.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.Context.#ctor(Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement)">
            <summary>
            Constructor with an element instance as argument.
            </summary>
            <param name="element">Element object.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.Context.#ctor(System.String)">
            <summary>
            Constructor with the specfied name of the element as argument.
            </summary>
            <param name="fullElementName">Name of the element.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.Context.#ctor(Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement,System.String)">
            <summary>
            Constructor with the name of the element and element instance as argument.
            </summary>
            <param name="element">Element object.</param>
            <param name="fullElementName">Name of the element.</param>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.Context.Element">
            <summary>
            Returns the HTML element.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.Context.IsXmlIsland">
            <summary>
            Indicates whether element is NULL.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Parser.HTML.HTMLToXML.Context.FullName">
            <summary>
            Returns the name of the element.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.HTMLUIParser">
            <summary>
            This class provides HTML Parser functionality. It makes the HTML
            well formatted and safe for use as XML document.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.HTMLUIParser.DEF_BUFFER_SIZE">
            <summary>
            Default size of the stream internal buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.HTMLUIParser.m_convertor">
            <summary>
            Converter of HTML document to xHTML document.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.Parse(System.IO.Stream)">
            <summary>
            Overloaded. Converts HTML data in the stream to xHTML format.
            </summary>
            <param name="data">Stream containing HTML data.</param>
            <returns>Html in xHTML format.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.Parse(Syncfusion.HTMLUI.Base.TokenStream)">
            <summary>
            Main method. Parses, checks and converts HTML document.
            </summary>
            <param name="tokenStream">Object containing data.</param>
            <returns>HTML data in xHTML format.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.ParseString(System.String)">
            <summary>
            Builds HTML object tree from the string text.
            </summary>
            <returns>Root element.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.ConvertToXML(System.String)">
            <summary>
            Overloaded. Converts HTML to XHTML.
            </summary>
            <returns>String of the parsed document.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.ConvertToXML(Syncfusion.HTMLUI.Base.TokenStream)">
            <summary>
            Converts HTML document to XHTML document and loads the result into XML document.
            </summary>
            <param name="stream">Source of data.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.ConvertToXHTML(Syncfusion.HTMLUI.Base.TokenStream)">
            <summary>
            Converts HTML to XHTML.
            </summary>
            <returns>String of the parsed document.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.CreateTag(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            Creates a tag.
            </summary>
            <param name="document">Storage of the data.</param>
            <param name="parentName">Name of the parent tag.</param>
            <param name="elementName">Name of the element.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.DetachTag(System.Xml.XmlDocument,System.String)">
            <summary>
            Detaches a tag from the document.
            </summary>
            <param name="document">Storage of the data.</param>
            <param name="xPath">XPath pattern for detaching elements.</param>
            <returns>Node after detaching child nodes.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.AttachNodeToDocument(System.Xml.XmlDocument,System.String,System.Xml.XmlNode)">
            <summary>
            Attaches node to the document.
            </summary>
            <param name="document">Storage of data.</param>
            <param name="parentName">Name of the parent element.</param>
            <param name="node">Name of the element.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.MoveTagsToNewParent(System.Xml.XmlNode,System.Xml.XmlNodeList)">
            <summary>
            Moves nodes from the list to the defined node.
            </summary>
            <param name="node">Owner of the nodes in the list.</param>
            <param name="list">Nodes which must be replaced.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.CheckCorrectDocument(System.Xml.XmlDocument)">
            <summary>
            Parses document and converts it to a valid HTML document.
            </summary>
            <param name="document">XML document for checking.</param>
            <returns>Checked document.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.RemoveBadTags(System.Xml.XmlNode,System.String,Syncfusion.HTMLUI.Base.Parser.HTML.HTMLElement)">
            <summary>
            Removes bad tags from the document.
            </summary>
            <param name="node">Current node for removing tags.</param>
            <param name="xPath">xPath pattern.</param>
            <param name="element">Element containing tags.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.CheckCorrectDocumentHTMLTag(System.Xml.XmlDocument)">
            <summary>
            Checks if document has two root elements HTML, if yes - repairs that bug.
            </summary>
            <param name="document">XML document object for checking.</param>
            <returns>Checked object.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.LoadDocument(System.Xml.XmlDocument,System.IO.Stream)">
            <summary>
            Loads parsed data into XML document object.
            </summary>
            <param name="document">XML Document object containing output data.</param>
            <param name="stream">Stream with parsed data.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.HTMLUIParser.InfillPrefixes(System.Xml.XmlNamespaceManager,System.Collections.ArrayList)">
            <summary>
            Infills namespaces into namespace manager.
            </summary>
            <param name="manager">Namespace manager.</param>
            <param name="prefixes">Array of prefixes.</param>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.HTMLUIParser.Encoding">
            <summary>
            Returns the encoding used by this parser.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Parser.HTML.ParserPosition">
            <summary>
            Type indicates where parser is currently.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserPosition.Text">
            <summary>
            Before text token.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserPosition.Tag">
            <summary>
            Before tag token.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserPosition.Attribute">
            <summary>
            Before attribute token.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserPosition.CData">
            <summary>
            Before CData element.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Parser.HTML.ParserToken">
            <summary>
             Indicates which type of data is currently being parsed.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserToken.None">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserToken.Text">
            <summary>
             Token is text.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserToken.Space">
            <summary>
            Token is whitespace.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserToken.ProcessingInstruction">
            <summary>
            Token is definition (&lt;!...&gt;).
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserToken.MarkedSection">
            <summary>
            Token is &lt;![ .. ]&gt;.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserToken.Comment">
            <summary>
            Token is comment.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserToken.StartTag">
            <summary>
            Token is &lt;.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserToken.StartTagEnd">
            <summary>
             Token is &gt;.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserToken.StartTagClosedEnd">
            <summary>
            Token is /&gt;.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserToken.EndTag">
            <summary>
            Token is &lt;/.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserToken.Attribute">
            <summary>
            Token is attribute name.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Parser.HTML.ParserToken.AttributeValue">
            <summary>
            Token is attribute value.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.IResourceProvider">
            <summary>
            Interface that declares the functionality for objects
            exposing data of the document.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.IResourceProvider.GetDocumentBody">
            <summary>
            Searches for a body of the document and returns data contained in it.
            </summary>
            <returns>Data of document's body if found; Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.IResourceProvider.ResourceExists(System.String,System.String@,Syncfusion.HTMLUI.Base.ResourceType@)">
            <summary>
            Indicates whether such resource exists. Checks as local file as remote resource.
            </summary>
            <param name="path">Path for searching.</param>
            <param name="fullPath">Full path to the resource.</param>
            <param name="type">Type of resource.</param>
            <returns>True if resource found; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.IResourceProvider.GetResource(System.String)">
            <summary>
            Overloaded. Searches for resource by it's location inside of document.
            </summary>
            <param name="path">Path to the resource.</param>
            <returns>Data of resource if found; Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.IResourceProvider.GetResource(System.String,Syncfusion.HTMLUI.Base.ResourceType)">
            <summary>
            Searches for resource by it's location inside of document.
            </summary>
            <param name="fullPath">Full path to the resource.</param>
            <param name="type">Type of resource.</param>
            <returns>Data of resource if found; Null otherwise.</returns>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.IResourceProvider.IsFileName">
            <summary>
            Indicates whether input HTML document is loaded from file.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.IResourceProvider.IsUri">
            <summary>
            Indicates whether input HTML document is loaded by Uri.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.IResourceProvider.IsStream">
            <summary>
            Indicates whether input HTML document is loaded from stream.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.IResourceProvider.FileName">
            <summary>
            Returns the source for parser is file, otherwise must be null.
            Property has higher priority
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.IResourceProvider.Uri">
            <summary>
            Returns the source for parser specified by URI, otherwise must be null.
            Second property by priority for source checks.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.IResourceProvider.Stream">
            <summary>
            Returns the source specified as stream, otherwise must be null.
            Has lowest priority.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.IResourceProvider.RootDirectory">
            <summary>
            Gets or sets root directory for the document.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.IResourceProvider.Format">
            <summary>
            Returns the format of resource provider.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.BufferedStreamEx">
            <summary>
            Special wrapper which allows users to control access to stream
            and cache data. Our implementation fixes the bug of .NET BufferedStream
            class: on setting Position property, class resets internal cache.
            Our class detects situations when reset of cache is not needed.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.BufferedStreamEx._DefaultBufferSize">
            <summary>
            Default buffer allocation size.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.BufferedStreamEx._s">
            <summary>
            Underlying stream. Close sets _s to NULL.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.BufferedStreamEx._buffer">
            <summary>
            Shared read / write buffer. Alloc on first use.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.BufferedStreamEx._readPos">
            <summary>
            Reads pointer within shared buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.BufferedStreamEx._readLen">
            <summary>
            Number of bytes read in buffer from _s.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.BufferedStreamEx._writePos">
            <summary>
            Writes pointer within shared buffer.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.BufferedStreamEx._bufferSize">
            <summary>
            Length of internal buffer, if its allocated.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.BufferedStreamEx._streamPos">
            <summary>
            Stream position on moment of buffer read.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.BufferedStreamEx.#ctor">
            <summary>
            Default constructor. Hidden to class users.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.BufferedStreamEx.#ctor(System.IO.Stream)">
            <summary>
            Overloaded constructor. Initializes class by an instance of stream and DefaultBufferSize == 4096.
            </summary>
            <param name="stream">Stream which our class must wrap.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.BufferedStreamEx.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Initializes class by an instance of stream and user defined cache size.
            </summary>
            <param name="stream">Stream which our class must wrap.</param>
            <param name="bufferSize">User defined cache size.</param>
            <exception cref="T:System.ArgumentException">Stream does not support Read and Write operations.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">BufferSize is equal to or less than zero.</exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.BufferedStreamEx.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data from stream. If data is cached, then class will not call wrapped
            stream and simply return copy of cached data.
            </summary>
            <param name="array">Output buffer.</param>
            <param name="offset">Offset in output buffer where data from stream must be placed.</param>
            <param name="count">Count of bytes which class must return.</param>
            <returns>Quantity of read bytes.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.BufferedStreamEx.ReadByte">
            <summary>
            Reads a byte from the underlying stream. Returns the byte cast to an integer;
            -1 if reading from the end of the stream.
            </summary>
            <returns>Read byte.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.BufferedStreamEx.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes portion of data into wrapped stream. If data can be placed into
            cache, then it will be there and only on flush operation data will be
            saved to wrapped stream.
            </summary>
            <param name="array">Array containing data.</param>
            <param name="offset">Offset to the beginning of the portion of data.</param>
            <param name="count">Number of bytes in the portion of data.</param>
            <exception cref="T:System.ArgumentNullException">
            If array or stream is NULL.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If offset or count is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            If array does not contain required elements count.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.BufferedStreamEx.WriteByte(System.Byte)">
            <summary>
            Writes byte of information into stream.
            </summary>
            <param name="value">Value which must be written.</param>
            <exception cref="T:System.ArgumentNullException">
            If stream is NULL.
            </exception>
            <exception cref="T:System.ArgumentException">
            If can't write into stream.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.BufferedStreamEx.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seek operation. On any seek operation not written, data from cache will be
            flushed to wrapped stream. It is better to use position property if optimized for
            cache use.
            </summary>
            <param name="offset">New offset of stream.</param>
            <param name="origin">Start point of seek operation.</param>
            <returns>Current position.</returns>
            <exception cref="T:System.ArgumentNullException">
            If stream is NULL.
            </exception>
            <exception cref="T:System.ArgumentException">
            If can't seek in the stream.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.BufferedStreamEx.Close">
            <summary>
            Saves all data from cache and closes stream.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.BufferedStreamEx.Flush">
            <summary>
            Flushes data. Resets cache.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            When stream is NULL.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.BufferedStreamEx.FlushRead">
            <summary>
            Reading is done by blocks from the file, but someone could read
            one byte from the buffer then write. At that point, the OS's file
            pointer is out of sync with the stream's position. All write
            functions should call this function to preserve the position in the file.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.BufferedStreamEx.FlushWrite">
            <summary>
            Writes are buffered. Anytime the buffer fills up
            (_writePos + delta > _bufferSize) or the buffer switches to reading
            and there is dirty data (_writePos > 0), this function must be called.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.BufferedStreamEx.SetLength(System.Int64)">
            <summary>
            Sets the length of the wrapped stream.
            </summary>
            <param name="value">New length of stream.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When value is less than zero.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            When stream is NULL.
            </exception>
            <exception cref="T:System.ArgumentException">
            If can't seek or can't write into stream.
            </exception>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.BufferedStreamEx.CanRead">
            <summary>
            Indicates whether data can be read from wrapped stream.
            True if data can be read.
            </summary>
            <exception cref="T:System.ArgumentNullException">Class instance was disposed.</exception>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.BufferedStreamEx.CanWrite">
            <summary>
            Indicates whether data can be written to wrapped stream.
            </summary>
            <exception cref="T:System.ArgumentNullException">Class instance was disposed.</exception>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.BufferedStreamEx.CanSeek">
            <summary>
            Indicates whether wrapped stream supports seek operations.
            </summary>
            <exception cref="T:System.ArgumentNullException">Class instance was disposed.</exception>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.BufferedStreamEx.Length">
            <summary>
            Returns the length of wrapped stream. On property value get class Flush not
            written to stream data.
            </summary>
            <exception cref="T:System.ArgumentNullException">Class instance was disposed.</exception>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.BufferedStreamEx.Position">
            <summary>
            Returns current position of stream. Position can be different when wrapped
            stream, because wrapped stream will point on last byte of
            cached data. On property set not written data flushed to stream.
            </summary>
            <exception cref="T:System.ArgumentNullException">Class instance was disposed.</exception>
            <exception cref="T:System.ArgumentException">Wrapped stream does not support seek operation.</exception>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.BufferedStreamEx.BaseStream">
            <summary>
            Returns the reference on stream wrapped by BufferStreamEx.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.NewLineStyle">
            <summary>
            Specifies a new line in different OS.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.NewLineStyle.Windows">
            <summary>
            Windows new line style.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.NewLineStyle.Mac">
            <summary>
             Mac new line style.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.NewLineStyle.Unix">
            <summary>
            Unix new line style.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.NewLineStyle.Control">
            <summary>
             Control new line style.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.TokenStream">
            <summary>
            Stream which returns and writes data as string tokens into/from file.
            Stream supports encoding and data buffering.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.DEF_BUFFER_SIZE">
            <summary>
            Stream buffer used for optimizing speed of read/write operations.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.DEF_READ_CHAR_BUFFER_SIZE">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.DEF_TOKEN_SPLITS">
            <summary>
            Array of characters which delimit tokens.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.DEF_MULTI_TOKEN_SPLIT">
            <summary>
            Array of atomic tokens which can take more than one symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream._preambles">
            <summary>
            An array of known preambles of encodings.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream._encodings">
            <summary>
            An array of known encodings.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_iSkippedBytes">
            <summary>
            Count of bytes in the beginning of the stream, that must be skipped. (Preambula)
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_OneSorted">
            <summary>
            Array of sorted split characters - used by BinarySearch method.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_TokenBuffer">
            <summary>
            Temporary storage for token extracting. Used because it does not
            reallocate each string set.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_MultiSorted">
            <summary>
            Array of multi-symbol tokens.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_encoding">
            <summary>
            Encoding that is to be used for read and write operations.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_multiFirst">
            <summary>
            Hash which helps detect multi-symbol token splitters.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_buffer">
            <summary>
            Buffer stream. It can be simply replaced by this reference.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_strEndOfLine">
            <summary>
            New line splitter.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_style">
            <summary>
            Storage of EndLineStyle property.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_maxMultiLen">
            <summary>
            Storage of MaxMultiTokenLength property.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_minMultiLen">
            <summary>
            Storage of MinMultiTokenLength property.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_bCaseSensitive">
            <summary>
            Indicates whether stream extracts multichar token in case sensitive
            or insensitive mode.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_bControlStream">
            <summary>
            Indicates whether class has rights to dispose m_buffer
            variable; otherwise Internal stream does not belong to class and must
            be freed by user.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_stack">
            <summary>
            Stack that is to be used for multi-character token extract operations.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_readCharBuffer">
            <summary>
            Temporary buffer for extracting characters from source stream.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_chPeekChar">
            <summary>
            Variable store extracted from stream character on peek operation.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_bPeekChar">
            <summary>
            Indicates whether cache contains some data.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_strPeekToken">
            <summary>
            Variable store token extracted from stream by Peek operation.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.m_bPeekToken">
            <summary>
            Indicates whether cache contains some data.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.GetEnumerator">
            <summary>
            Returns enumerator which gives us stream data by tokens.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.#ctor(System.String)">
            <summary>
            Overloaded. Constructor with a file name in open mode.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.#ctor(System.String,System.IO.FileMode)">
            <summary>
            Constructor allows to control mode of file open operation.
            </summary>
            <param name="fileName">File name</param>
            <param name="mode">A FileMode constant that determines how to open or create the file.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Constructor allows to control File open mode and access flags.
            </summary>
            <param name="fileName">File name</param>
            <param name="mode">A FileMode constant that determines how to open or create the file. </param>
            <param name="access">A FileAccess constant that determines how the file can be
            accessed by the TokenStream object. This gets the CanRead and CanWrite properties
            of the FileStream object. CanSeek is true if path specifies a disk file</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Constructor allows to override file mode, access and share flags.
            </summary>
            <param name="fileName">File name</param>
            <param name="mode">A FileMode constant that determines how to open or create the file. </param>
            <param name="access">A FileAccess constant that determines how the file can be
            accessed by the TokenStream object. This gets the CanRead and CanWrite properties
            of the FileStream object. CanSeek is true if path specifies a disk file</param>
            <param name="share">A FileShare constant that determines how the file will be shared
            by processes</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
            <summary>
            Open stream. Constructor allows to specify parameter of stream open.
            </summary>
            <param name="fileName">File name</param>
            <param name="mode">A FileMode constant that determines how to open or create the file. </param>
            <param name="access">A FileAccess constant that determines how the file can be
            accessed by the TokenStream object. This gets the CanRead and CanWrite properties
            of the FileStream object. CanSeek is true if path specifies a disk file</param>
            <param name="share">A FileShare constant that determines how the file will be shared
            by processes</param>
            <param name="bufferSize">Size of internal buffer used for read/write operations
            optimizations</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.#ctor(System.IO.Stream)">
            <summary>
            Constructor. Initializes new object.
            </summary>
            <param name="input">Input data Stream</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Creates Token stream from other stream.
            Encoding of input stream class is detected automatically.
            </summary>
            <param name="input">source stream</param>
            <param name="controlStream">Indicates whether TokenStream instance must close input stream on
            own.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates Token stream from other stream with user specified encoding.
            </summary>
            <param name="input">input stream</param>
            <param name="encoding">If encoding of input stream known then you can
            specify it; otherwise send null value for auto-detection</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>
            Creates Token stream from other stream with user specified encoding.
            Constructor indicates whether to specify class control input stream.
            </summary>
            <param name="input">input stream</param>
            <param name="encoding">If encoding of input stream is known then you can
            specify it; otherwise send null value for auto-detection</param>
            <param name="controlStream">Indicates whether TokenStream instance must close input stream on
            own.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.#ctor(System.IO.Stream,System.Boolean,System.Int32)">
            <summary>
            Constructor. Initializes new object.
            Encoding of input stream class is detected automatically.
            </summary>
            <param name="input">Input data Stream</param>
            <param name="controlStream">Indicates whether TokenStream instance must close input stream on
            own.</param>
            <param name="bufferSize">Size of the Stream</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Constructor. Initializes new object.
            </summary>
            <param name="input">Input data Stream</param>
            <param name="encoding">If encoding of input stream is known then you can
            specify it; otherwise send null value for auto-detection</param>
            <param name="controlStream">Indicates whether TokenStream instance must close input stream on
            own.</param>
            <param name="bufferSize">Size of the Stream</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.FromString(System.String)">
            <summary>
            Initializes TokenStream from string input.
            </summary>
            <param name="buffer">String with input data.</param>
            <returns>TokenStream Object</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.Dispose">
            <summary>
            Clears resources of Token stream class.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes data into Stream.
            </summary>
            <param name="buffer">Data which will be written.</param>
            <param name="offset">Start Position</param>
            <param name="count">Number of Symbols</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.Peek">
            <summary>
            Peeks one byte from stream.
            </summary>
            <returns>-1 if end of stream is reached; one byte from stream otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.PeekChar">
            <summary>
            Extracts one char from stream.
            </summary>
            <returns>-1 if end of stream is reached; integer value of character otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.PeekToken">
            <summary>
            Peeks Token from the Stream.
            </summary>
            <returns>string.Empty or null if end of stream is reached; extracted token otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.Read">
            <summary>
            Reads one byte from stream.
            </summary>
            <returns>-1 if end of stream is reached; one byte from stream otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.ReadChar">
            <summary>
            Reads one char from stream and shifts position of stream to next character.
            </summary>
            <returns>-1 if end of stream; integer value of character otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.ReadLine">
            <summary>
            Reads single line.
            </summary>
            <returns>String.Empty if end of stream is reached; line from file otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.SkipLine">
            <summary>
            Moves current position in the stream to the next line.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.ReadToken">
            <summary>
            Reads one token from stream.
            </summary>
            <returns>Null if end of stream is reached; token string otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.ReadTokens(System.String[],System.Int32,System.Int32)">
            <summary>
            Reads multiple tokens from stream into array.
            </summary>
            <param name="buffer">Array where extracted tokens must be placed.</param>
            <param name="position">Start position in the array.</param>
            <param name="length">Quantity of tokens to extract.</param>
            <returns>Quantity of extracted tokens.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
            Overloaded. Reads data from the Stream.
            </summary>
            <param name="buffer">Source Stream</param>
            <param name="offset">Start position</param>
            <param name="count">Number of symbols</param>
            <returns>number of extracted characters.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads data from Stream.
            </summary>
            <param name="buffer">Input Stream</param>
            <param name="offset">Start Position</param>
            <param name="count">Number of Symbols.</param>
            <returns>Number of extracted bytes.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.IsSplitTokenChar(System.Char)">
            <summary>
            Indicates whether character belongs to one symbol tokens separators.
            </summary>
            <param name="ch">Character to test</param>
            <returns>True if character belongs to split chars; false otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.GetMultiToken(System.Char[],System.String@)">
            <summary>
            Checks character from array for multi-symbols tokens and returns the
            quantity of used characters from array for token. It also returns the token.
            In case, nothing is found, it returns -1. It tries to find the longest token
            from the list.
            </summary>
            <param name="ch">Characters to check.</param>
            <param name="token">Found token.</param>
            <returns>Used characters from input array; -1 otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.ConvertToLinePosition(System.Int64,System.Int32@,System.Int32@)">
            <summary>
            Converts offset to Line number and position in line.
            </summary>
            <param name="offset">Offset which must be converted to line and position values</param>
            <param name="line">Line part of offset.</param>
            <param name="position">Position part of offset.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.GetNewLineString(Syncfusion.HTMLUI.Base.NewLineStyle)">
            <summary>
            Converts enumeration to its string representation.
            </summary>
            <param name="value">Value to convert.</param>
            <returns>End line string.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.DetectFileNewLineStyle">
            <summary>
            Checks file and tries to detect which line end code is used in file.
            </summary>
            <returns>In case of error, NewLineStyle.Windows style is returned.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.DetectFileEncoding">
            <summary>
            Detects file encoding.
            </summary>
            <returns>Detected file encoding by preambles.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.CompareArrays(System.Byte[],System.Byte[])">
            <summary>
            Compares two arrays and returns the result.
            </summary>
            <param name="source">Source array</param>
            <param name="preamble">Array with preamble symbols</param>
            <returns>0 if they are identical; -1 if source array is less than
            preamble array.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.Close">
            <summary>
            Closes current file.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.Flush">
            <summary>
            Flushes changes from internal buffers to source streams.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets position within the stream.
            </summary>
            <param name="offset">Start position</param>
            <param name="origin">Indicates the reference point that is to be used to obtain the new position.</param>
            <returns>New position in stream.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.SeekOnTokenLength(System.String,System.Boolean,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the Stream.
            </summary>
            <param name="token">Token</param>
            <param name="bBack">Indicates whether to return back.</param>
            <param name="origin">Indicates the reference point that is to be used to obtain the new position.</param>
            <returns>New position in stream.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the Stream.
            </summary>
            <param name="value">Length of the Stream.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.GetLinesCount(System.Int64,System.Int64)">
            <summary>
            Calculates the number of lines between two positions in the file.
            </summary>
            <param name="startPos">Start position for calculating.</param>
            <param name="endPos">End position for calculating.</param>
            <returns>Count of lines.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.BuildFastCharTree(System.Collections.Hashtable,System.String[])">
            <summary>
            Creates a tree of FastChar objects which allows to search faster
            any word from stream by characters. '\uffff' - symbol indicates end of string
            from source array.
            </summary>
            <param name="source">Hash table which will store FastChar's objects.</param>
            <param name="value">Array of strings.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.BuildFastCharTreeEx(System.Collections.Hashtable,System.String[])">
            <summary>
            Creates a tree of FastChar objects which allows to search faster
            any word from stream by characters. '\uffff' - symbol indicates end of string
            from source array. Alternative method of FastChar tree building.
            </summary>
            <param name="source">Hash table which will store FastChar's objects.</param>
            <param name="value">Array of strings.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.GetFastChar(System.Char)">
            <summary>
            Based on the CaseSensitive property value, returns case sensitive or
            case insensitive FastChar class instance.
            </summary>
            <param name="ch">Initializes new instance by character.</param>
            <returns>Reference on new instance of FastChar class.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.CalculateLineCount(System.String)">
            <summary>
            Calculates and returns the number of lines in stream.
            </summary>
            <returns>Returns total lines count in file.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.CalculateLineCount(System.String,System.Int64,System.Int32@)">
            <summary>
            Calculates the number of lines in stream till specified position.
            </summary>
            <param name="endOfLine">String which is interpreted as end of line.</param>
            <param name="tillOffset">Make calculations till specified offset.</param>
            <param name="position">Returns position part of calculation.</param>
            <returns>Number of lines in area from current Position till Offset value.</returns>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.MaxMultiTokenLength">
            <summary>
            Returns the maximum size of multi-symbol token.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.MinMultiTokenLength">
            <summary>
            Returns the minimum size of multi-symbol token.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.OneCharTokens">
            <summary>
            Gets or sets an array of characters which can split tokens in stream.
            Each symbol from this array will be returned by Stream as token
            with one char, for more complex constructions must use
            MultiCharTokens property values.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.MultiCharTokens">
            <summary>
            Gets or sets multi-symbol atomic tokens. This property can used by
            top-level abstractions for extracting special lexems, like: ++, --,
            +=, -=, !=, ==, *=, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.CaseSensitive">
            <summary>
            Indicates whether Multi-character Tokens are case sensitive or not.
            Default is case sensitive - TRUE.
            This property greatly reduces performance of TokenStream class
            an hence used only where it is really needed.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.Encoding">
            <summary>
            Gets or sets the encoding that is to be used for file reading.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.Position">
            <summary>
            Gets or sets position in stream.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.CanSeek">
            <summary>
            Indicates whether TokenStream can Seek.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.CanRead">
            <summary>
            Indicates whether TokenStream can Read.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.CanWrite">
            <summary>
            Indicates whether TokenStream can Write.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.Length">
            <summary>
            Returns the number of symbols in our Stream.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.NewLine">
            <summary>
            On end of line, string update recalculates lines in stream.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.EndLineStyle">
            <summary>
            Gets or sets End line style ( For different OS ).
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.TokenStream.StreamTokenEnum">
            <summary>
            This class implements enumerator which uses its own algorithm for extracting
            data from input stream. Algorithm is a little faster than used in
            TokenStream class, but it does not support multi-symbols tokens splitter.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.StreamTokenEnum.m_parent">
            <summary>
            Parent TokenStream.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.StreamTokenEnum.m_lPosition">
            <summary>
            Current Position Of Reading.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.StreamTokenEnum.#ctor">
            <summary>
            Empty Constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.StreamTokenEnum.Finalize">
            <summary>
            Destructor. Disposes all resources.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.StreamTokenEnum.#ctor(Syncfusion.HTMLUI.Base.TokenStream)">
            <summary>
            Constructor with specified parent.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.StreamTokenEnum.Dispose">
            <summary>
            Clears all resources.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.StreamTokenEnum.Reset">
            <summary>
            At the beginning Of Enumeration, clears the buffer.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.StreamTokenEnum.MoveNext">
            <summary>
            NOTE : newline - is one token
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.StreamTokenEnum.Current">
            <summary>
            Returns current token.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.TokenStream.FastChar">
            <summary>
            This class is used for multicharacter token search operations. It holds
            case sensitive information.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.FastChar.m_ch">
            <summary>
            Current character from the Stream.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.FastChar.m_bHasEnd">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.TokenStream.FastChar.m_subchars">
            <summary>
            Holds the rest of characters in the word.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.FastChar.#ctor">
            <summary>
            Default constructor diasbled for end user.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.FastChar.#ctor(System.Char)">
            <summary>
            Overloaded constructor.
            </summary>
            <param name="ch"></param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.FastChar.#ctor(System.Char,System.Collections.IDictionary)">
            <summary>
            Constructor for inheritors.
            </summary>
            <param name="ch">char</param>
            <param name="dict">Collection for sub-chars</param>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.FastChar.Char">
            <summary>
            Returns one character from the stream.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.FastChar.HasEnd">
            <summary>
            Indicates whether SubChars collection contains string end symbol '\uffff'.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.TokenStream.FastChar.SubChars">
            <summary>
            Returns sub-chars ( the rest of chars in the word )
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.TokenStream.FastInsensChar">
            <summary>
            This class is used for multi-symbol token search operation. It holds
            case insensitive information.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.FastInsensChar.#ctor(System.Char)">
            <summary>
            Creates new object.
            </summary>
            <param name="ch">Character symbol.</param>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.TokenStream.CaseInsensCharProvider">
            <summary>
            Fixes Microsoft bug for Case insensitive types. Microsoft provides only
            case insensitive hash provider for strings; characters by itself are not supported.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.CaseInsensCharProvider.GetHashCode(System.Object)">
            <summary>
            Calculates hash code for character.
            </summary>
            <param name="obj">Object for which hash must be calculated</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.TokenStream.CaseInsensCharComparer">
            <summary>
            This class provides the functionality for comparing two characters. It fixes Microsoft
            bug: case insensitive help provided only for strings.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.CaseInsensCharComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two characters by its values - case insensitive
            </summary>
            <param name="x">first value</param>
            <param name="y">second value</param>
            <returns>0 - if equal; -1 if x is less than y; 1 if x is greater than y</returns>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.TokenStream.ArrayLengthComparer">
            <summary>
            This class helps users to sort arrays by Length property value.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.TokenStream.ArrayLengthComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two Array classes by Length property values.
            </summary>
            <param name="x">first parameter</param>
            <param name="y">second parameter</param>
            <returns>0 - if equal; -1 if x is less than y; 1 if x is greater than y</returns>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Utility.ColorUtil">
            <summary>
            Summary description for ColorConvert.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_clrBackground">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_clrSelection">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_clrControl">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_clrPressed">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_clrChecked">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_clrBorder">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_brushBack">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_brushSelect">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_brushCtrl">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_brushPress">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_brushCheck">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_brushBorder">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_brushContrast1">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_brushContrast2">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_brushContrast3">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_penBack">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_penSelect">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_penCtrl">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_penPress">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_penCheck">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.ColorUtil.m_penBorder">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.#cctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.CalculateMainColors">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.SystemEvents_DisplaySettingsChanged(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender">Event sender.</param>
             <param name="e">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.SystemEvents_PaletteChanged(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender">Event sender.</param>
             <param name="e">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.SystemEvents_UserPreferenceChanged(System.Object,Microsoft.Win32.UserPreferenceChangedEventArgs)">
             <summary>
            
             </summary>
             <param name="sender">Event sender.</param>
             <param name="e">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.HSLToRGB(System.Single,System.Single,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            HSLs to RGB.
            </summary>
            <param name="h">The h.</param>
            <param name="s">The s.</param>
            <param name="l">The l.</param>
            <param name="r">The r.</param>
            <param name="g">The g.</param>
            <param name="b">The b.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.getRGBValue(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>
             <param name="n1"></param>
             <param name="n2"></param>
             <param name="hue"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.RGBToHSL(System.Int32,System.Int32,System.Int32,System.Single@,System.Single@,System.Single@)">
            <summary>
            RGBs to HSL.
            </summary>
            <param name="r">The r.</param>
            <param name="g">The g.</param>
            <param name="b">The b.</param>
            <param name="h">The h.</param>
            <param name="s">The s.</param>
            <param name="l">The l.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.CalculateColor(System.Drawing.Color,System.Drawing.Color,System.Int32)">
             <summary>
            
             </summary>
             <param name="front"></param>
             <param name="back"></param>
             <param name="alpha"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.IsKnownColor(System.Drawing.Color,System.Drawing.Color@,System.Boolean)">
            <summary>
            Determines whether [is known color] [the specified color].
            </summary>
            <param name="color">The color.</param>
            <param name="knownColor">Color of the known.</param>
            <param name="useTransparent">if set to <c>true</c> [use transparent].</param>
            <returns>
            	<c>true</c> if [is known color] [the specified color]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.IsSystemColor(System.Drawing.Color,System.Drawing.Color@)">
            <summary>
            Determines whether [is system color] [the specified color].
            </summary>
            <param name="color">The color.</param>
            <param name="knownColor">Color of the known.</param>
            <returns>
            	<c>true</c> if [is system color] [the specified color]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.ColorFromRGBString(System.String)">
            <summary>
            Colors from RGB string.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.GetRValue(System.Int32)">
            <summary>
            Returns the red value of one channel level.
            </summary>
            <param name="color">Integer type color value.</param>
            <returns>Red channel of color.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.GetGValue(System.Int32)">
            <summary>
            Returns green channel level of color.
            </summary>
            <param name="color">Integer type color value.</param>
            <returns>Green channel level of color.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.GetBValue(System.Int32)">
            <summary>
            Returns the blue channel level of color.
            </summary>
            <param name="color">Integer type color value.</param>
            <returns>Blue channel level of color.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.RGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            RGBs the specified r.
            </summary>
            <param name="r">The r.</param>
            <param name="g">The g.</param>
            <param name="b">The b.</param>
            <returns>RGB color in integer</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.ColorUtil.RGB(System.Drawing.Color)">
            <summary>
            RGBs the specified CLR.
            </summary>
            <param name="clr">The CLR.</param>
            <returns>RGB color in integer</returns>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetBackgroundColor">
            <summary>
            Gets the color of the VS net background.
            </summary>
            <value>The color of the VS net background.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetBackgroundBrush">
            <summary>
            Gets the VS net background brush.
            </summary>
            <value>The VS net background brush.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetBackgroundPen">
            <summary>
            Gets the VS net background pen.
            </summary>
            <value>The VS net background pen.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetSelectionColor">
            <summary>
            Gets the color of the VS net selection.
            </summary>
            <value>The color of the VS net selection.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetSelectionBrush">
            <summary>
            Gets the VS net selection brush.
            </summary>
            <value>The VS net selection brush.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetSelectionPen">
            <summary>
            Gets the VS net selection pen.
            </summary>
            <value>The VS net selection pen.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetControlColor">
            <summary>
            Gets the color of the VS net control.
            </summary>
            <value>The color of the VS net control.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetControlBrush">
            <summary>
            Gets the VS net control brush.
            </summary>
            <value>The VS net control brush.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetControlPen">
            <summary>
            Gets the VS net control pen.
            </summary>
            <value>The VS net control pen.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetPressedColor">
            <summary>
            Gets the color of the VS net pressed.
            </summary>
            <value>The color of the VS net pressed.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetPressedBrush">
            <summary>
            Gets the VS net pressed brush.
            </summary>
            <value>The VS net pressed brush.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetPressedPen">
            <summary>
            Gets the VS net pressed pen.
            </summary>
            <value>The VS net pressed pen.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetCheckedColor">
            <summary>
            Gets the color of the VS net checked.
            </summary>
            <value>The color of the VS net checked.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetCheckedBrush">
            <summary>
            Gets the VS net checked brush.
            </summary>
            <value>The VS net checked brush.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetCheckedPen">
            <summary>
            Gets the VS net checked pen.
            </summary>
            <value>The VS net checked pen.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetBorderColor">
            <summary>
            Gets the color of the VS net border.
            </summary>
            <value>The color of the VS net border.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetBorderBrush">
            <summary>
            Gets the VS net border brush.
            </summary>
            <value>The VS net border brush.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetBorderPen">
            <summary>
            Gets the VS net border pen.
            </summary>
            <value>The VS net border pen.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetContrast1">
            <summary>
            Gets the VS net contrast1.
            </summary>
            <value>The VS net contrast1.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetContrast2">
            <summary>
            Gets the VS net contrast2.
            </summary>
            <value>The VS net contrast2.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.ColorUtil.VSNetContrast3">
            <summary>
            Gets the VS net contrast3.
            </summary>
            <value>The VS net contrast3.</value>
        </member>
        <member name="E:Syncfusion.HTMLUI.Base.Utility.ColorUtil.RepaintNeeded">
            <summary>
            Event that is to be raised when colors are changed and all controls must be repainted.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Utility.DataProvider">
            <summary>
            Base class for all data provider classes.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.DataProvider.m_fileName">
            <summary>
            Name of the source file.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.DataProvider.m_stream">
            <summary>
            Source data stream.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.DataProvider.m_uri">
            <summary>
            Uri of the resource.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.DataProvider.m_rootDir">
            <summary>
            Root directory for the document.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataProvider.#ctor">
            <summary>
            Overloaded. Creates a new object.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataProvider.#ctor(System.String)">
            <summary>
            Creates a new object.
            </summary>
            <param name="fileName">Path to the HTML document.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataProvider.#ctor(System.IO.Stream)">
            <summary>
            Creates a new object.
            </summary>
            <param name="data">Data of the HTML document.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataProvider.#ctor(System.Uri)">
            <summary>
            Creates a new object.
            </summary>
            <param name="uri">Path to the data of the HTML document.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataProvider.Dispose">
            <summary>
            Clears all objects.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataProvider.GetDocumentBody">
            <summary>
            Searches for a body of the document and returns the data in it.
            </summary>
            <returns>Data of the document's body if found; Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataProvider.ResourceExists(System.String,System.String@,Syncfusion.HTMLUI.Base.ResourceType@)">
             <summary>
            Indicates whether a resource with specified path exists. Checks as local file as remote resource.
             </summary>
             <param name="path">Path for searching.</param>
             <param name="fullPath">Full path to resource.</param>
             <param name="type">Type of resource.</param>
             <returns>True - if resource forund, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataProvider.GetResource(System.String)">
            <summary>
            Overloaded. Searches for resource by it's location inside the document.
            </summary>
            <param name="path">Path to the resource.</param>
            <returns>Data of resource if found, Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataProvider.GetResource(System.String,Syncfusion.HTMLUI.Base.ResourceType)">
            <summary>
            Searches for resource by it's location inside the document.
            </summary>
            <param name="fullPath">Full path to the resource.</param>
            <param name="type">Type of resource.</param>
            <returns>Data of resource if found, Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataProvider.SetFileName(System.String)">
            <summary>
            Sets the FileName property.
            </summary>
            <param name="fileName">New value of FileName property.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataProvider.SetStream(System.IO.Stream)">
            <summary>
            Sets the Stream property.
            </summary>
            <param name="stream">New value of Stream property.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataProvider.SetUri(System.Uri)">
            <summary>
            Sets the Uri property.
            </summary>
            <param name="uri">New value of Uri property.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataProvider.SetDocDirFromFile(System.String)">
            <summary>
            Sets the root current directory to the document.
            </summary>
            <param name="fileName">Path to the file.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataProvider.SetDocDirFromUri(System.Uri)">
            <summary>
            Sets the root current directory to the document.
            </summary>
            <param name="uri">Path to the file.</param>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataProvider.FileName">
            <summary>
            Returns the path to the document.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataProvider.Uri">
            <summary>
            Returns the Uri to the document.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataProvider.Stream">
            <summary>
            Returns the stream containing the document's data.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataProvider.IsFileName">
            <summary>
            Indicates whether input HTML document is loaded from file.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataProvider.IsUri">
            <summary>
            Indicates whether input HTML document is loaded by Uri.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataProvider.IsStream">
            <summary>
            Indicates whether input HTML document is loaded from stream.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataProvider.RootDirectory">
            <summary>
            Gets or sets root directory for the document.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataProvider.Format">
            <summary>
            Returns the format of the resource provider.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Utility.DataSource">
            <summary>
            This class incapsulates source data of the document.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.DataSource.DEF_EXT_MHT">
            <summary>
            Extension of the file.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.DataSource.m_cachedContent">
            <summary>
            Cached original content of the document's data.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.DataSource.m_dataProvider">
            <summary>
            Object providing data of the document.
            </summary>
            <remarks>Don't use variable if there is no need. Use property instead.</remarks>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.DataSource.m_defaultDataProvider">
            <summary>
            Default data provider. It may be used for resolving path by links, web forms, etc.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.#ctor">
            <summary>
            Overloaded. Creates a new datasource object.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.#ctor(System.String)">
            <summary>
            Creates a new object with the specified filename.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.#ctor(System.IO.Stream)">
            <summary>
            Creates a new object with the specified source stream.
            </summary> 
            <param name="stream">Source stream of the data.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.#ctor(System.Uri)">
            <summary>
            Creates a new object with the specified uri.
            </summary>
            <param name="uri">Uri of the resource.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.Dispose">
            <summary>
            Clears all resources used by this class.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.GetInputStream(System.Boolean@)">
            <summary>
            Checks input properties of InputHTML class and creates
            TokenStream which is needed for correct conversion.
            </summary>
            <param name="bClose">Indicates whether we must close stream or not.</param>
            <returns>Stream which provides access to HTML document.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.GetDocumentContent">
            <summary>
            Returns the original content of the document if it's possible to retrieve.
            </summary>
            <returns>Original content of the document if it's possible to retrieve.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.GetDocumentBody">
            <summary>
            Searches for a body of the document and returns data of it.
            </summary>
            <returns>Data within document's body if found; Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.ResourceExists(System.String,System.String@,Syncfusion.HTMLUI.Base.ResourceType@)">
            <summary>
            Indicates whether resource with specified path exists. Checks as local file as remote resource.
            </summary>
            <param name="path">Path for searching.</param>
            <param name="fullPath">Full path to resource.</param>
            <param name="type">Type of resource.</param>
            <returns>True if resource is found; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.GetResource(System.String)">
            <summary>
            Overloaded. Searches for resource by it's location inside the document.
            </summary>
            <param name="path">Path to the resource.</param>
            <returns>Data of resource if found; Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.GetResource(System.String,Syncfusion.HTMLUI.Base.ResourceType)">
            <summary>
            Searches for resource by it's location inside the document.
            </summary>
            <param name="fullPath">Full path to the resource.</param>
            <param name="type">Type of resource.</param>
            <returns>Data of resource if found; Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.RecognizeDataFormat(System.String)">
            <summary>
            Returns the type of document's data.
            </summary>
            <param name="fileName">Name of the data source file.</param>
            <returns>Format of the data.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.CacheDocContentFromStream(System.IO.Stream)">
            <summary>
            Caches data from the document.
            </summary>
            <param name="stream">Stream data.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.CreateDataProviderFromFile(System.String,Syncfusion.HTMLUI.Base.DataFormat)">
            <summary>
            Creates data provider depending on the format of the data.
            </summary>
            <param name="fileName">Path to the file.</param>
            <param name="dataFormat">Current data format.</param>
            <returns>Data provider depending on the format of the data.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.CreateDataProviderFromStream(System.IO.Stream,Syncfusion.HTMLUI.Base.DataFormat)">
            <summary>
            Creates data provider depending on the format of the data.
            </summary>
            <param name="data">Data of the document.</param>
            <param name="dataFormat">Current data format.</param>
            <returns>Data provider depending on the format of the data.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.CreateDataProviderFromUri(System.Uri,Syncfusion.HTMLUI.Base.DataFormat)">
            <summary>
            Creates data provider depending on the format of the data.
            </summary>
            <param name="uri">Path to the data of the document.</param>
            <param name="dataFormat">Current data format</param>
            <returns>Data provider depending on the format of the data.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.SetDefaultDataProvider(Syncfusion.HTMLUI.Base.IResourceProvider)">
            <summary>
            Sets the default data provider.
            </summary>
            <param name="provider">Current data provider.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.DataSource.CreateDefaultDataProvider(Syncfusion.HTMLUI.Base.IResourceProvider)">
            <summary>
            Creates an HTML provider from the current data provider.
            </summary>
            <param name="curProvider">Current provider.</param>
            <returns>New default data provider.</returns>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataSource.FileName">
            <summary>
            Returns the path to the document.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataSource.Uri">
            <summary>
            Returns the Uri to the document.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataSource.Stream">
            <summary>
            Returns the stream containing document's data.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataSource.RootDirectory">
            <summary>
            Gets or sets the current directory for this document.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataSource.IsFileName">
            <summary>
            Indicates whether input HTML document is loaded from file.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataSource.IsUri">
            <summary>
            Indicates whether input HTML document is loaded by Uri.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataSource.IsStream">
            <summary>
            Indicates whether input HTML document is loaded from stream.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataSource.Format">
            <summary>
            Returns the format of the document's data.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataSource.DefaultDataProvider">
            <summary>
            Returns the default data provider.
            </summary>
            <remarks>It may be used by hyperlinks for path resolving, web forms, etc.</remarks>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.DataSource.DataProvider">
            <summary>
            Returns the data provider object.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Utility.HtmlDataProvider">
            <summary>
            Thsi class works with documents in MHT format. It searches resources inside this document
            and returns it on demand.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.HtmlDataProvider.#ctor(System.String)">
            <summary>
            Overloaded. Creates a new object.
            </summary>
            <param name="fileName">Path to the HTML document.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.HtmlDataProvider.#ctor(System.IO.Stream)">
            <summary>
            Creates a new object.
            </summary>
            <param name="data">Data of the HTML document.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.HtmlDataProvider.#ctor(System.Uri)">
            <summary>
            Creates a new object.
            </summary>
            <param name="uri">Path to the data of the HTML document.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.HtmlDataProvider.GetDocumentBody">
            <summary>
            Searches for a body of the document and returns data in it.
            </summary>
            <returns>Data of the document's body if found; Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.HtmlDataProvider.ResourceExists(System.String,System.String@,Syncfusion.HTMLUI.Base.ResourceType@)">
            <summary>
            Indicates whether a resource with specified path exists. Checks as local file as remote resource.
            </summary>
            <param name="path">Path for searching.</param>
            <param name="fullPath">Full path to the resource.</param>
            <param name="type">Type of resource.</param>
            <returns>True if resource is found; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.HtmlDataProvider.GetResource(System.String)">
            <summary>
            Searches for the resource by it's location inside the document.
            </summary>
            <param name="path">Path to the resource.</param>
            <returns>Data of the resource if found; Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.HtmlDataProvider.GetResource(System.String,Syncfusion.HTMLUI.Base.ResourceType)">
            <summary>
            Searches for the resource by it's location inside the document.
            </summary>
            <param name="fullPath">Full path to the resource.</param>
            <param name="type">Type of resource.</param>
            <returns>Data of the resource if found; Null otherwise.</returns>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.HtmlDataProvider.Format">
            <summary>
            Returns the format of the resource provider.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider">
            <summary>
            Class working with documents in MHT format. It searches resources inside this document
             and returnes it on demand.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.DEF_PART_KEY">
            <summary>
            Key by which we will separate parts.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.DEF_BODY_KEY">
            <summary>
            Key for document part.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.DEF_BODY_VALUE">
            <summary>
            Value of the body's key.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.m_mimeDocument">
            <summary>
            Document controlling MIME document.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.m_streamFromUri">
            <summary>
            When document is created from uri we must get data from Uri and then close stream.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.m_parts">
            <summary>
            Dictionary of parts inside Mime document.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.m_bodyPart">
            <summary>
            Data of the HTML.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.#ctor(System.String)">
            <summary>
            Creates new object.
            </summary>
            <param name="fileName">Path to MHT document.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.#ctor(System.IO.Stream)">
            <summary>
            Creates new object.
            </summary>
            <param name="data">Data of MHT document.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.#ctor(System.Uri)">
            <summary>
            Creates new object.
            </summary>
            <param name="uri">Path to data of MHT document.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.Dispose">
            <summary>
            Disposes object.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.GetDocumentBody">
            <summary>
            Searches for a body of the document and returns data of it.
            </summary>
            <returns>Data of document's body if found, Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.ResourceExists(System.String,System.String@,Syncfusion.HTMLUI.Base.ResourceType@)">
            <summary>
            Checks if such resource exists. Checks as local file as remote resource.
            </summary>
            <param name="path">Path for searching.</param>
            <param name="fullPath">Full path to resource.</param>
            <param name="type">Type of resource.</param>
            <returns>True - if resource forund, False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.GetResource(System.String)">
            <summary>
            Searches for resource by it's location inside of document.
            </summary>
            <param name="path">Path to the resource.</param>
            <returns>Data of resource if found, Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.GetResource(System.String,Syncfusion.HTMLUI.Base.ResourceType)">
            <summary>
            Searches for resource by it's location inside of document.
            </summary>
            <param name="fullPath">Full path to the resource.</param>
            <param name="type">Type of resource.</param>
            <returns>Data of resource if found, Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.InitializeData(Syncfusion.MIME.IMIMEDocument)">
            <summary>
            Make all arrangement before using Mime.
            </summary>
            <param name="mimeDocument">Document containing Mime data.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.InfillParts(System.Collections.Hashtable,Syncfusion.MIME.IMIMEDocument)">
            <summary>
            Infills parts dictionary.
            </summary>
            <param name="parts">Dictionary of parts.</param>
            <param name="mimeDocument">Document containing Mime data.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.GetPart(System.String)">
            <summary>
            Returns part by its path if exists.
            </summary>
            <param name="path">Path to resource.</param>
            <returns>Part by its path if exists, Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.ReadData(Syncfusion.MIME.IMIMEPart)">
            <summary>
            Reads data from the part.
            </summary>
            <param name="part">Part from which data would be extracted.</param>
            <returns>Array of data in the part.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.ProcessPart(System.Collections.Hashtable,Syncfusion.MIME.IMIMEPart)">
            <summary>
            Processes part.
            </summary>
            <param name="parts">Dictionary of parts.</param>
            <param name="part">Part object.</param>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.MimeDocument">
            <summary>
            Gets object containing document in MHT format.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.Parts">
            <summary>
            Gets parts of Mime document.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.MhtDataProvider.Format">
            <summary>
            Gets Format of resource provider.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Utility.Canvas3DStyle">
            <summary>
            Styles of canvas which emulate 3D effect on screen.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Canvas3DStyle.Single">
            <summary>
            3D canvas must be drawn in one line.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Canvas3DStyle.Raised">
            <summary>
            Raised canvas 3D style. Canvas will take two pixels from all sides.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Canvas3DStyle.Upped">
            <summary>
            Raised canvas 3D style. Canvas will take two pixels from all sides.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Canvas3DStyle.Title">
            <summary>
            Used when two or more items must look like one 3D area. Such items
            are split by special 3D vertical line. Mostly used for headers drawing.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Canvas3DStyle.Flat">
            <summary>
            Flat style of 3D canvas. Single line border.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Canvas3DStyle.RaisedSimple">
            <summary>
            Raised canvas style, but more simple.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Utility.HightlightStyle">
            <summary>
            Specifies the styles which item can have for highlighting.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.HightlightStyle.Active">
            <summary>
            Mouse cursor to enter item area.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.HightlightStyle.Selected">
            <summary>
            Item is selected, contains focus or is checked.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Utility.GDIUtils">
            <summary>
            Class representing different GDI capabilities.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.GDIUtils.m_brushDark">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.GDIUtils.m_brushDarkDark">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.GDIUtils.m_brushLight">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.GDIUtils.m_brushLightLight">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.GDIUtils.m_clrDark">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.GDIUtils.m_clrDarkDark">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.GDIUtils.m_clrLight">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.GDIUtils.m_clrLightLight">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.GDIUtils.m_penDark">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.GDIUtils.m_penDarkDark">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.GDIUtils.m_penLight">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.GDIUtils.m_penLightLight">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.Dispose">
            <summary>
            Destroys all pens and brushes used by the class.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.DisposeBrush(System.Drawing.SolidBrush@)">
             <summary>
            
             </summary>
             <param name="brush"></param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.DisposePen(System.Drawing.Pen@)">
             <summary>
            
             </summary>
             <param name="pen"></param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.Draw3DLine(System.Drawing.Graphics,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Draws a 3D Line. 3D Line is a simple line which contains one dark and one light line.
            Using dark and light line, we create an optical 3D effect.
            </summary>
            <param name="graph">Graphics object which is used by function to draw.</param>
            <param name="pnt1">Start point.</param>
            <param name="pnt2">End point.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.Draw3DBox(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.HTMLUI.Base.Utility.Canvas3DStyle)">
            <summary>
            Draws a 3D box according to style specification. There are four styles 
            available to draw.
            </summary>
            <param name="graph">Graphics object used for drawing.</param>
            <param name="rect">Box rectangle.</param>
            <param name="style">Style of box.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.DrawActiveRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.HTMLUI.Base.Utility.HightlightStyle)">
            <summary>
            Draws an active rectangle by blue colors.
            </summary>
            <param name="graph">Graphic context where rectangle must be drawn.</param>
            <param name="rect">Destination rectangle.</param>
            <param name="state">State of rectangle. Influence on colors by which rectangle
            will be drawn.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.DrawActiveRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,Syncfusion.HTMLUI.Base.Utility.HightlightStyle,System.Boolean)">
            <summary>
            Draws an active rectangle.
            </summary>
            <param name="graph">Graphic context where rectangle must be drawn.</param>
            <param name="rect">Destination rectangle.</param>
            <param name="state">State of rectangle. Influence on colors by which rectangle
            will be drawn.</param>
            <param name="bSubRect">Indicates whether we need rectangle width and height fix.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.FixRectangleHeightWidth(System.Drawing.Rectangle)">
            <summary>
            Makes rectangle's width and height less on one pixel. This is useful because
            in some cases, a rectangle's last pixels does not show.
            </summary>
            <param name="rect">Rectangle whose contexts must be fixed.</param>
            <returns>
            A new rectangle object which contains fixed values.
            </returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.FixRectangleHeightWidth(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fixes the width of the rectangle height.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>A new rectangle object which contains fixed values.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.CalculateCenter(System.Drawing.Rectangle,System.Drawing.Size)">
            <summary>
            Calculates X and Y coordinates to place object at the center of the rectangle.
            </summary>
            <param name="rect">Destination rectangle.</param>
            <param name="sz">Object size.</param>
            <returns>Point class with X and Y coordinates of center.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.Draw3DRect(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Overloaded. Draws 3D-style rectangle.
            </summary>
            <param name="g">Graphics canvas where rectangle must be drawn.</param>
            <param name="rc">Rectangle coordinates.</param>
            <param name="clrTL">Color of top left corner of rectangle.</param>
            <param name="clrBR">Color of bottom right corner of rectangle.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.Draw3DRect(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Draws 3D-style rectangle.
            </summary>
            <param name="g">Graphics object.</param>
            <param name="x">X coordinate of top left corner of the rectangle.</param>
            <param name="y">Y coordinate of top left corner of the rectangle.</param>
            <param name="width">Width of the rectangle.</param>
            <param name="height">Height of the rectangle.</param>
            <param name="clrTL">Color that is to be used for top left corner drawing.</param>
            <param name="clrBR">Color that is to be used for bottom right corner drawing.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.GetTileBitmap(System.Drawing.Size,System.Drawing.Bitmap)">
            <summary>
            Overloaded. Creates bitmap with specified size and infill. Bitmap sent by parameter
            will be used to fill destination area. If bitmap is less than destination
            area, it will be tiled.
            </summary>
            <param name="sz"></param>
            <param name="bitmap">Infill of output bitmap.</param>
            <returns>Returns bitmap filled by input bitmap.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.GetTileBitmap(System.Drawing.Rectangle,System.Drawing.Bitmap)">
            <summary>
            Creates bitmap with specified size and infill. Bitmap sent by parameter
            will be used to fill destination area. If bitmap is less then destination
            area, it will be tiled.
            </summary>
            <param name="rcDest">Destination size.</param>
            <param name="bitmap">Infill of output bitmap.</param>
            <returns>Returns bitmap filled by input bitmap.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.DrawArrowGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Overloaded. Draws arrow glyph at the center of the rectangle. Width and height of arrow will be 5 and 3.
            For arrow drawing, SystemColors.Highlight color will be used.
            TIP: Use an odd number for the arrowWidth and arrowWidth/2+1 for the arrowHeight
            so that the arrow gets the same pixel number on the left and on the right and
            get symmetrically painted.
            </summary>
            <param name="g">Graphics object.</param>
            <param name="rc">Destination rectangle.</param>
            <param name="up">Direction of arrow.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.DrawArrowGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws arrow glyph at the center of rectangle. Width and height of arrow will be 5 and 3.
            TIP: Use an odd number for the arrowWidth and arrowWidth/2+1 for the arrowHeight
            so that the arrow gets the same pixel number on the left and on the right and
            get symmetrically painted.
            </summary>
            <param name="g">Graphics object.</param>
            <param name="rc">Destination rectangle.</param>
            <param name="up">Direction of arrow.</param>
            <param name="clr">Color which must be used for drawing.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.DrawArrowGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Brush)">
            <summary>
            Draws arrow glyph at the center of the rectangle. Width and height of arrow will be 5 and 3.
            TIP: Use an odd number for the arrowWidth and arrowWidth/2+1 for the arrowHeight
            so that the arrow gets the same pixel number on the left and on the right and
            get symmetrically painted.
            </summary>
            <param name="g">Graphics object.</param>
            <param name="rc">Destination rectangle.</param>
            <param name="up">Direction of arrow.</param>
            <param name="brush">Brush which must be used for drawing.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.DrawArrowGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Drawing.Color)">
            <summary>
            Draws arrow glyph at the center of rectangle.
            TIP: Use an odd number for the arrowWidth and arrowWidth/2+1 for the arrowHeight
            so that the arrow gets the same pixel number on the left and on the right and
            get symmetrically painted.
            </summary>
            <param name="g">Graphics object.</param>
            <param name="rc">Destination Rectangle. Arrow glyph will be placed at the center
            of the destination rectangle.</param>
            <param name="width">Width of arrow.</param>
            <param name="height">Height of arrow.</param>
            <param name="isUp">Direction arrow.</param>
            <param name="clr">Color which must be used by arrow draw function.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.GDIUtils.DrawArrowGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Drawing.Brush)">
            <summary>
            Draws arrow glyph at the center of the rectangle.
            TIP: Use an odd number for the arrowWidth and arrowWidth/2+1 for the arrowHeight
            so that the arrow gets the same pixel number on the left and on the right and
            get symmetrically painted.
            </summary>
            <param name="g">Graphics object</param>
            <param name="rc">Destination rectangle. Arrow Glyph will be placed at the center
            of the destination rectangle.</param>
            <param name="width">Width of arrow.</param>
            <param name="height">Height of arrow.</param>
            <param name="isUp">Direction arrow.</param>
            <param name="brush">Brush which must be used for drawing.</param>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.GDIUtils.Dark">
            <summary>
            Gets or sets the dark.
            </summary>
            <value>The dark.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.GDIUtils.DarkDark">
            <summary>
            Gets or sets the dark dark.
            </summary>
            <value>The dark dark.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.GDIUtils.Light">
            <summary>
            Gets or sets the light.
            </summary>
            <value>The light.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.GDIUtils.LightLight">
            <summary>
            Gets or sets the light light.
            </summary>
            <value>The light light.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.GDIUtils.DarkBrush">
            <summary>
            Gets the dark brush.
            </summary>
            <value>The dark brush.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.GDIUtils.DarkDarkBrush">
            <summary>
            Gets the dark dark brush.
            </summary>
            <value>The dark dark brush.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.GDIUtils.LightBrush">
            <summary>
            Gets the light brush.
            </summary>
            <value>The light brush.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.GDIUtils.LightLightBrush">
            <summary>
            Gets the light light brush.
            </summary>
            <value>The light light brush.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.GDIUtils.DarkPen">
            <summary>
            Gets the dark pen.
            </summary>
            <value>The dark pen.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.GDIUtils.DarkDarkPen">
            <summary>
            Gets the dark dark pen.
            </summary>
            <value>The dark dark pen.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.GDIUtils.LightPen">
            <summary>
            Gets the light pen.
            </summary>
            <value>The light pen.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.GDIUtils.LightLightPen">
            <summary>
            Gets the light light pen.
            </summary>
            <value>The light light pen.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.GDIUtils.OneLineFormat">
            <summary>
            Gets the one line format.
            </summary>
            <value>The one line format.</value>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.GDIUtils.OneLineNoTrimming">
            <summary>
            Gets the one line no trimming.
            </summary>
            <value>The one line no trimming.</value>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.ResourceType">
            <summary>
            Enumerator which indicates where destination document is.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.ResourceType.Unknown">
            <summary>
            Unknown type.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.ResourceType.LocalResource">
            <summary>
            File is local.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.ResourceType.RemoteResource">
            <summary>
            Document is remote.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.DataFormat">
            <summary>
            Enumerator declares the types of documents supported by HTMLUI.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.DataFormat.Html">
            <summary>
            Document is in HTML format.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.DataFormat.Mht">
            <summary>
            Document is in Mht format.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Utility.SortedListEx">
            <summary>
            Optimized version of SortedList collection. Instead of keeping two
            arrays, one for keys and one for values, we change values on the
            Hashtable collection and only keep the keys collection sorted.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx._defaultCapacity">
            <summary>
            Default capacity of internal buffers.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.keys">
            <summary>
            Array which stores keys in sorted order.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.values">
            <summary>
            Collection store value.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx._size">
            <summary>
            Size of collection.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.version">
            <summary>
            Version of collection data.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.comparer">
            <summary>
            Default comparer for keys.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.keyList">
            <summary>
            List of keys.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.valueList">
            <summary>
            List of values.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.#ctor">
            <summary>
            Overloaded. Default constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.#ctor(System.Int32)">
            <summary>
            Creates an empty list with the specified initial capacity.
            </summary>
            <param name="initialCapacity">Initial capacity.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When initialCapacity is less than zero.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.#ctor(System.Collections.IComparer)">
            <summary>
            Creates an empty SortedList with the default initial capacity
            and specified comparer.
            </summary>
            <param name="comparer">
            The IComparer that is to be used to determine whether two keys are equal.
            </param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.#ctor(System.Collections.IComparer,System.Int32)">
            <summary>
            Creates an empty SortedList with the specified initial capacity
            and specified comparer.
            </summary>
            <param name="comparer">Initial capacity.</param>
            <param name="capacity">
            The IComparer that is to be used to determine whether two keys are equal.
            </param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.#ctor(System.Collections.IDictionary)">
            <summary>
            Copies the elements from the specified dictionary to a new list
            with the same initial capacity as the number of elements copied.
            </summary>
            <param name="d">The IDictionary to copy from.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
            <summary>
            Copies the elements from the specified dictionary to a new list with the same
            initial capacity as the number of elements copied and with the specified comparer.
            </summary>
            <param name="d">The IDictionary to copy from.</param>
            <param name="comparer">
            The IComparer that is to be used to determine whether two keys are equal.
            </param>
            <exception cref="T:System.ArgumentNullException">
            When argument d is NULL.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.Synchronized(Syncfusion.HTMLUI.Base.Utility.SortedListEx)">
            <summary>
            Returns a synchronized (thread-safe) wrapper for the SortedList.
            </summary>
            <param name="list">The SortedList to synchronize.</param>
            <returns>A synchronized (thread-safe) wrapper for the SortedList.</returns>
            <exception cref="T:System.ArgumentNullException">
            When list is NULL.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the list.
            </summary>
            <param name="key">The Object that is to be used as the key of the element to be added.</param>
            <param name="value">The Object that is to be used as the value of the element to be added.</param>
            <exception cref="T:System.ArgumentNullException">
            When key is NULL.
            </exception>
            <exception cref="T:System.ArgumentException">
            When list already contains the specified key.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>Copy of the current instance.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.Contains(System.Object)">
            <summary>
            Determines whether the list contains an element with the specified key.
            </summary>
            <param name="key">Key of the element to search.</param>
            <returns>True if the list contains the specified key.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ContainsKey(System.Object)">
            <summary>
            Determines whether the list contains an element with the specified key.
            </summary>
            <param name="key">Key of the element to search.</param>
            <returns>True if the list contains the specified key.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ContainsValue(System.Object)">
            <summary>
            Determines whether the list contains the element with the specified value.
            </summary>
            <param name="value">Value of the element to search.</param>
            <returns>True if the list contains the specified value</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the SortedListEx to the specified one-dimensional array
            starting at the specified destination array index.
            </summary>
            <param name="array">The one-dimensional array that is to be used as the destination of the
            elements copied from the current list.</param>
            <param name="arrayIndex">The index in the array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            If specified array is NULL.
            </exception>
            <exception cref="T:System.ArgumentException">
            If rank of the array is not one or there are not enough elements.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If specified array Index is less than zero.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.GetByIndex(System.Int32)">
            <summary>
            Returns the value at the specified index of the SortedListEx.
            </summary>
            <param name="index">The zero-based index of the value to retrieve.</param>
            <returns>The value at the specified index of the SortedListEx.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When index is less than zero or greater than size of the list.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.GetKey(System.Int32)">
            <summary>
            Returns the key at the specified index of the SortedListEx.
            </summary>
            <param name="index">The zero-based index of the key to retrieve.</param>
            <returns>The key at the specified index of the SortedListEx.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When index is less than zero or greater than size of the list.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.GetKeyList">
            <summary>
            Returns the keys in the SortedListEx.
            </summary>
            <returns>An IList containing the keys in the SortedListEx.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.GetValueList">
            <summary>
            Returns the values in the SortedListEx.
            </summary>
            <returns>An IList containing the values in the SortedListEx.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.IndexOfKey(System.Object)">
            <summary>
            Returns the zero-based index of the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>The zero-based index of key, if key is found; -1, otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">
            If specified key is NULL.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.IndexOfValue(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified value.
            </summary>
            <param name="value">The value to locate (can be NULL).</param>
            <returns>
            The zero-based index of the first occurrence of value, if value is found;
            -1, otherwise.
            </returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When index is less than zero or greater than the size of the list.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.Remove(System.Object)">
             <summary>
            Removes the element with the specified key from SortedListEx.
             </summary>
             <param name="key">The key of the element to remove.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SetByIndex(System.Int32,System.Object)">
            <summary>
            Replaces the value at the specific index.
            </summary>
            <param name="index">The zero-based index at which the value is to be saved.</param>
            <param name="value">The Object to save. Can be NULL.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            When index is less than zero or greater than the size of the list.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.GetEnumerator">
            <summary>
            Returns an IDictionaryEnumerator that can iterate through the SortedListEx.
            </summary>
            <returns>An IDictionaryEnumerator for the SortedListEx.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an IEnumerator that can iterate through the SortedListEx.
            </summary>
            <returns>An IEnumerator for the SortedListEx.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.Insert(System.Int32,System.Object,System.Object)">
            <summary>
            Inserts element with specified key and value at the specified index.
            </summary>
            <param name="index">The zero-based index where the element is to be inserted.</param>
            <param name="key">The key of the element to insert.</param>
            <param name="value">The value of the element to insert.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.EnsureCapacity(System.Int32)">
            <summary>
            Ensures that the capacity of this instance is atleast the specified minimum value.
            </summary>
            <param name="min">The minimum capacity to ensure.</param>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.Capacity">
            <summary>
            Gets or sets the capacity of internal buffers.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.Count">
            <summary>
            Returns the size of the collection. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.Keys">
            <summary>
            Returns the list of keys. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.Values">
            <summary>
            Returns the list of values. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.IsReadOnly">
            <summary>
            Indicates whether list is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.IsFixedSize">
            <summary>
            Indicates whether the collection has fixed size.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.IsSynchronized">
            <summary>
            Indicates whether the collection is synchronized.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncRoot">
            <summary>
            Returns the object that can be used to synchronize access to the collection.
            Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.Item(System.Object)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx._list">
            <summary>
            Wrapped SortedListEx.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx._root">
            <summary>
            Sync object.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.#ctor(Syncfusion.HTMLUI.Base.Utility.SortedListEx)">
            <summary>
            Creates SyncSortedListEx for specified SortedListEx.
            </summary>
            <param name="list">SortedListEx that will be wrapped.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the list.
            </summary>
            <param name="key">The Object to use as the key of the element to be added.</param>
            <param name="value">The Object to use as the value of the element to be added.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of the current instance.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.Contains(System.Object)">
            <summary>
            Indicates whether the list contains an element with the specified key.
            </summary>
            <param name="key">Key of the element to search.</param>
            <returns>True if list contains specified key.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.ContainsKey(System.Object)">
            <summary>
            Indicates whether the list contains an element with the specified key.
            </summary>
            <param name="key">Key of the element to search.</param>
            <returns>True if list contains specified key.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.ContainsValue(System.Object)">
            <summary>
            Indicates whether the list contains the specified value.
            </summary>
            <param name="key">Key of the element to search.</param>
            <returns>True if list contains specified value.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the list to the specified one-dimensional array
            starting at the specified destination array index.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the
            elements copied from the current list.</param>
            <param name="index">The index in an array at which copying begins.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.GetByIndex(System.Int32)">
            <summary>
            Returns the value at the specified index of the list.
            </summary>
            <param name="index">The zero-based index of the value to retrieve.</param>
            <returns>The value at the specified index of the SortedListEx.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.GetEnumerator">
            <summary>
            Returns an IDictionaryEnumerator that can iterate through the list.
            </summary>
            <returns>An IDictionaryEnumerator for the list.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.GetKey(System.Int32)">
            <summary>
            Returns the key at the specified index of the list.
            </summary>
            <param name="index">The zero-based index of the key to get.</param>
            <returns>The key at the specified index of the list.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.GetKeyList">
            <summary>
            Returns the keys in the list.
            </summary>
            <returns>An IList containing the keys in the list.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.GetValueList">
            <summary>
            Returns the values in the list.
            </summary>
            <returns>An IList containing the values in the list.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.IndexOfKey(System.Object)">
            <summary>
            Returns the zero-based index of the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>The zero-based index of key, if key is found; otherwise, -1.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.IndexOfValue(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified value.
            </summary>
            <param name="value">The value to locate (can be NULL).</param>
            <returns>
            The zero-based index of the first occurrence of value, if value is found;
            otherwise, -1.
            </returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.Remove(System.Object)">
             <summary>
            Removes the element with the specified key from the list.
             </summary>
             <param name="key">The key of the element to remove.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.SetByIndex(System.Int32,System.Object)">
            <summary>
            Replaces the value at the specific index.
            </summary>
            <param name="index">The zero-based index at which the value is to be saved.</param>
            <param name="value">The Object to save. Can be NULL.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.TrimToSize">
            <summary>
            Sets the capacity to the actual number of elements.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.Capacity">
            <summary>
            Returns the capacity of internal buffers.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.Count">
            <summary>
            Returns the size of the collection. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.SyncRoot">
            <summary>
            Returns the object that can be used to synchronize access to the collection.
            Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.IsReadOnly">
            <summary>
            Indicates whether the list is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.IsFixedSize">
            <summary>
            Indicates whether the collection has fixed size.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.IsSynchronized">
            <summary>
            Indicates whether the collection is synchronized.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SyncSortedListEx.Item(System.Object)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.Keys">
            <summary>
            If it is assumed to getObjectRetType, then Current will return key
            of the current element.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.Values">
            <summary>
            If it is assumed to getObjectRetType, then Current will return value
            of the current element.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.DictEntry">
            <summary>
            If it is assumed to getObjectRetType, then Current will return both -
            key and value (as DictionaryEntry).
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.SortedListEx">
            <summary>
            List for which is this enumerator.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.key">
            <summary>
            Key of the current element.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.value">
            <summary>
            Value of the current element.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.index">
            <summary>
            Index of current element.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.startIndex">
            <summary>
            Starting index for the enumerator.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.endIndex">
            <summary>
            Ending index for this enumerator.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.version">
            <summary>
            Version of collection data.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.current">
            <summary>
            True if current element is correct; otherwise False
            (before beginning or after end).
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.getObjectRetType">
            <summary>
            Specifies what should return method Current (key, value, or both).
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.#ctor(Syncfusion.HTMLUI.Base.Utility.SortedListEx,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates enumerator for specified list, starting from specified index
            and with specified count.
            </summary>
            <param name="SortedListEx">List for which enumerator is to be created.</param>
            <param name="index">Starting index.</param>
            <param name="count">Number of elements to enumerate.</param>
            <param name="getObjRetType">Type of enumerating values (keys, value, DicEntry).</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>Copy of the current instance.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next element;
            False if it has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            When the current version is not equal to the SortedListEx version.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before
            the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            When the current version is not equal to the SortedListEx version.
            </exception>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.Key">
            <summary>
            Returns the key of the current element. Read-only.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            When the current version is not equal to the SortedListEx version
            or if current is False.
            </exception>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.Entry">
            <summary>
            Returns the DictionaryEntry for the current element.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            When the current version is not equal to the SortedListEx version
            or if current is False.
            </exception>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.Current">
            <summary>
            Returns the current element in the collection. Read-only.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            If current is False.
            </exception>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.SortedListExEnumerator.Value">
            <summary>
            Returns the value for the current element.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            When the current version is not equal to the SortedListEx version
            or if current is False.
            </exception>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.SortedListEx">
            <summary>
            List for which this collection was created.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.#ctor(Syncfusion.HTMLUI.Base.Utility.SortedListEx)">
            <summary>
            Creates KeyList for the specified SortedListEx.
            </summary>
            <param name="SortedListEx">SortedListEx for which KeyList must be created.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.Add(System.Object)">
            <summary>
            Adds an element with the provided key to the list.
            </summary>
            <param name="key">The Object to use as the key of the element to be added.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.Contains(System.Object)">
            <summary>
            Indicates whether the list contains an element with the specified key.
            </summary>
            <param name="key">Key of the element to search.</param>
            <returns>True if list contains specified key.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the list to the specified one-dimensional array
            starting at the specified destination array index.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the
            elements copied from the current list.</param>
            <param name="arrayIndex">The index in an array at which copying begins.</param>
            <exception cref="T:System.ArgumentException">
            If array is NULL or rank of the array is not 1.
            </exception>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.Insert(System.Int32,System.Object)">
            <summary>
            Inserts the specified value at the specified index.
            </summary>
            <param name="index">The zero-based index at which the value is to be saved.</param>
            <param name="value">The Object to save. Can be NULL.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.GetEnumerator">
            <summary>
            Returns an IEnumerator that can iterate through the list.
            </summary>
            <returns>An IEnumerator for the list.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>The zero-based index of the key, if the key is found; otherwise, -1.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.Remove(System.Object)">
             <summary>
            Removes the element with the specified key from the list.
             </summary>
             <param name="key">The key of the element to remove.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index from the list.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.Count">
            <summary>
            Returns the size of the collection. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.IsReadOnly">
            <summary>
            Indicates whether the list is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.IsFixedSize">
            <summary>
            Indicates whether the collection has fixed size.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.IsSynchronized">
            <summary>
            Indicates whether the collection is synchronized.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.SyncRoot">
            <summary>
            Returns the object that can be used to synchronize access to the collection.
            Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.KeyList.Item(System.Int32)">
            <summary>
            Gets or sets the key at the specified index.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.SortedListEx">
            <summary>
            List for which this collection was created.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.vals">
            <summary>
            Array of values.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.#ctor(Syncfusion.HTMLUI.Base.Utility.SortedListEx)">
            <summary>
            Creates ValueList for specified SortedListEx.
            </summary>
            <param name="SortedListEx">SortedListEx for which ValueList must be created.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.UpdateValues">
            <summary>
            Re-reads values from the list.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.Add(System.Object)">
            <summary>
            Adds an element with the provided key to the list.
            </summary>
            <param name="key">The Object to use as the key of the element to be added.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.Contains(System.Object)">
            <summary>
            Indicates whether the list contains an element with the specified value.
            </summary>
            <param name="value">Value to search.</param>
            <returns>True if list contains specified value.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the list to the specified one-dimensional array
            starting at the specified destination array index.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the
            elements copied from the current list.</param>
            <param name="arrayIndex">The index in an array at which copying begins.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.Insert(System.Int32,System.Object)">
            <summary>
            Inserts the value at the specified index.
            </summary>
            <param name="index">The zero-based index at which the value is to be saved.</param>
            <param name="value">The Object to save. Can be NULL.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.GetEnumerator">
            <summary>
            Returns an IEnumerator that can iterate through the list.
            </summary>
            <returns>An IEnumerator for the list.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the specified value.
            </summary>
            <param name="value">The value to locate.</param>
            <returns>The zero-based index of the value, if the value is found; otherwise, -1.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.Remove(System.Object)">
            <summary>
            Removes the specified value from the list.
            </summary>
            <param name="value">The value to remove.</param>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index from the list.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.Count">
            <summary>
            Returns the size of the collection. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.IsReadOnly">
            <summary>
            Indicates whether the list is Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.IsFixedSize">
            <summary>
            Indicates whether the collection has fixed size.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.IsSynchronized">
            <summary>
            Returns True if the collection is synchronized; otherwise False.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.SyncRoot">
            <summary>
            Returns the object that can be used to synchronize access to the collection.
            Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.HTMLUI.Base.Utility.SortedListEx.ValueList.Item(System.Int32)">
            <summary>
            Gets or sets the value at the specified index.
            </summary>
        </member>
        <member name="T:Syncfusion.HTMLUI.Base.Utility.Utilities">
            <summary>
            Utility class for different static methods.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.DEF_REGEX_OPTIONS">
            <summary>
            Options for regular expressions.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.DEF_HTML_SYMBOLS">
            <summary>
            RegEx pattern for searching special HTML symbols.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.DEF_REG_NUMBERS">
            <summary>
            Pattern for numbers.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.DEF_DELIMITER">
            <summary>
            Delimiter of Url path.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.DEF_FRAGMENT_PREFIX">
            <summary>
            Prefix of the fragment in the Uri object.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.DEF_WHITESPACE_PATTERN">
            <summary>
            Pattern for WhiteSpace.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.DEF_WHITESPACE">
            <summary>
            Whitespace string.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.DEF_FILE_PATH_DELIMITER">
            <summary>
            Delimiter in local filesystem.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.DEF_AR_TO_LETTER_LIMIT">
            <summary>
            Limit number of converting arabic to \"A\" format.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.DEF_A_ASCII_INDEX">
            <summary>
            Index of A char in the ASCII table.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.DEF_CHARSET">
            <summary>
            xPath pattern.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.DEF_OPTIONS">
            <summary>
            RegEx options.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.m_regSymbols">
            <summary>
            RegEx object for retrieving symbols from string.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.m_RegNumbers">
            <summary>
            RegEx object for retrieving numbers from string.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.m_regEncoding">
            <summary>
            Regex object for detecting encoding.
            </summary>
        </member>
        <member name="F:Syncfusion.HTMLUI.Base.Utility.Utilities.m_regDelWhiteSpaces">
            <summary>
            Regex object for deleting multiple WhiteSpaces.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.StrEquals(System.String,System.String)">
            <summary>
            Indicates whether two strings are equal or not.
            Method is case insensitive.
            </summary>
            <param name="a">First string.</param>
            <param name="b">Second string.</param>
            <returns>True if strings are equal by value.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.IsFileExists(System.String,System.String)">
            <summary>
            Indicates whether file with such path exists. Searches in specified directory also.
            </summary>
            <param name="currentDir">Additional directory for searching the file.</param>
            <param name="path">Path to the file.</param>
            <returns>True if file is found.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.GetFullPath(System.String,System.String)">
            <summary>
            Returns the absolute path for the file.
            </summary>
            <param name="currentDir">Additional directory for searching the file.</param>
            <param name="path">Path to the file.</param>
            <returns>Full path for the file if file exists; NULL otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.IsFileExists(System.String,System.String,System.String@)">
            <summary>
            Indicates whether file with specified path exists. Searches in additional directory also.
            </summary>
            <param name="currentDir">Additional directory for searching the file.</param>
            <param name="path">Path to the file.</param>
            <param name="fullPath">Full path to the file.</param>
            <returns>True if file exists; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.IsUriExists(System.String,System.String,System.Uri@)">
            <summary>
            Indicates whether resource by Uri with defined path exists. Searches in additional Uri base also.
            </summary>
            <param name="currentDir">Additional root uri for searching resource.</param>
            <param name="path">Path to resource.</param>
            <param name="fullUriPath">Uri object to the file.</param>
            <returns>True if file by Uri exists; False otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.GetConvertedString(System.String)">
            <summary>
            Converts string with special HTML symbols to string view.
            </summary>
            <param name="input">String with special symbols.</param>
            <returns>Converted string if symbols exist; input string otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.ConvertToString(System.String)">
            <summary>
            Converts ShortVariant value to string and returns it.
            </summary>
            <param name="value">Value to convert.</param>
            <returns>String interpretation of the variant value.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.ConvertToInteger(System.String)">
            <summary>
            Converts ShortVariant value to integer and returns it.
            </summary>
            <param name="value">Value to convert.</param>
            <returns>Integer value.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.ConvertToPoint(System.String)">
            <summary>
            Returns point from its string representation.
            </summary>
            <param name="value">String representation of the point.</param>
            <returns>Point form of string.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.ConvertToSize(System.String)">
            <summary>
            Returns size from its string representation.
            </summary>
            <param name="value">String representation of the size.</param>
            <returns>Size object.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.ConvertToBool(System.String)">
            <summary>
            Converts string to its bool representation.
            </summary>
            <param name="value">String representation of the bool.</param>
            <returns>Bool value.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.ImageFromStream(System.IO.Stream)">
            <summary>
            Creates bitmap object from the stream.
            </summary>
            <param name="stream">Bitmap stream data.</param>
            <returns>Bitmap object, if bitmap is created; NULL otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.ImageFromFile(System.String)">
            <summary>
            Loads and returns bitmap from the file.
            </summary>
            <param name="fullPath">Full path to the file.</param>
            <returns>Bitmap if loaded; Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.StreamFromUrl(System.Uri)">
            <summary>
            Returns data from the specified Uri address.
            </summary>
            <param name="uri">Uri path to the resource.</param>
            <returns>Data from Uri resource.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.StringFromUrl(System.Uri)">
            <summary>
            Returns data from the specified Uri address.
            </summary>
            <param name="uri">Uri path to the resource.</param>
            <returns>Data from Uri resource.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.ReadToEnd(System.IO.Stream)">
            <summary>
            Reads data from the specified stream.
            </summary>
            <param name="stream">Source stream for data reading.</param>
            <returns>Array of data from the stream.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.StringFromFile(System.String,System.String)">
            <summary>
            Returns string data extracted from the specified file with default encoding.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="currentDir">Name of the Directory.</param>
            <returns>String data extracted from the file with default encoding.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.StreamFromFile(System.String,System.String)">
            <summary>
            Creates and returns the stream from the specified file.
            </summary>
            <param name="currentDir">Current directory.</param>
            <param name="fileName">Path to the file.</param>
            <returns>Stream object if resource found; Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.StringFromStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads data from the specified stream and converts it to the stream.
            </summary>
            <param name="stream">Stream with data.</param>
            <param name="encoding">Encoding object.</param>
            <returns>String data from the stream.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.StreamFromString(System.String)">
            <summary>
            Converts the given string to memory stream.
            </summary>
            <param name="str">The string to convert in to stream.</param>
            <returns>Stream data from string</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.DetectEncoding(System.String)">
            <summary>
            Detects and returns the encoding from it's string name.
            </summary>
            <param name="encType">Name of encoding.</param>
            <returns>Encoding data if detected; Null otherwise.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.ExtractBookmark(System.String)">
            <summary>
            Extracts bookmark path from the specified full path and returns array
            where the first element is the path without bookmark; second - bookmark if found.
            </summary>
            <param name="path">Path to resource.</param>
            <returns>Array where first element is path without bookmark;
             second - bookmark if found.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.RemoveBookmark(System.String)">
            <summary>
            Retrieves path to file from path where bookmark data may exist.
            </summary>
            <param name="path">Path to file.</param>
            <returns>Path to file from path where bookmark data may exist.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.GetBookmark(System.String)">
            <summary>
            Retrieves bookmark data from path where bookmark data may exist.
            </summary>
            <param name="path">Path to file.</param>
            <returns>Bookmark data from path where bookmark data may exist.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.DeleteWhiteSpace(System.String)">
            <summary>
            Trims big whitespaces from the specified string to single, skip tabs, new lines, etc.
            </summary>
            <param name="str">String value.</param>
            <returns>String after deleting whitespaces.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.ArabicToRoman(System.Int32)">
            <summary>
            Converts arabic number to roman.
            </summary>
            <param name="intArabic">Number in arabic format.</param>
            <returns>Number in Roman format.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.ArabicToLetter(System.Int32)">
            <summary>
            Converts arabic number to \"A\" format.
            </summary>
            <param name="arabic">Number in arabic format.</param>
            <returns>Number in \"A\" format.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.GetUri(System.String,System.String)">
            <summary>
            Returns uri path from directory path and relative path of the resource.
            </summary>
            <param name="currentDir">Directory of the document.</param>
            <param name="path">Relative path to the resource.</param>
            <returns>Uri object of the resource.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.GenerateNumber(System.Int32@,System.Int32,System.String)">
            <summary>
            Utility metnod for converting arabic number to roman format.
            </summary>
            <param name="value">Current number value.</param>
            <param name="magnitude">Max current number.</param>
            <param name="letter">Roman equivalent.</param>
            <returns>Roman equivalent.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.ConvertToLetter(System.Single)">
            <summary>
            Utility metnod. Helps to convert arabic number to \"A\" format.
            </summary>
            <param name="arabic">Arabic number.</param>
            <returns>Sequence of number.</returns>
        </member>
        <member name="M:Syncfusion.HTMLUI.Base.Utility.Utilities.AppendChar(System.Text.StringBuilder,System.Int32)">
            <summary>
            Adds letter instead of number.
            </summary>
            <param name="builder">String builder object.</param>
            <param name="number">Number to be converted to letter.</param>
        </member>
    </members>
</doc>
