<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.DocToPDFConverter.Base</name>
    </assembly>
    <members>
        <member name="F:Syncfusion.DocIO.Rendering.ShapePath._rectBounds">
             <summary>
            
             </summary>
        </member>
        <member name="F:Syncfusion.DocIO.Rendering.ShapePath._shapeGuide">
             <summary>
            
             </summary>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.#ctor(System.Drawing.RectangleF,System.Collections.Generic.Dictionary{System.String,System.String})">
             <summary>
            
             </summary>
             <param name="m_rectBounds"></param>
             <param name="m_shapeGuide"></param>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetCurvedConnectorPath">
            <summary>
            Get Curved Connector path
            </summary>
            <formula>
            formulaColl.Add("x2","*/ w adj1 100000");
            formulaColl.Add("x1","+/ l x2 2");
            formulaColl.Add("x3","+/ r x2 2");
            formulaColl.Add("y3","*/ h 3 4");
            </formula>
            <param name="m_rectBounds"></param>
            <param name="m_shapeGuide"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetBentConnectorPath">
            <summary>
            Get Bent Connector path
            </summary>
            <formula>
            formulaColl.Add("x1","*/ w adj1 100000");
            </formula>>
            <param name="m_rectBounds"></param>
            <param name="m_shapeGuide"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetRoundedRectanglePath">
             <summary>
            
             </summary>
             <param name="m_rectBounds"></param>
             <param name="m_shapeGuide"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetSnipSingleCornerRectanglePath">
             <summary>
            
             </summary>
             <param name="m_rectBounds"></param>
             <param name="m_shapeGuide"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetSnipSameSideCornerRectanglePath">
             <summary>
            
             </summary>
             <param name="m_rectBounds"></param>
             <param name="m_shapeGuide"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetSnipDiagonalCornerRectanglePath">
             <summary>
            
             </summary>
             <param name="m_rectBounds"></param>
             <param name="m_shapeGuide"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetSnipAndRoundSingleCornerRectanglePath">
             <summary>
            
             </summary>
             <param name="m_rectBounds"></param>
             <param name="m_shapeGuide"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetRoundSingleCornerRectanglePath">
             <summary>
            
             </summary>
             <param name="m_rectBounds"></param>
             <param name="m_shapeGuide"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetRoundSameSideCornerRectanglePath">
             <summary>
            
             </summary>
             <param name="m_rectBounds"></param>
             <param name="m_shapeGuide"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetRoundDiagonalCornerRectanglePath">
             <summary>
            
             </summary>
             <param name="m_rectBounds"></param>
             <param name="m_shapeGuide"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetTrianglePath">
            <summary>
            Get Triangle path
            </summary>
            <param name="shapeType"></param>
            <param name="m_rectBounds"></param>
            <param name="m_shapeGuide"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetParallelogramPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetTrapezoidPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetRegularPentagonPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetHexagonPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetHeptagonPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetOctagonPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetDecagonPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetDodecagonPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetPiePath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetChordPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetTearDropPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFramePath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetHalfFramePath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetL_ShapePath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetDiagonalStripePath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetCrossPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetPlaquePath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetCanPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetCubePath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetBevelPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetDonutPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetNoSymbolPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetBlockArcPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFoldedCornerPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetSmileyFacePath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetHeartPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLightningBoltPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetSunPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetMoonPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetCloudPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetArcPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetDoubleBracketPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetDoubleBracePath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLeftBracketPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetRightBracketPath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLeftBracePath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetRightBracePath">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetRightArrowPath">
            <summary>
            Gets the right arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLeftArrowPath">
            <summary>
            Gets the left arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetDownArrowPath">
            <summary>
            Gets down arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLeftRightArrowPath">
            <summary>
            Gets the left right arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetCurvedRightArrowPath">
            <summary>
            Gets the curved right arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetCurvedLeftArrowPath">
            <summary>
            Gets the curved left arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetCurvedUpArrowPath">
            <summary>
            Gets the curved up arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetCurvedDownArrowPath">
            <summary>
            Gets the curved down arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetUpDownArrowPath">
            <summary>
            Gets up down arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetQuadArrowPath">
            <summary>
            Gets the quad arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLeftRightUpArrowPath">
            <summary>
            Gets the left right up arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetBentArrowPath">
            <summary>
            Gets the bent arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetUTrunArrowPath">
            <summary>
            Gets the U trun arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLeftUpArrowPath">
            <summary>
            Gets the left up arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetBentUpArrowPath">
            <summary>
            Gets the bent up arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetStripedRightArrowPath">
            <summary>
            Gets the striped right arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetNotchedRightArrowPath">
            <summary>
            Gets the notched right arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetPentagonPath">
            <summary>
            Gets the pentagon path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetChevronPath">
            <summary>
            Gets the chevron path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetRightArrowCalloutPath">
            <summary>
            Gets the right arrow callout path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetDownArrowCalloutPath">
            <summary>
            Gets down arrow callout path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLeftArrowCalloutPath">
            <summary>
            Gets the left arrow callout path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetUpArrowCalloutPath">
            <summary>
            Gets up arrow callout path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLeftRightArrowCalloutPath">
            <summary>
            Gets the left right arrow callout path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetQuadArrowCalloutPath">
            <summary>
            Gets the quad arrow callout path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetCircularArrowPath">
            <summary>
            Gets the circular arrow path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetMathPlusPath">
            <summary>
            Gets the math plus path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetMathMinusPath">
            <summary>
            Gets the math minus path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetMathMultiplyPath">
            <summary>
            Gets the math multiply path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetMathDivisionPath">
            <summary>
            Gets the math division path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetMathEqualPath">
            <summary>
            Gets the math equal path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetMathNotEqualPath">
            <summary>
            Gets the math not equal path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartAlternateProcessPath">
            <summary>
            Gets the flow chart alternate process path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartPredefinedProcessPath">
            <summary>
            Gets the flow chart predefined process path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartInternalStoragePath">
            <summary>
            Gets the flow chart internal storage path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartDocumentPath">
            <summary>
            Gets the flow chart document path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartMultiDocumentPath">
            <summary>
            Gets the flow chart multi document path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartTerminatorPath">
            <summary>
            Gets the flow chart terminator path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartPreparationPath">
            <summary>
            Gets the flow chart preparation path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartManualInputPath">
            <summary>
            Gets the flow chart manual input path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartManualOperationPath">
            <summary>
            Gets the flow chart manual operation path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartConnectorPath">
            <summary>
            Gets the flow chart connector path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartOffPageConnectorPath">
            <summary>
            Gets the flow chart off page connector path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartCardPath">
            <summary>
            Gets the flow chart card path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartPunchedTapePath">
            <summary>
            Gets the flow chart punched tape path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartSummingJunctionPath">
            <summary>
            Gets the flow chart summing junction path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartOrPath">
            <summary>
            Gets the flow chart or path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartCollatePath">
            <summary>
            Gets the flow chart collate path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartSortPath">
            <summary>
            Gets the flow chart sort path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartExtractPath">
            <summary>
            Gets the flow chart extract path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartMergePath">
            <summary>
            Gets the flow chart merge path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartOnlineStoragePath">
            <summary>
            Gets the flow chart online storage path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartDelayPath">
            <summary>
            Gets the flow chart delay path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartSequentialAccessStoragePath">
            <summary>
            Gets the flow chart sequential access storage path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartMagneticDiskPath">
            <summary>
            Gets the flow chart magnetic disk path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartDirectAccessStoragePath">
            <summary>
            Gets the flow chart direct access storage path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFlowChartDisplayPath">
            <summary>
            Gets the flow chart display path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetRectangularCalloutPath">
            <summary>
            Gets the rectangular callout path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetRoundedRectangularCalloutPath">
            <summary>
            Gets the rounded rectangular callout path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetOvalCalloutPath">
            <summary>
            Gets the oval callout path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetCloudCalloutPath">
            <summary>
            Gets the cloud callout path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLineCallout1Path">
            <summary>
            Gets the line callout1 path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLineCallout2Path">
            <summary>
            Gets the line callout2 path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLineCallout3Path">
            <summary>
            Gets the line callout3 path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLineCallout1AccentBarPath">
            <summary>
            Gets the line callout1 accent bar path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLineCallout2AccentBarPath">
            <summary>
            Gets the line callout2 accent bar path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLineCallout3AccentBarPath">
            <summary>
            Gets the line callout3 accent bar path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLineCallout1NoBorderPath">
            <summary>
            Gets the line callout1 no border path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLineCallout2NoBorderPath">
            <summary>
            Gets the line callout2 no border path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLineCallout3NoBorderPath">
            <summary>
            Gets the line callout3 no border path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLineCallout1BorderAndAccentBarPath">
            <summary>
            Gets the line callout1 border and accent bar path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLineCallout2BorderAndAccentBarPath">
            <summary>
            Gets the line callout2 border and accent bar path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetLineCallout3BorderAndAccentBarPath">
            <summary>
            Gets the line callout3 border and accent bar path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetDegreeValue(System.Single)">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetXYPosition(System.Single,System.Single,System.Single)">
             <summary>
            
             </summary>
             <param name="xDifference"></param>
             <param name="yDifference"></param>
             <param name="positionRatio"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetPathAdjustValue(Syncfusion.DocIO.DLS.AutoShapeType)">
            <summary>
            Get Path adjust value
            </summary>
            <param name="m_shapeGuide"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.ParseShapeFormula(Syncfusion.DocIO.DLS.AutoShapeType)">
             <summary>
            
             </summary>
             <param name="m_rectBounds"></param>
             <param name="adjValue"></param>
             <param name="formulaColl"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetFormulaValues(Syncfusion.DocIO.DLS.AutoShapeType,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
             <summary>
            
             </summary>
             <param name="formulaColl"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetOperandValues(Syncfusion.DocIO.DLS.AutoShapeType,System.Collections.Generic.Dictionary{System.String,System.Single}@,System.String[],System.Boolean)">
             <summary>
            
             </summary>
             <param name="m_rectBounds"></param>
             <param name="adjValues"></param>
             <param name="formulaValues"></param>
             <param name="splitFormula"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetPresetOperandValue(System.String)">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetResultValue(System.String,System.Single[])">
             <summary>
            
             </summary>
             <param name="formula"></param>
             <param name="operandValues"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetShapeFormula(Syncfusion.DocIO.DLS.AutoShapeType)">
             <summary>
            
             </summary>
             <param name="shapeType"></param>
             <returns></returns>
        </member>
        <member name="M:Syncfusion.DocIO.Rendering.ShapePath.GetDefaultPathAdjValues(Syncfusion.DocIO.DLS.AutoShapeType)">
             <summary>
            
             </summary>
             <param name="shapeType"></param>
             <returns></returns>
        </member>
        <member name="T:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext">
            <summary>
            Represents the class which acts as an drawing context.
            </summary>
        </member>
        <member name="F:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DEF_SCRIPT_FACTOR">
            <summary>
            The default script factor for sub/super script.
            </summary>
        </member>
        <member name="F:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DEF_FONT_SIZE">
            <summary>
            The default font size.
            </summary>
        </member>
        <member name="F:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DEF_PICBULLET_MIN_FONT_SIZE">
            <summary>
            The default minimum font size for picture bullet.
            </summary>
        </member>
        <member name="F:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DEF_PICBULLET_SCALE_FACTOR">
            <summary>
            The default scale factor for picture bullet.
            </summary>
        </member>
        <member name="F:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.m_pdfgraphics">
            <summary>
            Drawing Graphics.
            </summary>
        </member>
        <member name="F:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.m_imageQuality">
            <summary>
            Image Quality.
            </summary>
        </member>
        <member name="F:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.m_graphics">
            <summary>
            Drawing Graphics.
            </summary>
        </member>
        <member name="F:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.m_hyperLinks">
            <summary>
            Holds the list of hyperlinks and its corrsponding bounds.
            </summary>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:ImageRenderer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.#ctor(Syncfusion.Pdf.Graphics.PdfGraphics,System.Drawing.Graphics,System.Drawing.GraphicsUnit)">
            <summary>
            Initializes a new instance of the <see cref="!:ImageRenderer"/> class.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="pageUnit">The page unit.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawOverLappedShapeWidgets(System.Boolean)">
            <summary>
            Draws the Overlapping shape widgets.
            Currently handled only for Docx format documents
            </summary>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawParagraph(Syncfusion.DocIO.DLS.WParagraph,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draws the paragraph.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="ltWidget">The lt widget.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawTextBox(Syncfusion.DocIO.DLS.WTextBox,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draws the text box.
            </summary>
            <param name="textBox">The text box.</param>
            <param name="ltWidget">The lt widget.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawBarTabStop(Syncfusion.DocIO.DLS.WParagraph,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw Bar Tab Stop of the paragraph
            </summary>
            <param name="paragraph"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetBoundsToDrawParagraphBackGroundColor(Syncfusion.DocIO.DLS.WParagraph,Syncfusion.Layouting.LayoutedWidget,System.Boolean,System.Boolean)">
            <summary>
            Get bounds to draw a paragraph back ground color and texture styles
            </summary>
            <param name="paragraph"></param>
            <param name="ltWidget"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsParagraphContainingListHasBreak(Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Check whether Paragraph Containing list has break.
            </summary>
            <param name="ltWidget">ltWidget</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetBaseEntity(Syncfusion.DocIO.DLS.Entity)">
            <summary>
            Get the base entity
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.UpdateTabPosition(Syncfusion.Layouting.LayoutedWidget,System.Drawing.RectangleF)">
            <summary>
            Updates the tab position.
            </summary>
            <param name="widget">The widget.</param>
            <param name="clientArea">The client area.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.UpdateDecimalTabPosition(Syncfusion.Layouting.LayoutedWidget,System.Drawing.RectangleF)">
            <summary>
            Updates the decimal tab position.
            </summary>
            <param name="ltWidget">The lt widget.</param>
            <param name="clientArea">The client area.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.UpdateDecimalTabPositionInCell(Syncfusion.Layouting.LayoutedWidget,System.Drawing.RectangleF)">
            <summary>
            Updates the decimal tab position in cell.
            </summary>
            <param name="ltWidget">The lt widget.</param>
            <param name="clientArea">The client area.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsDecimalTabStart(Syncfusion.Layouting.LayoutedWidget,System.Int32,System.Boolean,System.Int32,System.Single,System.Boolean)">
            <summary>
            Determine whether is Decimal Tab Start
            </summary>
            <param name="ltWidget"></param>
            <param name="decimalTabStart"></param>
            <param name="isDecimalTab"></param>
            <param name="i"></param>
            <param name="widthToShift"></param>
            <param name="isInCell"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetWidthToShift(Syncfusion.Layouting.LayoutedWidget,System.Int32,System.Boolean,System.Drawing.RectangleF)">
            <summary>
            Get Width To Shift the xposition of childwidget
            </summary>
            <param name="ltWidget"></param>
            <param name="decimalTabStart"></param>
            <param name="isInCell"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetCurrentTabFormat(Syncfusion.DocIO.DLS.WParagraph)">
            <summary>
            Get the paragraph format for current tab
            </summary>
            <param name="paragraph">The Paragraph</param>
            <returns>Paragrph format</returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetColumnWidth(Syncfusion.DocIO.DLS.WParagraph)">
            <summary>
            Get Column Width
            </summary>
            <param name="paragraph">The Paragraph</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetLeftWidth(Syncfusion.DocIO.DLS.WParagraph,System.Int32,System.Int32)">
            <summary>
            Get Left width of the Decimal seperator
            </summary>
            <param name="paragraph"></param>
            <param name="decimalTabStart"></param>
            <param name="decimalTabEnd"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetLeftWidth(Syncfusion.Layouting.LayoutedWidget,System.Int32,System.Int32)">
            <summary>
            Get Left width of the Decimal seperator
            </summary>
            <param name="ltWidget">The lt widget.</param>
            <param name="decimalTabStart">The decimal tab start.</param>
            <param name="decimalTabEnd">The decimal tab end.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetIndexOfDecimalseparator(Syncfusion.DocIO.DLS.WParagraph,System.Int32,System.Int32,System.Single@,System.Int32@,System.Boolean@)">
            <summary>
            Get Index of Decimal Separator
            Index denotes the TextRange which have a decimal separator
            </summary>
            <param name="paragraph"></param>
            <param name="decimalTabStart"></param>
            <param name="decimalTabEnd"></param>
            <param name="leftWidth"></param>
            <param name="decimalSeparator"></param>
            <param name="isSeparator"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetIndexOfDecimalseparator(Syncfusion.Layouting.LayoutedWidget,System.Int32,System.Int32,System.Single@,System.Int32@,System.Boolean@)">
            <summary>
            Get Index of Decimal Separator
            Index denotes the TextRange which have a decimal separator
            </summary>
            <param name="ltWidget">The lt widget.</param>
            <param name="decimalTabStart">The decimal tab start.</param>
            <param name="decimalTabEnd">The decimal tab end.</param>
            <param name="leftWidth">Width of the left.</param>
            <param name="decimalSeparator">The decimal separator.</param>
            <param name="isSeparator">if set to <c>true</c> [is separator].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsDecimalSeparator(System.Char[],System.Int32@,System.Boolean)">
            <summary>
            Determine whether is Decimal Separator
            </summary>
            <param name="ch"></param>
            <param name="decimalSeparator"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetOwnerParagraph(Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Get Owner paragraph of the LayoutedWidget
            </summary>
            <param name="ltWidget"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetTabEndIndex(Syncfusion.Layouting.LayoutedWidget,System.Int32)">
            <summary>
            Gets the tab end index.
            Index denotes the item, previous of next subsequent tab.
            </summary>
            <param name="ltWidget">The lt widget.</param>
            <param name="startIndex">The start index.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetListValue(Syncfusion.DocIO.DLS.WParagraph,Syncfusion.Layouting.ParagraphLayoutInfo,Syncfusion.DocIO.DLS.WListFormat)">
            <summary>
            Get the current list size.
            </summary>
            <param name="paragraph"></param>
            <param name="paragraphInfo"></param>
            <param name="listFormat"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawList(Syncfusion.DocIO.DLS.WParagraph,Syncfusion.Layouting.LayoutedWidget,Syncfusion.DocIO.DLS.WListFormat)">
            <summary>
            Draws the list
            </summary>
            <param name="paragraph"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawListTabLeader(Syncfusion.DocIO.DLS.WParagraph,Syncfusion.Layouting.ParagraphLayoutInfo,System.Single,System.Single,System.Single)">
            <summary> 
            Draws the list tab leader.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="paragraphInfo">The paragraph info.</param>
            <param name="listWidth">Width of the list.</param>
            <param name="xPosition">The x position.</param>
            <param name="yPosition">The y position.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetTabLeader(Syncfusion.Layouting.ParagraphLayoutInfo)">
            <summary>
            Gets the tab leader.
            </summary>
            <param name="paragraphInfo">The paragraph info.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetYPosition(Syncfusion.Layouting.LayoutedWidget,System.Single,Syncfusion.DocIO.DLS.ListType)">
            <summary>
            Gets the Y position.
            </summary>
            <param name="ltWidget">The ltwidget.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetAscentValueForEQField(Syncfusion.DocIO.DLS.WField)">
            <summary>
            Gets the ascet value for Equation field.
            </summary>
            <param name="field">Equation field</param>       
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsLineContainsEQfield(Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Check whether the current lines contains the equation field and it
            contains the height of the corresponding line.
            </summary>
            <param name="para"></param>
            <returns></returns>                      
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsEmptyParagraph(Syncfusion.DocIO.DLS.WParagraph)">
            <summary>
            Determines whether the paragraph is empty
            </summary>
            <param name="para">paragraph</param>
            <returns> returns true if paragraph is empty </returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawAbsoluteTab(Syncfusion.DocIO.DLS.WAbsoluteTab,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw AbsoluteTab
            </summary>
            <param name="absoluteTab"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.UpdateAbsoluteTabLeader(Syncfusion.DocIO.DLS.WAbsoluteTab,Syncfusion.Layouting.LayoutedWidget,System.String@)">
            <summary>
            Update AbsoluteTab leader
            </summary>
            <param name="absoluteTab"></param>
            <param name="ltWidget"></param>
            <param name="text"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawSeparator(Syncfusion.DocIO.DLS.WTextRange,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draws the Footnote separator
            </summary>
            <param name="txtRange">The TXT range.</param>
            <param name="ltWidget">The lt widget.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawTextRange(Syncfusion.DocIO.DLS.WTextRange,Syncfusion.Layouting.LayoutedWidget,System.String)">
            <summary>
            Draws the text range.
            </summary>
            <param name="txtRange">The TXT range.</param>
            <param name="ltWidget">The lt widget.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.UpdateBookmarkTargetPosition(Syncfusion.DocIO.DLS.Entity,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Update Target position to the bookmark hyperlink
            </summary>
            <param name="ent"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.CreateBookmarkRerefeceLink(Syncfusion.DocIO.DLS.Entity,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Create Bookmark reference link
            </summary>
            <param name="ent"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsOwnerParagraphContainBookMarkEnd(System.String)">
            <summary>
            Determine whether the paragraph containing bookmark end
            </summary>
            <param name="bk_Name"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsTextRangeFollowWithTab(Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Determine whether the tab stop is preserved after the text range in the current line
            </summary>
            <param name="ltWidget"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.UpdateTabLeader(Syncfusion.DocIO.DLS.WTextRange,Syncfusion.Layouting.LayoutedWidget,System.String@)">
            <summary>
            Update Tab Width.
            </summary>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.FillDots(System.Drawing.Font,Syncfusion.Layouting.LayoutedWidget,Syncfusion.DocIO.DLS.WCharacterFormat,System.Drawing.StringFormat,System.String@)">
            <summary>
            Fill with dots for tab leader
            </summary>
            <param name="font">Font</param>
            <param name="ltWidget">Current layouted widget</param>
            <param name="charFormat">Character format of layouted widget</param>
            <param name="format">String format</param>
            <param name="text">text</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.FillSingle(System.Drawing.Font,Syncfusion.Layouting.LayoutedWidget,Syncfusion.DocIO.DLS.WCharacterFormat,System.Drawing.StringFormat,System.String@)">
            <summary>
            Fill with sigle for tab leader
            </summary>
            <param name="font">Font</param>
            <param name="ltWidget">Current layouted widget</param>
            <param name="charFormat">Character format of layouted widget</param>
            <param name="format">String format</param>
            <param name="text">text</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.FillHyphens(System.Drawing.Font,Syncfusion.Layouting.LayoutedWidget,Syncfusion.DocIO.DLS.WCharacterFormat,System.Drawing.StringFormat,System.String@)">
            <summary>
            Fill with hyphens for tab leader
            </summary>
            <param name="font">Font</param>
            <param name="ltWidget">Current layouted widget</param>
            <param name="charFormat">Character format of layouted widget</param>
            <param name="format">String format</param>
            <param name="text">text</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.FillSpace(System.Drawing.Font,Syncfusion.Layouting.LayoutedWidget,System.Drawing.StringFormat,System.String@)">
            <summary>
            Fills with space
            </summary>
            <param name="leafWidget">The leaf widget</param>
            <param name="width">Tab width</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawSymbol(Syncfusion.DocIO.DLS.WSymbol,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draws the Symbol
            </summary>
            <param name="wSymbol"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.SetClip(System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Set clipping bounds
            </summary>
            <param name="clipBounds"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.ResetClip(System.Drawing.RectangleF)">
            <summary>
            Reset clipping bounds
            </summary>
            <param name="clipBounds"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawPicture(Syncfusion.DocIO.DLS.WPicture,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draws the image.
            </summary>
            <param name="image">The image.</param>
            <param name="bounds">The bounds.</param>
            <param name="unScaled">if set to <c>true</c> [un scaled].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetBoundingBoxCoordinates(System.Drawing.RectangleF,System.Int32)">
            <summary>
            Gets the bounding box of the rectangular bounds after rotation.
            </summary>
            <param name="bounds">Bounds</param>
            <param name="angle">Degree of rotation</param>
            <returns>Bounding box of the rectangular bounds</returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.CalculateBoundingBox(System.Drawing.PointF[])">
            <summary>
            Calculates the minX, minY, maxX and maxY of the rotated bounds.
            </summary>
            <param name="imageCoordinates"></param>
            <returns>Bounding box of a rectangular bounds</returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetTransformMatrix(System.Drawing.RectangleF,System.Int32)">
            <summary>
            Gets the rotation transformation matrix
            </summary>
            <param name="bounds">Bounds of the picture</param>
            <param name="angle">Rotation angle</param>
            <returns>Transformation matrix</returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetPdfImage(System.Drawing.Image)">
            <summary>
            Gets the PdfImage with image quality from image
            </summary>
            <param name="image">Image</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetPdfImage(System.IO.MemoryStream)">
            <summary>
            Gets the PdfImage with image quality from stream
            </summary>
            <param name="stream">Memory stream</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawInlinePictureShape(Syncfusion.DocIO.DLS.WPicture,System.Drawing.RectangleF,System.Drawing.SizeF,System.Drawing.Image)">
            <summary>
            Draw the InlineShapePicture
            </summary>
            <param name="picture"></param>
            <param name="bounds"></param>
            <param name="size"></param>
            <param name="image"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.CreatePen(Syncfusion.DocIO.DLS.InlineShapeObject)">
            <summary>
            Create the Pen to draw the picture border
            </summary>
            <param name="inlineShapeObject"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetColorBorder(Syncfusion.DocIO.DLS.InlineShapeObject)">
            <summary>
            Get the color for the picture border
            </summary>
            <param name="inlineShapeObject"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetLineCap(Syncfusion.Pdf.Graphics.PdfLineCap)">
            <summary>
            Get the line cap for picture border
            </summary>
            <param name="lineCap"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetLineJoin(Syncfusion.Pdf.Graphics.PdfLineJoin)">
            <summary>
            Get LineJoin for picture border
            </summary>
            <param name="lineJoin"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetPictureBorderPen(Syncfusion.DocIO.DLS.InlineShapeObject,Syncfusion.DocIO.ReaderWriter.Biff_Records.BorderCode,Syncfusion.Pdf.Graphics.PdfPen)">
            <summary>
            Get the Dash and line style for the picture shape
            </summary>
            <param name="inlineShape"></param>
            <param name="borderCode"></param>
            <param name="border"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetDashAndLineStyle(Syncfusion.DocIO.DLS.InlineShapeObject,Syncfusion.Pdf.Graphics.PdfPen)">
            <summary>
            Get the dash and line style for picture border
            </summary>
            <param name="inlineShape"></param>
            <param name="border"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetDashStyle(Syncfusion.DocIO.LineDashing,Syncfusion.Pdf.Graphics.PdfPen)">
            <summary>
            Get the Dash style for the border
            </summary>
            <param name="lineDashing"></param>
            <param name="pen"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.CropImageBounds(Syncfusion.DocIO.DLS.WPicture,System.Drawing.RectangleF@,System.Drawing.SizeF@)">
            <summary>
            Set the CropImageBounds if the image offset is negative
            </summary>
            <param name="picture"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.CropPosition(Syncfusion.DocIO.DLS.WPicture)">
            <summary>
            Gets the position to crop the image
            </summary>
            <param name="picture"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawEquationField(Syncfusion.Layouting.LayoutedEQFields,Syncfusion.DocIO.DLS.WCharacterFormat)">
            <summary>
            Draws the equation field swtiches. 
            </summary>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawArraySwitch(Syncfusion.Layouting.LayoutedEQFields,Syncfusion.DocIO.DLS.WCharacterFormat,System.Drawing.StringAlignment)">
            <summary>
            Draws an Array EQ switch using their properties.
            </summary>
            <param name="ltEQField">A layouted array EQ switch.</param>
            <param name="charFormat">Represents a charFormat for array switch.</param>
            <param name="arraySwitchAlignment">Represents a <see cref="T:System.Drawing.StringAlignment"/> for array EQ switch.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawRadicalSwitch(Syncfusion.Layouting.LayoutedEQFields,Syncfusion.DocIO.DLS.WCharacterFormat)">
            <summary>
            Draws a radical switch and the radical symbol as a graphic path.
            </summary>
            <param name="ltEQField">A layouted radical EQ switch.</param>
            <param name="charFormat">Represents a charFormat for radical switch elements.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.AlignEqFieldSwitches(Syncfusion.Layouting.LayoutedEQFields,System.Single,System.Single)">
            <summary>
            Align the layouted equation field switch based on the current y position.
            </summary>
            <param name="ltEQField">Layouted EQ field switches</param>
            <param name="XPosition">x position of layouted equation field switch</param>
            <param name="yPosition">Y position of layouted equation field switch</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.ShiftEqFieldXYPosition(Syncfusion.Layouting.LayoutedEQFields,System.Single,System.Single)">
            <summary>
            Shift the eqaution field's x, y position based on the given x,y value.
            </summary>
            <param name="ltEQField">Layouted EQ field switches</param>
            <param name="XPosition">x position of layouted equation field switch</param>
            <param name="yPosition">Y position of layouted equation field switch</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GenerateErrorFieldCode(Syncfusion.Layouting.LayoutedEQFields,System.Single,System.Single,Syncfusion.DocIO.DLS.WCharacterFormat)">
            <summary>
            Generates the error text for the equation field.
            </summary>
            <param name="ltEQFiled">Represents a equation field to generate.</param>
            <param name="charFormat">Represents a <see cref="T:Syncfusion.DocIO.DLS.WCharacterFormat"/> which set for equation field.</param>
            <param name="xPosition">Represents a X position of equation field.</param>
            <param name="yPosition">Represents a Y position of equation field.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.ShiftEqFieldYPosition(Syncfusion.Layouting.LayoutedEQFields,System.Single)">
            <summary>
             Shift the equation field's y position based on the given y value.
            </summary>
            <param name="LayoutedEQFields">Layouted EQ field switches</param>
            <param name="yPosition">Y position of layouted equation field switch</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetTopMostY(Syncfusion.Layouting.LayoutedEQFields,System.Single)">
            <summary>
            Gets the top most Y position of layouted EQ fields.
            </summary>
            <param name="ltEQField">Layouted EQ field</param>
            <param name="minY">Minimum value of y position</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawString(System.String,Syncfusion.DocIO.DLS.WCharacterFormat,Syncfusion.DocIO.DLS.WParagraphFormat,System.Drawing.RectangleF,System.Single,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draws the string.
            </summary>
            <param name="text">The text.</param>
            <param name="charFormat">The char format.</param>
            <param name="paraFormat">The para format.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.ReverseString(System.String@)">
            <summary>
            Reverse the string
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawSmallCapString(System.String,Syncfusion.DocIO.DLS.WCharacterFormat,System.Drawing.RectangleF,System.Drawing.Font,System.Drawing.StringFormat,System.Drawing.Brush,System.Boolean)">
            <summary>
            Draws the small cap string.
            </summary>
            <param name="text">The text.</param>
            <param name="charFormat">The character format.</param>
            <param name="bounds">The bounds.</param>
            <param name="font">The font.</param>
            <param name="format">The format.</param>
            <param name="textBrush">The text brush.</param>
            <param name="isCharacterSpacing">if set to <c>true</c> [is character spacing].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsTextNeedToClip(Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Determine whether the text is need to clip when the text range y position is greater than the owner row bottom position
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsWidgetNeedToClipBasedOnXPosition(Syncfusion.Layouting.LayoutedWidget,System.Single@,System.Drawing.RectangleF)">
            <summary>
            Determine whether the text is need to clip when the text range x position is beyond the cell bounds or crossing the cell bounds
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetColumnIndex(Syncfusion.DocIO.DLS.WSection,System.Drawing.RectangleF)">
            <summary>
            Gets the index of the column.
            </summary>
            <param name="section">The section.</param>
            <param name="sectionBounds">The section bounds.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetClipTopPosition(System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Get Y position to clip paragraph items
            </summary>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetDefaultFont(System.Drawing.Font,Syncfusion.DocIO.DLS.WCharacterFormat)">
            <summary>
            Get Default font to render non east characters
            </summary>
            <param name="font"></param>
            <param name="charFormat"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawStringBasedOnCharSpacing(System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.String,System.Drawing.StringFormat,Syncfusion.DocIO.DLS.WCharacterFormat)">
            <summary>
            Draw String based on CharacterSpacing
            </summary>
            <param name="font">Font style of current Layouted widget</param>
            <param name="textBrush">Text brush</param>
            <param name="bounds">Layouted widget bounds</param>
            <param name="text">Text</param>
            <param name="format">Charater format</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.TransformGraphicsPosition(Syncfusion.Layouting.LayoutedWidget,System.Boolean,System.Drawing.PointF@,System.Single@)">
            <summary>
            Transform the graphics rendering positions based on rotation angle
            </summary>
            <param name="ltWidget">Current ltWidget</param>
            <param name="isNeedToScale">set to <c>true</c> when the widget need to scale</param>
            <param name="translatePoints">Translation points </param>
            <param name="rotationAngle">Rotation angle</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetLayoutedTextBoxContentHeight(Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Gets the height of the layouted text box content.
            </summary>
            <param name="ltWidget">The lt widget.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetWidthToShiftVerticalText(Syncfusion.DocIO.DLS.VerticalAlignment,System.Single,System.Single)">
            <summary>
            Get Width to shift vertical text
            </summary>
            <param name="tableCell"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetClipBounds(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Get Bounds to clip the text
            </summary>
            <param name="bounds"></param>
            <param name="clipWidth"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.UpdateClipBounds(System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Update clip bounds based on vertical cell 
            </summary>
            <param name="clipBounds"></param>
            <param name="ownerClipBounds"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.UpdateClipBoundsBasedOnOwner(System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Update clipping bounds based on owner clipping
            </summary>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetCellHeightForVerticalText(Syncfusion.DocIO.DLS.Entity)">
            <summary>
            Get Height of the cell with text direction as vertical
            </summary>
            <param name="ent"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawChineseText(System.String,Syncfusion.DocIO.DLS.WCharacterFormat,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draw Chinese Text
            </summary>
            <param name="text"></param>
            <param name="font"></param>
            <param name="textBrush"></param>
            <param name="bounds"></param>
            <param name="isNeedToScale">Set to <c>True</c> when the string need to be scale</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.PDFDrawString(System.String,Syncfusion.Pdf.Graphics.PdfFont,Syncfusion.Pdf.Graphics.PdfBrush,System.Single,System.Single,Syncfusion.Pdf.Graphics.PdfStringFormat)">
            <summary>
            Draw String method for Drawing the string without its width and height
            </summary>
            <param name="text"></param>
            <param name="font"></param>
            <param name="brush"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="stringFormat"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawUnicodeText(System.String,Syncfusion.DocIO.DLS.WCharacterFormat,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draw Unicode Text
            </summary>
            <param name="text"></param>
            <param name="font"></param>
            <param name="textBrush"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawUnicodeBidiText(System.String,Syncfusion.DocIO.DLS.WCharacterFormat,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draw Unicode bidi Text
            </summary>
            <param name="text"></param>
            <param name="font"></param>
            <param name="textBrush"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawUnicodeString(System.String,Syncfusion.DocIO.DLS.WCharacterFormat,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draw unicode string
            </summary>
            <param name="text">text</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsOwnerParagraphEmpty(System.String)">
            <summary>
            Determines whether the owner paragraph is empty
            </summary>
            <param name="text">text</param>
            <returns>
                <c>true</c> if owner paragraph is empty, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.RotateAndScaleTransform(System.Drawing.RectangleF@,System.Drawing.RectangleF@,System.Single,System.Drawing.PointF,System.Single)">
            <summary>
            Rotate and scale the graphics transform matrix
            </summary>
            <param name="bounds">Layoted widget bounds</param>
            <param name="scaleFactor">Scaling factor value</param>
            <param name="translatePoints">Translation points</param>
            <param name="rotationAngle">Rotation angle</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.PrepareMatrix(System.Drawing.Drawing2D.Matrix,System.Single)">
            <summary>
            Prepares a matrix to PDF.
            </summary>
            <param name="matrix">The matrix.</param>
            <param name="pageScale">The page scale value.</param>
            <returns>
            A properly prepared PdfTransformationMatrix class instance.
            </returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawParagraphBorders(Syncfusion.DocIO.DLS.WParagraph,Syncfusion.DocIO.DLS.WParagraphFormat,Syncfusion.Layouting.LayoutedWidget,System.Boolean)">
            <summary>
            Draws the paragraph borders.
            </summary>
            <param name="borders">The paragraph format.</param>
            <param name="ltWidget">The lt widget.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawParagraphBorders(System.Collections.Generic.List{Syncfusion.DocIO.DLS.Border},System.Drawing.RectangleF,Syncfusion.DocIO.DLS.Borders,Syncfusion.DocIO.DLS.Borders)">
            <summary>
            Draws the paragraph borders
            </summary>
            <param name="borderRenderingOrder">Collection of borders, contains the each border rendering order</param>
            <param name="bounds">Border bounds</param>
            <param name="borders">Current paragraph borders</param>
            <param name="previousBorder">Previous paragraph borders</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawHorizontalBorder(System.Collections.Generic.List{Syncfusion.DocIO.DLS.Border},System.Drawing.RectangleF,Syncfusion.DocIO.DLS.Borders,Syncfusion.DocIO.DLS.Border,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single,System.Single)">
            <summary>
            Draws the horizontal border.
            </summary>
            <param name="borderRenderingOrder">The border rendering order.</param>
            <param name="bounds">The bounds.</param>
            <param name="borders">The borders.</param>
            <param name="border">The border.</param>
            <param name="isMultiLineLeftBorder">if set to <c>true</c> [is multi line left border].</param>
            <param name="isMultiLineRightBorder">if set to <c>true</c> [is multi line right border].</param>
            <param name="isMultiLineHorizontalBorder">if set to <c>true</c> [is multi line horizontal border].</param>
            <param name="betweenBorderLineWidth">Width of the between border line.</param>
            <param name="leftBorderLineWidth">Width of the left border line.</param>
            <param name="rightBorderLineWidth">Width of the right border line.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawLeftBorder(System.Collections.Generic.List{Syncfusion.DocIO.DLS.Border},System.Drawing.RectangleF,Syncfusion.DocIO.DLS.Borders,Syncfusion.DocIO.DLS.Border,Syncfusion.DocIO.DLS.Borders,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the left border.
            </summary>
            <param name="borderRenderingOrder">The border rendering order.</param>
            <param name="bounds">The bounds.</param>
            <param name="borders">The borders.</param>
            <param name="border">The border.</param>
            <param name="previousBorder">The previous border.</param>
            <param name="isMultiLineTopBorder">if set to <c>true</c> [is multi line top border].</param>
            <param name="isMultiLineBottomBorder">if set to <c>true</c> [is multi line bottom border].</param>
            <param name="isMultiLineLeftBorder">if set to <c>true</c> [is multi line left border].</param>
            <param name="isMultiLineHorizontalBorder">if set to <c>true</c> [is multi line horizontal border].</param>
            <param name="leftBorderLineWidth">Width of the left border line.</param>
            <param name="topBorderLineWidth">Width of the top border line.</param>
            <param name="betweenBorderLineWidth">Width of the between border line.</param>
            <param name="bottomBorderLineWidth">Width of the bottom border line.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawRightBorder(System.Collections.Generic.List{Syncfusion.DocIO.DLS.Border},System.Drawing.RectangleF,Syncfusion.DocIO.DLS.Borders,Syncfusion.DocIO.DLS.Border,Syncfusion.DocIO.DLS.Borders,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the right border.
            </summary>
            <param name="borderRenderingOrder">The border rendering order.</param>
            <param name="bounds">The bounds.</param>
            <param name="borders">The borders.</param>
            <param name="border">The border.</param>
            <param name="previousBorder">The previous border.</param>
            <param name="isMultiLineTopBorder">if set to <c>true</c> [is multi line top border].</param>
            <param name="isMultiLineHorizontalBorder">if set to <c>true</c> [is multi line horizontal border].</param>
            <param name="isMultiLineRightBorder">if set to <c>true</c> [is multi line right border].</param>
            <param name="isMultiLineBottomBorder">if set to <c>true</c> [is multi line bottom border].</param>
            <param name="rightBorderLineWidth">Width of the right border line.</param>
            <param name="topBorderLineWidth">Width of the top border line.</param>
            <param name="betweenBorderLineWidth">Width of the between border line.</param>
            <param name="bottomBorderLineWidth">Width of the bottom border line.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawTopBorder(System.Collections.Generic.List{Syncfusion.DocIO.DLS.Border},System.Drawing.RectangleF,Syncfusion.DocIO.DLS.Borders,Syncfusion.DocIO.DLS.Border,System.Boolean,System.Single,System.Single,System.Single)">
            <summary>
            Draws the top border.
            </summary>
            <param name="borderRenderingOrder">The border rendering order.</param>
            <param name="bounds">The bounds.</param>
            <param name="borders">The borders.</param>
            <param name="border">The border.</param>
            <param name="isMultiLineTopBorder">if set to <c>true</c> [is multi line top border].</param>
            <param name="topBorderLineWidth">Width of the top border line.</param>
            <param name="leftBorderLineWidth">Width of the left border line.</param>
            <param name="rightBorderLineWidth">Width of the right border line.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawBottomBorder(System.Collections.Generic.List{Syncfusion.DocIO.DLS.Border},System.Drawing.RectangleF,Syncfusion.DocIO.DLS.Borders,Syncfusion.DocIO.DLS.Border,System.Boolean,System.Single,System.Single,System.Single)">
            <summary>
            Draws the bottom border.
            </summary>
            <param name="borderRenderingOrder">The border rendering order.</param>
            <param name="bounds">The bounds.</param>
            <param name="borders">The borders.</param>
            <param name="border">The border.</param>
            <param name="isMultiLineBottomBorder">if set to <c>true</c> [is multi line bottom border].</param>
            <param name="leftBorderLineWidth">Width of the left border line.</param>
            <param name="bottomBorderLineWidth">Width of the bottom border line.</param>
            <param name="rightBorderLineWidth">Width of the right border line.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.SortTwoBorders(System.Collections.Generic.List{Syncfusion.DocIO.DLS.Border},Syncfusion.DocIO.DLS.Border,Syncfusion.DocIO.DLS.Border,Syncfusion.DocIO.DLS.Borders,System.Boolean)">
            <summary>
            Sort the borders based on brightness
            </summary>
            <param name="renderingOrderList">Border rendering order list</param>
            <param name="firstBorder">Horizontal border</param>
            <param name="secondBorder">Either left border/right border</param>
            <param name="borders">Current paragraph borders</param>
            <param name="isLeftBorder">To ensure wether we need to remove left or right border</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.AddNextParagraphBounds(Syncfusion.Layouting.LayoutedWidget,System.Drawing.RectangleF@)">
            <summary>
            Adds the next paragraph bounds.
            </summary>
            <param name="layoutedWidget">The layouted widget.</param>
            <param name="bounds">The bounds.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws the border.
            </summary>
            <param name="border">The border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawParagraphBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws the border.
            </summary>
            <param name="border">The border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawBorder(Syncfusion.Layouting.CellLayoutInfo.CellBorder,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws the border.
            </summary>
            <param name="border">The border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawTable(Syncfusion.DocIO.DLS.WTable,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draws the table.
            </summary>
            <param name="table">The table.</param>
            <param name="ltWidget">The lt widget.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawTableRow(Syncfusion.DocIO.DLS.WTableRow,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draws the table row.
            </summary>
            <param name="row">The row.</param>
            <param name="ltWidget">The lt widget.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawTableCell(Syncfusion.DocIO.DLS.WTableCell,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draws the table cell.
            </summary>
            <param name="cell">The cell.</param>
            <param name="ltWidget">The lt widget.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsTexBoxHaveBackgroundPicture(Syncfusion.DocIO.DLS.WTextBox)">
            <summary>
            Checks the TextBox for Background picture.
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawTextureStyle(Syncfusion.DocIO.TextureStyle,System.Drawing.Color,System.Drawing.Color,System.Drawing.RectangleF)">
            <summary>
            Draws the texture style.
            </summary>
            <param name="textureStyle"></param>
            <param name="foreColor"></param>
            <param name="backColor"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetForeColor(System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>
            Gets the fore color.
            </summary>
            <param name="foreColor"></param>
            <param name="backColor"></param>
            <param name="percent"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetColorValue(System.Int32,System.Int32,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Gets the color value.
            </summary>
            <param name="foreColorValue">The fore color value.</param>
            <param name="backColorValue">The back color value.</param>
            <param name="percent">The percent.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.FillTexture(Syncfusion.DocIO.TextureStyle,System.Drawing.Color,System.Drawing.Color,System.Drawing.RectangleF)">
            <summary>
            Fill Texture within the bounds
            </summary>
            <param name="textureStyle">Texture Style</param>
            <param name="foreColor">Fore Color</param>
            <param name="backColor">Back Color</param>
            <param name="bounds">Bounds</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawCellBorders(Syncfusion.DocIO.DLS.WTableCell,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draws the cell borders.
            </summary>
            <param name="cell">The cell.</param>
            <param name="ltWidget">The lt widget.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawMultiLineLeftBorder(Syncfusion.Layouting.CellLayoutInfo,Syncfusion.Layouting.CellLayoutInfo.CellBorder,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws the multi line left border.
            </summary>
            <param name="cellLayoutInfo">The cell layout information.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isFirstRow">if set to <c>true</c> [is first row].</param>
            <param name="isLastRow">if set to <c>true</c> [is last row].</param>
            <param name="isFirstCell">if set to <c>true</c> [is first cell].</param>
            <param name="isLastCell">if set to <c>true</c> [is last cell].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawDoubleLineLeftBorder(Syncfusion.Layouting.CellLayoutInfo,Syncfusion.Layouting.CellLayoutInfo.CellBorder,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws the double line left border.
            </summary>
            <param name="cellLayoutInfo">The cell layout information.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isFirstRow">if set to <c>true</c> [is first row].</param>
            <param name="isLastRow">if set to <c>true</c> [is last row].</param>
            <param name="isFirstCell">if set to <c>true</c> [is first cell].</param>
            <param name="isLastCell">if set to <c>true</c> [is last cell].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawMultiLineRightBorder(Syncfusion.Layouting.CellLayoutInfo,Syncfusion.Layouting.CellLayoutInfo.CellBorder,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws the multi line right border.
            </summary>
            <param name="cellLayoutInfo">The cell layout information.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isFirstRow">if set to <c>true</c> [is first row].</param>
            <param name="isLastRow">if set to <c>true</c> [is last row].</param>
            <param name="isFirstCell">if set to <c>true</c> [is first cell].</param>
            <param name="isLastCell">if set to <c>true</c> [is last cell].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawDoubleLineRightBorder(Syncfusion.Layouting.CellLayoutInfo,Syncfusion.Layouting.CellLayoutInfo.CellBorder,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws the right double line border.
            </summary>
            <param name="cellLayoutInfo">The cell layout information.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isFirstRow">if set to <c>true</c> [is first row].</param>
            <param name="isLastRow">if set to <c>true</c> [is last row].</param>
            <param name="isFirstCell">if set to <c>true</c> [is first cell].</param>
            <param name="isLastCell">if set to <c>true</c> [is last cell].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawMultiLineBottomBorder(Syncfusion.Layouting.CellLayoutInfo,System.Drawing.PointF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws the multi line bottom border.
            </summary>
            <param name="cellLayoutInfo">The cell layout information.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawDoubleLineBottomBorder(Syncfusion.Layouting.CellLayoutInfo,System.Drawing.PointF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws the double line bottom border.
            </summary>
            <param name="cellLayoutInfo">The cell layout information.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawMultiLineTopBorder(Syncfusion.Layouting.CellLayoutInfo,Syncfusion.Layouting.CellLayoutInfo.CellBorder,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean)">
            <summary>
            Draws the multi line top border.
            </summary>
            <param name="cellLayoutInfo">The cell layout information.</param>
            <param name="topBorder">The top border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isStart">if set to <c>true</c> [is start].</param>
            <param name="isEnd">if set to <c>true</c> [is end].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawDoubleLineTopBorder(Syncfusion.Layouting.CellLayoutInfo,Syncfusion.Layouting.CellLayoutInfo.CellBorder,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean)">
            <summary>
            Draws the top double line border.
            </summary>
            <param name="cellLayoutInfo">The cell layout information.</param>
            <param name="topBorder">The top border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isStart">if set to <c>true</c> [is start].</param>
            <param name="isEnd">if set to <c>true</c> [is end].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsMultiLineBorder(Syncfusion.DocIO.DLS.BorderStyle)">
            <summary>
            Determines whether the specified border is multiline border
            </summary>
            <param name="borderType">Type of the border.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsMultiLineParagraphBorder(Syncfusion.DocIO.DLS.BorderStyle)">
            <summary>
            Determines whether [is multi line paragraph border] [the specified border type].
            </summary>
            <param name="borderType">Type of the border.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetBorderLineWidthArray(Syncfusion.DocIO.DLS.BorderStyle,System.Single)">
            <summary>
            Gets the border line array.
            </summary>
            <param name="borderType">Type of the border.</param>
            <param name="lineWidth">Width of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsDoubleBorder(Syncfusion.DocIO.DLS.Border)">
            <summary>
            To identify whether current border is double line border or triple line border
            </summary>
            <param name="border">Current border which is need to be check</param>
            <returns><c>True</c>id the current border type is double border</returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawMultiLineLeftBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws the multi line left border.
            </summary>
            <param name="leftBorder">The left border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isTopBorderSame">if set to <c>true</c> [is top border same].</param>
            <param name="isBetweenBorderSame">if set to <c>true</c> [is between border same].</param>
            <param name="isBottomBorderSame">if set to <c>true</c> [is bottom border same].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawDoubleLineLeftBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws the double line left border.
            </summary>
            <param name="leftBorder">The left border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isTopBorderSame">if set to <c>true</c> [is top border same].</param>
            <param name="isBetweenBorderSame">if set to <c>true</c> [is between border same].</param>
            <param name="isBottomBorderSame">if set to <c>true</c> [is bottom border same].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawTripleLineLeftBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws the triple line left border.
            </summary>
            <param name="leftBorder">The left border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isTopBorderSame">if set to <c>true</c> [is top border same].</param>
            <param name="isBetweenBorderSame">if set to <c>true</c> [is between border same].</param>
            <param name="isBottomBorderSame">if set to <c>true</c> [is bottom border same].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawMultiLineRightBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws the multi line right border.
            </summary>
            <param name="rightBorder">The right border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isTopBorderSame">if set to <c>true</c> [is top border same].</param>
            <param name="isBetweenBorderSame">if set to <c>true</c> [is between border same].</param>
            <param name="isBottomBorderSame">if set to <c>true</c> [is bottom border same].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawDoubleLineRightBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws the double line right border.
            </summary>
            <param name="rightBorder">The right border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isTopBorderSame">if set to <c>true</c> [is top border same].</param>
            <param name="isBetweenBorderSame">if set to <c>true</c> [is between border same].</param>
            <param name="isBottomBorderSame">if set to <c>true</c> [is bottom border same].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawTripleLineRightBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws the triple line right border.
            </summary>
            <param name="rightBorder">The right border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isTopBorderSame">if set to <c>true</c> [is top border same].</param>
            <param name="isBetweenBorderSame">if set to <c>true</c> [is between border same].</param>
            <param name="isBottomBorderSame">if set to <c>true</c> [is bottom border same].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawMultiLineTopBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean)">
            <summary>
            Draws the multi line top border.
            </summary>
            <param name="topBorder">The top border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isLeftBorderSame">if set to <c>true</c> [is left border same].</param>
            <param name="isRightBorderSame">if set to <c>true</c> [is right border same].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawDoubleLineTopBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean)">
            <summary>
            Draws the double line top border.
            </summary>
            <param name="topBorder">The top border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isLeftBorderSame">if set to <c>true</c> [is left border same].</param>
            <param name="isRightBorderSame">if set to <c>true</c> [is right border same].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawTripleLineTopBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean)">
            <summary>
            Draws the triple line top border.
            </summary>
            <param name="topBorder">The top border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isLeftBorderSame">if set to <c>true</c> [is left border same].</param>
            <param name="isRightBorderSame">if set to <c>true</c> [is right border same].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawMultiLineBottomBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean)">
            <summary>
            Draws the multi line bottom border.
            </summary>
            <param name="bottomBorder">The bottom border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isLeftBorderSame">if set to <c>true</c> [is left border same].</param>
            <param name="isRightBorderSame">if set to <c>true</c> [is right border same].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawDoubleLineBottomBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean)">
            <summary>
            Draws the double line bottom border.
            </summary>
            <param name="bottomBorder">The bottom border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isLeftBorderSame">if set to <c>true</c> [is left border same].</param>
            <param name="isRightBorderSame">if set to <c>true</c> [is right border same].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawTripleLineBottomBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean)">
            <summary>
            Draws the triple line bottom border.
            </summary>
            <param name="bottomBorder">The bottom border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isLeftBorderSame">if set to <c>true</c> [is left border same].</param>
            <param name="isRightBorderSame">if set to <c>true</c> [is right border same].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawMultiLineBetweenBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean,Syncfusion.DocIO.DLS.Border,Syncfusion.DocIO.DLS.Border,System.Boolean,System.Boolean)">
            <summary>
            Draws the multi line between border.
            </summary>
            <param name="betweenBorder">The between border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isLeftBorderSame">if set to <c>true</c> [is left border same].</param>
            <param name="isRightBorderSame">if set to <c>true</c> [is right border same].</param>
            <param name="leftBorder">The left border.</param>
            <param name="rightBorder">The right border.</param>
            <param name="isOverlapLeft">if set to <c>true</c> [is overlap left].</param>
            <param name="isOverlapRight">if set to <c>true</c> [is overlap right].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawDoubleLineBetweenBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean,Syncfusion.DocIO.DLS.Border,Syncfusion.DocIO.DLS.Border,System.Boolean,System.Boolean)">
            <summary>
            Draws the double line between border.
            </summary>
            <param name="betweenBorder">The between border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isLeftBorderSame">if set to <c>true</c> [is left border same].</param>
            <param name="isRightBorderSame">if set to <c>true</c> [is right border same].</param>
            <param name="leftBorder">The left border.</param>
            <param name="rightBorder">The right border.</param>
            <param name="isOverlapLeft">if set to <c>true</c> [is overlap left].</param>
            <param name="isOverlapRight">if set to <c>true</c> [is overlap right].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawTripleLineBetweenBorder(Syncfusion.DocIO.DLS.Border,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean,Syncfusion.DocIO.DLS.Border,Syncfusion.DocIO.DLS.Border,System.Boolean,System.Boolean)">
            <summary>
            Draws the triple line between border.
            </summary>
            <param name="betweenBorder">The between border.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="isLeftBorderSame">if set to <c>true</c> [is left border same].</param>
            <param name="isRightBorderSame">if set to <c>true</c> [is right border same].</param>
            <param name="leftBorder">The left border.</param>
            <param name="rightBorder">The right border.</param>
            <param name="isOverlapLeft">if set to <c>true</c> [is overlap left].</param>
            <param name="isOverlapRight">if set to <c>true</c> [is overlap right].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetLeftRightLineWidht(System.Single[],System.Boolean)">
            <summary>
            Gets the adjacent border line width
            </summary>
            <param name="lineArray">Left or right border line array</param>
            <param name="isLeft"><c>true</c> if we passing left border line array; otherwise false</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawBackgroundColor(System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Draws the color of the background.
            </summary>
            <param name="bgColor">Color of the bg.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawBackgroundImage(System.Drawing.Image,Syncfusion.DocIO.DLS.WPageSetup)">
            <summary>
            Draws the back ground image.
            </summary>
            <param name="image">The image.</param>
            <param name="pageSetup">The page setup.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawWatermark(Syncfusion.DocIO.DLS.Watermark,Syncfusion.DocIO.DLS.WPageSetup,System.Drawing.RectangleF)">
            <summary>
            Draws the Watermark
            </summary>
            <param name="watermark">Watermark</param>
            <param name="width">Page width</param>
            <param name="height">Page height</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.Rendering.Page)">
            <summary>
            Imlementation of Draw method of page. 
            </summary>
            <param name="page">Currentl drawing page</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsEmptyWaterMark(Syncfusion.DocIO.DLS.Watermark)">
            <summary>
            Checks the current watermark is empty watermark or not.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsWaterMarkNeedToBeDraw(Syncfusion.DocIO.DLS.Rendering.Page)">
            <summary>
            Checks the HeaderFooter Paragraph and Table Weather WaterMark has to draw first
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsWaterMarkInParagraph(Syncfusion.DocIO.DLS.WParagraph,Syncfusion.DocIO.DLS.Rendering.Page)">
            <summary>
            Checks the paragraph weather watermark in Paragraph
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsWaterMarkInTable(Syncfusion.DocIO.DLS.WTable,Syncfusion.DocIO.DLS.Rendering.Page)">
            <summary>
            Checks the paragraph weather watermark in Table
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsWaterMarkOrderHasChanged(System.Int32,System.Boolean,Syncfusion.DocIO.DLS.Rendering.Page)">
            <summary>
            Checks which One has to draw first watermark or picture,shape,textbox
            </summary>
            <param name="paragraph"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.Layouting.SplitWidgetContainer,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the splitWidgetContainer to PDF document or Image.
            </summary>
            <param name="widget">Currentl split widget container</param>
            <param name="layoutedWidget">Layouted widget</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.Layouting.IWidgetContainer,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Imlementation of Draw method of IWidget interface .
            </summary>
            <param name="cg"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawImpl(Syncfusion.Layouting.IWidgetContainer,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw widget to graphics.
            </summary>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.Layouting.IWidget,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draws the specified dc.
            </summary>
            <param name="dc">The dc.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawPageBorder(System.Int32,Syncfusion.DocIO.DLS.Rendering.PageCollection)">
            <summary>
            Draw the page border
            </summary>
            <param name="i">Page number</param>
            <param name="dc"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.BookmarkStart,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Imlementation of Draw method of BookMark interface .
            </summary>
            <param name="cg"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.Layouting.LayoutedWidget,System.Boolean)">
            <summary>
            Imlementation of Draw method of LayoutedWidget interface .
            </summary>
            <param name="layoutedWidget">The Layouted widget.</param>
            <param name="isHaveToInitLayoutInfo">Is need to initialize layout info</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets clipping for the particular region.
            </summary>
            <param name="clippingBounds"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetClippingBounds(Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Get the bounds based on the frame content.
            </summary>
            <param name="cellltWidget"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Floor(System.Single)">
            <summary>
            Do the Math.Floor operation.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.ResetClip(System.Boolean,System.Drawing.RectangleF)">
            <summary>
            Reset Clipping bounds
            </summary>
            <param name="isClipBoundsNeedToBeUpdated"></param>
            <param name="cellBounds"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.SetClip(System.Boolean,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Set clipping bounds
            </summary>
            <param name="dc"></param>
            <param name="isClipBoundsNeedToBeUpdated"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.WParagraph,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the paragraph
            </summary>
            <param name="paragraph"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsLinesInteresectWithFloatingItems(Syncfusion.Layouting.LayoutedWidget,System.Boolean)">
            <summary>
            Check whether any of line for current paragraph intersect with floating items.
            </summary>
            <param name="ltWidget">Current widget</param>
            <param name="isLineContainer">Whether this is line or line container</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawLineBackGroundColors(Syncfusion.DocIO.DLS.WParagraph,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the back ground colour for current line.
            </summary>
            <param name="paragraph">Current paragraph</param>
            <param name="ltWidget">Current line widget</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetBackGroundColorRenderingBounds(Syncfusion.Layouting.LayoutedWidget,System.Drawing.RectangleF)">
            <summary>
            Find the Back ground color rendering bounds.
            </summary>
            <param name="ltWidget"></param>
            <param name="remaingingBounds"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.FindFillColorBounds(System.Boolean@,System.Drawing.RectangleF,System.Collections.Generic.List{System.Drawing.RectangleF},System.Drawing.RectangleF)">
            <summary>
            Check whether line preserved left or right or between floating items.
            </summary>
            <param name="isNeedToFindFillColorRenderingBounds"></param>
            <param name="childItemBounds"></param>
            <param name="intersectingBoundsCollection"></param>
            <param name="remaingingBounds"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetInnerItemsRenderingBounds(Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Get the current child widget total bounds.
            </summary>
            <param name="ltWidget"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.Layouting.SplitTableWidget,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the split table widget
            </summary>
            <param name="splitTableWidget"></param>
            <param name="layoutedWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.BlockContentControl,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw method for BlockContentControl
            </summary>
            <param name="SDT"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.InlineContentControl,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw method for InlineContentControl
            </summary>
            <param name="SDT"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.WAbsoluteTab,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw AbsoluteTab
            </summary>
            <param name="absoluteTab"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.WChart,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw chart as image
            </summary>
            <param name="chart"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawChart(Syncfusion.DocIO.DLS.WChart,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draws chart
            </summary>
            <param name="chart"></param>
            <param name="widget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.WCheckBox,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the Check box.
            </summary>
            <param name="checkBox"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.WDropDownFormField,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the Drop Down Form Field.
            </summary>
            <param name="dropDownFormField"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.WField,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the Fields.
            </summary>
            <param name="field"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.WOleObject,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw Ole Object.
            </summary>
            <param name="oleObject"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.WPicture,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the Picture.
            </summary>
            <param name="picture"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.WSymbol,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the symbol.
            </summary>
            <param name="symbol"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.WTable,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the table.
            </summary>
            <param name="table"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.WTableCell,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the table cell.
            </summary>
            <param name="cell"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.WTableRow,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the table row.
            </summary>
            <param name="row"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.WTextBox,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the textbox.
            </summary>
            <param name="textBox"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.WTextFormField,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the text form field.
            </summary>
            <param name="textFormField"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.Layouting.LeafEmtyWidget,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Imlementation of Draw method of LayoutedWidget interface 
            </summary>
            <param name="leafEmtyWidget"></param>
            <param name="layoutedWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.Shape,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the shape to PDF document or Image.
            </summary>
            <param name="shape">Current shape entity</param>
            <param name="ltWidget">Current shale layouted widget</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.Layouting.SplitStringWidget,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the splitStringWidget
            </summary>
            <param name="splitStringWidget">SplitStringWidget</param>
            <param name="layoutedWidget">Layouted split string widget</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.DocIO.DLS.WTextRange,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw the text ranges.
            </summary>
            <param name="textRange"></param>
            <param name="ltWidget"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Draw(Syncfusion.Layouting.IStringWidget,Syncfusion.Layouting.LayoutedWidget,System.String)">
            <summary>
            
            </summary>
            <param name="cg"></param>
            <param name="ltWidget"></param>
            <param name="text"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawImpl(Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draw widget to graphics.
            </summary>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetOwnerLayoutedWidget(Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Get Cell Widget
            </summary>
            <param name="ltWidget"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetParagraphWidget(Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Gets the owner widget of the paragraph
            </summary>
            <param name="ltWidget"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetCellWidget(Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Get owner widget of the cell
            </summary>
            <param name="ltWidget"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsOverLappedShapeWidget(Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Determines whether the layouted widget is Overlapping Widget
            </summary>
            <param name="ltWidget">The lt widget.</param>
            <returns>
            	<c>true</c> if the layouted widget is Overlapping shape widget; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawTextWatermark(Syncfusion.DocIO.DLS.TextWatermark,System.Drawing.RectangleF)">
            <summary>
            Draws the Text Watermark
            </summary>
            <param name="textWatermark">Text Watermark</param>
            <param name="bounds">Bounds</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.ChangeColorBrightness(System.Drawing.Color,System.Single)">
            <summary>
            Change the given color brightness
            </summary>
            <param name="color"></param>
            <param name="correctionFactor"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawPageBorder(Syncfusion.DocIO.DLS.WPageSetup,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Draw border for the page
            </summary>
            <param name="pageSetup">Page setup object</param>
            <param name="headerBounds">Header bounds</param>
            <param name="footerBounds">Footer bounds</param>
            <param name="pageBounds">Page bounds</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetLeftBorderPoints(Syncfusion.DocIO.DLS.WPageSetup,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Gets the bounds to draw left border
            </summary>
            <param name="pageSetup">Page setup object</param>
            <param name="headerBounds">Header bounds</param>
            <param name="footerBounds">Footer bounds</param>
            <param name="pageBounds">Page bounds</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetRightBorderPoints(Syncfusion.DocIO.DLS.WPageSetup,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Gets the bounds to draw right border
            </summary>
            <param name="pageSetup">Page setup object</param>
            <param name="headerBounds">Header bounds</param>
            <param name="footerBounds">Footer bounds</param>
            <param name="pageBounds">Page bounds</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetBottomBorderPoints(Syncfusion.DocIO.DLS.WPageSetup,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Gets the bounds to draw bottom border
            </summary>
            <param name="pageSetup">Page setup object</param>
            <param name="headerBounds">Header bounds</param>
            <param name="footerBounds">Footer bounds</param>
            <param name="pageBounds">Page bounds</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetTopBorderPoints(Syncfusion.DocIO.DLS.WPageSetup,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Gets the bounds to draw top border
            </summary>
            <param name="pageSetup">Page setup object</param>
            <param name="headerBounds">Header bounds</param>
            <param name="footerBounds">Footer bounds</param>
            <param name="pageBounds">Page bounds</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetFontSize(Syncfusion.DocIO.DLS.TextWatermark)">
            <summary>
            Gets the font size for Text Watermark
            </summary>
            <param name="textWatermark">Text Watermark</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawImageWatermark(Syncfusion.DocIO.DLS.PictureWatermark,System.Drawing.RectangleF,Syncfusion.DocIO.DLS.WPageSetup)">
            <summary>
            Draws the Picture Watermark
            </summary>
            <param name="pictureWatermark">Picture Watermark</param>
            <param name="bounds">Bounds</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.UpdatePictureWaterMarkPosition(Syncfusion.DocIO.DLS.WPicture,Syncfusion.DocIO.DLS.WPageSetup,System.Drawing.RectangleF)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawCheckBox(Syncfusion.DocIO.DLS.WCheckBox,Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Draws the check box.
            </summary>
            <param name="checkbox">The checkbox.</param>
            <param name="ltBounds">The lt bounds.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsShapeNeedToBeFill(Syncfusion.DocIO.DLS.AutoShapeType)">
            <summary>
            
            </summary>
            <param name="shapeType"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetTransformMatrix(System.Drawing.RectangleF,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Rotate the shape based on Flip positions
            </summary>
            <param name="bounds"></param>
            <param name="ang"></param>
            <param name="flipH"></param>
            <param name="flipV"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetGraphicsPath(Syncfusion.DocIO.DLS.Shape,System.Drawing.RectangleF,Syncfusion.Pdf.Graphics.PdfPen@)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.MeasureImage(Syncfusion.DocIO.DLS.WPicture)">
            <summary>
            Measures the image.
            </summary>
            <param name="image">The image.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.MeasurePictureBulletSize(Syncfusion.DocIO.DLS.WPicture,System.Drawing.Font)">
            <summary>
            Measures the picture bullet size
            </summary>
            <param name="picture">Picture</param>
            <param name="font">Font</param>
            <param name="charFormat">Character format</param>
            <returns>The size of picture bullet</returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.MeasureString(System.String,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>
            Measures the string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="layoutArea">The layout area.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.MeasureString(System.String,System.Drawing.Font,System.Drawing.StringFormat,Syncfusion.DocIO.DLS.WCharacterFormat,System.Boolean)">
            <summary>
            Measures the string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="layoutArea">The layout area.</param>
            <param name="format">The format.</param>
            <param name="charSpacing">The CharacterSpacing</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.MeasureString(System.String,System.Drawing.Font,System.Drawing.StringFormat,Syncfusion.DocIO.DLS.WCharacterFormat,System.Boolean,System.Boolean)">
            <summary>
            Measures the string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="format">The format.</param>
            <param name="charFormat">The character format.</param>
            <param name="isMeasureFromTabList">if set to <c>true</c> [is measure from tab list].</param>
            <param name="isMeasureFromSmallCapString">if set to <c>true</c> [is measure from small cap string].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetSubSuperScriptFontSize(System.Drawing.Font)">
            <summary>
            Calculates the font size for subscript and superscript font.
            </summary>
            <param name="font">Represets a normal font to change as subscript and superscript size.</param>
            <returns>Returns font size of subscript and superscript for corresponding inputed font.</returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetExceededLineHeightForArialUnicodeMSFont(System.Drawing.Font,System.Boolean)">
            <summary>
            Get the Exceeded line height of the Arial unicode MS font.
            </summary>
            <param name="font">The font.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.MeasureString(System.String,System.Drawing.Font,System.Drawing.Font,System.Drawing.StringFormat,Syncfusion.DocIO.DLS.WCharacterFormat)">
            <summary>
            Measures the string.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="layoutArea">The layout area.</param>
            <param name="format">The format.</param>
            <param name="charSpacing">The CharacterSpacing</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.MeasureSmallCapString(System.String,System.Drawing.SizeF@,System.Drawing.Font,System.Drawing.StringFormat,Syncfusion.DocIO.DLS.WCharacterFormat)">
            <summary>
            Measures the small cap string.
            </summary>
            <param name="text">The text.</param>
            <param name="size">The size.</param>
            <param name="font">The font.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.MeasureUnicodeString(System.String,System.Drawing.Font,System.Drawing.Font,System.Drawing.StringFormat,Syncfusion.DocIO.DLS.WCharacterFormat)">
            <summary>
            Draw Unicode Text
            </summary>
            <param name="text"></param>
            <param name="font"></param>
            <param name="textBrush"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.MeasureTextRange(Syncfusion.DocIO.DLS.WTextRange,System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="txtRange"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetAscent(System.Drawing.Font)">
            <summary>
            Gets the ascent
            </summary>
            <param name="font">The Font.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawArrowHead(Syncfusion.DocIO.DLS.Shape,Syncfusion.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Boolean@,Syncfusion.Pdf.Graphics.PdfPath@,System.Drawing.PointF[])">
            <summary>
            Draws the arrow head.
            </summary>
            <param name="shape">The shape.</param>
            <param name="pen">The pen.</param>
            <param name="bounds">The bounds.</param>
            <param name="isArrowHeadExist">if set to <c>true</c> [is arrow head exist].</param>
            <param name="path">The path.</param>
            <param name="linePoints">The line points1.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawCloseEndArrowHead(Syncfusion.DocIO.DLS.Shape,Syncfusion.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Drawing.PointF[],System.Drawing.PointF@,System.Boolean@,Syncfusion.Pdf.Graphics.PdfPath@)">
            <summary>
            Draws the close end arrow head.
            </summary>
            <param name="shape">The shape.</param>
            <param name="pen">The pen.</param>
            <param name="bounds">The bounds.</param>
            <param name="linePoints">The line points.</param>
            <param name="endPoint">The end point.</param>
            <param name="isArrowHeadExist">if set to <c>true</c> [is arrow head exist].</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawOpenBeginArrowHead(Syncfusion.DocIO.DLS.Shape,Syncfusion.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Drawing.PointF[],System.Drawing.PointF@,System.Boolean@,Syncfusion.Pdf.Graphics.PdfPath@)">
            <summary>
            Draws the open begin arrow head.
            </summary>
            <param name="shape">The shape.</param>
            <param name="pen">The pen.</param>
            <param name="bounds">The bounds.</param>
            <param name="linePoints">The line points.</param>
            <param name="endPoint">The end point.</param>
            <param name="isArrowHeadExist">if set to <c>true</c> [is arrow head exist].</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawCloseBeginArrowHead(Syncfusion.DocIO.DLS.Shape,Syncfusion.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Drawing.PointF[],System.Drawing.PointF@,System.Boolean@,Syncfusion.Pdf.Graphics.PdfPath@)">
            <summary>
            Draws the close begin arrow head.
            </summary>
            <param name="shape">The shape.</param>
            <param name="pen">The pen.</param>
            <param name="bounds">The bounds.</param>
            <param name="linePoints">The line points.</param>
            <param name="endPoint">The end point.</param>
            <param name="isArrowHeadExist">if set to <c>true</c> [is arrow head exist].</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.AddCloseArrowHeadPoints(System.Drawing.PointF[],Syncfusion.Pdf.Graphics.PdfPath@,Syncfusion.Pdf.Graphics.PdfPen)">
            <summary>
            Adds the close arrow head points.
            </summary>
            <param name="points">The points.</param>
            <param name="path">The path.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.AddOpenArrowHeadPoints(System.Drawing.PointF[],Syncfusion.Pdf.Graphics.PdfPath@)">
            <summary>
            Adds the open arrow head points.
            </summary>
            <param name="points">The points.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetOpenArrowDefaultValues(Syncfusion.DocIO.DLS.Shape,System.Single,System.Single@,System.Single@,System.Single@,System.Boolean)">
            <summary>
            Gets the open arrow default values.
            </summary>
            <param name="shape">The shape.</param>
            <param name="lineWidth">Width of the line.</param>
            <param name="arrowLength">Length of the arrow.</param>
            <param name="arrowAngle">The arrow angle.</param>
            <param name="adjustValue">The adjust value.</param>
            <param name="isFromBeginArrow">if set to <c>true</c> [is from begin arrow].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetCloseArrowDefaultValues(Syncfusion.DocIO.DLS.Shape,System.Single,System.Single@,System.Single@,System.Single@,System.Boolean)">
            <summary>
            Gets the close arrow default values.
            </summary>
            <param name="shape">The shape.</param>
            <param name="lineWidth">Width of the line.</param>
            <param name="arrowLength">Length of the arrow.</param>
            <param name="arrowAngle">The arrow angle.</param>
            <param name="adjustValue">The adjust value.</param>
            <param name="isFromBeginArrow">if set to <c>true</c> [is from begin arrow].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetArrowHeadLength(Syncfusion.DocIO.DLS.Shape,System.Boolean)">
            <summary>
            Gets the length of the arrow head.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetCloseNarrowArrowDefaultValues(Syncfusion.DocIO.ReaderWriter.DataStreamParser.Escher.LineEndLength,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            Gets the close narrow arrow default values.
            </summary>
            <param name="arrowHeadLength">Length of the arrow head.</param>
            <param name="lineWidth">Width of the line.</param>
            <param name="arrowLength">Length of the arrow.</param>
            <param name="arrowAngle">The arrow angle.</param>
            <param name="adjustValue">The adjust value.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetCloseMediumArrowDefaultValues(Syncfusion.DocIO.ReaderWriter.DataStreamParser.Escher.LineEndLength,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            Gets the close medium arrow default values.
            </summary>
            <param name="arrowHeadLength">Length of the arrow head.</param>
            <param name="lineWidth">Width of the line.</param>
            <param name="arrowLength">Length of the arrow.</param>
            <param name="arrowAngle">The arrow angle.</param>
            <param name="adjustValue">The adjust value.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetCloseWideArrowDefaultValues(Syncfusion.DocIO.ReaderWriter.DataStreamParser.Escher.LineEndLength,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            Gets the close wide arrow default values.
            </summary>
            <param name="arrowHeadLength">Length of the arrow head.</param>
            <param name="lineWidth">Width of the line.</param>
            <param name="arrowLength">Length of the arrow.</param>
            <param name="arrowAngle">The arrow angle.</param>
            <param name="adjustValue">The adjust value.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetOpenNarrowArrowDefaultValues(Syncfusion.DocIO.ReaderWriter.DataStreamParser.Escher.LineEndLength,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            Gets the open narrow arrow default values.
            </summary>
            <param name="arrowHeadLength">Length of the arrow head.</param>
            <param name="lineWidth">Width of the line.</param>
            <param name="arrowLength">Length of the arrow.</param>
            <param name="arrowAngle">The arrow angle.</param>
            <param name="adjustValue">The adjust value.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetOpenMediumArrowDefaultValues(Syncfusion.DocIO.ReaderWriter.DataStreamParser.Escher.LineEndLength,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            Gets the open medium arrow default values.
            </summary>
            <param name="arrowHeadLength">Length of the arrow head.</param>
            <param name="lineWidth">Width of the line.</param>
            <param name="arrowLength">Length of the arrow.</param>
            <param name="arrowAngle">The arrow angle.</param>
            <param name="adjustValue">The adjust value.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetOpenWideArrowDefaultValues(Syncfusion.DocIO.ReaderWriter.DataStreamParser.Escher.LineEndLength,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            Gets the open wide arrow default values.
            </summary>
            <param name="arrowHeadLength">Length of the arrow head.</param>
            <param name="lineWidth">Width of the line.</param>
            <param name="arrowLength">Length of the arrow.</param>
            <param name="arrowAngle">The arrow angle.</param>
            <param name="adjustValue">The adjust value.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.FindAngleToLeftAndRightHeadPoint(Syncfusion.DocIO.DLS.Shape,System.Drawing.PointF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Finds the angle to left and right head point.
            </summary>
            <param name="shape">The shape.</param>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.FindArrowHeadAngleRadians(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Finds the arrow head angle radians.
            </summary>
            <param name="point1">The point1.</param>
            <param name="point2">The point2.</param>
            <param name="isFromSeparateOrientation">if set to <c>true</c> [is from separate orientation].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.FindBaseLineEndPoint(Syncfusion.DocIO.DLS.Shape,System.Drawing.PointF[],System.Single,System.Boolean)">
            <summary>
            Finds the base line end point.
            </summary>
            <param name="shape">The shape.</param>
            <param name="linePoints">The line points.</param>
            <param name="adjustValue">The adjust value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetEndPointForBaseLine(System.Boolean,System.Double,System.Double,System.Single,System.Drawing.PointF[],System.Single@,System.Single@)">
            <summary>
            Gets the end point.
            </summary>
            <param name="isFromBeginArrow">if set to <c>true</c> [is from begin arrow].</param>
            <param name="degree">The degree.</param>
            <param name="length">The length.</param>
            <param name="adjustValue">The adjust value.</param>
            <param name="linePoints">The line points.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.FindAngleRadians(System.Drawing.PointF[],System.Boolean)">
            <summary>
            Finds the angle radians.
            </summary>
            <param name="linePoints">The line points.</param>
            <param name="isFromBottomToTop">if set to <c>true</c> [is from bottom to top].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.FindArrowHeadPoints(Syncfusion.DocIO.DLS.Shape,Syncfusion.Pdf.Graphics.PdfPen,System.Drawing.RectangleF,System.Drawing.PointF[],System.Boolean,System.Boolean)">
            <summary>
            Finds the end cap arrow head points.
            </summary>
            <param name="shape">The shape.</param>
            <param name="pen">The pen.</param>
            <param name="bounds">The bounds.</param>
            <param name="linePoints">The line points.</param>
            <param name="isFromOpenArrow">if set to <c>true</c> [is from open arrow].</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.FindLeftRightHeadPoints(Syncfusion.DocIO.DLS.Shape,System.Drawing.PointF[],System.Drawing.PointF[]@,System.Single,System.Single,System.Boolean)">
            <summary>
            Finds the left right head points.
            </summary>
            <param name="shape">The shape.</param>
            <param name="linePoints">The line points.</param>
            <param name="points">The points.</param>
            <param name="arrowAngle">The arrow angle.</param>
            <param name="arrowLength">Length of the arrow.</param>
            <param name="isFromBeginArrow">if set to <c>true</c> [is from begin arrow].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.ConstrucBasetLine(System.Boolean,System.Drawing.PointF,System.Drawing.PointF[],System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Construcs the baset line.
            </summary>
            <param name="isFromBeginArrow">if set to <c>true</c> [is from begin arrow].</param>
            <param name="points">The points.</param>
            <param name="linePoints">The line points.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetArrowDefaultValues(Syncfusion.DocIO.DLS.Shape,Syncfusion.Pdf.Graphics.PdfPen,System.Single@,System.Single@,System.Single@,System.Boolean,System.Boolean)">
            <summary>
            Gets the arrow default values.
            </summary>
            <param name="shape">The shape.</param>
            <param name="pen">The pen.</param>
            <param name="arrowLength">Length of the arrow.</param>
            <param name="arrowAngle">The arrow angle.</param>
            <param name="adjustValue">The adjust value.</param>
            <param name="isFromBeginArrow">if set to <c>true</c> [is from begin arrow].</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.RadianToDegree(System.Double)">
            <summary>
            Radians to degree.
            </summary>
            <param name="angle">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Degree2Radian(System.Double)">
            <summary>
            Degree2s the radian.
            </summary>
            <param name="a">A.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetEndPoint(System.Double,System.Single,System.Single,System.Single,System.Single@,System.Single@)">
            <summary>
            Gets the end point.
            </summary>
            <param name="angle">The angle.</param>
            <param name="len">The length.</param>
            <param name="start_x">The start_x.</param>
            <param name="start_y">The start_y.</param>
            <param name="end_x">The end_x.</param>
            <param name="end_y">The end_y.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetLinePointsBasedOnFlip(Syncfusion.DocIO.DLS.Shape,System.Drawing.RectangleF)">
            <summary>
            Gets the line points based on flip.
            </summary>
            <param name="shape">The shape.</param>
            <param name="bounds">The bounds.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsSoftHyphen(Syncfusion.Layouting.LayoutedWidget)">
            <summary>
            Determines whether the text range is soft hyphen and that need to be drawn.
            </summary>
            <param name="ltWidget">The lt widget.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetStringFormat(Syncfusion.DocIO.DLS.WCharacterFormat)">
            <summary>
            Gets the string format.
            </summary>
            <param name="charFormat">The char format.</param>
            <param name="paraFormat">The para format.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetBrush(System.Drawing.Color)">
            <summary>
            Gets the brush.
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetPDFBrush(System.Drawing.Color)">
            <summary>
            Gets the pdf brush.
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetTextColor(Syncfusion.DocIO.DLS.WCharacterFormat)">
            <summary>
            Gets the color of the text.
            </summary>
            <param name="charFormat">The char format.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.UpdateAlternateFont(Syncfusion.DocIO.DLS.WCharacterFormat,System.String,System.Drawing.Font@)">
            <summary>
            Updates the alternate font for the font not installed in the system.
            </summary>
            <param name="charFormat">The char format.</param>
            <param name="fontName">Name of the font.</param>
            <param name="font">The font.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsTOC(Syncfusion.DocIO.DLS.WTextRange)">
            <summary>
            Checks the owner paragraph of the textrange is a TOC
            </summary>
            <param name="txtRange">Text Range</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetFont(Syncfusion.DocIO.DLS.WCharacterFormat,System.String)">
            <summary>
            Gets the font.
            </summary>
            <param name="charFormat">The char format.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetStringAlignment(Syncfusion.DocIO.DLS.WParagraphFormat)">
            <summary>
            Gets the string alignment.
            </summary>
            <param name="paraFormat">The para format.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetPen(Syncfusion.DocIO.DLS.Border,System.Boolean)">
            <summary>
            Gets the pen.
            </summary>
            <param name="border">The border.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetPen(Syncfusion.DocIO.DLS.BorderStyle,System.Single,System.Drawing.Color)">
            <summary>
            Gets the pen.
            </summary>
            <param name="borderType">Type of the border.</param>
            <param name="borderLineWidth">Width of the border line.</param>
            <param name="borderColor">Color of the border.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.ScaleImage(System.Drawing.Image,System.Single,System.Single)">
            <summary>
            Scales the image.
            </summary>
            <param name="image">The image.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.AddBookmarkCrossRef(System.Drawing.RectangleF)">
            <summary>
            Adds Bookmark cross reference field to the collection.
            </summary>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.AddHyperLink(Syncfusion.DocIO.DLS.Hyperlink,System.Drawing.RectangleF)">
            <summary>
            Adds the hyper link to collection.
            </summary>
            <param name="text">The text.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.UpdateTOCLevel(Syncfusion.DocIO.DLS.WParagraph,Syncfusion.DocIO.DLS.Rendering.DocumentLayouter.BookmarkHyperlink)">
            <summary>
            Updates the TOC level.
            </summary>
            <param name="paragraph">The paragraph.</param>
            <param name="bookmark">The bookmark.</param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.UpdateResIndex(System.String,Syncfusion.Layouting.ITextMeasurable,System.Int32,System.Boolean,System.Boolean,System.Double,System.Single,System.Single,System.Boolean)">
            <summary>
            Updates Result index
            </summary>
            <param name="text">text</param>
            <param name="measurer">the measurer</param>
            <param name="wordLength">Word length</param>
            <param name="resIndex">res index</param>
            <param name="bSplitByChar">bSplitByChar</param>
            <param name="bIsInCell">bIsInCell</param>
            <param name="offset">offset</param>
            <param name="clientWidth">Client Width</param>
            <returns>res Index</returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsLeadingCharacter(System.Char)">
            <summary>
            Determine whether the character is CJK leading character
            A line of text cannot end with any leading characters, which are listed below
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsBeginCharacter(System.Char)">
            <summary>
            Determine whether the character is Begin CJK character
            A line of text cannot begin with any following characters
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsOverFlowCharacter(System.Char)">
            <summary>
            Determine whether the character is CJK overflow character
            Overflow characters are allowed to render in the same line when it doesn't have required client width to fit the character
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsUnicodeText(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetPreviousSibling(Syncfusion.DocIO.DLS.WTextRange)">
            <summary>
            Get previous text range
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetCellWidth(Syncfusion.DocIO.DLS.ParagraphItem)">
            <summary>
            Get cell Width
            </summary>
            <param name="textRange">The TextRange</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsUnicode(System.String)">
            <summary>
            Determines whether the text is unicode
            </summary>
            <param name="text">text</param>
            <returns>
            	<c>true</c> if text is unicode, set to <c>true</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetWordLength(System.String,System.Int32)">
            <summary>
            Gets length of WORD.
            NOTE:
            - WORD: text run that finished by last space letter 
              (sample: "text  " or "  "; wrong sample: " text" or "text  text" )
            EXCLUSION:
            - If text working part have zero symbols return (-1)
            - If text working part don't consist SPACE letters return legth of 
              text working part
            </summary>
            <param name="text"></param>
            <param name="startIndex">Index of word first letter</param>
            <returns>Length of found word</returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DrawBehindWidgets(Syncfusion.Layouting.LayoutedWidgetList,Syncfusion.Layouting.IWidget,System.Int32,System.Boolean)">
            <summary>
            Draws the behind shape widgets.
            </summary>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetOrderIndex(Syncfusion.Layouting.IWidget)">
            <summary>
            Get Order index of the floating item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetLineWidth(Syncfusion.DocIO.ReaderWriter.Biff_Records.BorderCode)">
            <summary>
            Get the line width of the picture border for Inline picture shape
            </summary>
            <param name="border"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GetLineWidth(Syncfusion.DocIO.DLS.WPicture)">
            <summary>
            Get the line width of the picture border
            </summary>
            <param name="picture"></param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsListCharacter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsClipBoundsNeedToBeUpdated">
            <summary>
            Determine whether the Clip bounds need to be updated based on owner bounds
            </summary>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.IsTextBoxBoundsNeedToBeUpdated">
            <summary>
            Determines whether the Clip bounds need to be updated based on text box bounds
            </summary>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.CurrentBookmarkName">
            <summary>
            Get the Current Bookmark name
            </summary>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.PDFGraphics">
            <summary>
            Gets or sets the graphics.
            </summary>
            <value>The graphics.</value>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.ImageQuality">
            <summary>
            Gets or sets the ImageQuality.
            </summary>
            <value>image quality</value>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Graphics">
            <summary>
            Gets or sets the graphics.
            </summary>
            <value>The graphics.</value>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.GraphicsBmp">
            <summary>
            Gets the bitmap graphics.
            </summary>
            <value> The graphics.</value>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Hyperlinks">
            <summary>
            Gets the hyperlinks.
            </summary>
            <value>The hyperlinks.</value>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.BookmarkHyperlinksList">
            <summary>
            Gets the bookmark hyperlinks list.
            </summary>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.Bookmarks">
            <summary>
            Gets the bookmarks.
            </summary>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.OverLappedShapeWidgets">
            <summary>
            Gets the overlapping shape widgets.
            </summary>
            <value>The overlapping shape widgets.</value>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.FontMetric">
            <summary>
            Gets the font metric.
            </summary>
            <value>
            The font metric.
            </value>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.StringFormt">
            <summary>
            Gets the string formt.
            </summary>
            <value>
            The string formt.
            </value>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.TextBoxBounds">
            <summary>
            Gets or sets the Text box bounds
            </summary>
            <value>
            The Text box bounds
            </value>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.EmbedFonts">
            <summary>
            Gets or sets a value indicating whether to embed fonts to converted PDF in Word to PDF conversion.
            </summary>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DefaultBorders.#ctor(Syncfusion.DocIO.DLS.RowFormat)">
            <summary>
            
            </summary>
            <param name="format"></param>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DefaultBorders.InitBorder(Syncfusion.DocIO.DLS.Border,Syncfusion.DocIO.DLS.Border)">
            <summary>
            
            </summary>
            <param name="destination"></param>
            <param name="sourse"></param>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DefaultBorders.Vertical">
            <summary>
            Gets the vertical border
            </summary>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.PDFDrawingContext.DefaultBorders.Horizontal">
            <summary>
            Gets / sets the horizontal border
            </summary>
        </member>
        <member name="M:Syncfusion.DocToPdfConverter.Rendering.BookmarkPosition.#ctor(System.String,System.Int32,System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.DocToPdfConverter.Rendering.BookmarkPosition"/> class.
            </summary>
            <param name="bookmarkName">Name of the bookmark.</param>
            <param name="pageNumber">The page number.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.BookmarkPosition.Bounds">
            <summary>
            Gets or sets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.BookmarkPosition.PageNumber">
            <summary>
            Gets or sets the page number.
            </summary>
            <value>The page number.</value>
        </member>
        <member name="P:Syncfusion.DocToPdfConverter.Rendering.BookmarkPosition.BookmarkName">
            <summary>
            Gets or sets the name of the bookmark.
            </summary>
            <value>The name of the bookmark.</value>
        </member>
        <member name="T:Syncfusion.DocToPdfConverter.Rendering.SortByColorBrightness">
            <summary>
            Sort the border rendering order based on its color brightness order
            </summary>
        </member>
        <member name="T:Syncfusion.DocToPDFConverter.DocToPDFConverter">
            <summary>
            This class provides support for converting WordDocument into an PDF Document.
            </summary>
            <seealso cref="T:Syncfusion.DocIO.DLS.WordDocument"/>
            <seealso cref="T:Syncfusion.Pdf.PdfDocument"/>
            <remarks>This class is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only. </remarks>
            <example>
            This example converts the specified Word Document in to PDF Document.
            <code lang="C#">
                //Loads an existing Word document
                WordDocument wordDocument = new WordDocument("Template.docx", FormatType.Docx);
                //Instantiation of DocToPDFConverter for Word to PDF conversion
                DocToPDFConverter converter = new DocToPDFConverter();
                //Converts Word document into PDF document
                PdfDocument pdfDocument = converter.ConvertToPDF(wordDocument);
               //Saves the PDF file
                pdfDocument.Save("WordtoPDF.pdf");
                //Releases all resources used by the object.
                converter.Dispose();
                //Closes the instance of document objects
                pdfDocument.Close(true);
                wordDocument.Close();
            </code>
            <code lang="VB">
                'Loads an existing Word document
                Dim wordDocument As New WordDocument("Template.docx", FormatType.Docx)
                'Instantiation of DocToPDFConverter for Word to PDF conversion
                Dim converter As New DocToPDFConverter()
               'Converts Word document into PDF document
                Dim pdfDocument As PdfDocument = converter.ConvertToPDF(wordDocument)
               'Saves the PDF file
                pdfDocument.Save("WordtoPDF.pdf");
                'Releases all resources used by the object.
                converter.Dispose();
                'Closes the instance of document objects
                pdfDocument.Close(true);
                wordDocument.Close();
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.DocToPDFConverter.DocToPDFConverter.DEF_IMAGETYPE">
            <summary>
            Specifies the default image type.
            </summary>
        </member>
        <member name="F:Syncfusion.DocToPDFConverter.DocToPDFConverter.m_settings">
            <summary>
            converter settings to the document
            </summary>
        </member>
        <member name="F:Syncfusion.DocToPDFConverter.DocToPDFConverter.m_flag">
            <summary>
            The m_flag
            </summary>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.DocToPDFConverter.DocToPDFConverter"/> class.
            </summary>
            <remarks>This constructor is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only. </remarks>
             <example>
            This example converts the specified Word Document in to PDF Document.
            <code lang="C#">
                //Loads an existing Word document
                WordDocument wordDocument = new WordDocument("Template.docx", FormatType.Docx);
                //Instantiation of DocToPDFConverter for Word to PDF conversion
                DocToPDFConverter converter = new DocToPDFConverter();
                //Converts Word document into PDF document
                PdfDocument pdfDocument = converter.ConvertToPDF(wordDocument);
               //Saves the PDF file
                pdfDocument.Save("WordtoPDF.pdf");
                //Releases all resources used by the object.
                converter.Dispose();
                //Closes the instance of document objects
                pdfDocument.Close(true);
                wordDocument.Close();
            </code>
            <code lang="VB">
                'Loads an existing Word document
                Dim wordDocument As New WordDocument("Template.docx", FormatType.Docx)
                'Instantiation of DocToPDFConverter for Word to PDF conversion
                Dim converter As New DocToPDFConverter()
               'Converts Word document into PDF document
                Dim pdfDocument As PdfDocument = converter.ConvertToPDF(wordDocument)
               'Saves the PDF file
                pdfDocument.Save("WordtoPDF.pdf");
                'Releases all resources used by the object.
                converter.Dispose();
                'Closes the instance of document objects
                pdfDocument.Close(true);
                wordDocument.Close();
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.Close">
            <summary>
            Release the resources occupied by this <see cref="T:Syncfusion.DocToPDFConverter.DocToPDFConverter"/> instance.
            </summary>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.Dispose">
            <summary>
            Releases all resources used by the object.
            </summary>
            <remarks>This method is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only. </remarks>
             <example>
            This example converts the specified Word Document in to PDF Document.
            <code lang="C#">
                //Loads an existing Word document
                WordDocument wordDocument = new WordDocument("Template.docx", FormatType.Docx);
                //Instantiation of DocToPDFConverter for Word to PDF conversion
                DocToPDFConverter converter = new DocToPDFConverter();
                //Converts Word document into PDF document
                PdfDocument pdfDocument = converter.ConvertToPDF(wordDocument);
               //Saves the PDF file
                pdfDocument.Save("WordtoPDF.pdf");
                //Releases all resources used by the object.
                converter.Dispose();
                //Closes the instance of document objects
                pdfDocument.Close(true);
                wordDocument.Close();
            </code>
            <code lang="VB">
                'Loads an existing Word document
                Dim wordDocument As New WordDocument("Template.docx", FormatType.Docx)
                'Instantiation of DocToPDFConverter for Word to PDF conversion
                Dim converter As New DocToPDFConverter()
               'Converts Word document into PDF document
                Dim pdfDocument As PdfDocument = converter.ConvertToPDF(wordDocument)
               'Saves the PDF file
                pdfDocument.Save("WordtoPDF.pdf");
                'Releases all resources used by the object.
                 converter.Dispose();
                'Closes the instance of document objects
                pdfDocument.Close(true);
                wordDocument.Close();
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.ConvertToPDF(Syncfusion.DocIO.DLS.WordDocument)">
            <summary>
            Converts the specified WordDocument to PDF.
            </summary>
            <param name="wordDocument">The word document.</param>
            <returns>The PdfDocument.</returns>
            <remarks>This method is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only. 
            If running the application by hosting in Azure environment, <see cref="P:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.EnableFastRendering"/> is enabled automatically.</remarks>
            <example>
            This example converts the specified Word Document in to PDF Document.
            <code lang="C#">
                //Loads an existing Word document
                WordDocument wordDocument = new WordDocument("Template.docx", FormatType.Docx);
                //Instantiation of DocToPDFConverter for Word to PDF conversion
                DocToPDFConverter converter = new DocToPDFConverter();
                //Converts Word document into PDF document
                PdfDocument pdfDocument = converter.ConvertToPDF(wordDocument);
               //Saves the PDF file
                pdfDocument.Save("WordtoPDF.pdf");
                //Releases all resources used by the object.
                converter.Dispose();
                //Closes the instance of document objects
                pdfDocument.Close(true);
                wordDocument.Close();
            </code>
            <code lang="VB">
                'Loads an existing Word document
                Dim wordDocument As New WordDocument("Template.docx", FormatType.Docx)
                'Instantiation of DocToPDFConverter for Word to PDF conversion
                Dim converter As New DocToPDFConverter()
               'Converts Word document into PDF document
                Dim pdfDocument As PdfDocument = converter.ConvertToPDF(wordDocument)
               'Saves the PDF file
                pdfDocument.Save("WordtoPDF.pdf");
                'Releases all resources used by the object.
                converter.Dispose();
                'Closes the instance of document objects
                pdfDocument.Close(true);
                wordDocument.Close();
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.ConvertToPDF(System.String)">
            <summary>
            Converts the specified WordDocument to PDF.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>The PdfDocument.</returns>
            <remarks>This method is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only. 
            If running the application by hosting in Azure environment, <see cref="P:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.EnableFastRendering"/> is enabled automatically.</remarks>
            <example>
            This example converts the specified Word Document in to PDF Document.
            <code lang="C#">
                //Instantiation of DocToPDFConverter for Word to PDF conversion
                DocToPDFConverter converter = new DocToPDFConverter();
                //Converts the specified WordDocument to PDF.
                PdfDocument pdfDocument = converter.ConvertToPDF(fileName);
                //Saves the PDF file
                pdfDocument.Save("WordtoPDF.pdf");
                //Releases all resources used by the object.
                converter.Dispose();
                //Closes the instance of document objects
                pdfDocument.Close(true);
            </code>
            <code lang="VB">
               'Creates an instance of the DocToPDFConverter
                Dim converter As New DocToPDFConverter() for Word to PDF conversion
               'Instantiation of DocToPDFConverter
                Dim pdfDocument As PdfDocument = converter.ConvertToPDF(filename)
                'Save the document in the given name and PDF format
                pdfDocument.Save("WordtoPDF.pdf");
                'Releases all resources used by the object.
                converter.Dispose();
                'Closes the instance of document objects
                pdfDocument.Close(true);
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.ConvertToPDF(System.IO.Stream)">
            <summary>
            Converts to PDF.
            </summary>
            <param name="stream">The stream.</param>
            <returns>The PdfDocument.</returns>
            <remarks>This method is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only. 
            If running the application by hosting in Azure environment, <see cref="P:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.EnableFastRendering"/> is enabled automatically.</remarks>
            <example>
            This example converts the specified Word Document in to PDF Document.
            <code lang="C#">
                //Loads an existing Word document
                Stream fileStream = new FileStream("Template.docx", FileMode.Open, FileAccess.Read, FileShare.Read);
                //Instantiation of DocToPDFConverter for Word to PDF conversion
                DocToPDFConverter converter = new DocToPDFConverter();
                //Converts the specified WordDocument to PDF.
                PdfDocument pdfDocument = converter.ConvertToPDF(fileStream);
                //Save the document in the given name and PDF format
                pdfDocument.Save("WordtoPDF.pdf");
                //Releases all resources used by the object.
                converter.Dispose();
                //Closes the instance of document objects
                fileStream.Close();
                pdfDocument.Close(true);
            </code>
            <code lang="VB">
                //Loads an existing Word document
                Dim fileStream As Stream = New FileStream("Template.docx", FileMode.Open, FileAccess.Read, FileShare.Read)
               'Instantiation of DocToPDFConverter for Word to PDF conversion
                Dim converter As New DocToPDFConverter()
               'Converts Word document into PDF document
                Dim pdfDocument As PdfDocument = converter.ConvertToPDF(fileStream)
                'Save the document in the given name and PDF format
                pdfDocument.Save("WordtoPDF.pdf");
                'Releases all resources used by the object.
                converter.Dispose();
                'Closes the instance of document objects
                fileStream.Close();
                pdfDocument.Close(true);
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.CreateDocument">
            <summary>
            Creates the PDF document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.AddSection(Syncfusion.DocIO.DLS.WPageSetup)">
            <summary>
            Adds the section.
            </summary>
            <param name="pageSetup">The page setup.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.InitPagesSettings(Syncfusion.DocIO.DLS.Rendering.DocumentLayouter)">
            <summary>
            Sets the pages settings.
            </summary>
            <param name="layouter">The layouter.</param>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.AddDocumentProperties(Syncfusion.DocIO.DLS.BuiltinDocumentProperties)">
            <summary>
            Adds the document properties.
            </summary>
            <param name="docProperties">The doc properties.</param>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.AddHyperLinks(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Drawing.RectangleF}})">
            <summary>
            Adds the hyper links.
            </summary>
            <param name="hyperlinks">The hyperlinks.</param>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.AddBookmarks(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,Syncfusion.DocIO.DLS.Rendering.DocumentLayouter.BookmarkHyperlink}})">
            <summary>
            Converts the TOC into Bookmark.
            </summary>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.DrawToPDF(Syncfusion.DocIO.DLS.Rendering.DocumentLayouter)">
            <summary>
            Draw To PDF
            </summary>
            <param name="layouter">The DocumentLayouter</param>
            <returns>PdfDocument</returns>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.DrawDirectWordToPDF(Syncfusion.DocIO.DLS.Rendering.DocumentLayouter)">
            <summary>
            Draw To PDF
            </summary>
            <param name="layouter">The DocumentLayouter</param>
            <returns>PdfDocument</returns>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.ShowWarnings">
            <summary>
            Shows the warnings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.DocToPDFConverter.DocToPDFConverter.CreateWarningElmentNames">
            <summary>
            Create warning element names into the list
            </summary>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.DocToPDFConverter.DocToPDFConverter.PageSettings">
            <summary>
            Gets the page settings.
            </summary>
            <value>The page settings.</value>
        </member>
        <member name="P:Syncfusion.DocToPDFConverter.DocToPDFConverter.Settings">
            <summary>
            Gets or sets the quality.
            </summary>
            <remarks>This property is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only. </remarks>
        </member>
        <member name="P:Syncfusion.DocToPDFConverter.DocToPDFConverter.IsCanceled">
            <summary>
            Gets a value indicating whether this conversion has been canceled.
            </summary>
            <value>
            <c>true</c> if this conversion is canceled; otherwise, <c>false</c>.
            </value>
            <remarks>This method is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only. </remarks>
        </member>
        <member name="P:Syncfusion.DocToPDFConverter.DocToPDFConverter.IsTrial">
            <summary>
            Gets or sets a value indicating whether the PDF document was generated using web service.
            </summary>
            <value>
            <c>true</c> if the PDF document was generated using web service; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings">
            <summary>
            Represent class with setting of converter.
            </summary>
            <example>This example illustrates DocToPDFConverter settings.
            <remarks>This class is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only. </remarks>
            <code language = "C#">
               //Loads an existing Word document
               WordDocument wordDocument = new WordDocument("Template.docx", FormatType.Docx);
               //Instantiation of DocToPDFConverter for Word to PDF conversion
               DocToPDFConverter converter = new DocToPDFConverter();
               //Skip the updating process for Alternate chunks in the Word document
               converter.Settings.EnableAlternateChunks = false;
               //Sets the image resolution
                converter.Settings.ImageResolution = 640;
               //Sets the jpeg image quality to reduce the Pdf file size
               converter.Settings.ImageQuality = 100;
               //Sets true to optimize the memory usage for identical image
               converter.Settings.OptimizeIdenticalImages = false;
               //Sets the PdfConformanceLevel
               converter.Settings.PdfConformanceLevel = PdfConformanceLevel.None;
               //Converts Word document into PDF document
               PdfDocument pdfDocument = converter.ConvertToPDF(wordDocument);
               //Saves the PDF file
               pdfDocument.Save("WordtoPDF.pdf");
               //Releases all resources used by the object.
                converter.Dispose();
                //Closes the instance of document objects
                pdfDocument.Close(true);
                wordDocument.Close();
            }
            </code>
            <code language = "VB">
                'Loads an existing Word document
                Dim wordDocument As New WordDocument("Template.docx", FormatType.Docx)
                'Instantiation of DocToPDFConverter for Word to PDF conversion
                Dim converter As New DocToPDFConverter()
                'Skip the updating process for Alternate chunks in the Word document 
                converter.Settings.EnableAlternateChunks = false;
                'Sets the image resolution
                converter.Settings.ImageResolution = 640;
                'Sets the jpeg image quality to reduce the Pdf file size
                converter.Settings.ImageQuality = 100;
                'Sets true to optimize the memory usage for identical image
                converter.Settings.OptimizeIdenticalImages = false;
                'Sets the PdfConformanceLevel
                converter.Settings.PdfConformanceLevel = PdfConformanceLevel.None;
                'Converts Word document into PDF document
                Dim pdfDocument As PdfDocument = docToPDFConverter.ConvertToPDF(wordDocument)
                'Saves the PDF file
                pdfDocument.Save("WordtoPDF.pdf")
                'Releases all resources used by the object.
                converter.Dispose();
               'Closes the instance of document objects
                pdfDocument.Close(true);
                wordDocument.Close();
            End Sub
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.m_enableAlternateChunks">
            <summary>
            Need to enable the Alternate chunks element
            </summary>
        </member>
        <member name="F:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.m_enableFastRendering">
            <summary>
            Need to enable the direct PDF rendering
            </summary>
        </member>
        <member name="F:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.m_imageQuality">
            <summary>
            Indicates the quality of the image.
            </summary>
        </member>
        <member name="F:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.m_imageResolution">
            <summary>
            Indicates the Image resolution
            </summary>
        </member>
        <member name="F:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.m_warning">
            <summary>
            The m_warning
            </summary>
        </member>
        <member name="P:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.EnableAlternateChunks">
            <summary>
            Gets or sets a value indicates to enable the Alternate chunks present in the Word document . Default value is <b>True</b>.
            </summary>
            <value><b>True</b> if need to enable the Alternate chunks; otherwise, <b>false</b>.</value>
            <remarks>This property is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only. </remarks>
        </member>
        <member name="P:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.EnableFastRendering">
            <summary>
            Gets or sets a value that indicates whether to convert PDF faster by using direct PDF rendering. The default value is <b>false</b>.
            </summary>
            <value><b>True</b> If True, converts PDF faster by using direct PDF rendering approach. Otherwise uses EMF rendering. otherwise, <b>false</b>.</value>
            <remarks>EMF rendering – Convert a Word document to EMF and render the generated EMF to PDF during Word to PDF conversion. 
            This is default approach, to maintain compatibility for earlier versions. PDF rendering – Directly render a Word document to PDF.
            This approach is available from 2016 Volume 4 release.</remarks>
        </member>
        <member name="P:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.ImageQuality">
            <summary>
            Gets or sets the quality. The value indicates in percentage, max value represents best quality and min value represents best compression.
            </summary>
            <remarks>
            The value indicates in percentage, max value represents best quality and min value represents best compression
            This property is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only.
            </remarks>
        </member>
        <member name="P:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.ImageResolution">
            <summary>
            Sets the image resolution to the image, which are Embedded
            in the Word document
            </summary>
            <remarks>This property is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only. </remarks>
        </member>
        <member name="P:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.OptimizeIdenticalImages">
            <summary>
            Gets/Sets a value indicating whether to optimize the memory usage for the identical (duplicate) images in Doc to Pdf conversion and converted Pdf document.
            </summary>
            <remarks>This property is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only. </remarks>
        </member>
        <member name="P:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.Warning">
            <summary>
            Gets or sets the warning that describes the unsupported elements found while converting the specified Word document to PDF.
            </summary>
            <value>
            The warning.
            </value>
            <remarks>This property is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only. </remarks>
        </member>
        <member name="P:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.PdfConformanceLevel">
            <summary>
            Gets or sets the Pdf document's Conformance-level.
            </summary>
            <value>The <see cref="T:Syncfusion.Pdf.PdfConformanceLevel"/> of the PDF document.</value>
            <remarks>This property is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only. </remarks>
        </member>
        <member name="P:Syncfusion.DocToPDFConverter.DocToPDFConverterSettings.EmbedFonts">
            <summary>
            Gets or sets a value indicating whether to embed fonts to converted PDF in Word to PDF conversion.
            </summary>
            <remarks>
            <list type="bullet">
            <item>This property is supported to embed TrueType fonts only.</item>
            <item>This property is supported on Windows Forms, WPF, ASP.NET and ASP.NET MVC platforms only.</item>
            </list>
            </remarks>
        </member>
    </members>
</doc>
