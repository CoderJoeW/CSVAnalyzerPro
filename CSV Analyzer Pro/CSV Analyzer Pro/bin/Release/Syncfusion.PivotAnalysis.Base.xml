<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.PivotAnalysis.Base</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.PivotAnalysis.Base.IPivotControl">
            <summary>
            Provides complete functionality of the Pivot control.
            </summary>
        </member>
        <member name="E:Syncfusion.PivotAnalysis.Base.IPivotControl.ShowDisabledGroupBackgroundPropertyChanged">
            <summary>
            This event is used to specify whether the PivotItems are in disable state or not. The default value is false.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IPivotControl.PivotColumns">
            <summary>
            Gets the number of PivotItems present in the column section of Pivot control.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IPivotControl.PivotFields">
            <summary>
            Gets the number of PivotItems present in the field section of Pivot control.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IPivotControl.PivotRows">
            <summary>
            Gets the number of PivotItems present in the row section of Pivot control.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IPivotControl.Filters">
            <summary>
            Gets the number of filter expressions present in the Pivot control.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IPivotControl.PivotCalculations">
            <summary>
            Gets the number of PivotCalculations present in the value section of Pivot control.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IPivotControl.DeferLayoutUpdate">
            <summary>
            When the property is enabled, you can add, remove and move fields around without updating the PivotTable at every instance. When you are done arranging the fields, you can use the update option to update the PivotTable on-demand.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IPivotControl.ShowCalculationsAsColumns">
            <summary>
            To show PivotCalculations either in column or row section of Pivot control. The default value is column.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IPivotControl.PivotEngine">
            <summary>
            It is used to hold and populate the Pivoted data.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IPivotControl.ItemSource">
            <summary>
            Gets or sets the data source for the Pivot control. The data source should be either an IEnumerable List or a DataTable.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.ExpressionError">
            <summary>
            Denotes the different error types.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.ExpressionError.None">
            <summary>
            Denotes no error
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.ExpressionError.MissingRightQuote">
            <summary>
            Denotes missing right quote
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.ExpressionError.MismatchedParentheses">
            <summary>
            Denotes mismatched parentheses
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.ExpressionError.CannotCompareDifferentTypes">
            <summary>
            Denotes that it cannot compare different types
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.ExpressionError.UnknownOperator">
            <summary>
            Denotes that it's a unknown operator
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.ExpressionError.NotAValidFormula">
            <summary>
            Denotes that it's not a valid formula
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.ExpressionError.ExceptionRaised">
            <summary>
            Denotes that exception has raised
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.FilterHelper">
            <summary>
            This class encapsulates the support for computing filter values and expressions.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterHelper.#ctor">
            <summary>
            Initializes a new instance of the FilterHelper class.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterHelper.AddFilterExpression(System.String,System.String)">
            <summary>
            Adds a filter expression.
            </summary>
            <param name="name">The name of filter expression.</param>
            <param name="expression">A string holding a well-formed logical expression.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterHelper.RemoveFilterExpression(Syncfusion.PivotAnalysis.Base.FilterExpression)">
            <summary>
            Removes a filter expression.
            </summary>
            <param name="exp">The name of the filter expression to be removed.</param>
            <returns>Returns true if the expression was successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterHelper.Clear">
            <summary>
            Clears all filter expressions.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterHelper.CaseSensitive">
            <summary>
            Gets or sets value to indicate whether the expression should be treated in a case-sensitive manner. The default value is true.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterHelper.Count">
            <summary>
            Gets the number of filter expressions contained in this helper class.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterHelper.Item(System.Int32)">
            <summary>
            Gets the particular filter expression in the order it was added.
            </summary>
            <param name="i">The index of desired filter expression.</param>
            <returns>The filter expression.</returns>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.FilterExpression">
            <summary>
            This class encapsulates the information needed to define a filter.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterExpression.#ctor">
            <summary>
            Initializes a new instance of the FilterExpression class.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterExpression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FilterExpression class with the field name of a PivotItem.
            </summary>
            <param name="dimensionName">Field name of the PivotItem.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterExpression.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the FilterExpression class with the field name, field header and expression of a PivotItem.
            </summary>
            <param name="dimensionName">Field name of the PivotItem.</param>
            <param name="dimensionHeader">Field header of the PivotItem.</param>
            <param name="expression">Logical expression defining the filter.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterExpression.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the FilterExpression class with the field name, field header, expression and format of a PivotItem.
            </summary>
            <param name="dimensionName">Field name of the PivotItem.</param>
            <param name="dimensionHeader">Field header of the PivotItem.</param>
            <param name="expression">Logical expression defining the filter.</param>
            <param name="format">Format of the filter expression.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterExpression.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the FilterExpression class with the field name and expression of a PivotItem.
             </summary>
             <param name="name">Field name of the PivotItem.</param>
            <param name="expression">Logical expression defining the filter.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterExpression.ComputedValue(System.Object,System.Boolean,Syncfusion.PivotAnalysis.Base.PivotEngine)">
            <summary>
            Use this method to retrieve the computed value of this expression on an object.
            </summary>
            <param name="component">The object to be evaluated.</param>
            <param name="engine">Used to provide the support for calculation.</param>
            <param name="loadInBackground">Represents the boolean value.</param>
            <returns>The computed value.</returns>
            <remarks>
            The first time this method is called, a delegate for the FilterExpression is created, and then this delegate
            call is passed into the component. Subsequent calls to this method just result into the existing delegate call.
            </remarks>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterExpression.ComputedValue(System.Object)">
            <summary>
            Used to calculate the value.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterExpression.DimensionName">
            <summary>
            Gets or sets the field name of the PivotItem.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterExpression.Format">
            <summary>
            Gets or sets the format of the filter expression.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterExpression.DimensionHeader">
            <summary>
            Gets or sets the field header.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterExpression.FieldCaption">
            <summary>
            Gets or sets the field caption.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterExpression.Evaluator">
            <summary>
            Evaluates the given value.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterExpression.Error">
            <summary>
            Gets the last error that was logged during the compilation and calculation phase.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterExpression.ErrorString">
            <summary>
            Gets a descriptive string for the last occurred error.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterExpression.CssClass">
            <summary>
            Gets or sets CssClass to the individual PivotItem.
            </summary>
            <remarks>
            This is applicable only for Web platforms.
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterExpression.Name">
            <summary>
            Gets or sets the name of this filter expression.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterExpression.Expression">
            <summary>
            Gets or sets the well-formed logical expression that defines this filter expression.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterExpression.Tag">
            <summary>
            Gets or sets other information related to filter expression.
            </summary>
            <value>Filter expression information</value>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterExpression.CaseSensitive">
            <summary>
            Gets or sets whether the expression should be treated in a case-sensitive manner.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CalculationExtensionsBackground.GetCompiledExpression(System.Object,System.Boolean,System.String,Syncfusion.PivotAnalysis.Base.ExpressionError@)">
            <summary>
            Gets the compiled expression.
            NOTE:
            1) The logical operators AND, OR, NOT must be sandwiched between blanks, and either all caps, no caps, or first cap only.
            2) To use column names as AND, OR, NOT, they must be included in [] bracket.
            3) For any other column name, the brackets are optional.
            </summary>
            <param name="source">The ItemSource.</param>
            <param name="caseSensitive">if set to <c>true</c> [case sensitive].</param>
            <param name="formula">The formula.</param>
            <param name="error">The error.</param>
            <returns>Delegate.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CalculationExtensionsBackground.GetDynamicValue(System.Object,System.String)">
            <summary>
            Gets the dynamic value.
            </summary>
            <param name="o">ItemSource object.</param>
            <param name="property">Property name of the object.</param>
            <returns>An object</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CalculationExtensionsBackground.GetDictionaryDoubleValue(System.Collections.IDictionary,System.String)">
            <summary>
            Gets the double value of the PivotItem.
            </summary>
            <param name="o">ItemSource object.</param>
            <param name="property">Property name of the object.</param>
            <returns>A double value.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CalculationExtensionsBackground.CheckInList(System.Object,Syncfusion.PivotAnalysis.Base.BinaryList)">
            <summary>
            To check in the list of objects using binary search.
            </summary>
            <param name="s">Object to check.</param>
            <param name="list">Binary search list.</param>
            <returns>List of binary objects.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CalculationExtensionsBackground.GetExpressionPiece(System.Object,System.Boolean,System.Linq.Expressions.ParameterExpression,System.String,Syncfusion.PivotAnalysis.Base.ExpressionError@,System.Object)">
            <summary>
            Pass in a string containing a left or right part, and get an expression back.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CalculationExtensionsBackground.TokenizeStrings(System.String,Syncfusion.PivotAnalysis.Base.ExpressionError@)">
            <summary>
            Replaces strings in formulas with tokens so that the string remains immutable during parsing.
            </summary>
            <param name="formula">The formula with quoted strings.</param>
            <param name="error">Error code if any.</param>
            <returns>A string that represents the formula with quoted strings replaced by tokens.</returns>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.CalculationExtensionsBackground.DynamicPropertyTypeTable">
            <summary>
            Gets or sets a collection of property types associated with an expando object/dynamic object available in .NET Framework 4.0.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.CalculationExtensionsBackground.ListSeparator">
            <summary>
            Gets or sets the list of separated items using list separator ','.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CalculationExtensions.GetCompiledExpression(System.Object,System.Boolean,System.String,Syncfusion.PivotAnalysis.Base.ExpressionError@)">
            <summary>
            Gets the compiled expression.
            NOTE:
            1) The logical operators AND, OR, NOT must be sandwiched between blanks, and either all caps, no caps, or first cap only.
            2) To use column names as AND, OR, NOT, they must be included in [] bracket. 
            3) For any other column name, the brackets are optional.
            </summary>
            <param name="source">The ItemSource.</param>
            <param name="caseSensitive">if set to <c>true</c> [case sensitive].</param>
            <param name="formula">The formula.</param>
            <param name="error">The error.</param>
            <returns>Delegate.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CalculationExtensions.GetDynamicValue(System.Object,System.String)">
            <summary>
            Gets the dynamic value.
            </summary>
            <param name="o">ItemSource object.</param>
            <param name="property">Property name of the object.</param>
            <returns>An object</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CalculationExtensions.GetDictionaryDoubleValue(System.Collections.IDictionary,System.String)">
            <summary>
            Gets the double value.
            </summary>
            <param name="o">ItemSource object.</param>
            <param name="property">Property name of the object.</param>
            <returns>A double value.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CalculationExtensions.CheckInList(System.Object,Syncfusion.PivotAnalysis.Base.BinaryList)">
            <summary>
            This method is used to check the list of objects greater than -1 using binary search.
            </summary>
            <param name="s">This parameter is used pass the objects to check.</param>
            <param name="list">Using this parameter we can add list of string.</param>
            <returns>List of binary objects greater than -1.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CalculationExtensions.GetExpressionPiece(System.Object,System.Boolean,System.Linq.Expressions.ParameterExpression,System.String,Syncfusion.PivotAnalysis.Base.ExpressionError@,System.Object)">
            <summary>
            Pass in a string containing left or right part, and get an expression back.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CalculationExtensions.TokenizeStrings(System.String,Syncfusion.PivotAnalysis.Base.ExpressionError@)">
            <summary>
            Replaces strings in formulas with tokens so that the string remains immutable during parsing.
            </summary>
            <param name="formula">The formula with quoted strings.</param>
            <param name="error">Error code if any.</param>
            <returns>A string that represents the formula with quoted strings replaced by tokens.</returns>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.CalculationExtensions.DynamicPropertyTypeTable">
            <summary>
            Gets or sets a collection of property types associated with an expando object/dynamic object available in .NET Framework 4.0.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.CalculationExtensions.ListSeparator">
            <summary>
            This property is used to split the list of items using this special character ','.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.SummaryDisplayLevel">
            <summary>
            Controls whether a summary calculation is to be displayed for all levels or only for the inner-most level.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryDisplayLevel.All">
            <summary>
            Indicates to display the summary at all Pivot levels.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryDisplayLevel.InnerMostOnly">
            <summary>
            Indicates to display the summary at only the inner most Pivot level.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.SummaryType">
            <summary>
            Enumerates the summary types available for calculations in the Pivot control. If you use the value "Custom" in a ComputationInfo object, then you are required to explicitly set the ComputationInfo.Summary value.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.DoubleTotalSum">
            <summary>
            Computes the sum of double or integer values.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.DoubleAverage">
            <summary>
            Computes the simple average of double or integer values.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.DoubleMaximum">
            <summary>
            Computes the maximum of double or integer values.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.DoubleMinimum">
            <summary>
            Computes the minimum of double or integer values.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.DoubleStandardDeviation">
            <summary>
            Computes the standard deviation of double or integer values.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.DoubleVariance">
            <summary>
            Computes the variance of double or integer values.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.Count">
            <summary>
            Computes the count of double or integer values.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.DecimalTotalSum">
            <summary>
            Computes the sum of decimal values.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.IntTotalSum">
            <summary>
            Computes the sum of integer values.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.Custom">
            <summary>
            Specifies that you are using a custom SummaryBase object to define the calculation.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.DisplayIfDiscreteValuesEqual">
            <summary>
            Displays the common value if all the values to be aggregated are the same, and displays a <see cref="F:Syncfusion.PivotAnalysis.Base.SummaryType.DisplayIfDiscreteValuesEqual"/>
            if the values to be aggregated are not all the same.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.Sum">
            <summary>
            Computes the sum of values. 
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.Average">
            <summary>
            Computes the average of values.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.Max">
            <summary>
            Computes the maximum of values. 
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.Min">
            <summary>
            Computes the minimum of values.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.CountNumbers">
            <summary>
            Computes the count of integer values. 
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.StdDev">
            <summary>
            Computes the standard deviation of values if data set contains a sample of the population.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.StdDevP">
            <summary>
            Computes the standard deviation of values if data set contains a complete population.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.Var">
            <summary>
            Computes the variance of values if data set contains a sample of the population.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SummaryType.VarP">
            <summary>
            Computes the variance of values if data set contains a complete population.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.CalculationType">
            <summary>
            Calculation type defines the view for a particular computational object (or value field).
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.NoCalculation">
            <summary>
            Remove the custom calculations and restore to original values.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.PercentageOfGrandTotal">
            <summary>
            Displays a value cell as a percentage of grand total of all value cells of PivotEngine.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.PercentageOfColumnTotal">
            <summary>
            Displays all value cells in each column as a percentage of its corresponding column total.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.PercentageOfRowTotal">
            <summary>
            Displays all value cells in each row as a percentage of its corresponding row total.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.PercentageOfParentColumnTotal">
            <summary>
            Displays a value cell as a percentage of parent column item values.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.PercentageOfParentRowTotal">
            <summary>
            Displays a value cell as a percentage of parent row item values.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.PercentageOfParentTotal">
            <summary>
            Displays a value cell as a percentage of BaseField (Parent Row/Column Total).
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.Index">
            <summary>
            Displays a value cell as an index value based on PivotEngine generation.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.Formula">
            <summary>
            Displays a calculation based on a well formed algebraic expression involving other calculations.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.PercentageOf">
            <summary>
            Displays values as a percentage of the value of the BaseItem in the BaseField.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.DifferenceFrom">
            <summary>
            Displays values as the difference from the value of the BaseItem in the BaseField.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.PercentageOfDifferenceFrom">
            <summary>
            Displays values as the percentage difference from the value of the BaseItem in the BaseField.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.RunningTotalIn">
            <summary>
            Displays the value of successive items in the BaseField as a running total.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.PercentageOfRunningTotalIn">
            <summary>
            Calculates the value of successive items in the BaseField that are displayed as a running total as a percentage.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.RankSmallestToLargest">
            <summary>
            Displays the rank of selected values in a specific field, listing the smallest item in the field as 1 and each larger value will have a higher rank value.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.RankLargestToSmallest">
            <summary>
            Displays the rank of selected values in a specific field, listing the largest item in the field as 1 and each smaller value will have a higher rank value.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.CalculationType.Distinct">
            <summary>
            Displays the subtotals based on the distinct values of BaseItem defined for calculation item.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.DisplayOption">
            <summary>
            Used to provide a list of display option.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.DisplayOption.None">
            <summary>
            Fully present in the PivotEngine but not seen in the display.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.DisplayOption.Calculations">
            <summary>
            Fully present in the PivotEngine but visible only in the calculation region.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.DisplayOption.Summary">
            <summary>
            Fully present in the PivotEngine but visible only in the interior summary region.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.DisplayOption.GrandTotals">
            <summary>
            Fully present in the PivotEngine but visible only in the GrandTotal region.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.DisplayOption.All">
            <summary>
            Fully present in the PivotEngine and completely available for display.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.IAdjustable">
            <summary>
            Use this interface to enable shortcut calculations to adjust a summary when an underlying
            value changes. The idea is to avoid re-computing the summary from scratch. For example, if 
            your summary computes the total of a set of values, you can quickly adjust this computed
            total when a value changes by subtracting the old value and adding the new value without
            having to re-compute the total from scratch. Not all types of calculations lend themselves
            to this shortcut behavior.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IAdjustable.AdjustForNewContribution(System.Object)">
            <summary>
            Adjusts the summary for a change in one of its underlying values.
            </summary>
            <param name="newContribution">The new value of the changed field.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IAdjustable.AdjustForOldContribution(System.Object)">
            <summary>
            Adjusts the summary for a change in one of its underlying values.
            </summary>
            <param name="oldContribution">The old value of the changed field.</param>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.PivotComputationInfo">
            <summary>
            This class holds the information needed for the calculations that appear in a Pivot control. For each calculation seen, there is an associated
            PivotComputationInfo object that is added to the PivotComputationInfo collection.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.#ctor">
            <summary>
            Performs certain manipulations with data using summary type.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.GetSummaryInstance(Syncfusion.PivotAnalysis.Base.SummaryType)">
            <summary>
            Returns a <see cref="T:Syncfusion.PivotAnalysis.Base.SummaryBase"/> object of the specified <see cref="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.SummaryType"/>.
            </summary>
            <param name="st">The SummaryType.</param>
            <returns>A SummaryBase object.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.ToString">
            <summary>
            Converts to string
            </summary>
            <returns>Calculation name displayed in the PivotTable.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.GetComputationTypes">
            <summary>
            Returns a sorted list of computation names based on the <see cref="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.SummaryType"/> enumerations.
            </summary>
            <returns>A list of computation names.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"/> to the class.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"/> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/> method.
            </returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the object is serialized.</param>
        </member>
        <member name="E:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.PropertyChanged">
            <summary>
            Event denoting whether the property is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.AllowSort">
            <summary>
            Gets or sets whether this calculation column can be sorted when
            RowPivotsOnly is true in the PivotEngine. 
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.AllowFilter">
            <summary>
            Gets or sets whether this calculation column can be filtered when
            RowPivotsOnly is true in the PivotEngine. 
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.IsTopColumnSummary">
            <summary>
            Gets or sets whether this calculation column only displays the subtotals for top column
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.EnableHyperlinks">
            <summary>
            Gets or sets whether this calculation column should be hyperlinked when RowPivotsOnly is true in the PivotEngine.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.FieldName">
            <summary>
            Gets or sets the name of the property to be used in this calculation.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.FieldHeader">
            <summary>
            Gets or sets the title you want to see in the header for this item.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.FieldCaption">
            <summary>
            Gets or sets the title you want to see in the header for this item.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.Description">
            <summary>
            Gets or sets a description for this calculation.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.InnerMostComputationsOnly">
            <summary>
            Gets or sets whether the aggregation result should appear only for the innermost level.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.PadString">
            <summary>
            This is used to specify a custom string in the PivotComputation column instead of the original cell value. 
            To use this, we must set SummaryType as DisplayIfDiscreteValuesEqual.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.CalculationName">
            <summary>
            Gets or sets what needs displayed in the PivotTable if more than one calculation is included in the Pivot control.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.CssClass" -->
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.AllowRunTimeGroupByField">
            <summary>
            Gets or sets value to enable/disable grouping for this PivotItem. Default value is true.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.Summary">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.PivotAnalysis.Base.SummaryBase"/> object that is used to define this calculation. This value is automatically set 
            when you specify any non-custom value of <see cref="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.SummaryType"/>. If you specify SummaryType.Custom, then you are required
            to set Summary to be an instance of your custom SummaryBase derived object.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.SummaryType">
            <summary>
            Gets or sets the SummaryType enumeration for this calculation. Setting it to any value other than "Custom"
            will properly set the summary.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.DisplayOption">
            <summary>
            This is used to display or hide the computation values in PivotEngine based on the option provided.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.CalculationType">
            <summary>
            Gets or sets the calculation type for this computation object.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.BaseField">
            <summary>
            Gets or sets the value of base field for calculations.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.BaseItem">
            <summary>
            Gets or sets the value of base item for calculations.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.Formula">
            <summary>
            Gets or sets a formula that defines the value as an algebraic expression of other computations where these 
            computations are referenced by their <see cref="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.CalculationName"/> enclosed within square brackets.
            </summary>
            <remarks>
            For example, if the value of formula is "[AvgPrice]-[AvgCost]", then there should be two other computations whose names are
            AvgPrice and AvgCost, and the value displayed for this computation should be the difference between those two values.
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.Expression">
            <summary>
            Used internally for formula calculation types.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.FieldType">
            <summary>
            Gets or sets the value of field type.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.Format">
            <summary>
            Gets or sets the format string used to format this calculation results in the Pivot control. Default format string is #.##.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotComputationInfo.DefaultValue">
            <summary>
            Gets or sets the default value to be used when this summary calculation gets null value.
            </summary>        
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.SummaryBase">
            <summary>
            This is an abstract class that defines the necessary functionality to do PivotCalculations.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.SummaryBase.Combine(System.Object)">
            <summary>
            Use this method to combine a value from an object in the Pivot control data source with the accumulation values held in this instance.
            </summary>
            <param name="other">The value to be included in the computation.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.SummaryBase.Reset">
            <summary>
            Resets all internal values so the calculations begins as new.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.SummaryBase.GetResult">
            <summary>
            Returns the calculation value.
            </summary>
            <returns>The calculation value.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.SummaryBase.GetInstance">
            <summary>
            Provides a new instance of this SummaryBase object.
            </summary>
            <returns>New instance of this SummaryBase.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.SummaryBase.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Use this method to combine another SummaryBase object with the accumulation values held in this instance.
            </summary>
            <param name="other">The other SummaryBase object.</param>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.SummaryBase.ShowNullAsBlank">
            <summary>
            Gets or sets whether the Pivot control should display null value as blank instead of 0 (which is the default behavior).
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.CountSummary">
            <summary>
            Computes the count of double or integer values.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CountSummary.ToString">
            <summary>
            Converts data to string.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CountSummary.Combine(System.Object)">
            <summary>
            Combines different values into one.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CountSummary.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines the summaries into one.
            </summary>
            <param name="other">SummaryBase</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CountSummary.Reset">
            <summary>
            Resets the value of the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CountSummary.GetResult">
            <summary>
            Obtains the count value.
            </summary>
            <returns>Count</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CountSummary.GetInstance">
            <summary>
            Gets the instance of the class.
            </summary>
            <returns>Total summary value</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CountSummary.AdjustForNewContribution(System.Object)">
            <summary>
            Gets to adjust for the new value.
            </summary>
            <param name="newContribution">Object</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CountSummary.AdjustForOldContribution(System.Object)">
            <summary>
            Gets to adjust for the old value.
            </summary>
            <param name="oldContribution">Object</param>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.DoubleMinSummary">
            <summary>
            This class is used to compute the minimum of double or integer values.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleMinSummary.ToString">
            <summary>
            Converts the value to string.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleMinSummary.Combine(System.Object)">
            <summary>
            Combines different values together.
            </summary>
            <param name="other">Object</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleMinSummary.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines the different summaries into one.
            </summary>
            <param name="other">SummaryBase</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleMinSummary.Reset">
            <summary>
            Resets the value of the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleMinSummary.GetResult">
            <summary>
            Obtains the minimum value.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleMinSummary.GetInstance">
            <summary>
            Gets the instance of type DoubleMinSummary.
            </summary>
            <returns>DoubleMinSummary</returns>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.DoubleMaxSummary">
            <summary>
            This class is used to compute the maximum of double or integer values.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleMaxSummary.ToString">
            <summary>
            Converts the value to string
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleMaxSummary.Combine(System.Object)">
            <summary>
            Combines the different values together for maximum summary.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleMaxSummary.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines the different summaries together.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleMaxSummary.Reset">
            <summary>
            Resets the value of the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleMaxSummary.GetResult">
            <summary>
            Obtains the maximum value.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleMaxSummary.GetInstance">
            <summary>
            Returns the instance of type DoubleMaxSummary.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.DoubleStDevSummary">
            <summary>
            This class is used to compute the standard deviation of double or integer values.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleStDevSummary.ToString">
            <summary>
            Converts data to string.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleStDevSummary.Combine(System.Object)">
            <summary>
            Combines the different values together.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleStDevSummary.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines the different summaries together.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleStDevSummary.Reset">
            <summary>
            Resets the value of the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleStDevSummary.GetResult">
            <summary>
            Obtains the standard deviation value.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleStDevSummary.GetInstance">
            <summary>
            Returns the instance of type DoubleStDevSummary.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.DoubleVarianceSummary">
            <summary>
            This class is used to compute the variance of double or integer values.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleVarianceSummary.ToString">
            <summary>
            Converts data to string.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleVarianceSummary.Combine(System.Object)">
            <summary>
            Combines different values together.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleVarianceSummary.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines the different summaries together.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleVarianceSummary.Reset">
            <summary>
            Resets the value of the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleVarianceSummary.GetResult">
            <summary>
            Obtains the variance value.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleVarianceSummary.GetInstance">
            <summary>
            Returns the instance of type DoubleVarianceSummary.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.DoubleAverageSummary">
            <summary>
            This class is used to compute the average of double or integer values.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleAverageSummary.ToString">
            <summary>
            Converts data to string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleAverageSummary.Combine(System.Object)">
            <summary>
            Combines different values together.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleAverageSummary.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines different summaries into one.
            </summary>
            <param name="other">SummaryBase</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleAverageSummary.Reset">
            <summary>
            Resets the value of the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleAverageSummary.GetResult">
            <summary>
            Obtains the average value.
            </summary>
            <returns>Average value.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleAverageSummary.GetInstance">
            <summary>
            Returns the instance of type DoubleAverageSummary.
            </summary>
            <returns>DoubleAverageSummary</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleAverageSummary.AdjustForNewContribution(System.Object)">
            <summary>
            Gets to adjust for the new value.
            </summary>
            <param name="newContribution">Object</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleAverageSummary.AdjustForOldContribution(System.Object)">
            <summary>
            Gets to adjust for the old value.
            </summary>
            <param name="oldContribution">Object</param>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.DoubleTotalSummary">
            <summary>
            This class is used to compute the sum of double or integer values.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleTotalSummary.ToString">
            <summary>
            Returns the string for the concerned data.
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleTotalSummary.Combine(System.Object)">
            <summary>
            Combines different values together.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleTotalSummary.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines different summaries into one.
            </summary>
            <param name="other">SummaryBase</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleTotalSummary.Reset">
            <summary>
            Resets the value of the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleTotalSummary.GetResult">
            <summary>
            Obtains the sum/total value.
            </summary>
            <returns>Sum/total value.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleTotalSummary.GetInstance">
            <summary>
            Returns the instance of type DoubleTotalSummary.
            </summary>
            <returns>DoubleTotalSummary</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleTotalSummary.AdjustForNewContribution(System.Object)">
            <summary>
            Gets to adjust for the new value.
            </summary>
            <param name="newContribution">Object</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DoubleTotalSummary.AdjustForOldContribution(System.Object)">
            <summary>
            Gets to adjust for the old value.
            </summary>
            <param name="oldContribution">Object</param>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.IntTotalSummary">
            <summary>
            This class is used to compute the sum of integer values.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IntTotalSummary.ToString">
            <summary>
            Converts to the string type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IntTotalSummary.Combine(System.Object)">
            <summary>
            Combines different values together.
            </summary>
            <param name="other">Object</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IntTotalSummary.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines different Summary into one.
            </summary>
            <param name="other">SummaryBase</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IntTotalSummary.Reset">
            <summary>
            Resets the value of the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IntTotalSummary.GetResult">
            <summary>
            Obtains the sum/total value.
            </summary>
            <returns>Sum/total value.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IntTotalSummary.GetInstance">
            <summary>
            Returns the instance of type IntTotalSummary.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IntTotalSummary.AdjustForNewContribution(System.Object)">
            <summary>
            Gets to adjust for the new value.
            </summary>
            <param name="newContribution">Object</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IntTotalSummary.AdjustForOldContribution(System.Object)">
            <summary>
            Gets to adjust for the old value.
            </summary>
            <param name="oldContribution">Object</param>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.DecimalTotalSummary">
            <summary>
            This class is used to computes the sum of decimal values.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DecimalTotalSummary.ToString">
            <summary>
            Converts the data to string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DecimalTotalSummary.Combine(System.Object)">
            <summary>
            Combines the different values together.
            </summary>
            <param name="other">Object.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DecimalTotalSummary.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines the summaries together.
            </summary>
            <param name="other">SummaryBase</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DecimalTotalSummary.Reset">
            <summary>
            Resets the value of the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DecimalTotalSummary.GetResult">
            <summary>
            Obtains the sum/total value.
            </summary>
            <returns>Sum/total value.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DecimalTotalSummary.GetInstance">
            <summary>
            Returns the instance of type DecimalTotalSummary.
            </summary>
            <returns>DecimalTotalSummary</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DecimalTotalSummary.AdjustForNewContribution(System.Object)">
            <summary>
            Gets to adjust for the new value.
            </summary>
            <param name="newContribution">Object</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DecimalTotalSummary.AdjustForOldContribution(System.Object)">
            <summary>
            Gets to adjust for the old value.
            </summary>
            <param name="oldContribution">Object</param>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.DisplayIfDiscreteValuesEqual">
            <summary>
            Displays the aggregated value in the PivotComputation column, if all the values are aggregated to be same
            else the value in PadString property is displayed.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DisplayIfDiscreteValuesEqual.#ctor">
            <summary>
            Displays if the discrete values are equal.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DisplayIfDiscreteValuesEqual.Combine(System.Object)">
            <summary>
            Combines the different values together. 
            </summary>
            <param name="other">Object</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DisplayIfDiscreteValuesEqual.Reset">
            <summary>
             Resets the value for the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DisplayIfDiscreteValuesEqual.GetResult">
            <summary>
            Obtains the resultant value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DisplayIfDiscreteValuesEqual.GetInstance">
            <summary>
            Returns the instance of type DisplayIfDiscreteValuesEqual.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DisplayIfDiscreteValuesEqual.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines the different summaries into one.
            </summary>
            <param name="other"></param>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.DisplayIfDiscreteValuesEqual.PadString">
            <summary>
            Returns the padded string
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.Sum">
            <summary>
            Displays the sum of values
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Sum.ToString">
            <summary>
            Converts to the string type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Sum.Combine(System.Object)">
            <summary>
            Combines different values together
            </summary>
            <param name="other">object</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Sum.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines different Summary
            </summary>
            <param name="other">SummaryBase</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Sum.Reset">
            <summary>
            Resets the variable
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Sum.GetResult">
            <summary>
            Obtains the result
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Sum.GetInstance">
            <summary>
            Obtains the instance of Sum.
            </summary>
            <returns>Sum</returns>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.Average">
            <summary>
            Displays the Average of values
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Average.ToString">
            <summary>
            Converts the data to string type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Average.Combine(System.Object)">
            <summary>
            Merges the values.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Average.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines the different summaries into one.
            </summary>
            <param name="other">SummaryBase</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Average.Reset">
            <summary>
            Resets the total and count.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Average.GetResult">
            <summary>
            Gets the result.
            </summary>
            <returns>result</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Average.GetInstance">
            <summary>
            Gets the instance of the object.
            </summary>
            <returns>Average</returns>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.Max">
            <summary>
            Displays the maximum value of given values
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Max.ToString">
            <summary>
            Converts the value to string type
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Max.Combine(System.Object)">
            <summary>
            Combines the different values together for maximum summary.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Max.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines the different summaries together.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Max.Reset">
            <summary>
            Resets the value of the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Max.GetResult">
            <summary>
            Obtains the maximum value.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Max.GetInstance">
            <summary>
            Returns the instance of type Max.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.Min">
            <summary>
            Displays the minimum value of given values
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Min.ToString">
            <summary>
            Converts the value to string type
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Min.Combine(System.Object)">
            <summary>
            Combines the different values together for minimum summary.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Min.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines the different summaries together.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Min.Reset">
            <summary>
            Resets the value of the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Min.GetResult">
            <summary>
            Obtains the minimum value.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Min.GetInstance">
            <summary>
            Returns the instance of type Min.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.Variance">
            <summary>
            Displays the Variance of given values
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Variance.ToString">
            <summary>
            Converts data to string.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Variance.Combine(System.Object)">
            <summary>
            Combines the different values together.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Variance.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines the different summaries together.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Variance.Reset">
            <summary>
            Resets the value of the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Variance.GetResult">
            <summary>
            Obtains the variance of given value.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.Variance.GetInstance">
            <summary>
            Returns the instance of type Variance.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.VarianceP">
            <summary>
            Displays the VarianceP of given values
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.VarianceP.ToString">
            <summary>
            Converts data to string.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.VarianceP.Combine(System.Object)">
            <summary>
            Combines the different values together.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.VarianceP.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines the different summaries together.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.VarianceP.Reset">
            <summary>
            Resets the value of the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.VarianceP.GetResult">
            <summary>
            Obtains the variance population of given value.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.VarianceP.GetInstance">
            <summary>
            Returns the instance of type VarianceP.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.StdDev">
            <summary>
            Displays the standard deviation of given values
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.StdDev.ToString">
            <summary>
            Converts data to string.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.StdDev.Combine(System.Object)">
            <summary>
            Combines the different values together.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.StdDev.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines the different summaries together.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.StdDev.Reset">
            <summary>
            Resets the value of the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.StdDev.GetResult">
            <summary>
            Obtains the standard deviation value.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.StdDev.GetInstance">
            <summary>
            Returns the instance of type StDev.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.StdDevP">
            <summary>
            Displays the standard deviation population of given values
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.StdDevP.ToString">
            <summary>
            Converts data to string.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.StdDevP.Combine(System.Object)">
            <summary>
            Combines the different values together.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.StdDevP.CombineSummary(Syncfusion.PivotAnalysis.Base.SummaryBase)">
            <summary>
            Combines the different summaries together.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.StdDevP.Reset">
            <summary>
            Resets the value of the variables.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.StdDevP.GetResult">
            <summary>
            Obtains the standard deviation population value.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.StdDevP.GetInstance">
            <summary>
            Returns the instance of type StDevP.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.PivotSchemaChangedEventHandler">
            <summary>
            Event handler for the <see cref="T:Syncfusion.PivotAnalysis.Base.PivotSchemaChangedEventHandler"/> event.
            </summary>
            <param name="sender">The PivotEngine raising the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.PivotCellType">
            <summary>
            Enumerates the possible Pivot cell types.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.PivotCellType.ValueCell">
            <summary>
            Cell holds a summary value.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.PivotCellType.ExpanderCell">
            <summary>
            Cell is a row/column header that holds an expander.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.PivotCellType.HeaderCell">
            <summary>
            Cell is a row/column header that does not holds an expander.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.PivotCellType.TopLeftCell">
            <summary>
            Cell is the top left portion of the PivotTable.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.PivotCellType.TotalCell">
            <summary>
            Cell is a row/column header that marks a total row or column.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.PivotCellType.CalculationHeaderCell">
            <summary>
            Cell is a header cell holding a calculation name.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.PivotCellType.RowHeaderCell">
            <summary>
            Row header cell.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.PivotCellType.ColumnHeaderCell">
            <summary>
            Column header cell.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.PivotCellType.GrandTotalCell">
            <summary>
            Grand total cell.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.GridLayout">
            <summary>
            Specifies the layout for the Pivot control.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.GridLayout.Normal">
            <summary>
            Sub-totals will be shown after the details.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.GridLayout.TopSummary">
            <summary>
            Sub-totals will be shown before the details.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.SchemaChangeHints">
            <summary>
            Information on what changes have occurred in the Pivot Schema.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SchemaChangeHints.None">
            <summary>
            No specific information available about the change. The entire engine should be populated to ensure the change is properly reflected.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SchemaChangeHints.GrandTotalVisibility">
            <summary>
            Indicate the engine's <see cref="F:Syncfusion.PivotAnalysis.Base.SchemaChangeHints.GrandTotalVisibility"/> property has changed.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SchemaChangeHints.RowAdded">
            <summary>
            Indicate that the engine should refresh because of a new row being added.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SchemaChangeHints.CalculationChanged">
            <summary>
            Indicate that the engine should re-populate based on selected calculation type.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.SchemaChangeHints.HeadersChanged">
            <summary>
            Indicate that the engine should re-populate the headers based on field headers.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.FieldTypes">
            <summary>
            Enum holding the field types.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.FieldTypes.Property">
            <summary>
            Gets whether the field is Property.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.FieldTypes.Expression">
            <summary>
            Gets whether the field is Expression.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.FieldTypes.Unbound">
            <summary>
            Gets whether the field is Unbound.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.PivotEngine">
            <summary>
            This class encapsulates pivoting calculation support. To use it, first populate the <see cref="P:Syncfusion.PivotAnalysis.Base.PivotEngine.PivotColumns"/> and 
            <see cref="P:Syncfusion.PivotAnalysis.Base.PivotEngine.PivotRows"/> collections to define the properties being pivoted. Then you populate the <see cref="P:Syncfusion.PivotAnalysis.Base.PivotEngine.PivotCalculations"/>
            collection to define the values you would like to see populated.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.PivotEngine.sortColIndexes">
            <summary>
            List that holds the sorted column indexes.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.PivotEngine.columnIndexes">
            <summary>
            List that holds column indexes.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.PivotEngine.ExpanderSortflag">
            <summary>
            Sets the flag for performing sorting operation.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.RefreshItemProperties">
            <summary>
            Used to fill/re-fill the ItemProperties with newly added/updated fields.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.AddFilter(Syncfusion.PivotAnalysis.Base.FilterExpression)">
            <summary>
            Adds a <see cref="T:Syncfusion.PivotAnalysis.Base.FilterExpression"/> to the Pivot Schema of this Engine.
            </summary>
            <param name="item">The filter expression.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.InsertFilter(System.Int32,Syncfusion.PivotAnalysis.Base.FilterExpression)">
            <summary>
            Inserts a <see cref="T:Syncfusion.PivotAnalysis.Base.FilterExpression"/> to the Pivot Schema for this Engine at a specified index.
            </summary>
            <param name="index">The index position.</param>
            <param name="exp">The filter expression.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.RemoveFilter(Syncfusion.PivotAnalysis.Base.FilterExpression)">
            <summary>
            Removes a <see cref="T:Syncfusion.PivotAnalysis.Base.FilterExpression"/> from the Pivot Schema for the engine.
            </summary>
            <param name="exp">The filter expression.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.ClearFilters">
            <summary>
            Clears all filter expressions from the Pivot Schema for the engine.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.FindFilterByName(System.String)">
            <summary>
            Finds a <see cref="T:Syncfusion.PivotAnalysis.Base.FilterExpression"/> in <see cref="P:Syncfusion.PivotAnalysis.Base.PivotEngine.Filters"/> by its name.
            </summary>
            <param name="filterName">The name of the desired filter expression.</param>
            <returns>The filter expression.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.GetPivotEngineValueFor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the <see cref="T:Syncfusion.PivotAnalysis.Base.PivotCellInfo"/> object associated with a particular cell
            in the PivotTable. The PivotCellInfo object contains value and formatted text properties information.
            </summary>
            <param name="rowIndex">Row index of the cell.</param>
            <param name="columnIndex1">Column index of the cell.</param>
            <param name="shouldCalculateTotal">if set to <c>true</c> [should calculate total].</param>
            <returns>A PivotCellInfo object that contains information about the cell contents.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.EnsureCalculationsLoaded">
            <summary>
            When "EnableOnDemandCalculations" is true, calling this method will ensure that all the summary calculations are fully computed.
            This is used internally.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.DoLazyCalculation">
            <summary>
            When <see cref="P:Syncfusion.PivotAnalysis.Base.PivotEngine.EnableOnDemandCalculations"/> is true, this method will compute all summary calculation for the first row that has not been calculated yet.
            </summary>
            <returns>Returns true if all the rows have their summary calculation completed; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.AddAllowedField(Syncfusion.PivotAnalysis.Base.FieldInfo)">
            <summary>
            Adds the field to "AllowedFields" property.
            </summary>
            <param name="fi">FieldInfo</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.GetVisibleRecords(System.Collections.Generic.List{Syncfusion.PivotAnalysis.Base.FilterExpression})">
            <summary>
            Returns the collection of objects which are currently used in the Grid.
            </summary>
            <param name="Filters">List of filter items collection.</param>
            <returns>Collection of objects currently used.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.GetRowColumnPivotValuesAt(System.Int32,System.Int32,System.String@)">
            <summary>
            Returns the row and column PivotValues at the specified cell index.
            </summary>
            <param name="row">The row index of Pivot values.</param>
            <param name="column">The column index of Pivot values.</param>
            <param name="calcFieldName">Name of the PivotField at the specified row and column index.</param>
            <returns>List of values at the specified row and column index.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.GetRawItemsForEach(System.Int32,System.Int32)">
            <summary>
            Returns the collection of raw items for specified rows and columns in the Grid.
            </summary>
            <param name="row">The row index.</param>
            <param name="col">The column index.</param>
            <returns>Collection of raw items.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.RemoveAllowedField(Syncfusion.PivotAnalysis.Base.FieldInfo)">
            <summary>
            Removes the allowed field from Grid.
            </summary>
            <param name="fi">The field to remove.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.PopulateDefaultPropertyFields">
            <summary>
            Contains the default properties for the items in the DataSource.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.ClearAllowedFields">
            <summary>
            Clears the allowed fields in the Pivot control.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.SuspendComputations">
            <summary>
            Suspends calculations as PivotItems are added or removed from either RowPivots or ColumnPivots 
            collections or when PivotCalculations are added or removed from the PivotCalculations collection.
            </summary>
            <remarks>
            By default, calculations are always suspended. Once you have populated all the appropriate collections
            to define your PivotTable, you can call <see cref="M:Syncfusion.PivotAnalysis.Base.PivotEngine.Populate"/> method to tell the engine to generate the PivotTable
            contents that you can access by indexing the engine.
            </remarks>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.ResumeComputations">
            <summary>
            Resumes calculations after a call to suspend computations without re-setting the PivotTable.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.ResumeComputations(System.Boolean)">
            <summary>
            Resumes calculations after a call to suspend computations with the option of re-setting the PivotTable.
            </summary>
            <param name="resetPivotCollections">Returns true if the PivotTable should be recomputed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.ResumeComputations(System.Boolean,System.Boolean)">
            <summary>
            Resumes calculations after a call to "SuspendComputations" method with an option of re-setting the PivotTable.
            </summary>
            <param name="resetPivotCollections">Returns true if the PivotTable should be recomputed; otherwise, false.</param>
            <param name="shouldRefresh">Returns true if the Pivot control should be refreshed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.Populate">
            <summary>
            Using this method we can populate the values of the current PivotTable.
            </summary>
            <remarks>
            Once you have populated the PivotColumns, PivotRows and PivotCalculations collections, you
            call this method to actually populate this engine with the PivotCalculations. After this call,
            you can then access information on the contents of any cell by indexing the engine object. The 
            indexers are zero based.
            </remarks>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.Reset">
            <summary>
            Resets the PivotTable and its collections.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.Dispose">
            <summary>
            Method to dispose the PivotEngine resources in order to release the unmanaged memory.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.AddPivotCalculation(Syncfusion.PivotAnalysis.Base.PivotComputationInfo)">
            <summary>
            Adds calculation to the PivotCalculations collection.
            </summary>
            <param name="info">The calculation field.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.InsertPivotCalculation(System.Int32,Syncfusion.PivotAnalysis.Base.PivotComputationInfo)">
            <summary>
            Inserts calculation at a specified index.
            </summary>
            <param name="index">Index to insert the calculation field.</param>
            <param name="info">The calculation field.</param>        
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.RemovePivotCalculation(Syncfusion.PivotAnalysis.Base.PivotComputationInfo)">
            <summary>
            Removes calculation from the PivotCalculations collection.
            </summary>
            <param name="info">The calculation field.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.AddRowPivot(Syncfusion.PivotAnalysis.Base.PivotItem)">
            <summary>
            Adds PivotItem to the PivotRows collection.
            </summary>
            <param name="pivotItem">The item to be added.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.InsertRowPivot(System.Int32,Syncfusion.PivotAnalysis.Base.PivotItem)">
            <summary>
            Inserts a PivotItem to the PivotRows collection at a specified index.
            </summary>
            <param name="index">The index to insert PivotItem into PivotRows.</param>
            <param name="pivotItem">The PivotItem.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.RemoveRowPivot(Syncfusion.PivotAnalysis.Base.PivotItem)">
            <summary>
            Removes a PivotItem from the PivotRows collection.
            </summary>
            <param name="pivotItem">The item to be removed.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.AddColumnPivot(Syncfusion.PivotAnalysis.Base.PivotItem)">
            <summary>
            Adds a PivotItem to the PivotColumns collection.
            </summary>
            <param name="pivotItem">The item to be added.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.InsertColumnPivot(System.Int32,Syncfusion.PivotAnalysis.Base.PivotItem)">
            <summary>
            Inserts a PivotItem to the PivotColumns collection at a specified index.
            </summary>
            <param name="index">The index to insert PivotItem into PivotColumns.</param>
            <param name="pivotItem">The item to be added.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.RemoveColumnPivot(Syncfusion.PivotAnalysis.Base.PivotItem)">
            <summary>
            Removes a PivotItem from the PivotColumns collection.
            </summary>
            <param name="pivotItem">The item to be removed.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.GetRawItemsFor(System.Int32,System.Int32)">
            <summary>
            Returns the list of raw values.
            </summary>
            <param name="row">The row index.</param>
            <param name="col">the column index.</param>
            <returns>The raw items.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.PopulateValueCells">
            <summary>
            Populates the value cells.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.UpdateCalculatedValue(System.Int32,System.Int32,System.Object,System.String)">
            <summary>
            Updates the calculated value based on the "CalculationType" of the computation object.
            </summary>
            <param name="row">The row index.</param>
            <param name="col">The column index.</param>
            <param name="v">The new value.</param>
            <param name="fieldName">Name of the field.</param>
            <returns>The formatted text.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.CoverColumnHeaders">
            <summary>
            Generates the covered ranges of each column header cell.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.CoverGrandTotalRanges">
            <summary>
            Generates the covered ranges of grand total cell.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.CoverRowHeaders">
            <summary>
            Generates the covered ranges of each row header cell.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.ReArrangePivotValuesForColumn">
            <summary>
            Re-arrange the PivotValues for column when grid layout is TopSummary.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.ReArrangePivotValuesForRows">
            <summary>
            Re-arrange the PivotValues for row when GridLayout is TopSummary.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.IsSummaryColumn(System.Int32)">
            <summary>
             Checks whether the column is summary column or not.
            </summary>
            <param name="colIndex">Index of the column.</param>
            <returns>Returns true if it's summary column; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.IsSummaryColumn(System.Int32,System.Int32@)">
            <summary>
             Checks whether the column is summary column or not.
            </summary>
            <param name="colIndex">Index of the column.</param>
            <param name="k">The argument to be passed by reference.</param>
            <returns>Returns true if it's summary column; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.IsSummaryColumnWhileOnDemand(System.Int32,System.Int32@)">
            <summary>
            Checks whether the column is summary column or not, when on-demand operation is performed.
            </summary>
            <param name="colIndex">Index of the column.</param>
            <param name="k">The argument to be passed by reference.</param>
            <returns>Returns true if it's summary column; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.IsSummaryColumnWhileTopSummary(System.Int32)">
            <summary>
            Checks whether the column is summary column or not, when GridLayout is TopSummary.
            </summary>
            <param name="colIndex">Index of the column.</param>
            <returns>Returns true if it's summary column; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.IsSummaryRowWhileTopSummary(System.Int32)">
            <summary>
            Checks whether the row is summary row or not, when GridLayout is TopSummary.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <returns>Returns true if it's summary row; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.IsSummaryRow(System.Int32,System.Int32@)">
            <summary>
            Checks whether the row is summary row or not.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="k">The argument to be passed by reference.</param>
            <returns>Returns true if it's summary row; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.IsSummaryRowWhileOnDemand(System.Int32,System.Int32@)">
            <summary>
            Checks whether the row is summary row or not, when on-demand operation is performed.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="k">The argument to be passed by reference.</param>
            <returns>Returns true if it's summary row; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.IsRowSummary(System.Int32)">
            <summary>
            Checks whether the row at the specified index is summary row or not.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <returns>Returns true if it's summary row; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.AddComparers(System.Type)">
            <summary>
            Adds a <see cref="T:Syncfusion.PivotAnalysis.Base.FilterExpression"/> comparer for the specific PivotItem.
            </summary>
            <param name="type">Property type of the PivotItem.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.GetSortDirection(System.Int32)">
            <summary>
            Gets the sort direction of a particular column, even if the column has been moved from its initial position. This is used only when "RowPivotsOnly" is set to true.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.ClearSorts">
            <summary>
            Clears all the sorted order in Grid.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.ClearSortAt(System.Int32)">
            <summary>
            Clears the sort at the specified index.
            </summary>
            <param name="index">The specified index.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.AnyValueColumnsSorted">
            <summary>
            Returns the sorted columns count.
            </summary>
            <returns>Column count.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.ResolveColumnIndex(System.Int32)">
            <summary>
            Returns the original position of the column in the PivotCalculations collection. 
            This is only used when "RowPivotsOnly" is set to true.
            </summary>
            <param name="columnIndex">The current position of the column in the display.</param>
            <returns>Returns the original position of the column as determined 
            by its position in the PivotCalculations collection.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.IsColumnSorted(System.Int32)">
            <summary>
            Checks whether a column at the given index, in the display, is sorted or not.
            </summary>
            <param name="columnIndex">The index of the column in the display.</param>
            <returns>Returns true if sorted; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.CanFilterColumn(System.Int32)">
            <summary>
            Checks whether a column at the given index is filterable. This is used only when "RowPivotsOnly" is set to true.
            </summary>
            <param name="columnIndex">The index of the column in the display.</param>
            <returns>Returns true if the column can be filtered; otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.CanSortColumn(System.Int32)">
            <summary>
            Checks whether a column at the given index is sortable. This is used only when "RowPivotsOnly" is set to true.
            </summary>
            <param name="columnIndex">The index of the column in the display.</param>
            <returns>Returns true if the column can be sorted, otherwise, false.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.GetFieldNameAtIndex(System.Int32)">
            <summary>
            Returns the field name at a given column even if the column has been moved from its original
            position. This is used only when "RowPivotsOnly" is set to true.
            </summary>
            <param name="columnIndex">The index of the column.</param>
            <returns>The field name at the specified index.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.AdjustColumnIndexes(System.Int32,System.Int32)">
            <summary>
            This method is used internally within the Syncfusion library code to adjust column indexes.
            </summary>
            <param name="from">Old index position.</param>
            <param name="to">New index position.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.SortByCalculation(System.Int32)">
            <summary>
            Sort different values by calculation based on column index.
            </summary>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.SortByCalculation(System.Int32,System.Boolean)">
            <summary>
            Sort different values by calculation based on column index and multi-column sorting.
            </summary>
            <param name="colIndex">The column index.</param>
            <param name="isMultiColumn">Returns true if multi-column sorting operation is done; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.SortByCalculation(System.Int32,System.Boolean,System.ComponentModel.ListSortDirection)">
            <summary>
            Sort different values by calculation based on column index, multi-column sorting and sort direction.
            </summary>
            <param name="colIndex">The column index.</param>
            <param name="isMultiColumn">Returns true if multi-column sorting operation is done; otherwise, false.</param>
            <param name="dir">Specifies the sort direction.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.SortByGrandTotals(System.Int32,System.ComponentModel.ListSortDirection,System.String,System.Boolean)">
            <summary>
            Sort PivotItem's by calculation based on GrandTotal
            </summary>
            <param name="index">The index of the PivotItem.</param>
            <param name="dir">Specifies the sort direction.</param>
            <param name="selectedItem">Specifies the selected PivotCalculation Item.</param>
            <param name="isPivotRow">Specifies the selected PivotItem is PivotRow or not.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.SortColumnHeader(System.Int32)">
            <summary>
            Performs sorting operation in column header.
            </summary>
            <param name="colHeaderIndex">The index of column header.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.UpdateAllSummariesRespectingHiddenRowIndexes">
            <summary>
            This method will re-compute all the summaries ignoring certain summary row whose index is
            in "HiddenRowIndexes".
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.GetHiddenRowKeyValueColumnIndex">
            <summary>
            Gets the hidden rows key values. 
            </summary>
            <returns>Count of the hidden PivotRows.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.GetUnindexedPivotCellInfo(System.Int32,System.Int32)">
            <summary>
            Gets the un-indexed "PivotCellInfo".
            </summary>
            <param name="row">Row index.</param>
            <param name="col">Column index.</param>
            <returns>PivotCellInfo</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.RaisePivotSchemaChangedEvent(Syncfusion.PivotAnalysis.Base.PivotSchemaChangedArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.PivotAnalysis.Base.PivotEngine.PivotSchemaChanged"/> event.
            </summary>
            <param name="e">The event argument.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.OnPivotSchemaChanged(Syncfusion.PivotAnalysis.Base.PivotSchemaChangedArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.PivotAnalysis.Base.PivotEngine.PivotSchemaChanged"/> event.
            </summary>
            <param name="e">The event argument.</param>
        </member>
        <member name="E:Syncfusion.PivotAnalysis.Base.PivotEngine.PivotSchemaChanged">
            <summary>
            Event raised whenever the Pivot Schema of the Engine is changed.
            </summary>
        </member>
        <member name="E:Syncfusion.PivotAnalysis.Base.PivotEngine.PropertyChanged">
            <summary>
            Event triggered when the property of the cell is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.IndexEngine">
            <summary>
            Gets or sets the IndexEngine. IndexEngine provides a way to access the <see cref="P:Syncfusion.PivotAnalysis.Base.PivotEngine.IndexEngine"/> object from the PivotEngine class in-order to perform the on-demand process.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.GetValue">
            <summary>
            Gets or sets a <see cref="T:Syncfusion.PivotAnalysis.Base.GetValueDelegate"/> delegate that returns a property value for a given object.
            </summary>
            <remarks>
            If this member is null, the IndexEngine will use reflection to obtain property values from objects in
            the <see cref="P:Syncfusion.PivotAnalysis.Base.PivotEngine.DataSource"/>. NOTE: Usually a well written delegate can provide values more efficiently
            than using reflection. For performance improvements, you will want to provide a well written delegate for
            this property.
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.UseIndexedEngine">
            <summary>
            Gets or sets whether an optimized algorithm that relies on indexing the raw
            data used to compute the Pivot information.
            </summary>
            Setting this property indicates that the PivotEngine should use a newer way of computing
            the Pivot information. This technique requires more memory but will work significantly quicker 
            for Pivots that have a large number of cells. For smaller Pivots, there is no gain in performance
            with this newer technique.
            <remarks>
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.ApplyFormattedSummary">
            <summary>
            Gets or sets the formatted total value for the sub-total/grand total cells.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.EditCellsInfo">
            <summary>
            Gets or sets the edited cells information.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.IsDataDynamic">
            <summary>
            Gets or sets whether the DataSource is a collection of dynamic objects supported in the .NET Framework 4.0.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.ShowGrandTotals">
            <summary>
            Gets or sets value to show/hide grand totals.
            </summary>
            <remarks>
            Default value is true.
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.GridLayout">
            <summary>
            Gets or sets value to indicate whether sub-totals should be shown at the top or bottom.
            </summary>
            <remarks>
            Default value is Normal.
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.ShowSingleCalculationHeader">
            <summary>
            Gets or sets a value to indicate whether calculation header should be shown/hidden when there is a single calculation.
            The default value is false. This property does not affect the settings when "UseIndexedEngine" is set to true.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.EnableLazyLoadOnDemandCalculations">
            <summary>
            When setting the EnableOnDemandCalculations property to true, it allows the UI to trigger the summary calculations
            during the application idle cycles.
            </summary>
            <remarks>
            This means that the summaries in the Pivot control may be fully populated when the user does something like sort/filter a PivotItem
            which avoids a delay. If EnableOnDemandCalculations is false, setting this property has no effect.
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.EnableOnDemandCalculations">
            <summary>
            Gets or sets whether the calculations are postponed until the value is requested through the Indexer on PivotEngine. The default value is false.
            </summary>
            <remarks>
            The default calculation behavior is for all the value cells to be populated during the call to PivotEngine.Calculate. When EnableOnDemandCalculations
            is set true, then the calculations are postponed until there is an initial request for a calculated value. At that time, the calculation is completed
            and stored. Subsequent requests for a value return the stored value instead of redoing the calculations.
            
            Setting the EnableOnDemandCalculations allows the initial display of a large pivot table as only the visible cells will need to be calculated. This
            speed up in initial display, does come at the cost of a slight degradation in first-time scrolling performance as the cells that are newly made visible
            through the scrolling require a calculation to be completed. This setting is not available when RowPivotsOnly is false.
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.EnableSubTotalHiding">
            <summary>
            Gets or sets whether PivotGrid control should hide the sub-totals in engine level when setting the property ShowSubTotals to false.
            </summary>
            <remarks>
            The default value is false.
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.ShowSubTotalsForChildren">
            <summary>
            Gets or sets whether PivotGrid control should show the summaries of child nodes when setting property ShowSubTotalsForChildren to true.
            </summary>
            <remarks>
            The default value is false.
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.ShowNullAsBlank">
            <summary>
            Gets or sets whether the Pivot control should display null value as blank instead of 0.
            </summary>
            <remarks>
            The default value is false.
            </remarks>       
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.RowCount">
            <summary>
            Gets the number of rows in the PivotTable.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.ColumnCount">
            <summary>
            Gets the number of columns in the PivotTable.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.CoveredRanges">
            <summary>
            Gets a list of <see cref="T:Syncfusion.PivotAnalysis.Base.CoveredCellRange"/> objects that specify
            the cells that need to be covered.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.Filters">
            <summary>
            Gets a list holding <see cref="T:Syncfusion.PivotAnalysis.Base.FilterExpression"/> values that
            specify any filters that need to be applied to this PivotTable.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.SummaryLibrary">
            <summary>
            Gets a dictionary of SummaryBase computations available in the PivotEngine.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.PivotValues">
            <summary>
            Gets the underlying object collection represented in the PivotEngine. 
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.HiddenRowIndexes">
            <summary>
            Gets or sets the values of the hidden rows.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.HiddenPivotRowGroups">
            <summary>
            Gets or sets the different hidden row groups.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.HiddenPivotColumnGroups">
            <summary>
            Gets or sets the different hidden column groups.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.RowPivotsOnly">
            <summary>
            Gets or sets value indicating whether to Pivot only rows and calculations.
            </summary>
            <remarks>Turning this property "ON", enables the PivotGrid control to appear like a flat Grid in which rows and calculations will be displayed as value columns.</remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.PivotRows">
            <summary>
            Gets or sets a collection of row based PivotItems.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.PivotColumns">
            <summary>
            Gets or sets a collection of column based PivotItems.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.PivotCalculations">
            <summary>
            Gets or sets a collection of PivotComputations.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.UseDescriptionInCalculationHeader">
            <summary>
            Gets or sets a value to indicate whether the description is to be displayed in the header cell
            when more than one calculation is being used. The default behavior is to use
            the "FieldName".
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.EmptyPivot">
            <summary>
            If you apply a filter which filters out all items in the underlying data source, then this
            "EmptyPivot" property will be set true. The RowCount and ColumnCount will
            be set to one, and the Engine[0, 0] will hold the value.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.EmptyPivotString">
            <summary>
            Gets or sets the string that appears when no items are present in a Pivot result.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.GrandString">
            <summary>
            Gets or sets the prefix string in the collection-wide totals that appear below and to the right of the PivotTable.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.UsePercentageFormat">
            <summary>
            Gets or sets whether the formatted text of the columns, which has percentage calculation type, must apply with given format or default percentage format #,##%
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.LoadInBackground">
            <summary>
            This property enables the Pivot control to perform loading operations asynchronously on a background thread.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.CacheRawValues">
            <summary>
            Gets or sets whether underlying raw values are cached as the Pivot is being built. If these values are cached,
            then GetRawItemsFor method calls do not require traversing the underlying data to complete.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.ShowCalculationsAsColumns">
            <summary>
            Gets or sets whether the calculations should appear as rows/columns in the PivotGrid. By default the calculations is displayed as columns.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.ShowEmptyCells">
            <summary>
            Gets or sets a value indicating whether to show an empty cell or not, when the value is null.
            By default, the value is true.
            </summary>       
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.DataSource">
            <summary>
            Gets or sets data source for this PivotTable. This object should be either 
            an IEnumerable List or a DataTable.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.DataSourceList">
            <summary>
            Used internally. Gets or sets an IEnumerable List that is used as the data source for the
            PivotTable. The default behavior is to initialize this list from DataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.ItemType">
            <summary>
            Gets or sets the type of the objects in the DataSource. This property is initialized directly from the DataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.ItemProperties">
            <summary>
            Gets or sets a collection of property descriptors for the items in the DataSource. This property is initialized directly from the DataSource.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.AllowedFields">
            <summary>
            Gets a collection of FieldInfo objects that hold the field names that you want to make visible in the engine. 
            The names can be either public property names of the underlying data objects or they can be expression field.
            </summary>
            <remarks>
            If your data contains fields that you do not want exposed to the pivoting process,
            then add the names of the properties you want to include to this list. All other
            fields will be excluded. 
            
            If you leave this collection empty, the default behavior will be to make all public
            properties available for use in the pivot table.
            
            To add an expression field, set the FieldInfo.FieldType to FieldsType.Expression and set FieldInfo.Expression
            to be a string holding a well formed expression defining the value that should appear in this field.</remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.NotPopulated">
            <summary>
            Gets or sets value to check whether the values of the PivotTable are populated or not.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.PopulationStatus">
            <summary>
            Gets or sets value to check whether the PivotEngine is loading in the background.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.ItemCollection">
            <summary>
            Gets or sets the collection of filter items.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.VisibleRecords">
            <summary>
            Gets or sets the collection of objects which are currently used in the Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.LockComputations">
            <summary>
            Gets or sets the boolean value indicating whether the computation need to happen. 
            It is handled in suspend and resume computation method.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.SortDirection">
            <summary>
            Gets or sets the sort direction of Pivot values. The sort direction could be either ascending/descending.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.Item(System.Int32,System.Int32)">
            <summary>
            Gets the <see cref="T:Syncfusion.PivotAnalysis.Base.PivotCellInfo"/> object associated with a particular cell
            in the PivotTable. The PivotCellInfo object contains value and formatted text properties information.
            </summary>
            <param name="rowIndex">Row index of the cell.</param>
            <param name="columnIndex1">Column index of the cell.</param>
            <returns>A PivotCellInfo object that contains information about the cell contents.</returns>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.PivotEngine.CalcSortComparer">
            <summary>
            This class used for sorting the Pivoted row/column.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.CalcSortComparer.#ctor(System.Collections.Generic.List{System.ComponentModel.ListSortDirection})">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.PivotAnalysis.Base.PivotEngine.CalcSortComparer"/> class.
            </summary>
            <param name="sortDirs">The sort direction.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.CalcSortComparer.Compare(Syncfusion.PivotAnalysis.Base.PivotEngine.SortKeys,Syncfusion.PivotAnalysis.Base.PivotEngine.SortKeys)">
            <summary>
            Compares the sort direction of the PivotFields using key.
            </summary>
            <param name="x">The key to compare sort directions.</param>
            <param name="y">The key to compare sort directions.</param>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.PivotEngine.SortKeys">
            <summary>
            Class that holds the properties which is used to handle single sort and multi sort in Grid.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.SortKeys.Index">
            <summary>
            Gets or sets the row index
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.SortKeys.Keys">
            <summary>
            Gets or sets the collection of row indexes.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngine.SortKeys.BlockSize">
            <summary>
            Gets or sets the size of the Grid cell range.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.ReverseOrderComparer.Compare(System.Object,System.Object)">
            <summary>
            This method is used to compare the sort directions.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.Value meaning less than zero <paramref name="x" /> is less than <paramref name="y" />. zero <paramref name="x" /> equals <paramref name="y" />. Greater than zero <paramref name="x" /> is greater than <paramref name="y" />.
            </returns>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.PivotEngine.SortWithDirComparer.dir">
            <summary>
            Initializes the default sort direction as ascending.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.SortWithDirComparer.#ctor(System.Collections.IComparer,System.ComponentModel.ListSortDirection)">
            <summary>
            This is used to assign the default comparer if the PivotFields comparer is null.
            </summary>
            <param name="comparer">The comparer.</param>
            <param name="dir">The sort direction of the comparer.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngine.SortWithDirComparer.Compare(System.Object,System.Object)">
            <summary>
            This is used to compare the PivotFields and populate the values. 
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.PivotGridConstants">
            <summary>
             Class that holds different Grid constants.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.PivotGridConstants.AllString">
            <summary>
            Variable that holds all the values in filter.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.PivotGridConstants.TotalString">
            <summary>
            Holds the holds "Total" string.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.FilterItemElement">
            <summary>
            Class that holds different filter items.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterItemElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.PivotAnalysis.Base.FilterItemElement"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterItemElement.AcceptChanges">
            <summary>
            To accept the changes in Engine.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterItemElement.RejectChanges">
            <summary>
            To reject the changes in Engine.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterItemElement.CompareTo(System.Object)">
            <summary>
             To compare the filter items using key.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterItemElement.ToString">
            <summary>
            Converts the data to string datatype.
            </summary>
        </member>
        <member name="E:Syncfusion.PivotAnalysis.Base.FilterItemElement.PropertyChanged">
            <summary>
            Event that is triggered when the property of the cell is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterItemElement.Key">
            <summary>
            Gets or sets the key for the filter item.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterItemElement.IsSelected">
            <summary>
            Gets or sets the bool value for the selected option.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterItemElement.IsAllFilter">
            <summary>
            Gets or sets a value indicating whether the filter item is "(All)" in the FilterPopUp window.
            </summary>
            <value>
            Returns <c>true</c> if the filter item is "(All)"; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterItemElement.SelectedState">
            <summary>
            Gets or sets the bool value for the selected state.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterItemElement.IsChanged">
            <summary>
            Gets or sets the bool value for the changed state.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.FilterItemsCollection">
            <summary>
            Class that holds the collection of objects that are filtered.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.PivotAnalysis.Base.FilterItemsCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.AddIfUnique(Syncfusion.PivotAnalysis.Base.FilterItemElement)">
            <summary>
            Returns the respective location to add the filter item.
            </summary>
            <param name="filterItemElement">Filter item.</param>
            <returns>Location to add the filter item.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.AcceptChanges">
            <summary>
            Accept the changes in the filter items collection.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.RejectChanges">
            <summary>
            Rejects the changes in filter items collection.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.SetName(System.String)">
            <summary>
            Method used to set the name of the filter item.
            </summary>
            <param name="name">Name of the filter item.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.AddWireEvent(Syncfusion.PivotAnalysis.Base.FilterItemElement)">
            <summary>
            Add filter item in the collection.
            </summary>
            <param name="element">Filter item.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.GetFilterExpressionForDataView">
            <summary>
             To get the filter expression for DataView source.
            </summary>
            <returns>Filter expression.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.GetFilterExpression(System.Boolean)">
            <summary>
            To get the filter expression from IEnumerable source.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.GetFilterItem">
            <summary>
            Returns key of the filter item, if the filter items are selected else returns empty string.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.GetFilterExpression(System.Boolean,Syncfusion.PivotAnalysis.Base.FilterItemsCollection,System.String)">
            <summary>
            Returns the filter expression for the filter items collection from IEnumerable source.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.FilterProperty">
            <summary>
            Gets or sets the filter property.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.AllFilterItem">
            <summary>
            Gets or sets the property with all the filter items.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.Comparer">
            <summary>
            Gets or sets the comparer of all PivotFields in the Pivot control.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.Name">
            <summary>
            Gets or sets the content for the name property.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.DisplayHeader">
            <summary>
            Gets or sets the header value for the PivotItem.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.FieldCaption">
            <summary>
            Gets or sets the caption value for the PivotItem.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.Format">
            <summary>
            Gets or sets the format for the PivotItem.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.ShowSubTotal">
            <summary>
            Gets or sets the value to show/hide sub-totals for the PivotItem. Default value is true.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.AllowRunTimeGroupByField">
            <summary>
            Gets or sets the value to enable/disable grouping for the filter item. Default value is true.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FilterItemsCollection.FilteredValues">
            <summary>
             Gets or sets the filtered values.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.BinaryList">
            <summary>
            Used to store the row header and column header values as BinaryList.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.BinaryList.AddIfUnique(System.IComparable)">
            <summary>
            Method that returns an integer value after performing insertion.
            </summary>
            <param name="o">IComparable object</param>
            <returns>Object</returns>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.PivotItem">
            <summary>
            Enacapulates the information needed to define a PivotItem, for either a row/column Pivot.
            </summary>
            <remarks>
            A PivotItem is a property in the underlying data objects 
            that is used to group the data in a PivotTable. You can add PivotItems to both the 
            PivotColumns and PivotRows collection in a mutually exclusive manner.</remarks>
        </member>
        <member name="E:Syncfusion.PivotAnalysis.Base.PivotItem.PropertyChanged">
            <summary>
            Event triggered when the property of the PivotItem is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotItem.SummaryType">
            <summary>
            Gets or sets the summary type for calculations use.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotItem.Summary">
            <summary>
            Gets or sets the summary for calculations use.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotItem.ShowSubTotal">
            <summary>
            Gets or sets whether the sub-total of PivotItems can be shown or hidden.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotItem.AllowSort">
            <summary>
            Gets or sets whether this calculation column can be sorted when
            "RowPivotsOnly" is set to true in the PivotEngine. 
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotItem.Width">
            <summary>
            Gets or sets the width of PivotItems to set the column width of RowHeaders
            Its's only applicable for PivotItems which are added in PivotRows
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotItem.AllowFilter">
            <summary>
            Gets or sets whether this calculation column can be filtered when
            "RowPivotsOnly" is set to true in the PivotEngine. 
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotItem.EnableHyperlinks">
            <summary>
            Gets or sets whether the PivotItem should be hyperlinked when "RowPivotsOnly" is set to true in the PivotEngine.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotItem.FieldMappingName">
            <summary>
            Gets or sets the property's mapping name.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotItem.FieldHeader">
            <summary>
            Gets or sets the title you want to see in the header of this PivotItem.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotItem.FieldCaption">
            <summary>
            Gets or sets the title you want to see in the header of this PivotItem.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotItem.TotalHeader">
            <summary>
            Gets or sets the string that you want to append to the PivotItem's summary cells.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotItem.Format">
            <summary>
            Gets or sets the format for the PivotItem.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotItem.CssClass">
            <summary>
            Gets or sets CssClass to the individual PivotItem.
            </summary>
            <remarks>
            This is applicable only for Web platforms.
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotItem.Comparer">
            <summary>
            Gets or sets the IComparer object used for sorting. If this value is null, then sorting is done assuming that this field is IComparable.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotItem.AllowRunTimeGroupByField">
            <summary>
            Gets or sets the value to enable/disable grouping for this PivotItem. Default value is true.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.HiddenGroup">
            <summary>
            Class used to hold the properties of each hidden group.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.HiddenGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.PivotAnalysis.Base.HiddenGroup"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.HiddenGroup.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.PivotAnalysis.Base.HiddenGroup"/> class and it contains the properties needed for the hidden group.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.HiddenGroup.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Constructor that holds the information needed for hidden group.
            </summary>
            <param name="from">Hidden group starts with.</param>
            <param name="to">Hidden group ends with.</param>
            <param name="level">The level of hidden group.</param>
            <param name="groupName">Name of the hidden group.</param>
            <param name="totalHeader">The total header of hidden group.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.HiddenGroup.ToString">
            <summary>
            Converts the hidden group start and end values into string format.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.HiddenGroup.Clone(Syncfusion.PivotAnalysis.Base.HiddenGroup)">
            <summary>
            Clones the specified hidden group.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.HiddenGroup.From">
            <summary>
            Gets or sets where the HiddenGroup starts with.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.HiddenGroup.To">
            <summary>
            Gets or sets where the HiddenGroup ends with.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.HiddenGroup.Level">
            <summary>
            Gets or sets the level of HiddenGroup.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.HiddenGroup.GroupName">
            <summary>
            Gets or sets the name of HiddenGroup.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.HiddenGroup.ItemTotalHeader">
            <summary>
            Gets or sets the total header of HiddenGroup.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.ExtensionClass">
            <summary>
            Class which has a method to determine whether the specified item is in the hidden group collection.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.ExtensionClass.Has(System.Collections.Generic.List{Syncfusion.PivotAnalysis.Base.HiddenGroup},Syncfusion.PivotAnalysis.Base.HiddenGroup)">
            <summary>
            Determines whether the specified item is in the collection.
            </summary>
            <param name="t">The hidden group collection.</param>
            <param name="hiddenGroup">Specific hidden group item.</param>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.SummaryPivotItem">
            <summary>
            This class is primarily for internal use. It is used to generate the rows and columns that hold summaries of PivotCalculations.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.SummaryPivotItem.CompareTo(System.Object)">
            <summary>
            Compare the summary fields using the keys.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.SummaryPivotItem.RowIndex">
            <summary>
            Gets or sets the row index of this item.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.SummaryPivotItem.ColIndex">
            <summary>
            Gets or sets the column index of this item.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.SummaryPivotItem.Values">
            <summary>
            Gets or sets the list of calculations in the PivotItem.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.SummaryPivotItem.Keys">
            <summary>
            Gets or sets row/column key values for an indexed look-up of this item.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.CoveredCellRange">
            <summary>
            This class defines a set of four integers that define a covered range in the zero-based coordinate system of a PivotTable.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CoveredCellRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.PivotAnalysis.Base.CoveredCellRange"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CoveredCellRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor to define the range of covered cells.
            </summary>
            <param name="top">Top index of the cell.</param>
            <param name="left">Left index of the cell.</param>
            <param name="bottom">Bottom index of the cell.</param>
            <param name="right">Right index of the cell.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.CoveredCellRange.ToString">
            <summary>
            Converts the covered cell ranges into string format.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.CoveredCellRange.Top">
            <summary>
            Gets or sets the top index.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.CoveredCellRange.Left">
            <summary>
            Gets or sets the left index.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.CoveredCellRange.Bottom">
            <summary>
            Gets or sets the bottom index.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.CoveredCellRange.Right">
            <summary>
            Gets or sets the right index.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.PivotCellInfo">
            <summary>
            This class provides an information about a specific cell in a PivotTable.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotCellInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.PivotAnalysis.Base.PivotCellInfo"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotCellInfo.ToString">
            <summary>
            Returns the formatted text.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotCellInfo.Dispose">
            <summary>
            Method to dispose the pivot cell information
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotCellInfo.DoubleValue">
            <summary>
            Gets the double value of the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotCellInfo.Value">
            <summary>
            Gets or sets the value in the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotCellInfo.CellRange">
            <summary>
            Gets or sets any covered range associated with this cell. 
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotCellInfo.CellType">
            <summary>
            Gets or sets the cell type of this cell.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotCellInfo.Key">
            <summary>
            Gets or sets the key associated with this cell.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotCellInfo.FormattedText">
            <summary>
            Gets or sets the formatted text displayed in this cell.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotCellInfo.Format">
            <summary>
            Gets or sets the format for the cells.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotCellInfo.Tag">
            <summary>
            Gets or sets the name of the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotCellInfo.Summary">
            <summary>
            Gets or sets the summary for the cell.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotCellInfo.ParentCell">
            <summary>
            Gets or sets the parent cell.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotCellInfo.UniqueText">
            <summary>
            Gets or sets the unique text.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotCellInfo.RawValues">
            <summary>
            Gets the RawValues of the particular PivotCellInfo.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.PivotCellInfos">
            <summary>
            Gets the information from the Pivot control.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotCellInfos.#ctor">
            <summary>
            Initializes a new instance of the PivotCellInfos class.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotCellInfos.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor accepting the row and column count.
            </summary>
            <param name="rowCount">Total number of rows in the Pivot control.</param>
            <param name="colCount">Total number of columns in the Pivot control.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotCellInfos.GetLength(System.Int32)">
            <summary>
            Gets the length of the value at specified index.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotCellInfos.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the rowIndex and colIndex of the pivot cell.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.PivotSchemaChangedArgs">
            <summary>
            Event argument for the <see cref="T:Syncfusion.PivotAnalysis.Base.PivotSchemaChangedArgs"/> event.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotSchemaChangedArgs.ChangeHints">
            <summary>
            Gets or sets <see cref="T:Syncfusion.PivotAnalysis.Base.SchemaChangeHints"/> regarding the schema information changed.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotSchemaChangedArgs.OverrideDeferLayoutUpdate">
            <summary>
            Gets or sets whether to override the defer layout update settings.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.FieldInfo">
            <summary>
            Gets the information about the PiovtFields.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FieldInfo.Equals(System.Object)">
            <summary>
            Returns the name of each field in the property descriptor collection based on the object type.  
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FieldInfo.GetHashCode">
            <summary>
            Returns the hash code for the given value.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.FieldInfo.CompareTo(System.Object)">
            <summary>
            Compares the value with other values using the name of the field.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FieldInfo.FieldType">
            <summary>
            Gets and sets the field type.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FieldInfo.Name">
            <summary>
            Gets and sets the name of the field.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FieldInfo.Expression">
            <summary>
            Gets and sets the expression associated with the field.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.FieldInfo.Format">
            <summary>
            Gets and sets the format of the field.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.ExpressionPropertyDescriptor">
            <summary>
            Class that illustrates the expression field support along with filtering in PivotEngine.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.ExpressionPropertyDescriptor.#ctor(System.String,System.Attribute[],System.String,System.String,Syncfusion.PivotAnalysis.Base.FilterHelper)">
            <summary>
            A constructor that initializes the attributes of "ExpressionPropertyDescriptor" object.
            </summary>
            <param name="name">Name of the expression field.</param>
            <param name="attributes">Attributes.</param>
            <param name="expression">Expression.</param>
            <param name="format">Format.</param>
            <param name="helper">An object that holds attributes to compute filter values and expressions.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.ExpressionPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            When overridden in a derived class, returns whether re-setting an object changes its value.
            </summary>
            <param name="component">The component to test re-setting capability.</param>
            <returns>
            Retuens true if re-setting the component changes its value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.ExpressionPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Gets the value of the concerned data and returns the values based on the format associated with it.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.ExpressionPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            Resets the value based on expression.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.ExpressionPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            When overridden in a derived class, sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.ExpressionPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <param name="component">The component with the property to be examined for persistence.</param>
            <returns>
            Returns true if the property should be persisted; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.ExpressionPropertyDescriptor.Expression">
            <summary>
            Gets or sets the expression.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.ExpressionPropertyDescriptor.Exp">
            <summary>
            Gets or sets the logical expression for filtering.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.ExpressionPropertyDescriptor.Format">
            <summary>
            Gets or sets a format associated with the value of this expression.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.ExpressionPropertyDescriptor.IsReadOnly">
            <summary>
            Checks whether the data is read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.ExpressionPropertyDescriptor.PropertyType">
            <summary>
            Returns the object datatype.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.ExpressionPropertyDescriptor.ComponentType">
            <summary>
            When overridden in a derived class, gets the type of the component this property is bound to.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.DynamicPropertyDescriptor">
            <summary>
            Class that holds the methods for setting the value for the variable.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DynamicPropertyDescriptor.#ctor(System.String,System.Attribute[])">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.PivotAnalysis.Base.DynamicPropertyDescriptor"/> class.
            </summary>
            <param name="name">Name of the member.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that contains the member attributes.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DynamicPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            When overridden in a derived class, returns whether re-setting an object changes its value.
            </summary>
            <param name="component">The component to test for reset capability.</param>
            <returns>
            Returns true if re-setting the component changes its value; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DynamicPropertyDescriptor.GetValue(System.Object)">
            <summary>
            When overridden in a derived class, gets the current value of the property on a component.
            </summary>
            <param name="component">The component with the property, for which, to retrieve the value.</param>
            <returns>
            The value of a property for a given component.
            </returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DynamicPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            When overridden in a derived class, resets the value for this property of the component to the default value.
            </summary>
            <param name="component">The component with the property value that is to be reset to the default value.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DynamicPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            When overridden in a derived class, sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DynamicPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <param name="component">The component with the property to be examined for persistence.</param>
            <returns>
            Returns true if the property should be persisted; otherwise, false.
            </returns>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.DynamicPropertyDescriptor.IsReadOnly">
            <summary>
            When overridden in a derived class, gets a value indicating whether this property is read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.DynamicPropertyDescriptor.PropertyType">
            <summary>
            When overridden in a derived class, gets the type of the property.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.DynamicPropertyDescriptor.ComponentType">
            <summary>
            When overridden in a derived class, gets the type of the component this property is bound to.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.DateComparer.Compare(System.Object,System.Object)">
            <summary>
            Compare for DateTime objects.
            </summary>
            <param name="x">object.</param>
            <param name="y">object.</param>
            <returns>integer</returns>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager">
            <summary>
            This class allows a PivotEngine to automatically respond to changes in the underlying data
            provided that data supports appropriate events. 
            </summary>
            <remarks>
            In order for the PivotEngine to automatically respond to the changes in the underlying data, the underlying data must be either:
                A) a DataTable or DataView
            or
                B) an IList&lt;T&gt; where T implements both INotifyPropertyChanging and INotifyPropertyChanged. Additionally, the IList must also
                implement INotifyCollectionChanged or IBindingList."
            </remarks>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.#ctor(Syncfusion.PivotAnalysis.Base.PivotEngine)">
            <summary>
            Initializes a new instance of the PivotEngineUpdatingManager class with the specified PivotEngine.
            </summary>
            <param name="pivotEngine">The PivotEngine that should be responding to updates.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.Dispose">
            <summary>
            Unsubscribe to certain events that were subscribed to when this object was created.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.Dispose(System.Boolean)">
            <summary>
            Unsubscribe to certain events that were subscribed to when this object was created.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.InitalizeUpdatingManager(Syncfusion.PivotAnalysis.Base.PivotEngine)">
            <summary>
            Initializes the updating manager with its associated settings.
            </summary>
            <param name="engine">The PivotEngine object</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.UnwireEvents">
            <summary>
            UnWire the events from the PivotEngine.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.item_PropertyChanging(System.Object,System.ComponentModel.PropertyChangingEventArgs)">
            <summary>
            Override this method to catch the previous values of an underlying object before a change is applied.
            This method is the default handler for the object's PropertyChanging event.
            </summary>
            <param name="sender">The object that is changing.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangingEventArgs"/>contains the event data.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.UpdateRefreshHelper_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Override this method to control the response to a list changed event for a list that implements <see cref="T:System.ComponentModel.IBindingList"/>.
            </summary>
            <param name="sender">The IBindingList.</param>
            <param name="e">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/>contains the event data.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.UpdateRefreshHelper_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Override this method to control the response to a collection changed event for a list that implements the ICollectionChanged.
            </summary>
            <param name="sender">The ICollectionChanged collection.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>contains the event data.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.Item_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Override this method to catch the previous values of an underlying object after a change is applied.
            This method is the default handler for the object's PropertyChange event. The base implementation
            calls the ChangeValue method to respond to the changed value.
            </summary>
            <param name="sender">The object that is changing.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/>contains the event data.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.ChangeValue(System.Object,System.Object,System.Object,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Override this method to control how the changes affect the pivot display. The base implementation calls IAdjustable methods on the summaries to accomplish the change.
            </summary>
            <param name="oldValue">The previous value of the changed property.</param>
            <param name="newValue">The new value of the changed property.</param>
            <param name="item">The object that holds the changed property.</param>
            <param name="propertyName">The property name that was changed.</param>
            <param name="row">The row index in the PivotEngine that is affected by the change.</param>
            <param name="col">The column index in the PivotEngine that is affected by the change.</param>
            <param name="adjustAdd">If true, the IAdjustable.AdjustForNewContribution on the Summary for this row/column is called to make the adjustment.</param>
            <param name="adjustRemove">If true, the IAdjustable.AdjustForOldContribution on the Summary for this row/column is called to make the adjustment.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.CheckUpdateCell(System.Int32,System.Int32)">
            <summary>
            CheckUpdateCell method used to refresh the cell
            </summary>
            <param name="row">The row index of the cell</param>
            <param name="col">The column index of the cell</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.PopulateEngine">
            <summary>
            Populate the engine value based on current dataSource values
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.UpdatedWireEvents">
            <summary>
            Wires the required events in the PivotEngine.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.Table_RowDeleting(System.Object,System.Data.DataRowChangeEventArgs)">
            <summary>
            Occurs when a row is deleted from the table.
            </summary>
            <param name="sender">The Control</param>
            <param name="e">The <see cref="T:System.Data.DataRowChangeEventArgs"/>contains the event data.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.Table_TableClearing(System.Object,System.Data.DataTableClearEventArgs)">
            <summary>
            Occurs when reset the table
            </summary>
            <param name="sender">The Control</param>
            <param name="e">The <see cref="T:System.Data.DataTableClearEventArgs"/>contains the event data.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.ChangeRowColumnPivotValue(System.Object,System.Object,System.Object,System.String)">
            <summary>
            Updates the cell with the new value passed.
            </summary>
            <param name="oldValue">Old values of the object.</param>
            <param name="newValue">New values of the object.</param>
            <param name="item">The object that holds the changed property.</param>
            <param name="propertyName">The property to be updated.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.GetNextSummaryOverColIndex(System.Int32,System.Int32)">
            <summary>
            Gets the index of next summary cell for the provided column index.
            </summary>
            <param name="row1">Row index.</param>
            <param name="col">Column index.</param>
            <returns>Column index of the next summary cell.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.GetNextSummaryDownRowIndex(System.Int32,System.Int32)">
            <summary>
            Gets the index of next summary cell for the provided row index.
            </summary>
            <param name="row">Row index.</param>
            <param name="col1">Column index.</param>
            <returns>Row index of the next summary cell.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.FindColumn(System.Object,System.String)">
            <summary>
            Gets the index of a column corresponding to the provided property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="item">Object that holds values of the  property.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.FindColumn(System.Data.DataRow,System.String)">
            <summary>
            Gets the index of a column corresponding to the provided property name and DataRow.
            </summary>
            <param name="item">Data row object that holds the values of the row.</param>
            <param name="propertyName">Name of the property.</param>
            <returns>Column index.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.FindColumn(System.Object,System.String,System.Object,Syncfusion.PivotAnalysis.Base.PivotItem)">
            <summary>
            Gets the index of a column corresponding to the provided property name.
            </summary>
            <param name="oldValue">Object that holds the old values.</param>
            <param name="propertyName">Name of the property changed.</param>
            <param name="item">Object that holds the values of the changed property.</param>
            <param name="changedColumn">Pivot column that gets changed.</param>
            <returns>Column index.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.FindRow(System.Object,System.String)">
            <summary>
            Gets the index of a row corresponding to the provided property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="item">Object that holds values of the  property.</param>
            <returns>Row index.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.FindRow(System.Data.DataRow,System.String)">
            <summary>
            Gets the index of a row corresponding to the provided property name and DataRow.
            </summary>
            <param name="item">Data row object that holds the values of the row.</param>
            <param name="propertyName">Name of the property.</param>
            <returns>Row index.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.FindRow(System.Object,System.String,System.Object,Syncfusion.PivotAnalysis.Base.PivotItem)">
            <summary>
            Gets the index of a row corresponding to the provided property name. 
            </summary>
            <param name="oldValue">Object that holds the old values.</param>
            <param name="propertyName">Name of the property changed.</param>
            <param name="item">Object that holds the values of the changed property.</param>
            <param name="changedRow">Pivot column that gets changed.</param>
            <returns>Row index.</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.Table_ColumnChanging(System.Object,System.Data.DataColumnChangeEventArgs)">
            <summary>
            Occurs when a value in column is changed.
            </summary>
            <param name="sender">The Control</param>
            <param name="e">The <see cref="T:System.Data.DataColumnChangeEventArgs"/>contains the event data.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.AddChangingColumnIndexes(System.Int32,System.Int32,Syncfusion.PivotAnalysis.Base.BinaryList)">
            <summary>
            Find the column indexes need to be change.
            </summary>
            <param name="col">The column index</param>
            <param name="colOffSet">The column offset value</param>
            <param name="changingCols">The BinaryList object to save the changing columns</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.AddChangingRowIndexes(System.Int32,Syncfusion.PivotAnalysis.Base.BinaryList)">
            <summary>
            Find the column indexes need to be change.
            </summary>
            <param name="rowOffSet">The row offset value</param>
            <param name="changingRows">The BinaryList object to save the changing rows</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.OnItemAdded(System.Object)">
            <summary>
            Occurs when adding any new items into the DataSource
            </summary>
            <param name="item">The object which added into datasource</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.OnItemDeleted(System.Object)">
            <summary>
            Occurs when delete any item from datasource
            </summary>
            <param name="o">The object which removed from datasource</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.GetValue(System.Object,System.String)">
            <summary>
            Get the value from the object
            </summary>
            <param name="Item">The item</param>
            <param name="propertyName">The property name</param>
            <returns>Returns the object</returns>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.Engine">
            <summary>
            Gets the PivotEngine value
            Used internally
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.ChangingValueInfo">
            <summary>
            Defines a class for the values that gets changed in the Pivot row or column.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.ChangingValueInfo.OriginalValue">
            <summary>
            Gets or sets the values of rows and columns.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.ChangingValueInfo.RowIndex">
            <summary>
            Gets or sets value of row index.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.PivotEngineUpdatingManager.ChangingValueInfo.ColumnIndex">
            <summary>
            Gets or sets the value of column index.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.GetValueDelegate">
            <summary>
            Use to get the property value without using reflection.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.RowType">
            <summary>
            Enumeration provides option to select row type.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.RowType.None">
            <summary>
            When no type is set for the Row.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.RowType.Summary">
            <summary>
            When type is set for Row as Summary.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.IndexEngine">
            <summary>
            Index Engine is used to load the collection of data faster than the PivotEngine. 
            It makes use of the "EnableOnDemandCalculations" property. 
            Unlike the PivotEngine, it loads the entire collection of data by including all the values in the list irrespective of Row and Column headers.
            </summary>
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.IndexEngine.allIndexesRowFirst">
            <exclude />
        </member>
        <member name="F:Syncfusion.PivotAnalysis.Base.IndexEngine.allComparersRowFirst">
            <exclude />
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IndexEngine.#ctor(Syncfusion.PivotAnalysis.Base.PivotEngine)">
            <summary>
            Initializes a new instance of the class IndexEngine.
            </summary>
            <param name="pivotEngine">The PivotEngine.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IndexEngine.#ctor(Syncfusion.PivotAnalysis.Base.PivotEngine,Syncfusion.PivotAnalysis.Base.GetValueDelegate)">
            <summary>
            Initializes the new instance of the class IndexEngine.
            </summary>
            <param name="pivotEngine">The PivotEngine.</param>
            <param name="del">Returns delegate value.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IndexEngine.#ctor">
            <summary>
            Initializes a new instance of the IndexEngine class.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IndexEngine.IndexData">
            <summary>
            Call this method to have the IndexEngine create the index information for the current
            content reflected in <see cref="P:Syncfusion.PivotAnalysis.Base.IndexEngine.DataSource"/>, <see cref="P:Syncfusion.PivotAnalysis.Base.IndexEngine.PivotRows"/>, <see cref="P:Syncfusion.PivotAnalysis.Base.IndexEngine.PivotColumns"/>
            and <see cref="P:Syncfusion.PivotAnalysis.Base.IndexEngine.PivotCalculations"/>.
            </summary>
            <returns>Returns true if indexing was completed; otherwise, false.</returns>
            <remarks>
            After successfully executing this method, you can access the Pivot contents using an zero-based
            row, column indexer on this IndexEngine.
            </remarks>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IndexEngine.IndexData(System.Boolean)">
            <summary>
            Call this method to have the IndexEngine create index information for the current
            content reflected in <see cref="P:Syncfusion.PivotAnalysis.Base.IndexEngine.DataSource"/>, <see cref="P:Syncfusion.PivotAnalysis.Base.IndexEngine.PivotRows"/>, <see cref="P:Syncfusion.PivotAnalysis.Base.IndexEngine.PivotColumns"/>
            and <see cref="P:Syncfusion.PivotAnalysis.Base.IndexEngine.PivotCalculations"/>.
            </summary>
            <param name="onDemand">If you want this method to return before all the rows are populated, parameter should be set to true.</param>
            <returns>Returns true if indexing was completed; otherwise, false.</returns>
            <remarks>
            If onDemand is true, the IndexEngine will return when the number of rows given in <see cref="P:Syncfusion.PivotAnalysis.Base.IndexEngine.InitialRowLoadAmount"/> 
            has been loaded. After this method returns, the rest of the rows will be loaded on demand
            as you index this IndexEngine using row and column indexes. Anytime you index this IndexEngine,
            if your row request exceeds <see cref="P:Syncfusion.PivotAnalysis.Base.IndexEngine.HighRowLevel"/>, additional rows are populated until it is
            possible to return your requested value.
            </remarks>
            <see cref="P:Syncfusion.PivotAnalysis.Base.IndexEngine.PivotCalculations">        
            </see>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IndexEngine.SortByCalculation(System.Int32)">
            <summary>
            Sorts the value by the calculated value.
            </summary>
            <param name="colIndex">The index of the column.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IndexEngine.GetCount(Syncfusion.PivotAnalysis.Base.ListIndexInfo)">
            <summary>
            Gets the total number of unique slices under this given ListIndexInfo object.
            </summary>
            <param name="info">The parent ListIndexInfo object.</param>
            <returns>The number of rows or columns that are contained by this ListIndexInfo item.</returns>
            <remarks>
            Given an outer row node, the GetCount value for this node is the number of child nodes that are contained
            under this outer node. This method uses recursions to iterate through all children contained
            at any level under this outer node. Summing up all the GetCounts for all the outer nodes will give
            you the total number of all nodes.
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.HighRowLevel">
            <summary>
            Gets the index of the last row that has been loaded when you are using on-demand loading.
            </summary>
            <remarks>
            You do on-demand loading by passing a true value when you use the IndexEngine method to populate
            the IndexEngine. When this is done, IndexEngine will return after loading the number of rows 
            indicated <see cref="F:Syncfusion.PivotAnalysis.Base.IndexEngine.initialRowLoadAmount"/>. The rest of the rows will be populated on-demand 
            as your code requests a row higher than this property.
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.InitialRowLoadAmount">
            <summary>
            Gets or sets the number of rows that are initially loaded when you are using on-demand loading.
            </summary>
            <remarks>
            You do on-demand loading by passing a true value when you use the IndexEngine method to populate
            the IndexEngine. When this is done, IndexEngine will return after loading the number of rows 
            indicated by this property. The rest of the rows will be populated on-demand as your code requests
            a row higher than <see cref="P:Syncfusion.PivotAnalysis.Base.IndexEngine.HighRowLevel"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.GetValue">
            <summary>
            Gets or sets a <see cref="T:Syncfusion.PivotAnalysis.Base.GetValueDelegate"/> delegate that returns a property value for a given object.
            </summary>
            <remarks>
            If this member is null, the IndexEngine will use reflection to obtain property values from objects in
            the <see cref="P:Syncfusion.PivotAnalysis.Base.IndexEngine.DataSource"/>. Note usually, a well written delegate can provide values more efficiently
            than using reflection. For performance improvements, you will want to provide a well written delegate for
            this property.
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.PivotRows">
            <summary>
            Gets the PivotRows used in this Pivot.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.PivotColumns">
            <summary>
            Gets the PivotColumns used in this Pivot.
            </summary>       
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.PivotCalculations">
            <summary>
            Gets the PivotCalculations used in this Pivot.
            </summary>
            <remarks>
            If the IndexEngine is created using a PivotEngine, then this PivotCalculations is
            the PivotEngine. PivotCalculations collection from the associated PivotEngine.
            </remarks>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.Filters">
            <summary>
            Gets a list holding <see cref="T:Syncfusion.PivotAnalysis.Base.FilterExpression"/> values that
            specify any filter that need to be applied to this PivotTable.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.DataSource">
            <summary>
            Gets or sets data source for this PivotTable. This object should be either 
            an IEnumerable List, or a DataTable.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.CoveredRanges">
            <summary>
            Gets a list of <see cref="T:Syncfusion.PivotAnalysis.Base.CoveredCellRange"/> objects that specify
            the cells that need to be covered.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.UsePercentageFormat">
            <summary>
            Gets or sets whether the formatted text of the columns which has percentage calculation type, must be applied with given format or default percentage format #,##%
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.RowCount">
            <summary>
            Gets the number of rows in the Pivot.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.ColumnCount">
            <summary>
            Gets the number of columns in the Pivot.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.ColumnOffSetToValues">
            <summary>
            Gets the number of columns that holds the row header information to the left of the numerical
            values in the Pivot.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.RowOffSetToValues">
            <summary>
            Gets the number of rows that holds the column header information above the numerical
            values in the Pivot.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.SortDirection">
            <summary>
            Gets or sets the sorting direction of the items in the Pivot control.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.Item(System.Int32,System.Int32)">
            <summary>
            Gets the PivotCell information that holds the details being displayed
            by the Pivot at the given row and column. 
            </summary>
            <param name="row">The row index (zero-based).</param>
            <param name="col">The column index (zero-based).</param>
            <returns>The PivotCellInfo associated with the cell pointed to by the row and column.</returns>
            <remarks>
            Note that this indexer will return a null value if the row and column values pick out a cell
            that is not visible due to being part of a covered cell.
            </remarks>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IndexEngine.CalcSortComparer.#ctor(System.ComponentModel.ListSortDirection)">
            <exclude />
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IndexEngine.CalcSortComparer.Compare(Syncfusion.PivotAnalysis.Base.IndexEngine.SortKey,Syncfusion.PivotAnalysis.Base.IndexEngine.SortKey)">
            <exclude />
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.SortKey.Index">
            <exclude />
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.IndexEngine.SortKey.Key">
            <exclude />
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IndexEngine.IndexSorter.#ctor(System.Collections.IComparer)">
            <summary>
            Sort the Pivot Row/Column headers using index.
            </summary>
            <param name="fieldComparer">The comparer assigned to the PivotFields.</param>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.IndexEngine.IndexSorter.Compare(Syncfusion.PivotAnalysis.Base.ListIndexInfo,Syncfusion.PivotAnalysis.Base.ListIndexInfo)">
            <summary>
            Compares the Pivot Row/Column and populate the Pivot values based on the comparer assigned.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.SortComparer">
            <summary>
            Class used to compare and sort the given collection.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.SortComparer.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Collections.IComparer},Syncfusion.PivotAnalysis.Base.GetValueDelegate)">
            <summary>
            Constructor that holds the information needed to perform comparison operation while sorting the PivotFields.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.SortComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares the different objects and populate the Pivot values based on the comparer assigned.
            </summary>
        </member>
        <member name="T:Syncfusion.PivotAnalysis.Base.ListIndexInfo">
            <summary>
            Class that holds primarily the information on one row in a PivotTable. Additionally, these
            calls can be used to hold information on the row/column header structures.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.ListIndexInfo.#ctor">
            <summary>
            Gets the type of the variable.
            </summary>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.ListIndexInfo.ToString">
            <summary>
            Converts the data to string type.
            </summary>
            <returns>Combined String</returns>
        </member>
        <member name="M:Syncfusion.PivotAnalysis.Base.ListIndexInfo.CompareTo(Syncfusion.PivotAnalysis.Base.ListIndexInfo)">
            <summary>
            Compares the different values based on display.
            </summary>
            <param name="other">Holds information on row/column headers.</param>
            <returns>Return 0 if display is null else return -1.</returns>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.ListIndexInfo.Type">
            <summary>
            Gets and sets the RowType.
            </summary>
        </member>
        <member name="P:Syncfusion.PivotAnalysis.Base.ListIndexInfo.ParentInfo">
            <summary>
            Get the information about the parent row/column headers in the PivotTable.
            </summary>
        </member>
    </members>
</doc>
