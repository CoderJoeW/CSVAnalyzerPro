<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.GridConverter.Windows</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.GridExcelConverter.NamespaceDoc">
            <summary>
            The Syncfusion.GridExcelConverter namespace contains classes that implements the GridGroupingExcelConverterControl to import and export the contents of the grid to an Excel sheet.
            </summary>
        </member>
        <member name="T:Syncfusion.GridExcelConverter.GridExcelConverterBase">
            <summary>
            GridExcelConverterBase is a base class for specific Grid to Excel Converter controls.
            Provides Support for Importing the Grid with data's from the spreadsheet.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_GENERAL_FORMAT">
            <summary>
            General format.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_NUMBER_FORMAT">
            <summary>
            Default number format in Grid cell
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_EXCEL_GENERAL_FORMAT">
            <summary>
            General format in Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_EXCEL_CURRENCY_FORMAT">
            <summary>
            Currency format index in the MS Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_EXCEL_DECIMAL_FORMAT">
            <summary>
            Decimal format index in the MS Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_EXCEL_SCIENTIFIC_FORMAT">
            <summary>
            Scientific format index in the MS Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_EXCEL_FIXEDPOINT_FORMAT">
            <summary>
            Fixed-point format index in the MS Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_EXCEL_NUMBER_FORMAT">
            <summary>
            Number format index in the MS Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_EXCEL_PERCENT_FORMAT">
            <summary>
            Percent format index in the MS Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_EXCEL_DATE_FORMAT">
            <summary>
            Date format index in the MS Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_EXCEL_HEX_FORMAT">
            <summary>
            Hex format index in the MS Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_MAX_COLUMN_ZERO_INDEX">
            <summary>
            Maximum zero-based index of the column in MS Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_MAX_COLUMN_ONE_INDEX">
            <summary>
            Maximum one-based index of the column in MS Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_MAX_ROW_ZERO_INDEX">
            <summary>
            Maximum zero-based index of the row in MS Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_MAX_ROW_ONE_INDEX">
            <summary>
            Maximum one-based index of the row in MS Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_EXCEL2007_MAX_COLUMN_COUNT">
            <summary>
            Maximum one-based index of the column in MS Excel 2007.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_EXCEL2007_MAX_ROW_COUNT">
            <summary>
            Maximum one-based index of the row in MS Excel 2007.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_CHAR_CURRENCY">
            <summary>
            Currency format in the .Net.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_CHAR_DATE">
            <summary>
            Date format in the .Net.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_CHAR_SCIENTIFIC">
            <summary>
            Scientific format in the .Net.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_CHAR_FIXEDPOINT">
            <summary>
            Fixed point format in the .Net.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_CHAR_GENERAL">
            <summary>
            General format in the .Net.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_CHAR_NUMBER">
            <summary>
            Number format in the .Net.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_CHAR_PERCENT">
            <summary>
            Percent format in the .Net.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_CHAR_HEX">
            <summary>
            Hexadecimal format in the .Net.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_DEFAULT_HALIGNMENT">
            <summary>
            Default horizontal alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_DEFAULT_VALIGNMENT">
            <summary>
            Default vertical alignment.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_RIGHT_ANGLE">
            <summary>
            Right angle value.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_MAXIMUM_ANGLE">
            <summary>
            Maximum possible angle value.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_MINIMUM_SUPPORTED_ANGLE">
            <summary>
            Angle that corresponds to 90 rotation value in the XlsIO.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_COLOR_MASK">
            <summary>
            Color mask to remove Alpha component.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEFAULT_COLOR">
            <summary>
            Default color (white).
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_EXCEL_NUMBER_FORMATS">
            <summary>
            Gets the number format in Excel
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.DEF_PATTERN_STYLE">
            <summary>
            Pattern style with corresponding ExcelPattern value.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.PatternStyleToExcelPattern">
            <summary>
            PatternStyle - to - ExcelPattern HashTable.
            </summary>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.#cctor">
            <summary>
            Initializes a new static instance of the <see cref="T:Syncfusion.GridExcelConverter.GridExcelConverterBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.GridExcelConverter.GridExcelConverterBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.CreateEngine">
            <summary>
            Creates excel engine.
            </summary>
            <returns>Newly created ExcelEngine.</returns>
            <remarks>
            The caller of this method is responsible for calling
            Dispose on the created ExcelEngine after all workbooks
            have been closed and the caller is finished with the engine.
            </remarks>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.ExportStylesToExcel(Syncfusion.Windows.Forms.Grid.GridModel,System.Int32,System.Int32,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the styles to Excel.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
            <param name="iRow">The row index of the grid.</param>
            <param name="iColumn">The column index of the grid.</param>
            <param name="range">The destination <see cref="T:Syncfusion.XlsIO.IRange"/>. </param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.ExportStylesToExcel(Syncfusion.Windows.Forms.Grid.GridModel,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the style of grid cell into excel cell.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
            <param name="iRow">The row index of the grid.</param>
            <param name="iColumn">The column index of the grid.</param>
            <param name="gridCell">The style of the grid cell.</param>
            <param name="range">The destination <see cref="T:Syncfusion.XlsIO.IRange"/>.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.ExportStylesToExcel(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the style from grid style into range style.
            </summary>
            <param name="gridStyle">The style of the grid cell.</param>
            <param name="destRange">The destination <see cref="T:Syncfusion.XlsIO.IRange"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="gridStyle"/> or <paramref name="destRange"/> is <c>null</c>.    
            </exception> 
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.ExportNumberFormatToExcel(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the number format index for a range from specified grid style.
            </summary>
            <param name="range">The destination <see cref="T:Syncfusion.XlsIO.IRange"/>.</param>
            <param name="gridStyle">The style of the grid cell.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.ExportBrushToExcel(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports brush settings from grid cell into excel cell.
            </summary>
            <param name="gridCell">The style of the grid cell.</param>
            <param name="range">The destination <see cref="T:Syncfusion.XlsIO.IRange"/>.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.ExportFontToExcel(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the font settings from grid cell into excel cell.
            </summary>
            <param name="gridCell">The style of the grid cell.</param>
            <param name="range">The destination <see cref="T:Syncfusion.XlsIO.IRange"/>.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.ExportBordersToExcel(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports borders settings from grid cell into excel cell.
            </summary>
            <param name="gridCell">The style of the grid cell.</param>
            <param name="range">The destination <see cref="T:Syncfusion.XlsIO.IRange"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="gridCell"/> or <paramref name="range"/> is <c>null</c>.
            </exception> 
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.ExportAlignmentToExcel(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports alignment settings from grid cell into excel cell.
            </summary>
            <param name="gridCell">The style of the grid cell.</param>
            <param name="range">The destination <see cref="T:Syncfusion.XlsIO.IRange"/>.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.ExportBordersToExcel(Syncfusion.Windows.Forms.Grid.GridBorder,Syncfusion.XlsIO.IBorder)">
            <summary>
            Exports border settings from grid border into excel border.
            </summary>
            <param name="cellBorder">The style of the grid cell.</param>
            <param name="rangeBorder">The destination <see cref="T:Syncfusion.XlsIO.IBorder"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="cellBorder"/> or <paramref name="rangeBorder"/> is <c>null</c>.
            </exception> 
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.CombineStyles(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Determines whether styles should be combined for specified cell styles and combines cell's interior, alignment, borders, font, cell type, format to destination cell.
            </summary>
            <param name="destinationStyle">Style which is primary and in which result will be accumulated.</param>
            <param name="baseStyle">Style to combine.</param>
            <returns>Value indicating that not all properties were set.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="destinationStyle"/> or <paramref name="baseStyle"/> is <c>null</c>.
            </exception> 
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.CombineBorders(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Determines whether borders should be combined for specified cell styles and combines cell's borders to destination cell's borders.
            </summary>
            <param name="destStyle">Destination style.</param>
            <param name="baseStyle">Source style.</param>
            <returns>True if not all borders in destBorders were set.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="destStyle"/> or <paramref name="baseStyle"/> is <c>null</c>.    
            </exception> 
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.CombineFont(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Determines whether font should be combined for specified cell styles and combines cell's font to destination cell's font.
            </summary>
            <param name="destStyle">Destination style.</param>
            <param name="baseStyle">Source style.</param>
            <returns>True if not all font properties in destFont were set.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="destStyle"/> or <paramref name="baseStyle"/> is <c>null</c>.    
            </exception> 
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.CombineBrush(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Determines whether interior should be combined for specified cell styles and combines cell's interior to destination cell's interior.
            </summary>
            <param name="destStyle">Destination style.</param>
            <param name="baseStyle">Source style.</param>
            <returns>True if not the Interior property in destStyle is set.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="destStyle"/> or <paramref name="baseStyle"/> is <c>null</c>.
            </exception> 
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.CombineAlignment(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Determines whether alignments should be combined for specified cell styles and combines cell's alignment to destination cell's alignment.
            </summary>
            <param name="destStyle">Destination style.</param>
            <param name="baseStyle">Source style.</param>
            <returns>True if not all font properties in destFont were set.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="destStyle"/> or <paramref name="baseStyle"/> is <c>null</c>.
            </exception> 
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.CombineFormat(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Determines whether format should be combined for specified cell styles and combines cell's format to destination cell's format.
            </summary>
            <param name="destStyle">Destination style.</param>
            <param name="baseStyle">Source style.</param>
            <returns>True if not all format properties in destFont were set.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="destStyle"/> or <paramref name="baseStyle"/> is <c>null</c>.
            </exception> 
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.CombineCellType(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Determines whether cell type should be combined for specified cell styles and combines cell's cell type to destination cell's cell type.
            </summary>
            <param name="destStyle">Destination style.</param>
            <param name="baseStyle">Source style.</param>
            <returns>True if success</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="destStyle"/> or <paramref name="baseStyle"/> is <c>null</c>.
            </exception> 
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.GetClosestExcelPattern(Syncfusion.Drawing.PatternStyle)">
            <summary>
            Converts PatterStyle into ExcelPattern.
            </summary>
            <param name="gridPattern">PatternStyle to convert.</param>
            <returns>Corresponding ExcelPattern.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.GetClosestExcelHorizontalAlignment(Syncfusion.Windows.Forms.Grid.GridHorizontalAlignment)">
            <summary>
            Converts GridHorizontalAlignment into ExcelHAlign.
            </summary>
            <param name="gridHAlign">GridHorizontalAlignment to convert.</param>
            <returns>Corresponding ExcelHAlign.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.GetClosestExcelVerticalAlignment(Syncfusion.Windows.Forms.Grid.GridVerticalAlignment)">
            <summary>
            Converts GridVerticalAlignment into ExcelVAlign.
            </summary>
            <param name="gridVAlign">GridVerticalAlignment to convert.</param>
            <returns>Corresponding ExcelVAlign.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.GetExcelLineStyle(Syncfusion.Windows.Forms.Grid.GridBorderStyle)">
            <summary>
            Converts GridBorderStyle into ExcelLineStyle.
            </summary>
            <param name="gridLineStyle">GridBorderStyle to convert.</param>
            <returns>Corresponding ExcelLineStyle.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.GetExcelLineStyle(Syncfusion.Windows.Forms.Grid.GridBorder)">
            <summary>
            Converts GridBorder into ExcelLineStyle. 
            </summary>
            <remarks>
            This method also considers GridBorderWeight.
            </remarks>
            <param name="gridBorder">GridBorder to convert.</param>
            <returns>Corresponding ExcelLineStyle.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.ConvertFormatFromGridToExcel(Syncfusion.XlsIO.IWorkbook,System.String)">
            <summary>
            Converts grid number format into excel number format.
            </summary>
            <param name="book">Grid format to convert.</param>
            <param name="strGridFormat">Grid format to convert.</param>
            <returns>Index to the excel format.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.RaiseQueryImportExportCellInfo(Syncfusion.GridExcelConverter.GridImportExportCellInfoEventArgs)">
            <summary>
            Initiates call to <see cref="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.OnQueryImportExportCellInfo(Syncfusion.GridExcelConverter.GridImportExportCellInfoEventArgs)"/>.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.OnQueryImportExportCellInfo(Syncfusion.GridExcelConverter.GridImportExportCellInfoEventArgs)">
            <summary>
            Raises the <see cref="E:Syncfusion.GridExcelConverter.GridExcelConverterBase.QueryImportExportCellInfo"/> event.
            </summary>
            <param name="e">A <see cref="T:Syncfusion.GridExcelConverter.GridImportExportCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.ExportImageToExcel(System.Drawing.Image,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the image from the grid cell to excel cell range.
            </summary>
            <param name="range">The destination <see cref="T:Syncfusion.XlsIO.IRange"/>.</param>
            <param name="image">The <see cref="T:System.Drawing.Image"/> to export.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.ExportImageToExcel(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the image from the grid cell to excel cell range.
            </summary>
            <param name="range">The destination <see cref="T:Syncfusion.XlsIO.IRange"/>.</param>
            <param name="gridCell">The grid cell.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.ByteArrayToImage(System.Byte[])">
            <summary>
            Converts byte array to image
            </summary>
            <param name="byteArray">Byte array</param>
            <returns>Converted image from byte array</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterBase.AddPictureToExcelCell(Syncfusion.XlsIO.IRange,System.Drawing.Image)">
            <summary>
            Adds a picture to the given range's Worksheet
            </summary>
            <param name="range">IRange</param>
            <param name="bmp">Image</param>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.hasHeaderBKColor">
            <summary>
            variable setting whether header has back color
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterBase.hasForeColor">
            <summary>
            variable setting whether header has fore color
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterBase.UseDefaultAlignment">
            <summary>
            Gets a value indicating whether default alignment setting should be used when alignment
            wasn't set. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterBase.HeaderBackColor">
            <summary>
            Gets or sets the exported header cell's back color in worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterBase.ExportBorders">
            <summary>
            Gets or sets a value indicating whether the cell borders should be exported.
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterBase.ExportStyle">
            <summary>
            Gets or sets a value indicating whether the styles should get exported.
            The default value is true.
            </summary>
            <remarks>
            With version 5.1 the GridExcelConverter has been enhanced. 
            Since it export all style properties, the time taken to export a huge
            grid will be more relative to below versions GridConverter.
            If you dont want to export styles this can be set to false.
            </remarks>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterBase.IsGroupingGrid">
            <summary>
            Gets a value indicating whether the grid is a GroupingGrid.
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterBase.Grid">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterBase.ExportImage">
            <summary>
            Gets or sets a value indicating whether export the images into excel.
            </summary>
            <remarks>Effective only when ExportStyle is true.</remarks>
        </member>
        <member name="E:Syncfusion.GridExcelConverter.GridExcelConverterBase.QueryImportExportCellInfo">
            <summary>
            Occurs for each cell before the <see cref="T:Syncfusion.GridExcelConverter.GridExcelConverterControl"/>
            imports/ exports and let users customize the cell info.
            </summary>
        </member>
        <member name="T:Syncfusion.GridExcelConverter.GridConverterAction">
            <summary>
            Specifies the current action of the <see cref="T:Syncfusion.GridExcelConverter.GridExcelConverterControl"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridConverterAction.Import">
            <summary>
            Specifies that the event is triggered on importing Excel into GridControl.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridConverterAction.Export">
            <summary>
            Specifies that the event is triggered on exporting GridControl to Excel.
            </summary>
        </member>
        <member name="T:Syncfusion.GridExcelConverter.ConverterOptions">
            <summary>
            Defines the constants that specify the options for exporting data from grid/grouping grid to Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.ConverterOptions.Default">
            <summary>
            Default options - row / column headers won't be exported
            and all columns of grid will be exported.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.ConverterOptions.Visible">
            <summary>
            Lets you Convert only the visible Columns of Grid to a SpreadSheet format.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.ConverterOptions.ColumnHeaders">
            <summary>
            Lets you convert grid column headers into spreadsheet.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.ConverterOptions.RowHeaders">
            <summary>
            Lets you convert grid row headers into spreadsheet.
            </summary>
        </member>
        <member name="T:Syncfusion.GridExcelConverter.GridImportExportCellInfoEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.GridExcelConverter.GridExcelConverterBase.QueryImportExportCellInfo"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:Syncfusion.GridExcelConverter.GridImportExportCellInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.GridExcelConverter.GridImportExportCellInfoEventArgs">
             <summary>
            Provides data for the <see cref="E:Syncfusion.GridExcelConverter.GridExcelConverterBase.QueryImportExportCellInfo"/> GridImportExportCellInfo event.
             </summary>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridImportExportCellInfoEventArgs.#ctor(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.GridExcelConverter.GridConverterAction,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.GridExcelConverter.GridImportExportCellInfoEventArgs"/> class.
            </summary>
            <param name="excelCell">Excel cell style.</param>
            <param name="gridCell">Grid cell style.</param>
            <param name="action">The row index.</param>
            <param name="rowIndex">The row index.</param>
            <param name="colIndex">The column index.</param>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridImportExportCellInfoEventArgs.GridCell">
            <summary>
            Gets the style information for the grid cell.
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridImportExportCellInfoEventArgs.ExcelCell">
            <summary>
            Gets the style information of excel cell to import/ export.
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridImportExportCellInfoEventArgs.Action">
            <summary>
            Gets an action specifying the current action of <see cref="T:Syncfusion.GridExcelConverter.GridExcelConverterControl"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.GridExcelConverter.GridExcelConverterControl">
             <summary>
             GridExcelConverterControl class provides support for Exporting data from a gridControl into an Excel spreadsheet
             for verification and/or computation. This Control automatically Copies the Grid's Styles, Formats 
             to Excel. 
             The GridExcelConverter Control  is derived from 
            <see cref="T:Syncfusion.GridExcelConverter.GridExcelConverterBase"/>.
             </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterControl.autoFitColumns">
            <summary>
            Indicates whether converter should autofit columns.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterControl.autoFitRows">
            <summary>
            Indicates whether converter should autofit rows.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterControl.DEF_CURRENCY_NUMBER_FORMATS">
            <summary>
            Array with default currency number formats.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterControl.EXCEL_DEFAULT_COLOR">
            <summary>
            Excel default color.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterControl.TRANSPARENT_COLOR">
            <summary>
            Transparent Color
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterControl.sheetFamilyId">
            <summary>
            Sheet family id - This is used to identify a family of grids.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterControl.gridImportTableStyleConverter">
            <summary>
            Used to import the table style from Excel to grid.
            </summary>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.#cctor">
            <summary>
            Initializes a new static instance of the <see cref="T:Syncfusion.GridExcelConverter.GridExcelConverterControl"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.GridExcelConverter.GridExcelConverterControl"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the System.ComponentModel.Component and optionally releases the managed resources.
            </summary>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.SelectedExport(Syncfusion.Windows.Forms.Grid.GridModel,System.String,Syncfusion.GridExcelConverter.ConverterOptions)">
            <summary>
            Exports the selected range from grid model to Excel.
            </summary>
            <param name="model">The grid model.</param>
            <param name="FileName">Name of the file to which the grid is to be exported.</param>
            <param name="options">The converter options.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportRowHeightToExcel(Syncfusion.Windows.Forms.Grid.GridModel,Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32)">
            <summary>
            Exports the row heights to Excel.
            </summary>
            <param name="grid">The grid model that needs to be exported.</param>
            <param name="sheet">The destination <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="gridRowIndex">The grid row index of the excel sheet.</param>
            <param name="excelRowIndex">The Excel sheet's row index to set the column width.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="grid"/> or <paramref name="sheet"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportColumnWidthsToExcel(Syncfusion.Windows.Forms.Grid.GridModel,Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32)">
            <summary>
            Exports the column widths to Excel.
            </summary>
            <param name="grid">The grid model that needs to be exported.</param>
            <param name="sheet">The destination <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="gridColumnIndex">The column index of the excel sheet.</param>
            <param name="excelColumnIndex">Indicates the column delta value. i.e If column headers are exporting it will be 1 other wise 0.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridModel,Syncfusion.XlsIO.IWorksheet,Syncfusion.GridExcelConverter.ConverterOptions)">
            <summary>
            Exports the specified range to excel from GridModel to Excel.
            </summary>
            <param name="range">The Range of type <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to be exported.</param>
            <param name="model">The grid model.</param>
            <param name="sheet">Excel sheet to which data is to be exported.</param>
            <param name="options">The converter options.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridModel,System.String,Syncfusion.GridExcelConverter.ConverterOptions)">
            <summary>
            Exports the specified range to excel from GridModel to Excel.
            </summary>
            <param name="range">Range of type <see cref="T:Syncfusion.Windows.Forms.Grid.GridRangeInfo"/> to be exported.</param>
            <param name="model">The grid model.</param>
            <param name="FileName">Name of the file to which the grid is to be exported.</param>
            <param name="options">The converter options.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.InternalExportRange(Syncfusion.Windows.Forms.Grid.GridRangeInfo,Syncfusion.Windows.Forms.Grid.GridModel,Syncfusion.XlsIO.IWorksheet,Syncfusion.GridExcelConverter.ConverterOptions)">
            <summary>
            Exports the grid range to the Excel sheet.
            </summary>
            <param name="range">The range which needs to be exported.</param>
            <param name="model">The GridModel that holds range.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="options">The converter options.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportCellToExcel(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the cell data from grid to Excel.
            </summary>
            <param name="range">Destination Excel range.</param>
            <param name="gridCell">The GridStyleInfo.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportChoiceListToExcel(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the combobox dropdown list items as DataValidation dropdown list. 
            </summary>
            <param name="style">The grid cell's style info.</param>
            <param name="range">The Excel sheet cell's range info.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="style"/> or <paramref name="range"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportColumnHeadersToExcel(Syncfusion.Windows.Forms.Grid.GridModel,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Exports the column headers.
            </summary>
            <param name="model">The GridModel.</param>
            <param name="sheet">The destination <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportRowHeadersToExcel(Syncfusion.Windows.Forms.Grid.GridModel,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Exports the row headers.
            </summary>
            <param name="model">The GridModel.</param>
            <param name="sheet">The destination  <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GridToExcel(Syncfusion.Windows.Forms.Grid.GridControl,System.String)">
            <summary>
            Exports grid into excel file.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/> to export.</param>
            <param name="fileName">The destination Excel sheet's file name.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GridToExcel(Syncfusion.Windows.Forms.Grid.GridControl,System.String,Syncfusion.GridExcelConverter.ConverterOptions)">
            <summary>
            Exports grid into excel file.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/> to export.</param>
            <param name="fileName">The destination Excel sheet's file name.</param>
            <param name="options">Converter options.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GridToExcel(Syncfusion.Windows.Forms.Grid.GridControl,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Exports grid into excel file.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/> to export.</param>
            <param name="sheet">The destination <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GridToExcel(Syncfusion.Windows.Forms.Grid.GridControl,Syncfusion.XlsIO.IWorksheet,Syncfusion.GridExcelConverter.ConverterOptions)">
            <summary>
            Exports grid into excel file.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridControl"/> to export.</param>
            <param name="sheet">The destination <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="options">The Converter options.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GridToExcel(Syncfusion.Windows.Forms.Grid.GridModel,System.String)">
            <summary>
            Exports grid into excel file.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> to export.</param>
            <param name="fileName">The destination Excel sheet's file name.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GridToExcel(Syncfusion.Windows.Forms.Grid.GridModel,System.String,Syncfusion.GridExcelConverter.ConverterOptions)">
            <summary>
            Exports grid into excel file.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> to export.</param>
            <param name="fileName">The destination Excel sheet's file name.</param>
            <param name="options">Converter options.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GridToExcel(Syncfusion.Windows.Forms.Grid.GridModel,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Exports grid into excel worksheet.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> to export.</param>
            <param name="sheet">The destination <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GridToExcel(Syncfusion.Windows.Forms.Grid.GridModel,Syncfusion.XlsIO.IWorksheet,Syncfusion.GridExcelConverter.ConverterOptions)">
            <summary>
            Exports grid into excel worksheet.
            </summary>
            <param name="grid">The <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/> to export.</param>
            <param name="sheet">The destination <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="options">Converter options.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GridCellToExcel(Syncfusion.Windows.Forms.Grid.GridModel,System.Int32,System.Int32,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the grid cell to excel cell.
            </summary>
            <param name="grid">Source grid.</param>
            <param name="iRow">The row index of the grid.</param>
            <param name="iColumn">The column index of the grid.</param>
            <param name="range">The destination <see cref="T:Syncfusion.XlsIO.IRange"/>.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GetGridCellStyle(System.Int32,System.Int32)">
            <summary>
            Gets the cell styles.
            </summary>
            <param name="row">The grid row index.</param>
            <param name="col">The grid column index.</param>
            <returns>Returns the grid style info for cell.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GetGridCellStyle(Syncfusion.Windows.Forms.Grid.GridModel,System.Int32,System.Int32)">
            <summary>
            Gets the cell styles.
            </summary>
            <param name="grid">The Grid model that hold cell styles.</param>
            <param name="row">The grid row index.</param>
            <param name="col">The grid column index.</param>
            <returns>Returns the grid style info for cell.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.AddCustomFunction(System.String,System.String,Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Adds the custom function in excel work book while exporting
            </summary>
            <param name="xlafile">file path of the user define function.</param>
            <param name="functionName">Function name of user define function</param>
            <param name="book">excel work book which is used for exporting</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.AddCustomFunction(System.String,System.String,System.String)">
            <summary>
            Adds the custom function in excel file while exporting
            </summary>
            <param name="xlafile">file path of the user define function.</param>
            <param name="functionName">Function name of user define function</param>
            <param name="excelfile">file name of excel book</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.MakeUpper(System.String)">
            <summary>
            Converts the string to upper case.
            </summary>
            <param name="strText">The string to convert/</param>
            <returns>The upper case string.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.SaveStrings(System.String@)">
            <summary>
            Stores the strings for sheet reference.
            </summary>
            <param name="text">The string that needs to be stored.</param>
            <returns>The collection of stored strings.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.SetStrings(System.String@,System.Collections.Hashtable)">
            <summary>
            Sets the stored string to text.(sheet reference).
            </summary>
            <param name="retValue">The strings which needs to be assigned from collection.</param>
            <param name="strings">The collection of stored strings.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExcelToGrid(System.String,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Imports the excel file to GridControl.
            </summary>
            <param name="strFileName">The name of the excel file to import.</param>
            <param name="grid">The destination <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="strFileName"/> or <paramref name="grid"/> is <c>null</c>.    
            </exception>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="strFileName"/>length is <c>0.</c>
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExcelToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Imports the data from excel worksheet into grid.
            </summary>
            <param name="sheet">The Excel Worksheet.</param>
            <param name="grid">The destination <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="grid"/> or <paramref name="sheet"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExcelToGrid(System.String,System.Int32[],Syncfusion.Windows.Forms.Grid.GridModel[])">
            <summary>
            Imports the excel workbook into array of grid models.
            </summary>
            <param name="strFileName">The name of the excel file to import.</param>
            <param name="arrIndexes">Worksheet's indexes to convert.</param>
            <param name="arrModels">Array of grid models to convert into.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="strFileName"/>,<paramref name="arrModels"/>,<paramref name="arrIndexes"/> is <c>null</c>.    
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="strFileName"/> length is <c>0</c>.
            If <paramref name="arrIndexes"/> length is less than <paramref name="arrModels"/> length.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExcelToGrid(System.String,Syncfusion.GridExcelConverter.IndexRange[],Syncfusion.Windows.Forms.Grid.GridModel[])">
            <summary>
            Imports the excel workbook into array of grid models.
            </summary>
            <param name="strFileName">The name of the excel file to import.</param>
            <param name="arrRanges">Array of worksheet ranges to convert.</param>
            <param name="arrModels">Array of GridModels to convert into.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="strFileName"/>,<paramref name="arrModels"/>,<paramref name="arrRanges"/> are <c>null</c>.   
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="strFileName"/> length is <c>0</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExcelToGrid(System.String)">
            <summary>
            Imports the excel file into array of grid models.
            </summary>
            <param name="strFileName">The name of the excel file to import.</param>
            <returns>Corresponding grid models.</returns>
            <exception cref="T:System.ArgumentNullException">
            if <paramref name="strFileName"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            if <paramref name="strFileName"/> length is <c>0</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExcelToGrid(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Imports the Excel workbook into array of grid models.
            </summary>
            <param name="book">Source workbook to convert.</param>
            <returns>Corresponding grid models.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ConvertExcelRangeToGrid(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Converts the Excel range to grid model.
            </summary>
            <param name="rangeToConvert">The <see cref="T:Syncfusion.XlsIO.IRange"/> to import.</param>
            <param name="grid">The destination <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="rangeToConvert"/> or <paramref name="grid"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ConvertExcelStyleToVirtualGridStyle(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange)">
            <summary>
            Converts the excel range to virtual grid.       
            </summary>
            <remarks>This method can be used in QueryCellInfo event to convert the Excel range to Grid cell as virtual mode.</remarks>
            <param name="cell">The destination grid cell.</param>
            <param name="sheet">The <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="rangeToConvert">The <see cref="T:Syncfusion.XlsIO.IRange"/>.</param>        
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="rangeToConvert"/> or <paramref name="cell"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExcelToVirtualGrid(Syncfusion.Windows.Forms.Grid.GridModel,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Imports the single sheet from excel to virtual grid.
            </summary>
            <param name="grid">The destination <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
            <param name="sheet">The source <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>        
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="grid"/> or <paramref name="sheet"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExcelToVirtualGrid(Syncfusion.XlsIO.IWorkbook)">
            <summary>
            Imports the entire workbook from excel to virtual grid.
            </summary>
            <param name="book">The book.</param>        
            <returns>Array of GridModel</returns>
            <exception cref="T:System.ArgumentNullException">
            if <paramref name="book"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExcelToVirtualGrid(System.String)">
            <summary>
            Imports the excel sheets from the specified Excel file.
            </summary>
            <param name="fileName">The Excel sheet location.</param>
            <returns>The GridModel collection.</returns>
            <exception cref="T:System.ArgumentNullException">
            if <paramref name="fileName"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            if <paramref name="fileName"/> length is <c>0</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExcelToVirtualGrid(System.String,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Imports the first Excel sheet alone from specified Excel file.
            </summary>
            <param name="fileName">The Excel file location.</param>
            <param name="gridModel">The GridModel to import the Excel sheet.</param>
            <exception cref="T:System.ArgumentNullException">
            if <paramref name="fileName"/> or  <paramref name="gridModel"/>is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            if <paramref name="fileName"/> length is <c>0</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GetNumberFormat(System.String)">
            <summary>
            Converts the excel format into grid supports number formats.
            </summary>
            <param name="format">The format.</param>
            <returns>The format</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportCellStyleToVirtualGrid(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Imports the grid cell style based on excel style for Virtual GridControl.
            </summary>
            <param name="range">The source Excel sheet range.</param>
            <param name="cell">The destination grid cell.</param>
             <param name="sheet">The Excel sheet.</param>
            <exception cref="T:System.ArgumentNullException">
            if any of the parameters such as <paramref name="range"/>,<paramref name="sheet"/>,<paramref name="cell"/> are <c>null</c>.       
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportCellStyleToGrid(Syncfusion.XlsIO.IStyle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Imports the excel style into GridControl.
            </summary>
            <param name="excelStyle">The source Excel sheet range.</param>
            <param name="cell">The destination grid cell.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.SaveCellInfoToExcelsheet(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Grid.GridModel,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Saves the changes made in grid to Excel sheet. This is mainly used for Virtual grid importing.
            This method can be used in SaveCellInfo event.
            </summary>
            <param name="sheet">The destination work sheet.</param>
            <param name="gridModel">The virtual grid model.</param>
            <param name="style">The source grid cell.</param>
            <exception cref="T:System.ArgumentNullException">
            if any of the parameters such as <paramref name="gridModel"/>,<paramref name="sheet"/>,<paramref name="style"/> are <c>null</c>.       
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExcelLikeFormula(Syncfusion.XlsIO.IWorkbook,Syncfusion.Windows.Forms.Grid.GridModel,System.String)">
            <summary>
            Gets the formula text for GridFormulaEngine with sheet names.
            </summary>
            <param name="workbook">the destination Excel workbook.</param>
            <param name="model">The Grid model</param>
            <param name="text">The formula text.</param>
            <returns>The excel sheet name replaced with grid identical like arguments.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportNumberFormatToGrid(Syncfusion.XlsIO.IStyle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Imports the number format from excel style into grid cell.
            </summary>
            <param name="excelStyle">The source Excel cell style.</param>
            <param name="cell">The destination cell.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="excelStyle"/>,<paramref name="cell"/> are <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportOrientationToGrid(Syncfusion.XlsIO.IStyle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Imports the orientation settings from excel style into grid cell.
            </summary>
            <param name="excelStyle">The source cell style.</param>
            <param name="cell">The destination grid cell.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="excelStyle"/>,<paramref name="cell"/> are <c>null</c>.
            </exception>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterControl.SkipMergeCellCheckOnSetBorders">
            <summary>
            After v6.1 ExcelToGrid Conversion will check for Merged cells when importing borders. 
            When there is no merged cells this can be set to true to avoid checking for MergeCells on 
            importing borders from excel cells.
            <para/>Default value is false.
            </summary>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GetMergeCellRange(Syncfusion.XlsIO.IRange,System.Int32@,System.Int32@)">
            <summary>
            Gets the merged cell range from Excel sheet range.
            </summary>
            <param name="range">The source Excel sheet range.</param>
            <param name="bottom">The bottom row index of the merged range.</param>
            <param name="right">The right column index of the merged range.</param>
            <returns>True if the source Excel range has merge cells otherwise false. </returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportBordersToGrid(Syncfusion.XlsIO.IStyle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Imports the excel style borders to Grid cells (for normal excel importing).
            </summary>
            <param name="excelStyle">The source Excel cell style.</param>
            <param name="cell">The destination cell.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="excelStyle"/>,<paramref name="cell"/> are <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ConvertExcelBorder(Syncfusion.XlsIO.IBorder)">
            <summary>
            Converts excel border into grid border.
            </summary>
            <param name="border">The border to convert.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GetGridBorderStyle(Syncfusion.XlsIO.ExcelLineStyle)">
            <summary>
            Converts ExcelLineStyle into GridBorderStyle.
            </summary>
            <param name="excelLineStyle">The Excel cell line style.</param>
            <returns>The border style for grid cell.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GetGridBorderWeight(Syncfusion.XlsIO.ExcelLineStyle)">
            <summary>
            Converts ExcelLineStyle into GridBorderWeight.
            </summary>
            <param name="excelLineStyle">The source Excel cell line style to convert.</param>
            <returns>The border weight for grid cell.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportBordersToVirtualGrid(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Sets grid cell borders based on excel style. This is specifically used for Virtual Grid.
            </summary>
            <param name="range">The source Excel cell style.</param>
            <param name="cell">The destination grid cell.</param>
            <param name="sheet">The source Excel work sheet.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="range"/>,<paramref name="cell"/> are <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportAlignment(Syncfusion.XlsIO.IStyle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Sets alignment of the GridStyleInfo.
            </summary>
            <param name="excelStyle">Excel style to get alignment block from.</param>
            <param name="cell">GridStyleInfo to set alignment block in.</param>        
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="excelStyle"/>,<paramref name="cell"/> are <c>null</c>.
            </exception>        
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GetGridHAlign(Syncfusion.XlsIO.ExcelHAlign)">
            <summary>
            Converts ExcelHAlign into GridHorizontalAlignment.
            </summary>
            <param name="align">The source Excel cell alignment to convert.</param>
            <returns>The horizontal alignment for grid cell.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GetGridVAlign(Syncfusion.XlsIO.ExcelVAlign)">
            <summary>
            Converts ExcelVAlign into GridVerticalAlignment.
            </summary>
            <param name="align">The source Excel cell alignment to convert.</param>
            <returns>The horizontal alignment for grid cell.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportFontToGrid(Syncfusion.XlsIO.IStyle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Imports the font for the cell based on ExcelRW style.
            </summary>
            <param name="excelStyle">ExcelRW style to get font setting from.</param>
            <param name="cell">Cell style to set font.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="excelStyle"/>,<paramref name="cell"/> are <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GetClosestNamedColor(System.Drawing.Color)">
            <summary>
            Gets the closest color. Used internally.
            </summary>
            <param name="c">The color to be parsed for nearest color.</param>
            <returns>The name of the nearest color.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportBrushToGrid(Syncfusion.XlsIO.IStyle,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Imports the brush from Excel cell to Grid cell.
            </summary>
            <param name="excelStyle">Excel style containing information about brush.</param>
            <param name="cell">Style info to set brush in.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="excelStyle"/>,<paramref name="cell"/> are <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.GetClosestGridPattern(Syncfusion.XlsIO.ExcelPattern)">
            <summary>
            Converts ExcelPattern into PatternStyle.
            </summary>
            <param name="pattern">The source ExcelPattern to convert.</param>
            <returns>The pattern style for grid cell.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">If pattern style is not available in Excel.</exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportRowHeightToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Imports the row height information from excel worksheet into grid.
            </summary>
            <param name="sheet">The source Excel sheet.</param>
            <param name="grid">The destination <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="grid"/>,<paramref name="sheet"/> are <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportColumnWidthToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Imports the column width information from excel worksheet into grid.
            </summary>
            <param name="sheet">The source Excel sheet.</param>
            <param name="grid">The destination <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="grid"/>,<paramref name="sheet"/> are <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportMergesToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Imports the merged ranges into grid.
            </summary>
            <param name="sheet">The source Excel sheet.</param>
            <param name="grid">The destination <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="grid"/>,<paramref name="sheet"/> are <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportFreezePanesToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Imports the freeze panes from excel worksheet into grid.
            </summary>
            <param name="sheet">The source Excel sheet.</param>
            <param name="grid">The destination <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>        
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportNamedRangesToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Copies the named range from excel worksheet into grid.
            </summary>
            <param name="sheet">The source Excel sheet.</param>
            <param name="grid">The destination <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>        
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportGridLinesToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Imports the grid line visibility to grid.
            </summary>
            <param name="worksheet">The source Excel sheet.</param>
            <param name="gridModel">The destination <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="gridModel"/>,<paramref name="worksheet"/> are <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportImagesToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Imports the images from Excel sheet.
            </summary>
            <param name="sheet">The source Excel sheet.</param>
            <param name="grid">The destination <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>        
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportComboxToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Grid.GridModel)">
            <summary>
            Imports the combobox from excel worksheet into grid.
            </summary>
            <param name="sheet">The source Excel sheet.</param>
            <param name="grid">The destination <see cref="T:Syncfusion.Windows.Forms.Grid.GridModel"/>.</param>        
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportHyperlinkToGrid(Syncfusion.XlsIO.IWorksheet,Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Imports the hyperlink to normal grid.
            </summary>
            <param name="sheet">The source Excel sheet.</param>
            <param name="cell">The destination grid cell.</param>     
            <param name="excelrange">The source Excel cell range.</param>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterControl.MessageStrings">
            <summary>
            Gets a string array that holds strings used with MessageBoxes that display error conditions.
            </summary>
            <example>Here is the code that initializes this string array so you can see what strings occupy
            which positions in the array.
            <code lang="C#">
            public string[] MessageStrings
            {
                get 
                {
                    if (messageStrings == null)
                    {
                        messageStrings = new string[4]
                        {
                            "No range is currently selected. Please select a range to export and try again. Exporting terminated", //0
                            "Exporting Error", //1
                            "Empty Range can't be exported. Please input a valid range to export. Exporting terminated", //2
                            "Exporting Error" //3
                        };
                    }
                    return messageStrings; 
                }
            }
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterControl.AutoFitColumns">
            <summary>
            Gets or sets a value Indicating whether converter should auto fit the columns.
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterControl.AutoFitRows">
            <summary>
             Gets or sets a value Indicating whether converter should auto fit the rows.
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterControl.CanExportRowHeight">
            <summary>
            Gets or sets a value indicating whether grid's row height has to be exported to Excel.
            <remarks>If you want to disable this row height, you can set False and assign your needed RowHeight in DefaultRowHeight property.</remarks>
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterControl.CanExportColumnWidth">
            <summary>
            Gets or sets a value indicating whether grid's column width has to be exported to Excel.
            <remarks>If you want to disable this column width, you can set False and assign your needed RowHeight in DefaultRowHeight property.</remarks>
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterControl.DefaultColumnWidth">
            <summary>
            Gets or sets the default column width in Excel sheet for all columns.
            <remarks>This is applicable when disabling CanExportColumnWidth and AutoFitColumns.</remarks> 
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterControl.DefaultRowHeight">
            <summary>
            Gets or sets the default row height in Excel sheet for all rows.
            <remarks>This is applicable when disabling CanExportRowHeight and AutoFitRows.</remarks>
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportHiddenColumnsMode">
            <summary>
            Gets or sets the mode for exporting the hidden columns with various options.
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportHiddenRowsMode">
            <summary>
            Gets or sets the mode for exporting the hidden columns with various options.
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterControl.ShowGridLines">
            <summary>
            Gets or sets a value indicating whether gridlines has to be shown in Excel sheet. 
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterControl.CanExportChoiceList">
            <summary>
            Gets or set a value indicating whether grid cell's combobox has to be exported as Excel sheet's DataValidation dropdown list. 
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExcelVersion">
            <summary>
            Gets or sets the excel sheet's default version.
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportStyles">
            <summary>
            Gets or sets a value indicating whether the  styles like fonts, borders, alignment, and so on has to be imported.
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridExcelConverterControl.ImportBorders">
            <summary>
            Gets or sets a value indicating whether the borders has to be imported.
            </summary>
        </member>
        <member name="T:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportHiddenColumns">
            <summary>
             Defines the constants that specify the options for hidden columns exporting.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportHiddenColumns.DoNotExport">
            <summary>
            The hidden columns in the grid will not be exported to Excel sheet.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportHiddenColumns.ExportAndHide">
            <summary>
            The hidden columns in the grid will be exported in hidden state.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportHiddenColumns.ExportAndShow">
            <summary>
            The hidden columns will be exported in shown state.
            </summary>
        </member>
        <member name="T:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportHiddenRows">
            <summary>
             Defines the constants that specify the options for hidden rows exporting.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportHiddenRows.DoNotExport">
            <summary>
            The hidden rows in the grid will not be exported.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportHiddenRows.ExportAndHide">
            <summary>
            The hidden rows in the grid will be exported in hidden state.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridExcelConverterControl.ExportHiddenRows.ExportAndShow">
            <summary>
            The hidden rows will be exported in shown state.
            </summary>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.NamespaceDoc">
            <summary>
            The Syncfusion.GroupingExcelConverter contains classes that provides the functionality of exporting the contents of the Essential GridGroupingControl to an Excel sheet.
            </summary>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.ExportNestedTableEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.QueryExportNestedTable"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.ExportNestedTableEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.Grouping.GridNestedTable,Syncfusion.Grouping.Record,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.GroupingGridExcelConverter.ExportNestedTableEventArgs"/> class.
            </summary>
            <param name="gridNestedTable">The <see cref="T:Syncfusion.Windows.Forms.Grid.Grouping.GridNestedTable"/>.</param>
            <param name="gridParentRecord">The parent record of the <see cref="T:Syncfusion.Windows.Forms.Grid.Grouping.GridNestedTable"/>. </param>
            <param name="excelExportingOptions">The <see cref="T:Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions"/> for the nested table exporting.</param>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.ExportNestedTableEventArgs.NestedTable">
            <summary>
            Gets the nested table of the parent record.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.ExportNestedTableEventArgs.ParentRecord">
            <summary>
            Gets the parent record of this nested table.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.ExportNestedTableEventArgs.ExportingOptions">
            <summary>
            Gets the exporting options for the Nested table.
            </summary>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.QueryExportRowRangeEventArgs">
             <summary>
            Provides data for the <see cref="E:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.QueryExportRowRange"/> event.
             </summary>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.QueryExportRowRangeEventArgs.#ctor(Syncfusion.Grouping.Element,Syncfusion.XlsIO.IRange)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.GroupingGridExcelConverter.QueryExportRowRangeEventArgs"/> class.
            </summary>
            <param name="tableElement">The <see cref="T:Syncfusion.Grouping.Element"/>.</param>
            <param name="range">The destination <see cref="T:Syncfusion.XlsIO.IRange"/>.</param>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.QueryExportRowRangeEventArgs.Element">
            <summary>
            Gets the current element.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.QueryExportRowRangeEventArgs.ExcelRange">
            <summary>
            Gets the excel range for current element. 
            </summary>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.QueryExportCellRangeEventArgs">
            <summary>
            Provides data for the <see cref="E:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.QueryExportCellRange"/> event. 
            </summary>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.QueryExportCellRangeEventArgs.#ctor(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.GroupingGridExcelConverter.QueryExportCellRangeEventArgs"/> class.
            </summary>
            <param name="style">The grid cell's <see cref="T:Syncfusion.Windows.Forms.Grid.GridStyleInfo"/>.</param>
            <param name="range"></param>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.QueryExportCellRangeEventArgs.GridCell">
            <summary>
            Gets the grid cell.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.QueryExportCellRangeEventArgs.ExcelCell">
            <summary>
            Gets the Excel cell.
            </summary>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions">
            <summary>
            Provides excel exporting options such as CaptionSummary, Excluding the columns while exporting the grid and nested table.
            </summary>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions.Clone">
            <summary>
            Creates a shallow copy of the all members.
            </summary>
            <returns>Clones class.</returns>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions.ExcludeColumns">
            <summary>
            Gets or sets the columns which has to be excluded for exporting. 
            </summary>
            <example> 
            This example shows how to use <see cref="P:Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions.ExcludeColumns"/> property.
            <code lang="C#">       
            GridGroupingExcelConverterControl converter = new GridGroupingExcelConverterControl();
            ExcelExportingOptions excelExportingOptions = new ExcelExportingOptions();    
            <![CDATA[List <string> excludeColumns = new List<string>();]]>
            excludeColumns.Add("Column1");
            excludeColumns.Add("Column2");
            excelExportingOptions.ExcludeColumns = excludeColumns;
            converter.ExportToExcel(this.gridGroupingControl1, "Sample.xlsx", excelExportingOptions);
            </code>
            <code lang="VB">
            Dim converter As New GridGroupingExcelConverterControl()
            Dim excelExportingOptions As New ExcelExportingOptions()
            Dim excludeColumns As New List(Of String)()
            excludeColumns.Add("Column1")
            excludeColumns.Add("Column2")
            excelExportingOptions.ExcludeColumns = excludeColumns
            converter.ExportToExcel(Me.gridGroupingControl1, "Sample.xlsx", excelExportingOptions)
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions.ExportCaptionSummary">
            <summary>
            Gets or sets whether caption summary has to be exported
            </summary>        
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions.ExportTableSummary">
            <summary>
            Gets or sets whether table summary has to be exported.
            </summary>        
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions.ExportRecordPreviewRow">
            <summary>
            Gets or sets whether record preview rows has to be exported. 
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions.ExportGroupPreviewRow">
            <summary>
            Gets or sets whether group preview row has to be exported.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions.ExportNestedTableIndent">
            <summary>
            Gets or sets nested table has to be exported with indents.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions.ExportGroupSummary">
            <summary>
            Gets or sets whether group summary has to be exported.
            </summary>
        </member>
        <member name="T:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase">
            <summary>
            Implements the basic exporting functionality common to <see cref="T:Syncfusion.Windows.Forms.Grid.Grouping.GridGroupingControl"/>. 
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.DEF_RIGHT_ANGLE">
            <summary>
            Right angle value.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.DEF_MAXIMUM_ANGLE">
            <summary>
            Maximum possible angle value.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.DEF_MINIMUM_SUPPORTED_ANGLE">
            <summary>
            Angle that corresponds to 90 rotation value in the XlsIO.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.CURRENCY_NUMBER_FORMAT">
            <summary>
            Default currency number format index
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.DEFAULT_NUMBER_FORMAT">
            <summary>
            Default number format in Grid cell
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.DEFAULT_EXCEL_NUMBER_FORMAT">
            <summary>
            Number format index in the MS Excel.
            </summary>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.CreateEngine">
            <summary>
            Creates excel engine.
            </summary>
            <returns>Newly created ExcelEngine.</returns>
            <remarks>
            The caller of this method is responsible for calling
            Dispose on the created ExcelEngine after all workbooks
            have been closed and the caller is finished with the engine.
            </remarks>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportCellValue(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32)">
            <summary>
            Exports the cell value to Excel sheet.
            </summary>
            <param name="style">The grid cell's style info.</param>
            <param name="sheet">The Excel sheet cell's style info.</param>
            <param name="excelRowIndex">The row index of the particular data.</param>
            <param name="columnIndex">the column index of the particular range.</param>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportStyles(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the cellstyles such as fonts, backcolors, alignments to Excel sheet.
            </summary>
            <param name="style">The grid cell's style info.</param>
            <param name="range">The Excel sheet cell's style info.</param>
            <exception cref="T:System.ArgumentNullException">
            if <paramref name="style"/> or <paramref name="range"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportFormula(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the formula to Excel sheet. 
            </summary>
            <param name="style">The grid cell's style info.</param>
            <param name="range">The Excel sheet cell's style info.</param>
            <exception cref="T:System.ArgumentNullException">
            if <paramref name="style"/> or <paramref name="range"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportHyperLink(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the grid hyperlink cells to Excel sheet cell. 
            </summary>
            <param name="style">The grid cell's style info.</param>
            <param name="range">The Excel sheet cell's style info.</param>
            <exception cref="T:System.ArgumentNullException">
            if <paramref name="style"/> or <paramref name="range"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportAlignment(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the grid cell alignment. 
            </summary>
            <param name="style">The grid cell's style info.</param>
            <param name="range">The Excel sheet cell's style info.</param>
            <exception cref="T:System.ArgumentNullException">  
            if <paramref name="style"/> or <paramref name="range"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportBorderStyles(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the border styles to excel.
            </summary>
            <param name="gridCell">The cell style.</param>
            <param name="range">Destination excel sheet range.</param>
            <exception cref="T:System.ArgumentNullException"> 
            if <paramref name="gridCell"/> or <paramref name="range"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportBackcolor(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Used to export the cell's backcolor.
            </summary>
            <param name="style">The cell style.</param>
            <param name="range">Destination excel sheet range.</param>
            <exception cref="T:System.ArgumentNullException">
            if <paramref name="style"/> or <paramref name="range"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportBorderStyle(Syncfusion.Windows.Forms.Grid.GridBorder,Syncfusion.XlsIO.IBorder)">
            <summary>
            Exports the border settings from grid border into excel sheet border.
            </summary>
            <param name="cellBorder">Grid border to copy.</param>
            <param name="range">Destination excel border.</param>
            <exception cref="T:System.ArgumentNullException"> 
            if <paramref name="cellBorder"/> or <paramref name="range"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.GetExcelLineStyle(Syncfusion.Windows.Forms.Grid.GridBorder)">
            <summary>
            Converts GridBorder into ExcelLineStyle. 
            </summary>
            <remarks>
            This method also considers GridBorderWeight.
            </remarks>
            <param name="gridBorder">GridBorder to convert.</param>
            <returns>Corresponding ExcelLineStyle.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.GetExcelLineStyle(Syncfusion.Windows.Forms.Grid.GridBorderStyle)">
            <summary>
            Converts GridBorderStyle into ExcelLineStyle.
            </summary>
            <param name="gridLineStyle">GridBorderStyle to convert.</param>
            <returns>Corresponding ExcelLineStyle.</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportNumberFormat(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the number format to Excel sheet. 
            </summary>
            <param name="style">The cell style.</param>
            <param name="range">Destination excel sheet range.</param>
            <exception cref="T:System.ArgumentNullException"> 
            if <paramref name="style"/> or <paramref name="range"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportFontStyles(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports font styles to Excel sheet. 
            </summary>
            <param name="style">The cell style.</param>
            <param name="range">The destination excel sheet <see cref="T:Syncfusion.XlsIO.IRange"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            if <paramref name="style"/> or <paramref name="range"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportImage(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the grid cell images to excel sheet cell.
            </summary>
            <param name="range">The excel cell.</param>
            <param name="gridCell">The grid cell.</param>
            <exception cref="T:System.ArgumentNullException">
            if <paramref name="gridCell"/> or <paramref name="range"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ByteArrayToImage(System.Byte[])">
            <summary>
            Converts byte array to image
            </summary>
            <param name="byteArray">Byte array</param>
            <returns>Converted image from byte array</returns>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.AddPictureToExcelCell(Syncfusion.XlsIO.IRange,System.Drawing.Image)">
            <summary>
            Adds a picture to the given range's Worksheet
            </summary>
            <param name="range">The destination <see cref="T:Syncfusion.XlsIO.IRange"/>.</param>
            <param name="bmp">The image for exporting.</param>
            <exception cref="T:System.ArgumentNullException">
            if <paramref name="range"/> or <paramref name="bmp"/> is <c>null</c>.
            </exception>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportStyle">
            <summary>
            Gets or sets a value indicating whether styles has to be exported. For example, styles like borders,colors,..and so on.
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportBorders">
            <summary>
            Gets or sets a value indicating whether borders has to be exported. 
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportMode">
            <summary>
            Gets or sets the exporting mode of grid data. 
            </summary>
        </member>
        <member name="T:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportingMode">
            <summary>
            Defines the constants that specify the data format for exporting. 
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportingMode.Text">
            <summary>
            Exports the FormattedText alone to Excel.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.GridGroupingExcelConverterBase.ExportingMode.Value">
            <summary>
            Exports the Format into Excel by setting Excel number format.
            </summary>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl">
            <summary>
            Implements the exporting functionalities of <see cref="T:Syncfusion.Windows.Forms.Grid.Grouping.GridGroupingControl"/> to Excel.
            </summary>
            <remarks>The GridGroupingExcelConverterControl class provides support for exporting the GridGroupingControl with the efficient way. The grid will be exported with various options and optimized way.</remarks>
        </member>
        <member name="F:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.currentLevel">
            <summary>
            Used to store the current level of element
            </summary>
        </member>
        <member name="F:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.expandedGroupStatus">
            <summary>
            Used to store the expanded group status
            </summary>
        </member>
        <member name="F:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.numberFormatCollection">
            <summary>
            Stores the number format collection when EnableOptimization is true
            </summary>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportToExcel(Syncfusion.Windows.Forms.Grid.Grouping.GridGroupingControl,Syncfusion.XlsIO.IWorksheet,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Exports the GridGroupingControl to Excel with various exporting options.
            </summary>
            <param name="grid">The GridGroupingControl that needs to be exported.</param>
            <param name="sheet">The destination <see cref="T:Syncfusion.XlsIO.IWorksheet"/>.</param>
            <param name="exportingOptions">The <see cref="T:Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="grid"/>,<paramref name="sheet"/> are <c>null</c>.       
            </exception>     
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportToExcel(Syncfusion.Windows.Forms.Grid.Grouping.GridGroupingControl,System.String,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Exports the GridGroupingControl to Excel which reads from specified file name with various exporting option.
            </summary>
            <param name="grid">The GridGroupingControl that needs to be exported.</param>
            <param name="excelFileName">The Excel file name.</param>
            <param name="exportingOptions">The ExcelExportingOptions</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="grid"/> or <paramref name="excelFileName"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="excelFileName"/> length is <c>equal to 0.</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportRecordRow(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptorCollection,System.Int32@,System.Int32,Syncfusion.XlsIO.IWorksheet,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Exports the records to Excel sheet.
            </summary>
            <param name="element">The table element to export.</param>
            <param name="sheet">The destination worksheet.</param>
            <param name="excelRowIndex">The target row index.</param>  
            <param name="tableDescriptor">The TableDescriptor of the ParentTable.</param>
            <param name="exportingOptions">Excel exporting options for customization.</param>
            <param name="visibleColumns">The visible columns collections of the table.</param>
            <param name="excelStartColumnIndex">The start column for exporting the cells. This is mainly used for hierarchy export.</param>
            <returns>Index of the next element to be exported in Excel sheet.</returns>  
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="element"/>,<paramref name="sheet"/>
            ,<paramref name="excelRowIndex"/>,<paramref name="tableDescriptor"/>,<paramref name="visibleColumns"/>,<paramref name="excelStartColumnIndex"/> are <c>null</c>.       
            </exception>   
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportCoveredRanges(Syncfusion.Windows.Forms.Grid.Grouping.GridGroupingControl,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Exports the style and data of merged cells from the grid.
            </summary>
            <param name="grid">GridGroupingControl</param>
            <param name="sheet">IWorksheet to import</param>        
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="grid"/> or <paramref name="sheet"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportColumnHeaderRow(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptorCollection,System.Int32@,System.Int32,Syncfusion.XlsIO.IWorksheet,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Exports the column headers to Excel sheet.
            </summary>
            <param name="element">The element of the table.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="excelRowIndex">Destination row index.</param>        
            <param name="tableDescriptor">The TableDescriptor of the ParentTable.</param>
            <param name="exportingOptions">Excel exporting options for some customization.</param>
            <param name="visibleColumns">Visible columns collections of the table.</param>
            <param name="excelStartColumnIndex">The start column for exporting the cells. This is mainly used for hierarchy export.</param>
            <returns>Index to the row after last exported element.</returns>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="element"/>,<paramref name="sheet"/>
            ,<paramref name="excelRowIndex"/>,<paramref name="tableDescriptor"/>,<paramref name="visibleColumns"/>,<paramref name="excelStartColumnIndex"/> are <c>null</c>.       
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportColumnWidth(Syncfusion.Windows.Forms.Grid.Grouping.GridGroupingControl,Syncfusion.XlsIO.IWorksheet,Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Exports the columns widths to Excel sheet columns.
            </summary>
            <param name="grid">The GridGroupingControl that needs to be exported</param>
            <param name="sheet">Destination worksheet</param>
            <param name="tableDescriptor">The TableDescriptor of the ParentTable.</param>
            <param name="exportingOptions">Excel exporting options for some customization.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="grid"/>,<paramref name="sheet"/>
            <paramref name="tableDescriptor"/>,<paramref name="exportingOptions"/> are <c>null</c>.       
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportTable(System.Collections.IList,Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,System.Int32@,System.Int32,System.Boolean,Syncfusion.XlsIO.IWorksheet,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Exports the grid table to Excel sheet.
            </summary>
            <param name="tableElements">The elements belongs to table.</param>
            <param name="sheet">The destination worksheet.</param>
            <param name="excelRowIndex">The target row index.</param>
            <param name="tableDescriptor">The TableDescriptor of the ParentTable.</param>
            <param name="exportingOptions">Excel exporting options for some customization.</param>
            <param name="excelStartColumnIndex">The start column for exporting the cells. This is mainly used for hierarchy export.</param>
            <param name="isNestedTable">Determines whether this is an nested table.</param>
            <returns>Index of the row. This row index represents the last row index</returns>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="tableElements"/>,<paramref name="sheet"/>
            ,<paramref name="excelRowIndex"/>,<paramref name="tableDescriptor"/>,<paramref name="exportingOptions"/>,<paramref name="excelStartColumnIndex"/> are <c>null</c>.       
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportStackedHeaderRow(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptorCollection,System.Int32@,Syncfusion.XlsIO.IWorksheet,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Exports the stacked headers to Excel sheet.
            </summary>
            <param name="element">The element to export.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="tableDescriptor">The TableDescriptor of the ParentTable.</param>
            <param name="excelRowIndex">The target row index.</param> 
            <param name="exportingOptions">Excel exporting options for some customization.</param>
            <param name="visibleColumns">Visible columns collections of the table.</param>
            <returns>Returns True if StackedHeader row is exported successfully otherwise returns False.</returns>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="element"/>,<paramref name="sheet"/>
            ,<paramref name="excelRowIndex"/>,<paramref name="tableDescriptor"/>,<paramref name="exportingOptions"/>,<paramref name="visibleColumns"/> are <c>null</c>.       
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportGroupHeaderRow(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptorCollection,System.Int32@,System.Int32,Syncfusion.XlsIO.IWorksheet,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Exports the Group header footer row to Excel sheet.
            </summary>
            <param name="element">The element to export.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="excelRowIndex">The target row index.</param>
            <param name="tableDescriptor">The TableDescriptor of the ParentTable.</param>
            <param name="visibleColumns">Visible columns collections of the table.</param>
            /// <param name="exportingOptions">Excel exporting options for some customization.</param>
            <param name="excelStartColumnIndex">The start column for exporting the cells. This is mainly used for hierarchy export.</param>        
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="element"/>,<paramref name="sheet"/>
            ,<paramref name="excelRowIndex"/>,<paramref name="tableDescriptor"/> are <c>null</c>.       
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportGroupFooterRow(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptorCollection,System.Int32@,System.Int32,Syncfusion.XlsIO.IWorksheet,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Exports the Group footer row to Excel sheet.
            </summary>
            <param name="element">The element to export.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="excelRowIndex">The target excel row index.</param>
            <param name="tableDescriptor">The TableDescriptor of the ParentTable.</param>
            <param name="visibleColumns">Visible columns collections of the table.</param>
            <param name="excelStartColumnIndex">The start column for exporting the cells. This is mainly used for hierarchy export.</param>       
            /// <param name="exportingOptions">Excel exporting options for some customization.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="element"/>,<paramref name="sheet"/>
            ,<paramref name="excelRowIndex"/>,<paramref name="tableDescriptor"/> are <c>null</c>.       
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportGroupPreviewRow(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptorCollection,System.Int32@,System.Int32,Syncfusion.XlsIO.IWorksheet,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Exports the GroupPreviewRow to Excel sheet.
            </summary>
            <param name="element">The element to export.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="excelRowIndex">The target row index.</param>
            <param name="tableDescriptor">The TableDescriptor of the ParentTable.</param>
            <param name="visibleColumns">Visible columns collections of the table.</param>
            <param name="excelStartColumnIndex">The start column for exporting the cells. This is mainly used for hierarchy export.</param>        
            /// <param name="exportingOptions">Excel exporting options for some customization.</param>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="element"/>,<paramref name="sheet"/>
            ,<paramref name="excelRowIndex"/>,<paramref name="tableDescriptor"/> are <c>null</c>.       
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportRecordPreviewRow(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptorCollection,System.Int32@,System.Int32,Syncfusion.XlsIO.IWorksheet,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Exports the RecordPreview row to Excel sheet.
            </summary>
            <param name="element">The element to export.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="tableDescriptor">The TableDescriptor of the ParentTable.</param>
            <param name="excelRowIndex">The target row index.</param>
            <param name="visibleColumns">Visible columns collections of the table.</param>
            <param name="exportingOptions">Excel exporting options for some customization.</param>
            <param name="excelStartColumnIndex">The start column for exporting the cells. This is mainly used for hierarchy export.</param>
            <returns>Returns True if RecordPreview row is exported successfully otherwise returns False.</returns>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="element"/>,<paramref name="sheet"/>
            ,<paramref name="exportingOptions"/>,<paramref name="excelRowIndex"/>,<paramref name="tableDescriptor"/>,<paramref name="visibleColumns"/>,<paramref name="excelStartColumnIndex"/> are <c>null</c>.       
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportSummaryRow(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptorCollection,System.Int32@,System.Int32,Syncfusion.XlsIO.IWorksheet,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Exports the summary rows to Excel sheet.
            </summary>
            <param name="element">The element to export.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="excelRowIndex">The current row index.</param>
            <param name="tableDescriptor">The TableDescriptor of the ParentTable.</param>
            <param name="exportingOptions">Excel exporting options for some customization.</param>
            <param name="visibleColumns">Visible columns collections of the table.</param>
            <param name="excelStartColumnIndex">The start column for exporting the cells. This is mainly used for hierarchy export.</param>
            <returns>Returns True if Summary row is exported successfully otherwise returns False.</returns>
            <exception cref="T:System.ArgumentNullException">
            If any of the parameters such as <paramref name="element"/>,<paramref name="sheet"/>
            ,<paramref name="tableDescriptor"/>,<paramref name="exportingOptions"/>,<paramref name="excelStartColumnIndex"/> are <c>null</c>.       
            </exception>
            <exception cref="T:System.ArgumentException"> 
            If <paramref name="excelRowIndex"/> is <c>less than or equal to 0.</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportSummaryCell(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptor,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the summary cell to Excel sheet.
            </summary>
            <param name="element">The table element associated with Record cell.</param>
            <param name="visibleColumn">The corresponding visible column descriptor.</param>
            <param name="excelRange">The destination worksheet range.</param>    
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="element"/>, <paramref name="visibleColumn"/> or <paramref name="excelRange"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportCellStyle(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptor,Syncfusion.Windows.Forms.Grid.GridStyleInfo@,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the cell styles to Excel sheet.
            </summary>
            <param name="element">The table element associated with Record cell.</param>
            <param name="visibleColumn">The corresponding visible column descriptor.</param>
            <param name="gridCellStyle">The source grid cell.</param>
            <param name="excelRange">The destination worksheet range.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportStackedHeaderCell(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptor,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the stacked header cell to Excel sheet.
            </summary>
            <param name="element">The table element associated with Record cell.</param>
            <param name="visibleColumn">The corresponding visible column descriptor.</param>
            <param name="excelRange">The destination worksheet range.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="element"/>, <paramref name="visibleColumn"/> or <paramref name="excelRange"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportRecordCell(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptor,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the record cell to Excel sheet.
            </summary>
            <param name="element">The table element associated with Record cell.</param>
            <param name="visibleColumn">The corresponding visible column descriptor.</param>
            <param name="excelRange">The destination worksheet range.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="element"/>, <paramref name="visibleColumn"/> or <paramref name="excelRange"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.GetCellValue(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptor)">
            <summary>
            Gets the cell value based on display member.
            </summary>
            <param name="element">The table element associated with Record cell.</param>
            <param name="visibleColumn">The corresponding visible column descriptor.</param>
            <returns>retuns the cell value</returns>
            /// <exception cref="T:System.ArgumentNullException">
            If <paramref name="element"/>, <paramref name="visibleColumn"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportGridLineBorder(Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Exports the border style if it is assigned using TableOptions.GridLineBorder property.
            </summary>
            <param name="tableDescriptor">The parent table descriptor of the element.</param>
            <param name="cellStyle">The grid cell style info.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportPreviewCell(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the preview cell such as RecordPreviewRow,GroupPreviewRow, GroupHeader, GroupFooter cell to Excel sheet cell.
            </summary>
            <param name="element">The table element associated with Record cell.</param>
            <param name="cellStyle">The grid cell style.</param>
            <param name="excelRange">The destination worksheet range.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="element"/>, <paramref name="cellStyle"/> or <paramref name="excelRange"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportCaptionSummaryCell(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptor,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the caption summary cell to Excel sheet cell.
            </summary>
            <param name="element">The table element associated with Record cell.</param>
            <param name="visibleColumn">The corresponding visible column descriptor.</param>
            <param name="excelRange">The destination worksheet range.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="element"/>, <paramref name="visibleColumn"/> or <paramref name="excelRange"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportColumnHeaderCell(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptor,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the column header cell to Excel sheet cell.
            </summary>
            <param name="element">The table element associated with Record cell.</param>
            <param name="visibleColumn">The corresponding visible column descriptor.</param>
            <param name="excelRange">The destination worksheet range.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="element"/>, <paramref name="visibleColumn"/> or <paramref name="excelRange"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportNestedTables(Syncfusion.Grouping.Record,System.Int32@,System.Int32,Syncfusion.XlsIO.IWorksheet,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Exports the nested table's elements to Excel sheet.
            </summary>
            <param name="record">The parent record that hold the nested tables.</param>        
            <param name="sheet">Destination worksheet.</param>
            <param name="excelRowIndex">Destination row index.</param>
            <param name="exportingOptions">Excel exporting options for some customization.</param>
            <param name="excelStartColumnIndex">The start column for exporting the cells(indent cell). This is mainly used for hierarchy export.</param>
            <returns>Index to the row after last exported element.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="record"/> or <paramref name="exportingOptions"/> is <c>null</c>.     
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="excelRowIndex"/> or <paramref name="excelStartColumnIndex"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportCaptionRow(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptorCollection,System.Int32@,System.Int32,System.Collections.Stack,Syncfusion.XlsIO.IWorksheet,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Exports the caption row to excel sheet.
            </summary>
            <param name="element">The element of the table.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="excelRowIndex">Destination row index.</param>
            <param name="groupStartIndexes">Stack indices for setting the grouping.</param>
            <param name="tableDescriptor">The TableDescriptor of the ParentTable.</param>
            <param name="exportingOptions">Excel exporting options for some customization.</param>
            <param name="visibleColumns">Visible columns collections.</param>
            <param name="excelStartColumnIndex">The start column for exporting the cells. This is mainly used for hierarchy export.</param>
            <returns>Returns True if Caption row is exported successfully otherwise returns False.</returns>
            <exception cref="T:System.ArgumentNullException">If any of the parameters passed with null.</exception>
            <exception cref="T:System.ArgumentException">If row index is less or equal to 0.</exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportCaptionSummaryRow(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,Syncfusion.Windows.Forms.Grid.Grouping.GridVisibleColumnDescriptorCollection,System.Int32,System.Int32,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Exports the caption summaries to Excel sheet.
            </summary>
            <param name="element">The element of the table.</param>
            <param name="sheet">The destination worksheet.</param>
            <param name="tableDescriptor">The TableDescriptor of the ParentTable.</param>
            <param name="excelRowIndex">Destination row index.</param>
            <param name="excelStartColumnIndex">Excel start column index. i.e. from which column cell has to be exported in Excel sheet.</param>
            <param name="visibleColumns">Visible columns collections of the table.</param>
            <exception cref="T:System.ArgumentNullException">
            if any of the parameters such as <paramref name="element"/>,<paramref name="sheet"/>,<paramref name="tableDescriptor"/> are <c>null</c>.       
            </exception>        
            <exception cref="T:System.ArgumentException">
            if <paramref name="excelRowIndex"/> is <c>less than or equal to 0.</c>.       
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.GetGroupCaptionText(Syncfusion.Grouping.Group)">
            <summary>
            Retrieves caption text for group.
            </summary>
            <param name="group">Group to get caption text from.</param>
            <returns>Caption text.</returns>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.GetGroupCaptionDisplayText(Syncfusion.Grouping.Group,System.String)">
            <summary>
            Gets the caption text for a group.
            </summary>
            <param name="group">The group to get caption text for.</param>
            <param name="format">Caption format.</param>
            <returns>Caption text for the group.</returns>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportGroupingOutline(Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,System.Int32,System.Int32,Syncfusion.XlsIO.IWorksheet,System.Collections.Stack,Syncfusion.GroupingGridExcelConverter.ExcelExportingOptions)">
            <summary>
            Exports the grouping outline as it is in GridGroupingControl. 
            </summary>
            <param name="tableDescriptor">The table descriptor which has the table.</param>
            <param name="groupLevel">The element group level. It should be Zero if it is last group in the Grid.</param>
            <param name="groupStartIndexes">The stack which holds the row index which is the start index of the group.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="excelRowIndex">The Excel row index.</param>        
            <param name="exportingOptions">The ExcelExportingOptions for customization.</param>
            <exception cref="T:System.ArgumentNullException">
            if any of the parameters such as <paramref name="groupStartIndexes"/>,<paramref name="excelRowIndex"/>,<paramref name="exportingOptions"/> are <c>null</c>.       
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.RaiseExportNestedTable(Syncfusion.GroupingGridExcelConverter.ExportNestedTableEventArgs)">
            <summary>
            Used to raise the ExportNestedTableEvent.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.GroupingGridExcelConverter.ExportNestedTableEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.OnExportNestedTable(Syncfusion.GroupingGridExcelConverter.ExportNestedTableEventArgs)">
            <summary>
            Used to trigger the ExportNestedTableEvent.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.GroupingGridExcelConverter.ExportNestedTableEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.RaiseExportRowRange(Syncfusion.GroupingGridExcelConverter.QueryExportRowRangeEventArgs)">
            <summary>
            Used to raise the ExportNestedTableEvent.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.GroupingGridExcelConverter.QueryExportRowRangeEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.OnExportRowRange(Syncfusion.GroupingGridExcelConverter.QueryExportRowRangeEventArgs)">
            <summary>
            Used to trigger the ExportNestedTableEvent.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.GroupingGridExcelConverter.QueryExportRowRangeEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.RaiseQueryExportCellRange(Syncfusion.GroupingGridExcelConverter.QueryExportCellRangeEventArgs)">
            <summary>
            Used to raise the ExportNestedTableEvent.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.GroupingGridExcelConverter.QueryExportCellRangeEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.OnQueryExportCellRange(Syncfusion.GroupingGridExcelConverter.QueryExportCellRangeEventArgs)">
            <summary>
            Used to trigger the ExportNestedTableEvent.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.GroupingGridExcelConverter.QueryExportCellRangeEventArgs"/>.</param>
        </member>
        <member name="E:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.QueryExportNestedTable">
            <summary>
            Occurs whenever nested table is exported.
            </summary>
        </member>
        <member name="E:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.QueryExportRowRange">
            <summary>
            Occurs whenever row element is exported.
            </summary>
        </member>
        <member name="E:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.QueryExportCellRange">
            <summary>
            Occurs whenever cell range is exported.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.EnableOptimization">
            <summary>
            Exports the data without creating style for grid cell. The data will be get from table engine with column number format.
            <remarks>
            If this is true, Border and styles will not be exported and cell data will be taken from record directly instead of getting it from cell style.
            </remarks>
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ShowGridLines">
            <summary>
            Gets or sets a value indicating whether gridlines has to be shown in excel sheet. 
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.AllowGroupOutlining">
            <summary>
            Gets or sets a value indicating whether Grouping outlining has to be exported
            </summary>        
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.AllowNestedTableOutling">
            <summary>
            Gets or sets a value indicating whether nested table outlining has to be exported.
            </summary>        
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.CanExportRowHeight">
            <summary>
            Gets or sets a value indicating whether grid's rowheight has to be exported to Excel.
            If you want to disable this rowheight, you can set False and assign your needed RowHeight in DefaultRowHeight property.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.DefaultRowHeight">
            <summary>
            Gets or sets the default row height in Excel sheet for all rows.
            This is applicable when disabling CanExportRowHeight
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.CanExportColumnWidth">
            <summary>
            Gets or sets a value indicating whether grid's column width has to be exported to Excel.
            If you want to disable this column width, you can set False and assign your needed RowHeight in DefaultRowHeight property.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.DefaultColumnWidth">
            <summary>
            Gets or sets the default column width in Excel sheet for all columns.
            This is applicable when disabling CanExportColumnWidth
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ApplyExcelFilter">
            <summary>
            Gets or sets a value indicating whether Excel filter has to be applied for Excel columns. 
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExcelVersion">
            <summary>
            Gets or sets the Excel engine version.
            </summary>     
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportNestedTableCaption">
            <summary>
            Gets or sets a value indicating whether nested table's caption and outlining of inner tables has to be exported.
            </summary>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.ExportNestedTableEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.QueryExportNestedTable"/> event.  
            </summary>
            <param name="sender">The sender contains the <see cref="T:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl"/>.</param>
            <param name="e">The <see cref="T:Syncfusion.GroupingGridExcelConverter.ExportNestedTableEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.QueryExportRowRangeEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.QueryExportRowRange"/> event.  
            </summary>
            <param name="sender">The sender contains the <see cref="T:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl"/>.</param>
            <param name="e">The <see cref="T:Syncfusion.GroupingGridExcelConverter.QueryExportRowRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.QueryExportCellRangeEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl.QueryExportCellRange"/> event.  
            </summary>
            <param name="sender">The sender contains the <see cref="T:Syncfusion.GroupingGridExcelConverter.GridGroupingExcelConverterControl"/>.</param>
            <param name="e">The <see cref="T:Syncfusion.GroupingGridExcelConverter.QueryExportCellRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.GridConverter.NamespaceDoc">
            <summary>
            The Syncfusion.GridConverter namespace contains classes that provides the functionality of importing the contents from the Excel sheet to the Essential GridControl.
            </summary>
        </member>
        <member name="T:Syncfusion.GridConverter.GridImportTableStyleConverter">
            <summary>
            Provides support to import the style of the tables defined in the Excel sheet.
            </summary>
        </member>
        <member name="M:Syncfusion.GridConverter.GridImportTableStyleConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.GridConverter.GridImportTableStyleConverter"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.GridConverter.GridImportTableStyleConverter.CheckForTableCell(Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IWorksheet)">
            <summary>
            Checks for the cells is in table.
            </summary>
            <param name="range">The source Excel sheet range.</param>
            <param name="cell">The destination grid cell.</param>
            <param name="sheet">The source Excel sheet.</param>
            <returns>True if Excel sheet range has Tables otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.GridConverter.GridImportTableStyleConverter.ApplyHeaderStyle(Syncfusion.XlsIO.IListObject,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Applies the header style to cell.
            </summary>
            <param name="table">The Table.</param>
            <param name="cell">The Cell.</param>
            <param name="tablestyle">The Tablestyle.</param>
        </member>
        <member name="M:Syncfusion.GridConverter.GridImportTableStyleConverter.GetTableHeaderForeground(Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Gets the table header foreground.
            </summary>
            <param name="tablestyle">The Tablestyle.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.GridConverter.GridImportTableStyleConverter.GetTableHeaderBorderStyle(Syncfusion.XlsIO.TableBuiltInStyles,Syncfusion.GridConverter.GridImportTableStyleConverter.TableBorderStyle@,System.Drawing.Color@)">
            <summary>
            Gets the table header border style.
            </summary>
            <param name="tablestyle">The Tablestyle.</param>
            <param name="tableBorderStyle">The Table border style.</param>
            <param name="borderColor">Color of the border.</param>
        </member>
        <member name="M:Syncfusion.GridConverter.GridImportTableStyleConverter.GetTableHeaderBackGround(Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Gets the table header background.
            </summary>
            <param name="tablestyle">The Tablestyle.</param>
            <returns>The color for grid cell.</returns>
        </member>
        <member name="M:Syncfusion.GridConverter.GridImportTableStyleConverter.ApplyTableContentStyle(Syncfusion.XlsIO.IListObject,Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Applies the table content style to Grid cells.
            </summary>
            <param name="table">The Table.</param>
            <param name="cell">The Cell.</param>
            <param name="tablestyle">The Tablestyle.</param>
        </member>
        <member name="M:Syncfusion.GridConverter.GridImportTableStyleConverter.GetTableContentForeground(Syncfusion.XlsIO.TableBuiltInStyles)">
            <summary>
            Gets the table content foreground.
            </summary>
            <param name="tablestyle">The Tablestyle.</param>
            <returns>The color for the grid cell.</returns>
        </member>
        <member name="M:Syncfusion.GridConverter.GridImportTableStyleConverter.GetTableContentBorderStyle(Syncfusion.XlsIO.TableBuiltInStyles,Syncfusion.GridConverter.GridImportTableStyleConverter.TableBorderStyle@,System.Drawing.Color@)">
            <summary>
            Gets the table content border style.
            </summary>
            <param name="tablestyle">The Tablestyle.</param>
            <param name="tableBorderStyle">The Table border style.</param>
            <param name="borderColor">Color of the border.</param>
        </member>
        <member name="M:Syncfusion.GridConverter.GridImportTableStyleConverter.GetTableContentBackGround(Syncfusion.XlsIO.TableBuiltInStyles,System.Drawing.Color@,System.Drawing.Color@,System.Boolean@)">
            <summary>
            Gets the table content back ground.
            </summary>
            <param name="tablestyle">The Tablestyle.</param>
            <param name="firstBackgroundColor">First color of the background.</param>
            <param name="secondBackgroundColor">Color of the second background.</param>
            <param name="entireRow">if set to <c>true</c> apply bockground to entire row.</param>
        </member>
        <member name="M:Syncfusion.GridConverter.GridImportTableStyleConverter.ApplyBorder(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.GridConverter.GridImportTableStyleConverter.TableBorderStyle,System.Drawing.Color)">
            <summary>
            Applies the Excel table border style to grid.
            </summary>
            <param name="cell">the destination grid cell.</param>
            <param name="tableBorderStyle">The source Excel table border style.</param>
            <param name="borderColor">The color of the border.</param>
        </member>
        <member name="T:Syncfusion.GridConverter.GridImportTableStyleConverter.TableBorderStyle">
            <summary>
            Defines the constants that specify the border styles.
            </summary>
        </member>
        <member name="F:Syncfusion.GridConverter.GridImportTableStyleConverter.TableBorderStyle.None">
            <summary>
            Represents the No Solidstyle.
            </summary>
        </member>
        <member name="F:Syncfusion.GridConverter.GridImportTableStyleConverter.TableBorderStyle.Top">
            <summary>
            Represents the solid style for the Top ExcelBorderIndex.
            </summary>
        </member>
        <member name="F:Syncfusion.GridConverter.GridImportTableStyleConverter.TableBorderStyle.Bottom">
            <summary>
            Represents the solid style for the Bottom ExcelBorderIndex.
            </summary>
        </member>
        <member name="F:Syncfusion.GridConverter.GridImportTableStyleConverter.TableBorderStyle.Right">
            <summary>
            Represents the solid style for the Right ExcelBorderIndex.
            </summary>
        </member>
        <member name="F:Syncfusion.GridConverter.GridImportTableStyleConverter.TableBorderStyle.Left">
            <summary>
            Represents the solid style for the Left ExcelBorderIndex.
            </summary>
        </member>
        <member name="F:Syncfusion.GridConverter.GridImportTableStyleConverter.TableBorderStyle.TopBottom">
            <summary>
            Represents the solid style for both Top and Bottom ExcelBorderIndex.
            </summary>
        </member>
        <member name="F:Syncfusion.GridConverter.GridImportTableStyleConverter.TableBorderStyle.LeftRight">
            <summary>
            Represents the solid style for both Right and Left ExcelBorderIndex.
            </summary>
        </member>
        <member name="F:Syncfusion.GridConverter.GridImportTableStyleConverter.TableBorderStyle.All">
            <summary>
            Represents that all ExcelBorderIndex is set.
            </summary>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl">
             <summary>
             GroupingGridExcelConverterControl class provides support for Exporting data from a GroupingGridControl into an Excel spreadsheet
             for verification and/or computation. This Control automatically Copies the Grid's Styles, Formats 
             to Excel. 
             The GroupingGridExcelConverter Control  is derived from 
            <see cref="T:Syncfusion.GridExcelConverter.GridExcelConverterBase"/>.
             </summary>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl"/> class.
            </summary>        
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GetGridTables(Syncfusion.Windows.Forms.Grid.Grouping.GridTable)">
            <summary>
            Gets the related tables from grid table.
            </summary>
            <param name="table">The source grid table.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GetRelatedTables(Syncfusion.Windows.Forms.Grid.Grouping.GridTable,System.Int32)">
            <summary>
            Gets the child tables from related tables.
            </summary>
            <param name="table">The source table.</param>
            <param name="level">The level of the table in grid.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GroupingGridToExcel(Syncfusion.Windows.Forms.Grid.Grouping.GridGroupingControl,System.String,Syncfusion.GridExcelConverter.ConverterOptions)">
            <summary>
            Exports the grouping grid into excel file. Grid will accept .Net format Strings (Such as "F4" for a number with four decimal places)
            that are not valid with excel. Hence they will be exported as string instead of format like if you specify the format "F3", then 
            the cell will have the string "F3".
            </summary>
            <param name="grouping">The source grouping grid.</param>
            <param name="strFileName">The destination worksheet.</param>
            <param name="options">The converter options.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="grouping"/> or <paramref name="strFileName"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="strFileName"/> length is <c>equal to 0</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.CopyMergesFromGrid(Syncfusion.Windows.Forms.Grid.Grouping.GridGroupingControl,Syncfusion.XlsIO.IWorksheet,Syncfusion.GridExcelConverter.ConverterOptions)">
            <summary>
            Copies the style and data of merged cells from the grid.
            </summary>
            <param name="grid">The source GridGroupingControl.</param>
            <param name="sheet">The IWorksheet to import.</param>
            <param name="options">The converter options.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="grid"/> or <paramref name="sheet"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GroupingGridToExcel(Syncfusion.Windows.Forms.Grid.Grouping.GridGroupingControl,Syncfusion.XlsIO.IWorksheet,Syncfusion.GridExcelConverter.ConverterOptions)">
            <summary>
            Exports the grouping grid into excel file.
            </summary>
            <param name="grouping">The source grouping grid.</param>
            <param name="sheet">The destination worksheet.</param>
            <param name="options">The converter options.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="grouping"/> or <paramref name="sheet"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.CopyColumnWidthFromGrid(Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies the column width settings from grid model into excel worksheet.
            </summary>
            <param name="td">The GridTableDescriptor.</param>
            <param name="sheet">The destination WorkSheet.</param>
            <param name="startColIndex">Starting grid column index from which width should be set.</param>
            <param name="colCount">Visible column count.</param>
            <param name="iStartIndex">Start column index in sheet.</param>
            <exception cref="T:System.ArgumentNullException">
              if <paramref name="sheet"/> is <c>null</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportElements(System.Collections.IList,Syncfusion.XlsIO.IWorksheet,System.Int32,Syncfusion.GridExcelConverter.ConverterOptions,System.Int32)">
            <summary>
            Exports the collection of elements into worksheet.
            </summary>
            <param name="arrElements">The collection of elements to export.</param>
            <param name="sheet">The destination worksheet.</param>
            <param name="index">Starting zero-based index to the first row.</param>
            <param name="options">The converter options.</param>
            <param name="iGroupLevel">Group Level of the current element.</param>
            <returns>Index to the row after last exported element.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="arrElements"/> or <paramref name="sheet"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="index"/> length is <c>less than 0</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportRowHeader(Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor,Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32)">
            <summary>
            Exports the row headers to Excel.
            </summary>
            <param name="table">The table descriptor of the grid to export.</param>
            <param name="sheet">The destination work sheet.</param>
            <param name="row">The destination row index.</param>
            <param name="col">The destination column index.</param>
            <returns>The number of exported rows.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="sheet"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="row"/> or <paramref name="col"/> length is <c>less than 0</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportColumnHeader(Syncfusion.Windows.Forms.Grid.Grouping.GridColumnHeaderRow,Syncfusion.XlsIO.IWorksheet,Syncfusion.Grouping.Element,System.Int32,Syncfusion.GridExcelConverter.ConverterOptions,System.Int32,System.Int32@)">
            <summary>
            Exports the column header to Excel.
            </summary>
            <param name="headerRow">Header row to export.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="element">Element to export.</param>
            <param name="index">One-based row index.</param>
            <param name="options">Convert options.</param>
            <param name="iGroupLevel">Group level - one-based column index.</param>
            <param name="iSkipCount">Number of elements to skip.</param>
            <returns>The number of exported (used) rows.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="headerRow"/> or <paramref name="sheet"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="index"/> length is <c>less than 0</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportColumnSet(Syncfusion.Windows.Forms.Grid.Grouping.GridColumnDescriptorCollection,Syncfusion.Windows.Forms.Grid.Grouping.GridColumnSetDescriptor,Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32@,Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor)">
            <summary>
            Exports header column set into excel.
            </summary>
            <param name="arrColumns">Columns collection.</param>
            <param name="columnSet">Column set to export.</param>
            <param name="sheet">Worksheet to export data into.</param>
            <param name="iRowIndex">Row index to export to.</param>
            <param name="iColumnIndex">Style of the exported cells.</param>
            <param name="table">GridTableDescriptor.</param>
            <returns>Number of rows used by column set.</returns>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportStackedHeader(Syncfusion.Windows.Forms.Grid.Grouping.GridStackedHeaderRow,Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32)">
            <summary>
            Exports the StackedHeader to Excel.
            </summary>
            <param name="stackHeaderRow">StackedHeaderRow to export.</param>
            <param name="sheet">WorkSheet to export data into.</param>
            <param name="iGroupLevel">GroupLevel of the StackHeaderRow element.</param>
            <param name="iRowIndex">Row index to export to.</param>
            <returns>The Number of rows exported.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="stackHeaderRow"/> or <paramref name="sheet"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="iRowIndex"/> or <paramref name="iGroupLevel"/> length is <c>less than or equal to 0</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportEmptyCells(Syncfusion.XlsIO.IWorksheet,System.Int32,Syncfusion.GridExcelConverter.ConverterOptions,Syncfusion.Windows.Forms.Grid.Grouping.GridTableCellStyleInfo,System.Int32,System.Int32)">
            <summary>
            Exports the empty cells to Excel.
            </summary>
            <param name="sheet">Sheet to export cells into.</param>
            <param name="index">Zero-based row index.</param>
            <param name="options">Converter options.</param>
            <param name="style">Style of the cells to export.</param>
            <param name="iColumnCount">Number of columns to export.</param>
            <param name="iGroupLevel">Group level.</param>
            <returns>The Number of used rows.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="sheet"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="index"/> length is <c>less than 0</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportSummaryRow(Syncfusion.Windows.Forms.Grid.Grouping.GridSummaryRow,Syncfusion.XlsIO.IWorksheet,System.Int32,Syncfusion.GridExcelConverter.ConverterOptions,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Exports summary row into excel worksheet.
            </summary>
            <param name="summary">Summary to export.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="index">Zero-based index to first row of the summary.</param>
            <param name="options">Converter options.</param>
            <param name="iGroupLevel">GroupLevel.</param>
            <param name="style">Summary row style.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="summary"/> or <paramref name="sheet"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="index"/> length is <c>less than 0</c>.
            </exception>     
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ValidateSummaryFormats(Syncfusion.Windows.Forms.Grid.GridStyleInfo,System.Int32)">
            <summary>
            Validates whether summary cells format has been correctly validated.
            </summary>
            <param name="style">GridStyleInfo of GridGroupingControl</param>
            <param name="colIndex">Column index of passed style</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.CombineGridTableBorders(Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Combines Borders from entire style hierarchy.
            </summary>
            <param name="style">The destination grid cell style.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.AdjustGroupingLevel(System.Collections.Stack,System.Int32@,System.Int32,Syncfusion.XlsIO.IWorksheet,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Performs all necessary operations (grouping necessary rows, etc.)
            to set current group level to the desired level.
            </summary>
            <param name="stackStartIndexes">Stack with starting index of previously found groups.</param>
            <param name="iCurLevel">Current group level.</param>
            <param name="iGroupLevel">Group level to set.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="index">Current row zero-based index.</param>
            <param name="bStartNewGroup">Indicates whether new group should be started at index.</param>
            <param name="summaryRowCount">SummaryRowCount of the parent table.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="stackStartIndexes"/> or <paramref name="sheet"/> is <c>null</c>.    
            </exception>        
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportRecordRow(Syncfusion.Grouping.RecordRow,Syncfusion.XlsIO.IWorksheet,System.Int32,Syncfusion.GridExcelConverter.ConverterOptions,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Exports the record row into excel worksheet.
            </summary>
            <param name="row">RecordRow to export.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="index">Zero-based index to first row of the record.</param>
            <param name="options">Converter options.</param>
            <param name="iIndexInGroup"></param>
            <param name="iGroupLevel">GroupLevel.</param>
            <param name="iSkipRecordRows">Skipped RecordRow Count.</param>
            <returns>The number of exported records.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="row"/> or <paramref name="sheet"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="index"/> or <paramref name="iIndexInGroup"/> length is <c>less than 0</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.CustomFormatString(System.Double,System.Globalization.NumberFormatInfo)">
            <summary>
            Formats the string.
            </summary>
            <param name="number">The number to format.</param>
            <param name="nfi">The <see cref="T:System.Globalization.NumberFormatInfo"/>.</param>
            <returns>The format string.</returns>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportColumnSet(Syncfusion.Windows.Forms.Grid.Grouping.GridColumnSetDescriptor,Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32,System.Int32@,Syncfusion.Grouping.FieldDescriptorCollection,Syncfusion.Grouping.RecordRow,Syncfusion.Windows.Forms.Grid.Grouping.GridTableDescriptor)">
            <summary>
            Exports the column set into excel.
            </summary>
            <param name="columnSet">Column set to export.</param>
            <param name="sheet">Worksheet to export data into.</param>
            <param name="iIndexInGroup"></param>
            <param name="iRowIndex">Row index to export to.</param>
            <param name="iColumnIndex">Column index to export to.</param>
            <param name="arrFields">FieldDescriptorCollections.</param>
            <param name="row">RecordRow.</param>
            <param name="table">GridTableDescriptor.</param>
            <returns>The number of rows used by column set.</returns>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportCellStyle(Syncfusion.Grouping.Element,Syncfusion.Grouping.FieldDescriptor,Syncfusion.XlsIO.IRange,Syncfusion.GridExcelConverter.ConverterOptions)">
            <summary>
            Exports the cell style to Excel cell style.
            </summary>
            <param name="sourceElement">The source element to export.</param>
            <param name="sourceField">The source field descriptor.</param>
            <param name="destRange">The destination range.</param>
            <param name="options">The converter options.</param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="destRange"/> or <paramref name="sourceElement"/> is <c>null</c>.    
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportCaption(Syncfusion.Windows.Forms.Grid.Grouping.GridCaptionRow,Syncfusion.XlsIO.IWorksheet,System.Int32,Syncfusion.GridExcelConverter.ConverterOptions,System.Int32,System.Collections.Stack,System.Int32)">
            <summary>
            Exports the caption row to Excel.
            </summary>
            <param name="captionRow">Source caption row.</param>
            <param name="sheet">the destination worksheet.</param>
            <param name="index">Caption's zero-based row index in the worksheet.</param>
            <param name="options">Convert options.</param>
            <param name="iCurrentGroupLevel">Current group level.</param>
            <param name="stackStartIndexes">A stack object to maintain the start group indexes.</param>
            <param name="summaryRowCount">SummaryRowCount.</param>
            <returns>Zero-based row index that point to the row after caption.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="captionRow"/> or <paramref name="sheet"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="index"/> length is <c>less than 0</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportCaptionSummaryRow(Syncfusion.Windows.Forms.Grid.Grouping.GridCaptionRow,Syncfusion.XlsIO.IWorksheet,System.Int32,Syncfusion.GridExcelConverter.ConverterOptions,System.Int32,System.Collections.Stack,System.Int32,System.Int32,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Exports the caption summary row to Excel.
            </summary>
            <param name="captionRow">Source caption row.</param>
            <param name="sheet">The destination worksheet.</param>
            <param name="index">Caption's zero-based row index in the worksheet.</param>
            <param name="options">Convert options.</param>
            <param name="iCurrentGroupLevel">Current group level.</param>
            <param name="stackStartIndexes">A stack object to maintain the start group indexes.</param>
            <param name="summaryRowCount">SummaryRowCount.</param>
            <param name="childTableGroupLevel">Child Table Group level.</param>
            <param name="style">Caption summary row style.</param>
            <returns>Zero-based row index that point to the row after caption.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="captionRow"/> or <paramref name="sheet"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="index"/> length is <c>less than 0</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportFormats(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.XlsIO.IRange)">
            <summary>
            Exports the number format index for a range from specified grid style.
            </summary>
            <param name="range">The destination excel range.</param>
            <param name="style">The source grid cell style to export.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.FormatConcat(System.Double,Syncfusion.XlsIO.IRange,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
            Concatenates the grid cell format to Excel sheet range.
            </summary>
            <param name="digit">The number of digits.</param>
            <param name="range">The Excel sheet range.</param>
            <param name="style">The grid cell style.</param>
            <returns>Concatenated format string.</returns>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportGroup(Syncfusion.Windows.Forms.Grid.Grouping.GridGroup,Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32)">
            <summary>
            Exports group to the excel worksheet.
            </summary>
            <param name="group">Group to export.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="index">Zero-based row index.</param>
            <param name="iGroupLevel">Element GroupLevel.</param>
            <returns>Zero-based row index that point to the row after group rows.</returns>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="group"/> or <paramref name="sheet"/> is <c>null</c>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="index"/> length is <c>less than 0</c>.
            </exception>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportNestedTable(Syncfusion.Grouping.NestedTable,Syncfusion.XlsIO.IWorksheet,System.Int32,Syncfusion.GridExcelConverter.ConverterOptions,System.Int32)">
            <summary>
            Exports nested table.
            </summary>
            <param name="table">Source table to export.</param>
            <param name="sheet">the destination worksheet.</param>
            <param name="index">Caption's zero-based row index in the worksheet.</param>
            <param name="options">Convert options.</param>
            <param name="iGroupLevel">GroupLevel.</param>
            <returns>Zero-based row index that point to the row after caption.</returns>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportPreviewRow(Syncfusion.Grouping.Element,Syncfusion.XlsIO.IWorksheet,System.Int32,System.Int32)">
            <summary>
            Exports preview row into excel worksheet.
            </summary>
            <param name="element">PreviewRow element to export.</param>
            <param name="sheet">Destination worksheet.</param>
            <param name="index">Index of the preview row element in the Elements collection.</param>
            <param name="iRowIndex">Row index to export to.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GetForeignKeyCellText(Syncfusion.Windows.Forms.Grid.GridStyleInfo,Syncfusion.Grouping.FieldDescriptor,Syncfusion.Grouping.Element,System.Object)">
            <summary>
            Gets the ForeignKeyCell Formatted Text.
            </summary>
            <param name="style">the grid column Style.</param>
            <param name="field">FieldDescriptor.</param>
            <param name="element">Record.</param>
            <param name="value">Field Value.</param>
            <returns>ForeignKeyCell Formatted Text.</returns>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.RaiseQueryExportPreviewRowInfo(Syncfusion.GroupingGridExcelConverter.GroupingGridExportPreviewRowQueryInfoEventArgs)">
            <summary>
            Initiates call to OnQueryExportPreviewRowInfo
            </summary>
            <param name="e">The <see cref="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExportPreviewRowQueryInfoEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.OnQueryExportPreviewRowInfo(Syncfusion.GroupingGridExcelConverter.GroupingGridExportPreviewRowQueryInfoEventArgs)">
            <summary>
            Raises the QueryExportPreviewRowInfo event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExportPreviewRowQueryInfoEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.RaiseExportElement(Syncfusion.GroupingGridExcelConverter.GridExportElementEventArgs)">
            <summary>
            Initiates call to OnExportElement.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.GroupingGridExcelConverter.GridExportElementEventArgs"/>.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.OnExportElement(Syncfusion.GroupingGridExcelConverter.GridExportElementEventArgs)">
            <summary>
            Raises the ExportElement event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.GroupingGridExcelConverter.GridExportElementEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.RaiseQueryCaptionText(Syncfusion.GroupingGridExcelConverter.GridQueryCaptionTextEventArgs)">
            <summary>
            Initiates call to OnQueryCaptionText.
            </summary>
            <param name="e">The <see cref="T:Syncfusion.GroupingGridExcelConverter.GridQueryCaptionTextEventArgs"/></param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.OnQueryCaptionText(Syncfusion.GroupingGridExcelConverter.GridQueryCaptionTextEventArgs)">
            <summary>
            Raises the QueryCaptionText event.
            </summary>
            <param name="e">An <see cref="T:Syncfusion.GroupingGridExcelConverter.GridQueryCaptionTextEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GetCaptionText(Syncfusion.Windows.Forms.Grid.Grouping.GridCaptionRow)">
            <summary>
            Retrieves caption text from caption row.
            </summary>
            <param name="caption">Caption row to get text from.</param>
            <returns>Caption text.</returns>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GetGroupCaptionText(Syncfusion.Grouping.Group)">
            <summary>
            Retrieves caption text for group.
            </summary>
            <param name="group">Group to get caption text from.</param>
            <returns>Caption text.</returns>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GetGroupCaptionDisplayText(Syncfusion.Grouping.Group,System.String)">
            <summary>
            Gets caption text for a group.
            </summary>
            <param name="group">The group to get caption text for.</param>
            <param name="format">Caption format.</param>
            <returns>Caption text for the group.</returns>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ApplyExcelFilter">
            <summary> 
            Gets or sets the value indicating whether Excel filter has to be applied in Excel sheet.
            <remarks>This is specifically used to show the empty filter in excel sheet while exporting.</remarks>
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.UseDefaultAlignment">
            <summary>
            Gets a value Indicating whether default alignment setting should be used when alignment
            wasn't set. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.CaptionBackColor">
            <summary>
            Gets or sets the caption cell's back color in the worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportCaptionSummary">
            <summary>
            Gets or sets whether the caption summary row if enabled, can be exported to excel. Default is true.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportRecordPlusMinus">
            <summary>
            Gets or sets a value indicating whether the Record with related tables should be exported as Excel Group.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportGroupPlusMinus">
            <summary>
            Gets or sets a value indicating whether the Grouping.Group should be exported as Excel Group.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportPreviewRows">
            <summary>
            Gets or sets a value indicating whether the PreviewRows should be exported.
            The default value is false.
            </summary>
            <remarks>
            When you are not exporting with <see cref="F:Syncfusion.GridExcelConverter.ConverterOptions.Visible"/> option
            then, the <see cref="E:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.QueryExportPreviewRowInfo"/> event must be handled.        
            </remarks>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportStyle">
            <override/>
            <summary>
            Gets or sets a value indicating whether the styles has to be exported.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.IsGroupingGrid">
            <summary>
            Gets a value indicating whether it is a grouping grid.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GroupingGrid">
            <summary>
            Gets or sets the grouping grid of the <see cref="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl"/>.
            </summary>
        </member>
        <member name="E:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.QueryExportPreviewRowInfo">
            <summary>
            Occurs for each preview row element before the <see cref="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl"/>
            exports and lets users customize the preview row.
            </summary>
        </member>
        <member name="E:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportElement">
            <summary>
            Occurs for each element before the <see cref="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl"/>
            exports and lets users to cancel exporting the element.
            </summary>
        </member>
        <member name="E:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.QueryCaptionText">
            <summary>
            Occurs for each CaptionRow before the <see cref="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl"/>
            exports and lets users customize the CaptionText.
            </summary>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GridTableDictionary">
            <summary>
            Maintain all GridTables in a hash table with hierarchy level.
            </summary>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GridTableDictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GridTableDictionary"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GridTableDictionary.Add(System.Object,System.Object)">
            <summary>
            Adds an element with the specified key and value into the System.Collections.Hashtable.
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add. The value can be null.</param>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GridTableDictionary.GetTableLevel(Syncfusion.Grouping.Table)">
            <summary>
            Gets the table level
            </summary>
            <param name="table">The <see cref="T:Syncfusion.Grouping.Table"/>.</param>
            <returns>The level of the table in grid.</returns>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GridTableDictionary.GetTableLevel(System.String)">
            <summary>
            Gets the table level
            </summary>
            <param name="tableName">The name of the <see cref="T:Syncfusion.Grouping.Table"/>.</param>
            <returns>The level of the table in grid.</returns>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GridTableDictionary.GetGridTable(System.String)">
            <summary>
            Retrieves the GridTable from the hashtable collection.
            </summary>
            <param name="tableName">Name of the table to be retrieved.</param>
            <returns>The GridTable</returns>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GroupInfo">
            <summary>
            Holds the information about summary row count in a group that need to be calculated
            while grouping in rows in worksheet.
            </summary>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GroupInfo.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GroupInfo"/> class.
            </summary>
            <param name="startIndex">The start index of the group.</param>
            <param name="summaryRowCount">The number of summary rows.</param>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GroupInfo.StartIndex">
            <summary>
            Gets the start index of the group.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GroupInfo.SummaryRowCount">
            <summary>
            Gets the summary row count of the group.
            </summary>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GroupingGridExportPreviewRowQueryInfoEventHandler">
            <summary>
            Represents a method that handles an event with <see cref="!:GroupingGridExportElementQueryInfoEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExportPreviewRowQueryInfoEventArgs"/>.</param>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GridExportElementEventHandler">
            <summary>
            Represents a method that handles an event with <see cref="T:Syncfusion.GroupingGridExcelConverter.GridExportElementEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Syncfusion.GroupingGridExcelConverter.GridExportElementEventArgs"/>.</param>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.GridQueryCaptionTextEventHandler">
            <summary>
            Represents a method that handles an event with <see cref="T:Syncfusion.GroupingGridExcelConverter.GridQueryCaptionTextEventArgs"/>.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Syncfusion.GroupingGridExcelConverter.GridQueryCaptionTextEventArgs"/>.</param>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.GridQueryCaptionTextEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.QueryCaptionText"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridQueryCaptionTextEventArgs.#ctor(Syncfusion.Grouping.CaptionRow,System.String)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.GroupingGridExcelConverter.GridQueryCaptionTextEventArgs"/> class.
            </summary>
            <param name="caption">The CaptionRow to be exported.</param>
            <param name="text">The text to be displayed in CaptionRow.</param>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GridQueryCaptionTextEventArgs.Caption">
            <summary>
            Gets the CaptionRow.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GridQueryCaptionTextEventArgs.Text">
            <summary>
            Gets or sets the string that will be exported for the CaptionRow.
            </summary>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.GridExportElementEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.ExportElement"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GridExportElementEventArgs.#ctor(Syncfusion.Grouping.Element,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Syncfusion.GroupingGridExcelConverter.GridExportElementEventArgs"/> class.
            </summary>
            <param name="element">The element to be exported.</param>
            <param name="rowIndex">The row index of the element.</param>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GridExportElementEventArgs.Element">
            <summary>
            The element to get exported to the worksheet.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GridExportElementEventArgs.RowIndex">
            <summary>
            Gets the worksheet row index to which the Element will get exported.
            </summary>
        </member>
        <member name="T:Syncfusion.GroupingGridExcelConverter.GroupingGridExportPreviewRowQueryInfoEventArgs">
            <summary>
            Provides data about the <see cref="E:Syncfusion.GroupingGridExcelConverter.GroupingGridExcelConverterControl.QueryExportPreviewRowInfo"/> event.
            </summary>
        </member>
        <member name="M:Syncfusion.GroupingGridExcelConverter.GroupingGridExportPreviewRowQueryInfoEventArgs.#ctor(Syncfusion.Grouping.Element,Syncfusion.Windows.Forms.Grid.GridStyleInfo)">
            <summary>
             Initializes a new instance of the <see cref="!:Syncfusion.GroupingGridExcelConverter.GroupingGridExportPreviewRowQueryInfoEventArgs."/> class.
            </summary>
            <param name="el">Element to export.</param>
            <param name="style">Style Object.</param>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExportPreviewRowQueryInfoEventArgs.Style">
            <summary>
             Gets the grid cell style.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExportPreviewRowQueryInfoEventArgs.Element">
            <summary>
            Gets the element to export.
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExportPreviewRowQueryInfoEventArgs.Result">
            <summary>
            Gets or sets a value indicating whether preview row should be exported. 
            </summary>
        </member>
        <member name="P:Syncfusion.GroupingGridExcelConverter.GroupingGridExportPreviewRowQueryInfoEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the event has been handled and no further processing of this event should happen.
            </summary>
        </member>
        <member name="T:Syncfusion.GridExcelConverter.IndexRange">
            <exclude/>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.IndexRange.m_iFirstIndex">
            <summary>
            First index of the range.
            </summary>
        </member>
        <member name="F:Syncfusion.GridExcelConverter.IndexRange.m_iLastIndex">
            <summary>
            Last index of the range.
            </summary>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.IndexRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.GridExcelConverter.IndexRange"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.GridExcelConverter.IndexRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes new instance of the IndexRange and sets its first index and last index.
            </summary>
            <param name="iFirstIndex">First index of the range.</param>
            <param name="iLastIndex">Last index of the range.</param>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.IndexRange.FirstIndex">
            <summary>
            Gets the first index of the range. Read-only.
            </summary>
        </member>
        <member name="P:Syncfusion.GridExcelConverter.IndexRange.LastIndex">
            <summary>
            Gets the last index of the range. Read-only.
            </summary>
        </member>
    </members>
</doc>
