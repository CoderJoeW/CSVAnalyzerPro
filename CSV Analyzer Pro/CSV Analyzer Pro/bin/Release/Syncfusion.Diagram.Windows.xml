<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Diagram.Windows</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.DiagramWindowsAssembly">
            <summary>
            This class holds the name of the Syncfusion.Diagram.Windows assembly and provides a helper 
            routine that helps with resolving types when loading a serialization stream and when 
            the framework probes for assemblies by reflection. 
            </summary>
        </member>
        <member name="F:Syncfusion.DiagramWindowsAssembly.Name">
            <summary>
            The full name of this assembly without version information: "Syncfusion.Diagram.Windows"
            </summary>
        </member>
        <member name="F:Syncfusion.DiagramWindowsAssembly.Assembly">
            <summary>
            A reference to the <see cref="T:System.Reflection.Assembly"/> for the grid assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.DiagramWindowsAssembly.RootNamespace">
            <summary>
            The root namespace of this assembly. Used internally for locating resources within the assembly.
            </summary>
        </member>
        <member name="M:Syncfusion.DiagramWindowsAssembly.AssemblyResolver(System.Object,System.ResolveEventArgs)">
            <summary>
            Assemblies the resolver.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ResolveEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.DiagramWindowsAssembly.Binder">
            The Binder class helps with the resolution of Diagram types between different versions of 
            the Syncfusion assemblies.
            <internalonly/>
        </member>
        <member name="M:Syncfusion.DiagramWindowsAssembly.Binder.BindToType(System.String,System.String)">
            <summary>
            When overridden in a derived class, controls the binding of a serialized object to a type.
            </summary>
            <param name="assemblyName">Specifies the <see cref="T:System.Reflection.Assembly"/> name of the serialized object.</param>
            <param name="typeName">Specifies the <see cref="T:System.Type"/> name of the serialized object.</param>
            <returns>
            The type of the object the formatter creates a new instance of.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.ToolCollection">
            <summary>
            A collection of <see cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/> objects.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.ToolCollection"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolCollection.#ctor(Syncfusion.Windows.Forms.Diagram.ToolCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.ToolCollection"/> class.
            </summary>
            <param name="src">The source instance.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolCollection.Add(Syncfusion.Windows.Forms.Diagram.Tool)">
            <summary>
            Adds the specified tool.
            </summary>
            <param name="tool">The tool.</param>
            <returns>The tool index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolCollection.IndexOf(Syncfusion.Windows.Forms.Diagram.Tool)">
            <summary>
            Gets the specified tool index in current collection.
            </summary>
            <param name="tool">The tool.</param>
            <returns>The index.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolCollection.Insert(System.Int32,Syncfusion.Windows.Forms.Diagram.Tool)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="tool">The tool.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolCollection.Remove(Syncfusion.Windows.Forms.Diagram.Tool)">
            <summary>
            Removes the specified tool.
            </summary>
            <param name="tool">The tool.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolCollection.Contains(Syncfusion.Windows.Forms.Diagram.Tool)">
            <summary>
            Determines whether collection contains the specified tool.
            </summary>
            <param name="tool">The tool.</param>
            <returns>
            <c>true</c> if collection contains the specified tool; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolCollection.CopyTo(Syncfusion.Windows.Forms.Diagram.Tool[],System.Int32)">
            <summary>
            Copies all collection member to array.
            </summary>
            <param name="tools">The tools.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolCollection.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>The tool enumerator.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolCollection.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolCollection.OnValidate(System.Object)">
            <summary>
            Validates given value.
            </summary>
            <param name="value">value to validate</param>
            <exception cref="T:System.InvalidCastException"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolCollection.OnValidate(System.Collections.ICollection)">
            <summary>
            Validates given values.
            </summary>
            <param name="values">values to validate</param>
            <exception cref="T:System.InvalidCastException"/>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ToolCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/> at the specified index.
            </summary>
            <param name="index">The index of the tool.</param>
            <value>The tool.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolCollection.ToolEnumerator.#ctor(Syncfusion.Windows.Forms.Diagram.ToolCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.ToolCollection.ToolEnumerator"/> class.
            </summary>
            <param name="tools">The tools.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolCollection.ToolEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolCollection.ToolEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ToolCollection.ToolEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <value></value>
            <returns>The current element in the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element.-or- The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Binding">
            <summary>
            Class to bind the data when defined the DataSource 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Binding.m_dataSource">
            <summary>
            assign table object to bind the data
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Binding.m_id">
            <summary>
             the unique id of data source items.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Binding.m_parentId">
            <summary>
            the parent id of the data source items.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Binding.m_defaultNode">
            <summary>
            shape of node
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Binding.m_diagram">
            <summary>
            diagram 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Binding.m_defaultConnector">
            <summary>
            connector field
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Binding.m_label">
            <summary>
            label of node
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Binding.#ctor">
            <summary>
            Initialize the class members
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Binding.#ctor(Syncfusion.Windows.Forms.Diagram.Controls.Diagram)">
            <summary>
            Initialize the class members
            </summary>
            <param name="diagram">diagram</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Binding.BindData">
            <summary>
            Bind the data when defined the DataSource
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Binding.Clear">
            <summary>
            Set the default values to members/properties
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Binding.PopulateConnectors(System.String,System.String)">
            <summary>
            Getting the parent and child nodes from generated nodes collection
            </summary>
            <param name="childId">name of child node</param>
            <param name="parentId">name of parent node</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Binding.AddConnectors(Syncfusion.Windows.Forms.Diagram.Node,Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            connect the parent and child node
            </summary>
            <param name="parentNode">parent node</param>
            <param name="node">child node</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Binding.PopulateNodes(System.Data.DataRow)">
            <summary>
            populate the node
            </summary>
            <param name="row">current row of table</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Binding.AddLabels(Syncfusion.Windows.Forms.Diagram.Node,Syncfusion.Windows.Forms.Diagram.LabelCollection,System.Data.DataRow)">
            <summary>
            Add the label into the node and update the label text
            </summary>
            <param name="node">Node</param>
            <param name="labels">label collection</param>
            <param name="row">current row of table</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Binding.GetTotalHeight(Syncfusion.Windows.Forms.Diagram.LabelCollection)">
            <summary>
            Get the total height of all labels
            </summary>
            <param name="labels">Label collection</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Binding.Diagram">
            <summary>
            Get/Set Diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Binding.Label">
            <summary>
            Get/Set the list of label string
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Binding.DefaultConnector">
            <summary>
            get/Set the connector value
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Binding.DataSource">
            <summary>
            Get/Set the datasource value for Bind the data with parent child relation
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Binding.Id">
             <summary>
            Get/Set unique id of data source item
             </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Binding.ParentId">
            <summary>
            Get/Set the parent id of data source item
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Binding.DefaultNode">
            <summary>
            Get/Set the Shape of node
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.DiagramDesigner">
            <summary>
            Diagram designer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DiagramDesigner.OnSetComponentDefaults">
            <summary>
            Called when the designer is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramDesigner.ActionLists">
            <summary>
            Call When the smart tag is clicked.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList">
            <summary>
            To display the list of Items display in smart tag.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.DocumentBackStyle">
            <summary>
            Gets and sets the Background style properties to a model.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.DocumentSizeDisplay">
            <summary>
            Gets or sets the Document size to the model.
            </summary>       
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.GetPropertyByName(System.String)">
            <summary>
            Gets the Property from the Component.
            </summary>
            <param name="name">Name of the Property.</param>
            <returns>Abstraction of the property</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.GetSortedActionItems">
            <summary>
            Gets the list of smart tag items.
            </summary>
            <returns>Designer action item collection.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.InvalidateComponent(System.ComponentModel.IComponent)">
            <summary>
            Invalidates current component
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.ShowRulers">
            <summary>
            Gets or sets a value indicating whether view show horizontal and vertical rulers.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.RulerHeight">
            <summary>
            Gets or sets the height of rulers.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.Office2007ScrollBarsColorScheme">
            <summary>
            Gets or sets the style of Office2007 scroll bars.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.Office2007ScrollBars">
            <summary>
            Gets or sets a value indicating whether to show Office2007ScrollBars.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.MetroScrollBars">
            <summary>
            Gets or sets a value indicating whether to show metro scrollbars.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.HScroll">
            <summary>
            Gets or sets a value indicating whether the horizontal scroll bar is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.VScroll">
            <summary>
            Gets or sets a value indicating whether vertical scroll bar is visible.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.SizeToContent">
            <summary>
            Gets or sets a value indicating whether autoresizing model size 
            on out nodes bounds on model.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.BoundaryConstraintsEnabled">
            <summary>
            Gets or sets a value indicating whether boundary constraints are enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.LineBridgingEnabled">
            <summary>
            Gets or sets a value indicating whether line bridging is enabled for the model.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.LineRoutingEnabled">
            <summary>
            Gets or sets a value indicating whether line routing is enabled for the model.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.OptimizeLineBridging">
            <summary>
            Gets or sets a value indicating whether to improve the performance while dragging nodes.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.BackgroundStyle">
            <summary>
            Gets or sets properties used to fill the interior of document.
            </summary>      
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.DocumentSize">
            <summary>
            Gets or sets the size of the document.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.DiagramActionList.MeasurementUnits">
            <summary>
            Gets or sets the Measurement Unit of the Document.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.Diagram">
            <summary>
            Interactive two-dimensional graphics control for diagramming,
            technical drawing, visualization, simulation, and technical
            drawing applications.
            </summary>
            <remarks>
            <para>
            This control provides a surface for rendering and manipulating 2D
            shapes, symbols, text, and images. The user interface supports drag-
            and-drop, scaling, rotation, zooming, grouping, ungrouping, connection
            points, and many other features.
            </para>
            <para>
            A diagram is composed of three objects: the 
            <see cref="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Model"/>,
            the 
            <see cref="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.View"/>,
            and the
            <see cref="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Controller"/>.
            The model-view-controller architecture provides a clear separation between
            data, visualization, and user interface. The model contains the data portion
            of the diagram, the view is responsible for rendering the diagram, and
            the controller handles user interaction. The model, view, and controller
            are accessible as properties in this control and can be manipulated
            directly.
            </para>
            <para>
            Some of the methods and properties in this class are just wrappers that
            call identical methods in the model, view, or controller. For example,
            the following two lines of codes are equivalent:
            <code>
            diagram.Undo();
            // Same as
            diagram.Controller.Undo();
            </code>
            Methods that are simple wrappers are documented as such.
            </para>
            <para>
            Graphical objects can be added to a diagram in several ways. One way is
            through drag-and-drop. Symbols can be dragged from a
            <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView"/>
            onto the diagram. Objects can also be added from the clipboard using the
            <see cref="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Paste"/>
            method. Shapes can be drawn onto the diagram by activating one of several
            drawing tools such as the
            <see cref="T:Syncfusion.Windows.Forms.Diagram.RectangleTool"/>. Objects
            can also be created programmatically and added to the diagram by
            calling the
            <see cref="M:Syncfusion.Windows.Forms.Diagram.Model.AppendChild(Syncfusion.Windows.Forms.Diagram.Node)"/> method.
            </para>
            <para>
            Activating user-interface tools is a task commonly performed by applications
            using this control. The
            <see cref="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ActivateTool(System.String)"/>
            method is used to activate tools. For example, the event handler for a
            toolbar button that draws a rectangle would look like this.
            <code>
            private void drawRectangle_Click(object sender, System.EventArgs e)
            {
                this.Diagram.ActivateTool("RectangleTool");
            }
            </code>
            </para>
            <para>
            Calling the <see cref="M:Syncfusion.Windows.Forms.Diagram.HistoryManager.Undo"/>
            method removes the command on the top of the undo stack and causes an undo
            to occur. The
            <see cref="M:Syncfusion.Windows.Forms.Diagram.HistoryManager.Redo"/>
            method will redo the last command that was removed from the undo stack. The
            UndoCommand and RedoCommand methods are usually called in response to clicking
            Undo and Redo on the Edit menu.
            </para>
            <para>
            One advantage of the model-view-controller architecture is that the
            parts are interchangeable . Models, views, and controllers can be swapped
            in and out independently. For example, the user interface of the diagram
            can be completely replaced by swapping in a different controller
            implementation. To accomplish this, you must subclass this class and
            override one or more of the following methods:
            <see cref="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.CreateModel"/>,
            <see cref="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.CreateView"/>,
            <see cref="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.CreateController"/>.
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Model"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.View"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Controller"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.ICommand"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.c_nLARGE_CHANGE_DEFAULT_VALUE">
            <summary>
            Default large change for both scrollbars.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.m_modelZOrder">
            <summary>
            member of the class to change zorder value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.m_bResize">
            <summary>
            This field is used to resolve rendering problem on resizing diagram control
            ( ClipRectangle while rendering is equal to ClientRectangle !!before!! resizing
            when I call Invalidate( this.ClientRectangle ) )
            It is set to true on OnSizeChanged(..) and set to false on OnMouseMove(..)
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.m_mgrFocus">
            <summary>
            Focus Manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.m_model">
            <summary>
            Properties for rendering the model.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.Diagram"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.Diagram"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ProvideServiceReference(System.RuntimeTypeHandle)">
            <summary>
            Get the service reference from provider.
            </summary>
            <param name="typeHandle">The service type.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.FitDocument">
            <summary>
            Fit the document on control field.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.UpdateView(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Updates the view area
            <param name="node">The node.</param>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.UpdateView">
            <summary>
            Updates the view area.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.AcumulateHRulerInvalidArea(System.Drawing.Rectangle)">
            <summary>
            Accumulates the H ruler invalid area.
            </summary>
            <param name="rectHightlight">The highlight rectangle.</param>
            <returns>Bounds of the horizontal ruler.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.UpdateVerticalRuler(System.Drawing.Rectangle)">
            <summary>
            Updates the vertical ruler.
            </summary>
            <param name="rectHightlight">The hightlight rectangle.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.UpdateVRulerBounds">
            <summary>
            Updates the V ruler bounds.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.AcumulateVRulerInvalidArea(System.Drawing.Rectangle)">
            <summary>
            Accumulates  the V ruler invalid area.
            </summary>
            <param name="rectHightlight">The highlight rectangle.</param>
            <returns>Bounds of the vertical ruler.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.DetachContextMenu">
            <summary>
            Set the ContextMenu to NULL.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.CreateModel">
            <summary>
            This method creates the model that is attached to the diagram.
            </summary>
            <returns>A new model object.</returns>
            <remarks>
            This method can be overidden in derived classes in order to perform
            custom initialization of the model or to create custom models derived
            from the
            <see cref="T:Syncfusion.Windows.Forms.Diagram.Model"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.AttachModel(Syncfusion.Windows.Forms.Diagram.Model)">
            <summary>
            Attach an existing model to the diagram.
            </summary>
            <param name="value">Model object to attach.</param>
            <remarks>
            This method can be used to attach a new model object to the diagram.
            NOTE: Using this method will cause the contents of the previous model
            to be destroyed. Calling this method after your form's InitializeComponent
            method is called will cause design-time property values to be lost.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.CreateView">
            <summary>
            This method creates the view that is attached to the diagram.
            </summary>
            <returns>An instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.View"/> type.</returns>
            <remarks>
            Override this method to create a custom View for the diagram control.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.CreateController">
            <summary>
            This method creates the controller that is attached to the diagram.
            </summary>
            <returns>Controller object to attach.</returns>
            <remarks>
            This method can be overidden in derived classes in order to perform
            custom initialization of the controller or to create custom controllers
            derived from the
            <see cref="T:Syncfusion.Windows.Forms.Diagram.Controller"/> class.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.SetMagnification(System.Int32,System.Int32)">
            <summary>
            Sets the X and Y magnification (zoom) values on a scale of 1 to n.
            </summary>
            <param name="magX">Magnification percent along X axis.</param>
            <param name="magY">Magnification percent along Y axis.</param>
            <remarks>
            This method sets the
            <see cref="P:Syncfusion.Windows.Forms.Diagram.View.Magnification"/>
            property.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ActivateTool(System.String)">
            <summary>
            Activates the specified tool in the controller.
            </summary>
            <param name="toolName">Name of tool to activate.</param>
            <returns>True if tool activated; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.MoveNodes(Syncfusion.Windows.Forms.Diagram.NodeCollection,System.Single,System.Single,Syncfusion.Windows.Forms.Diagram.MeasureUnits)">
            <summary>
            Moves the specified nodes by a X and Y offset.
            </summary>
            <param name="nodes">Nodes to be moved.</param>
            <param name="dx">Distance to move along the X axis.</param>
            <param name="dy">Distance to move along the Y axis.</param>
            <param name="units">Move offsets measure units.</param>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.NudgeUp">
            <summary>
            Nudge the selected components up by
            <see cref="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.NudgeIncrement"/>
            units.
            </summary>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.NudgeDown">
            <summary>
            Nudge the selected components down by
            <see cref="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.NudgeIncrement"/>
            units.
            </summary>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.NudgeLeft">
            <summary>
            Nudge the selected components left by
            <see cref="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.NudgeIncrement"/>
            units.
            </summary>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.NudgeRight">
            <summary>
            Nudge the selected components right by
            <see cref="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.NudgeIncrement"/>
            units.
            </summary>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Rotate(System.Single)">
            <summary>
            Rotates the selected nodes about their local origin by the specified
            number of degrees.
            </summary>
            <param name="degrees">Number of degrees to rotate.</param>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.FlipHorizontal">
            <summary>
            Flips the selected nodes about their horizontal (X) axis.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.GetSelectionList">
            <summary>
            Gets the selection list.
            </summary>
            <returns>The nodes in the selection.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.FlipVertical">
            <summary>
            Flips the selected nodes about their vertical (Y) axis.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.AlignLeft">
            <summary>
            Aligns the selected nodes along the left edge of the first node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.AlignRight">
            <summary>
            Aligns the selected nodes along the right edge of the first node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.AlignTop">
            <summary>
            Aligns the selected nodes along the top edge of the first node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.AlignBottom">
            <summary>
            Aligns the selected nodes along the bottom edge of the first node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.AlignMiddle">
            <summary>
            Aligns the selected nodes along the horizontal center of the first node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.AlignCenter">
            <summary>
            Aligns the selected nodes along the vertical center of the first node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.SpaceAcross">
            <summary>
            Positions the selected nodes for equal horizontal spacing.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.SpaceDown">
            <summary>
            Positions the selected nodes for equal vertical spacing
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.SameWidth">
            <summary>
            Sets the width of the selected nodes to be equal.
            </summary>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.SameHeight">
            <summary>
            Sets the height of the selected nodes to be equal.
            </summary>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.SameSize">
            <summary>
            Sets the width and height of the selected nodes to be equal.
            </summary>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.GetDataSourceFromXML(System.String)">
            <summary>
            Load Xml file converting to DataTable
            </summary>
            <param name="filePath">Xml file path</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.CenterBasedZooming">
            <summary>
            Performs zooming either based on the mouse point or by the center of the view. 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ConverttoDataTable(System.Xml.XmlReader,System.Data.DataTable@,System.String)">
            <summary>
            Converting Xml file to Data table
            </summary>
            <param name="reader">XmlReader</param>
            <param name="table">Data table</param>
            <param name="tag">Current Xml Tag</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.TableConversion(System.String,System.String,System.Data.DataTable@)">
            <summary>
            Add the Xml readed data to table
            </summary>
            <param name="colName">Current column name</param>
            <param name="value">Current column value</param>
            <param name="table">Data Table</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Cut">
            <summary>
            Remove the currently selected nodes from the diagram and move
            them to the clipboard.
            </summary>
            <remarks>
            Wrapper for
            <see cref="M:Syncfusion.Windows.Forms.Diagram.DiagramController.Cut"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Copy">
            <summary>
            Copy the currently selected nodes to the clipboard.
            </summary>
            <remarks>
            Wrapper for
            <see cref="M:Syncfusion.Windows.Forms.Diagram.DiagramController.Copy"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Paste">
            <summary>
            Paste the contents of the clipboard to the diagram.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Paste(System.String,System.Drawing.PointF)">
            <summary>
            Paste the contents of the clipboard to the diagram at the specified layer and location.
            </summary>
            <param name="layername">The layername.</param>
            <param name="location">The location.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.SelectAll">
            <summary>
            Adds all nodes in the model to the SelectionList.
            </summary>
            <remarks>
            Wrapper for
            <see cref="M:Syncfusion.Windows.Forms.Diagram.Controller.SelectAll"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Load(System.String,System.Exception@)">
            <summary>
            Loads the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="exception">Get the exception during deserialization if exception occurs</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Load(System.String)">
            <summary>
            Loads the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Load(System.IO.Stream)">
            <summary>
            Loads the specified stream.
            </summary>
            <param name="strm">The stream.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Load(System.IO.Stream,System.Exception@)">
            <summary>
            Loads the specified stream.
            </summary>
            <param name="strm">The stream.</param>
            <param name="exception">Get the exception during deserialization if exception occurs</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.SaveSoap(System.IO.Stream)">
            <summary>
            Saves the diagram to a stream in SOAP format.
            </summary>
            <param name="strmOut">Stream to serialize the diagram into.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.SaveSoap(System.String)">
            <summary>
            Saves the diagram to a file in SOAP format.
            </summary>
            <param name="fileName">Name of file to save to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.LoadSoap(System.IO.Stream)">
            <summary>
            Loads the diagram from a stream in SOAP format.
            </summary>
            <param name="strmIn">Stream to serialize the diagram into.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.LoadSoap(System.IO.Stream,System.Exception@)">
            <summary>
            Loads the diagram from a stream in SOAP format.
            </summary>
            <param name="strmIn">Stream to serialize the diagram into.</param>
            <param name="exception">Get the exception during deserialization if exception occurs</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.LoadSoap(System.String)">
            <summary>
            Loads the diagram from a file in SOAP format.
            </summary>
            <param name="fileName">Name of file to load from.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.LoadSoap(System.String,System.Exception@)">
            <summary>
            Loads the diagram from a file in SOAP format.
            </summary>
            <param name="fileName">Name of file to load from.</param>
            <param name="exception">Get the exception during deserialization if exception occurs</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.SaveBinary(System.IO.Stream)">
            <summary>
            Saves the diagram to a stream in binary format.
            </summary>
            <param name="strmOut">Stream to serialize the diagram into.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.SaveBinary(System.String)">
            <summary>
            Saves the diagram to a file in binary format.
            </summary>
            <param name="fileName">Name of file to save to.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.LoadBinary(System.IO.Stream)">
            <summary>
            Loads the diagram from a stream in binary format.
            </summary>
            <param name="strmIn">Stream to serialize the diagram from.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.LoadBinary(System.IO.Stream,System.Exception@)">
            <summary>
            Loads the diagram from a stream in binary format.
            </summary>
            <param name="strmIn">Stream to serialize the diagram from.</param>
            <param name="exception">Get the exception during deserialization if exception occurs</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.LoadBinary(System.String)">
            <summary>
            Loads the diagram from a file in binary format.
            </summary>
            <param name="fileName">Name of file to load from.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.LoadBinary(System.String,System.Exception@)">
            <summary>
            Loads the diagram from a file in binary format.
            </summary>
            <param name="fileName">Name of file to load from.</param>
            <param name="exception">Get the exception during deserialization if exception occurs</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ExportDiagramAsImage(System.Boolean)">
            <summary>
            Exports a representation of the Diagram as a image.
            </summary>
            <param name="bClipModelBounds">Indicates whether image will be clipped by model bounds.</param>
            <returns>Diagram representation as Image</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ExportDiagramAsImage(System.Boolean,System.Drawing.Imaging.PixelFormat)">
            <summary>
            Exports a representation of the Diagram as a image with given format.
            </summary>
            <param name="bClipModelBounds">Indicates whether image will be clipped by model bounds.</param>
            <param name="pixelFormat"> given pixel format</param>
            <returns>Diagram representation as Image</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ExportDiagramToGraphics(System.Drawing.Graphics)">
            <summary>
            Renders a representation of the Diagram onto the provided <see cref="T:System.Drawing.Graphics"/> object.
            </summary>
            <param name="grfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ExportDiagramToGraphics(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Renders a representation of the Diagram onto the provided <see cref="T:System.Drawing.Graphics"/>
            object to specified rectangle.
            </summary>
            <param name="grfx">Graphics to draw on.</param>
            <param name="rcArea">The area.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.CreatePrintDocument">
            <summary>
            Creates an instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.DiagramPrintDocument"/> and initializes it
            with the diagram's view.
            </summary>
            <returns>Diagram print document</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnViewMagnificationChanged(Syncfusion.Windows.Forms.Diagram.ViewMagnificationEventArgs)">
            <summary>
            Raises the <see cref="E:ViewMagnificationChanged"/> event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ViewMagnificationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnViewOriginChanged(Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs)">
            <summary>
            Raises the <see cref="E:ViewOriginChanged"/> event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnViewPropertyChanged(Syncfusion.Windows.Forms.Diagram.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ViewPropertyChanged"/> event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.EventSink_SizeChanged(Syncfusion.Windows.Forms.Diagram.SizeChangedEventArgs)">
            <summary>
            Events the sink_ size changed.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.SizeChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.EventSink_NodeCollectionChanged(Syncfusion.Windows.Forms.Diagram.CollectionExEventArgs)">
            <summary>
            Fires when node collection is changed.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.CollectionExEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.EventSink_RotationChanged(Syncfusion.Windows.Forms.Diagram.RotationChangedEventArgs)">
            <summary>
            Fires when node is rotated.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.RotationChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.EventSink_PinOffsetChanged(Syncfusion.Windows.Forms.Diagram.PinOffsetChangedEventArgs)">
            <summary>
            Fires when pin offset is changed.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.PinOffsetChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.EventSink_PinPointChanged(Syncfusion.Windows.Forms.Diagram.PinPointChangedEventArgs)">
            <summary>
            Fires when pin point is changed.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.PinPointChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.BridgeManager_BridgeGenerationCompleted(System.Object,System.EventArgs)">
            <summary>
            Handles the BridgeGenerationCompleted event of the BridgeManager control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.LinkManager_SynhronizeCompleted(System.Object,System.EventArgs)">
            <summary>
            Handles the SynhronizeCompleted event of the LinkManager control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.EventSink_DocumentEndUpdate(System.Object,System.EventArgs)">
            <summary>
            Handles the DocumentEndUpdate event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.EventSink_DocumentBeginUpdate(System.Object,System.EventArgs)">
            <summary>
            Handles the DocumentBeginUpdate event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnLayoutUpdated(System.Object,System.EventArgs)">
            <summary>
            Called after the layout manager updates the model.
            </summary>
            <param name="sender">Layout manager sending the event.</param>
            <param name="evtArgs">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.DefaultContextMenu_Click(System.Object,System.EventArgs)">
            <summary>
            Called when a context menustrip item is clicked.
            </summary>
            <param name="sender">Sender.</param>
            <param name="evtArgs">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ConvertToScrollRanges(System.Drawing.PointF)">
            <summary>
            Convert origin position to scroll coordinates using ScrollGranularity.
            </summary>
            <param name="ptPoint">View origin.</param>
            <returns>Origin in scroll coordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ConvertFromScrollRanges(System.Drawing.PointF)">
            <summary>
            Convert origin position from scroll to view cooridnates using ScrollGranularity.
            </summary>
            <param name="ptPoint">Scroll origin to covert.</param>
            <returns>Origin in view coordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.GetUnvisibleSize">
            <summary>
            Get scroll offset what need to scroll document to the bounds.
            Calc using formula: all bounds size minus visible model bounds.
            </summary>
            <returns>Size of scroll offset in pixel units.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ResetScrollPosition">
            <summary>
            Set default document spaces and scroll minimum and maximum value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.UpdateScrollRange">
            <summary>
            This method sets the range on the horizontal and vertical scrollbars.
            </summary>
            <remarks>
            The scroll range for the scrollbars is determined by the
            <see cref="P:Syncfusion.Windows.Forms.Diagram.View.VirtualSize"/> property
            of the view and the
            <see cref="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ScrollGranularity"/>
            property.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.UpdateScrolls(System.Drawing.PointF)">
            <summary>
            Update the scroll position from new origin.
            </summary>
            <param name="ptNewOrigin">The new origin position.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.UpdateOrigin(System.Drawing.PointF,System.Windows.Forms.ScrollBars)">
            <summary>
            Update origin value to current scroll position.
            </summary>
            <param name="ptScrollOrigin">Current scroll origin in scroll coordinates.</param>
            <param name="scrollbars">Indicate what scrollbar value need to update.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnHScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Called when the horizontal scrollbar is moved.
            </summary>
            <param name="sender">Object sending the event.</param>
            <param name="se">Event arguments.</param>
            <remarks>
            Scrolls the window origin by the specified amount.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnHScrollBarValueChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the value of the horizontal scroll bar changes.
            </summary>
            <param name="sender">Object sending the event.</param>
            <param name="e">Event arguments.</param>
            <remarks>
            Updates the
            <see cref="P:Syncfusion.Windows.Forms.Diagram.View.Origin"/>
            property of the view.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnVScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Called when the vertical scrollbar is moved.
            </summary>
            <param name="sender">Object sending the event.</param>
            <param name="se">Event arguments.</param>
            <remarks>
            Scrolls the window origin by the specified amount.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnVScrollBarValueChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the value of the vertical scroll bar changes.
            </summary>
            <param name="sender">Object sending the event.</param>
            <param name="e">Event arguments.</param>
            <remarks>
            Updates the
            <see cref="P:Syncfusion.Windows.Forms.Diagram.View.Origin"/>
            property of the view.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnMouseWheelZoom(Syncfusion.Windows.Forms.MouseWheelZoomEventArgs)">
            <summary>
            Called when the diagram is zoomed through mouse wheel.
            </summary>
            <param name="e">MouseWheelZoomEventArgs</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.UpdateScrollBoundsToContent">
            <summary>
            Updates the virual scroll bounds to model content.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Called when the mouse enters the diagram during a drag operation.
            </summary>
            <param name="e">Event arguments.</param>
            <remarks>
            Looks to see if a
            <see cref="T:Syncfusion.Windows.Forms.Diagram.NodeCollection"/> is
            available in the System.Windows.Forms.IDataObject provided in the
            event arguments. If so, the aggregate bounds of the nodes is
            calculated and a tracking rectangle is created to track the nodes
            as they are dragged across the diagram.
            <seealso cref="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnDragDrop(System.Windows.Forms.DragEventArgs)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnDragLeave(System.EventArgs)"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Called when objects are dropped onto the diagram.
            </summary>
            <param name="e">Event arguments.</param>
            <remarks>
            Looks to see if a
            <see cref="T:Syncfusion.Windows.Forms.Diagram.NodeCollection"/> is
            available in the System.Windows.Forms.IDataObject provided in the
            event arguments. If so, the NodeCollection is retrieved and
            added to the diagram.
            <seealso cref="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnDragEnter(System.Windows.Forms.DragEventArgs)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnDragLeave(System.EventArgs)"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnDragLeave(System.EventArgs)">
            <summary>
            Called when mouse leaves the diagram during a drag operation.
            </summary>
            <param name="e">Event arguments.</param>
            <remarks>
            Clears the tracking rectangle.
            <seealso cref="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnDragEnter(System.Windows.Forms.DragEventArgs)"/>
            <seealso cref="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnDragDrop(System.Windows.Forms.DragEventArgs)"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Called when objects are dragged over the control.
            </summary>
            <param name="e">Event arguments.</param>
            <remarks>
            Updates tracking when objects are dragged over the diagram.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.GetDropNodePosition(Syncfusion.Runtime.InteropServices.WinAPI.POINT)">
            <summary>
            Gets the position of drop node
            </summary>
            <param name="ptClient">Mouse position</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.DrawDropNode(System.Drawing.Graphics)">
            <summary>
            Draws the dragging node.
            </summary>
            <param name="gfx">graphics</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.MVCInit">
            <summary>
            Wires up the model, view, and controller and performs necessary initialization.
            </summary>
            <remarks>
            This method does not create the model, view, and controller objects. It assumes
            that the mode, view, and controller objects have already been created.
            This method hooks the model to the view and hooks the view to the
            controller.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.MVCDispose">
            <summary>
            Destroys the model, view, and controller and ensures that they are completely
            disconnected from the diagram control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.SubscribeForModelEvents(Syncfusion.Windows.Forms.Diagram.Model)">
            <summary>
            Subscribes for model events.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.UnsubscribeForModelEvents(Syncfusion.Windows.Forms.Diagram.Model)">
            <summary>
            Unsubscribes for model events.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.HookViewEvents">
            <summary>
            Hooks up event handlers to the view.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.UnhookViewEvents">
            <summary>
            Unhooks event handlers from the view.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when the control needs to paint the window.
            </summary>
            <param name="e">Event arguments.</param>
            <remarks>
            This method draws the view onto the System.Drawing.Graphics
            object provided by the System.Windows.Forms.PaintEventArgs
            parameter. The view is drawn by calling the
            <see cref="M:Syncfusion.Windows.Forms.Diagram.View.Draw(System.Drawing.Graphics,System.Drawing.RectangleF)"/>
            method.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OutlineBoundingRectangle(System.Drawing.Graphics,Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Outlines the bounding rectangle.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
            <param name="node">The node.</param>
            <param name="bWithoutRotation">if set to <c>true</c> to draw outline bounds without rotation.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.RenderRulers(System.Drawing.Graphics)">
            <summary>
            Renders the rulers.
            </summary>
            <param name="gfx">The graphics.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when the control needs to clear the background.
            </summary>
            <param name="pevent">Event arguments.</param>
            <remarks>
            This method does nothing. It is overridden to prevent the
            control from painting the background in order to eliminate
            flicker.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnSizeChanged(System.EventArgs)">
            <summary>
            Called when the control is resized.
            </summary>
            <param name="e">Event arguments.</param>
            <remarks>
            Updates the size of the
            <see cref="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.View"/>
            to match the new size of the control.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnDiagramInitialized(System.Object,System.EventArgs)">
            <summary>
            Called when diagram is initialized
            </summary>
            <param name="sender">The sender</param>
            <param name="evtArgs">Event args</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnShowContextMenu(Syncfusion.Windows.Forms.ShowContextMenuEventArgs)">
            <summary>
            Raises the ShowContextMenu event when the user right-clicks inside
            the control.
            </summary>
            <param name="e">Context menu event args.</param>
            <remarks>
            Raises the ShowContextMenu event when the user right-clicks inside
            the control.
            <para/>
            You can cancel showing a content menu when
            you assign True to <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>.<para/></remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Processes a command key.
            </summary>
            <param name="msg">A <see cref="T:System.Windows.Forms.Message"/>, passed by reference, that represents the window message to process.</param>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values that represents the key to process.</param>
            <returns>
            true if the character was processed by the control; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Determines whether the specified key is a regular input key or a special key that requires preprocessing.
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values.</param>
            <returns>
            true if the specified key is a regular input key; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyPress"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnSetCursor(System.Windows.Forms.Message@)">
            <summary>
            OnSetCursor. Overriden
            </summary>
            <param name="m">The Message</param>
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the mouse leave event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseEnter"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the Mouse Down event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the mouse up event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the mouse move event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Click"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.DoubleClick"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the Lost Focus event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the Got Focus event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.GetService(System.Type)">
            <summary>
            Returns an object that represents a service provided by the <see cref="T:System.ComponentModel.Component"/> or by its <see cref="T:System.ComponentModel.Container"/>.
            </summary>
            <param name="service">A service provided by the <see cref="T:System.ComponentModel.Component"/>.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents a service provided by the <see cref="T:System.ComponentModel.Component"/>, or null if the <see cref="T:System.ComponentModel.Component"/> does not provide the specified service.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message"/> to process.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.BeginUpdate(Syncfusion.Windows.Forms.BeginUpdateOptions)">
            <summary>
            Suspends the painting of the control until the <see cref="M:Syncfusion.Windows.Forms.ScrollControl.EndUpdate"/> method is called.
            </summary>
            <param name="options">Specifies the painting support during the BeginUpdate, EndUpdate batch.</param>
            <remarks><para>When many paints are made to the appearance of a control, you should invoke the
            BeginUpdate method to temporarily freeze the drawing of the control. This results
            in less distraction to the user and a performance gain. After all updates have
            been made, invoke the EndUpdate method to resume drawing of the control.</para><para>
            Pass BeginUpdateOptions if you do not want to do a complete Refresh of the control and instead
            want to have certain regions of your control be invalidated or scroll the contents of control.</para>
            If you call BeginUpdate() and then later EndUpdate(), the control will know if a paint is pending and only
            refresh the control if a paint is pending. Calling ShouldPrepareUpdate, Invalidate or a WM_PAINT message during
            the BeginUpdate EndUpdate block will signal the control that a paint is pending.
            </remarks>
            <seealso cref="M:Syncfusion.Windows.Forms.ScrollControl.ShouldPrepareUpdate"/>
            <seealso cref="M:Syncfusion.Windows.Forms.ScrollControl.EndUpdate"/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.EndUpdate(System.Boolean)">
            <summary>
            Resumes the painting of the control suspended by calling the BeginUpdate method.
            </summary>
            <param name="update">true, if update is suspended.</param>
            <remarks>
            When many paint are made to the appearance of a control you should invoke the
            BeginUpdate method to temporarily freeze the drawing of the control. This results
            in less distraction to the user, and a performance gain. After all updates have
            been made, invoke the EndUpdate method to resume drawing of the control.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.GetPropertyContainerByName(System.String)">
            <summary>
            Gets the property container by name.
            </summary>
            <param name="strPropertyContainerName">Name of the property container.</param>
            <returns>Object that contains the name of the property container.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.GetPropertyContainer(System.String)">
            <summary>
            Gets the property container.
            </summary>
            <param name="strPropertyContainerName">Name of the property container.</param>
            <returns>Object containing the property container.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnPropertyChanging(System.String,System.String,System.Object)">
            <summary>
            Called when property is changing.
            </summary>
            <param name="strPropertyFullPath">The full path.</param>
            <param name="strPropertyName">The Name.</param>
            <param name="oldValue">The old value.</param>
            <returns>true, if property changing</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnPropertyChanged(System.String,System.String)">
            <summary>
            Called when property is changed.
            </summary>
            <param name="strPropertyFullPath">The full path.</param>
            <param name="strPropertyName">The property name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.BeginQuiteMode(System.Boolean@)">
            <summary>
            Enable quite mode.
            </summary>
            <param name="bBringinEnable">Briging enable flag.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.EndQuiteMode(System.Boolean)">
            <summary>
            Disable quite mode.
            </summary>
            <param name="bBringinEnable">Bridging enable flag.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnPropertyChanging(System.String,System.Object)">
            <summary>
            Called when property changing.
            </summary>
            <param name="strPropertyName">Name of the property.</param>
            <param name="newValue">The new value.</param>
            <returns>true, if property is changing.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.OnPropertyChanged(System.String)">
            <summary>
            Called when property changed.
            </summary>
            <param name="strPropertyName">Name of the property.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.DrawHandles(System.Drawing.Graphics,Syncfusion.Windows.Forms.Diagram.NodeCollection)">
            <summary>
            Draws the handles to graphics.
            </summary>
            <param name="grfx">Graphics to draw on.</param>
            <param name="nodesSelected">The nodes selected.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ProcessTabKey(System.Boolean)">
            <summary>
            Processes Tab key.
            </summary>
            <param name="bShiftKeyPressed">Indicates whether SHIFT key is pressed.</param>
            <returns>true, if TAB key is pressed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ProcessEscapeKey">
            <summary>
            Processes Escape key.
            </summary>
            <returns>true, if process ESCAPE key.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ProcessRightKey(System.Boolean)">
            <summary>
            Processes Right key.
            </summary>
            <param name="bShiftKeyPressed">Indicates whether SHIFT key is pressed.</param>
            <returns>true, if process right key.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ProcessLeftKey(System.Boolean)">
            <summary>
            Processes Left key.
            </summary>
            <param name="bShiftKeyPressed">Indicates whether SHIFT key is pressed.</param>
            <returns>true, if process left key.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ProcessDownKey(System.Boolean)">
            <summary>
            Processes Down key.
            </summary>
            <param name="bShiftKeyPressed">Indicates whether SHIFT key is pressed.</param>
            <returns>true, if process down key.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ProcessUpKey(System.Boolean)">
            <summary>
            Processes Up key.
            </summary>
            <param name="bShiftKeyPressed">Indicates whether SHIFT key is pressed.</param>
            <returns>true, if process Up key.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ProcessEnterKey(System.Boolean)">
            <summary>
            Processes Enter key.
            </summary>
            <param name="bShiftKeyPressed">Indicates whether SHIFT key is pressed.</param>
            <returns>true, if process ENTER key.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.CanPerformMoving">
            <summary>
            Checks if move operation can be done.
            </summary>
            <returns>value specifying if we can perform move operation</returns>
            <remarks>
            If we are editing text from Text or RichText node skip moving
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.IsEditing">
            <summary>
            Determines whether this instance is editing.
            </summary>
            <returns>
            <c>true</c> if this instance is editing; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Binding">
            <summary>
            Gets or Sets Bind to get Diagram
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Document">
            <summary>
            Gets or sets the current diagram document that contain 
            Model, View and Controller components.
            </summary>
            <value>The diagram document.</value>
            <remarks>
            Uses to open document in design mode. Can be null.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.HorizontalRuler">
            <summary>
            Gets or sets the horizontal ruler.
            </summary>
            <value>The horizontal ruler.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.AllowDrop">
            <summary>
            Gets or sets a value indicating whether the control accept data that user drags and drops onto it.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.VerticalRuler">
            <summary>
            Gets or sets the vertical ruler.
            </summary>
            <value>The vertical ruler.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.FocusManager">
            <summary>
            Gets the focus manager reference.
            </summary>
            <value>The focus manager.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.View">
            <summary>
            Gets or sets the view is responsible for rendering the model onto a window.
            </summary>
            <remarks>
            A view is set inside of a window and has bounds that are measured
            in device coordinates. The view renders itself onto a
            System.Drawing.Graphics object. The view is created by calling the
            virtual method
            <see cref="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.CreateView"/>.
            The CreateView method can be overridden in derived classes in order to
            plug custom views into the diagram.
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.View"/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.LayoutManager">
            <summary>
            Gets or sets layout manager responsible for updating the layout of the diagram.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ScrollGranularity">
            <summary>
            Gets or sets the level of granularity for scrolling.
            </summary>
            <remarks>
            This value is to scale the scroll range of the scroll bars. The value
            of this property must be greater than 0. This value is multiplied by
            virtual size of the view in order to get the scroll range. For example,
            if the virtual size of the view is 100x50 and this property is set to
            0.5f, then the horizontal scroll range is set to 0..50 and the vertical
            scroll range is set to 0..25.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.NudgeIncrement">
            <summary>
            Gets or sets number of logical units to move nodes during a nudge operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.BackgroundImage">
            <summary>
            Gets or sets the background image displayed in the control.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Drawing.Image"></see> that represents the image to display in the background of the control.</returns>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/></PermissionSet>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout"></see> enumeration.
            </summary>
            <value></value>
            <returns>One of the values of <see cref="T:System.Windows.Forms.ImageLayout"></see> (<see cref="F:System.Windows.Forms.ImageLayout.Center"></see> , <see cref="F:System.Windows.Forms.ImageLayout.None"></see>, <see cref="F:System.Windows.Forms.ImageLayout.Stretch"></see>, <see cref="F:System.Windows.Forms.ImageLayout.Tile"></see>, or <see cref="F:System.Windows.Forms.ImageLayout.Zoom"></see>). <see cref="F:System.Windows.Forms.ImageLayout.Tile"></see> is the default value.</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified enumeration value does not exist. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/></PermissionSet>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ScrollVirtualBounds">
            <summary>
            Gets or sets the bounds of scrollable area. Can be set only positive values.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.DefaultContextMenuEnabled">
            <summary>
            Gets or sets a value indicating whether view default context menu.
            </summary>
            <value><c>true</c> if show default context menu; otherwise, <c>false</c>.</value>        
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.TouchMode">
            <summary>
            Gets or sets the value indicating that whether the touch mode is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.EventSink">
            <summary>
            Gets the reference to viewer event sink.
            </summary>
            <value>The event sink.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.RulersHeight">
            <summary>
            Gets or sets the height of the rulers.
            </summary>
            <value>The height of the rulers.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.ShowRulers">
            <summary>
            Gets or sets a value indicating whether view show horizontal and vertical rulers.
            </summary>
            <value><c>true</c> if show rulers; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Origin">
            <summary>
            Gets the view origin.
            </summary>
            <value>The origin.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Magnification">
            <summary>
            Gets the magnification percent.
            </summary>
            <value>The magnification percent.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Controller">
            <summary>
            Gets or sets the controller processes input and translates it into commands and actions
            on the model and view.
            </summary>
            <remarks>
            The controller defines the user interface. It is created by calling the
            virtual method's
            <see cref="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.CreateController"/>.
            The CreateController method can be overridden in derived classes in order to
            plug custom controllers into the diagram.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.Model">
            <summary>
            Gets or sets the model contains the hierarchy of graphical nodes that are rendered
            onto the view and manipulated by the controller.
            </summary>
            <remarks>
            The model contains the data portion of a diagram. When a diagram is
            persisted, it is the Model that is serialized. The model is created
            by calling the virtual method
            <see cref="M:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.CreateModel"/>.
            The CreateModel method can be overridden in derived classes in order to
            plug custom models into the diagram.
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Model"/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.FocusNodeOnTab">
            <summary>
            Gets or sets the Tab behavior needed for diagram control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.CanCut">
            <summary>
            Gets a value indicating whether there are any selected nodes that can be removed from the
            the model.
            </summary>
            <remarks>
            Wrapper for
            <see cref="P:Syncfusion.Windows.Forms.Diagram.DiagramController.CanCut"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.CanCopy">
            <summary>
            Gets a value indicating whether there are any selected nodes that can be copied to the clipboard.
            </summary>
            <remarks>
            Wrapper for
            <see cref="P:Syncfusion.Windows.Forms.Diagram.DiagramController.CanCopy"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.CanPaste">
            <summary>
            Gets a value indicating whether there is any data in the clipboard that can be pasted
            into the model.
            </summary>
            <remarks>
            Wrapper for
            <see cref="P:Syncfusion.Windows.Forms.Diagram.DiagramController.CanPaste"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.Diagram.FullContainerName">
            <summary>
            Gets the full name of the container.
            </summary>
            <value>The full name of the container.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.DiagramInitializedEventHandler">
            <summary>
            Diagram initialized event handler delegate
            </summary>
            <param name="sender">The sender</param>
            <param name="evtArgs">Event args</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.Direction">
            <summary>
            Direction enums
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.Direction.Forward">
            <summary>
            Move forward
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.Direction.Backward">
            <summary>
            Move backward
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.NodeRenderLocationComparer">
            <summary>
            Node render location comparer.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.NameSpaceDoc">
            <summary>
            Interactive two-dimensional graphics control for diagramming, technical drawing, visualization, simulation, and technical drawing applications.
            This control provides a surface for rendering and manipulating 2D shapes, symbols, text, and images. The user interface supports drag-
            and-drop, scaling, rotation, zooming, grouping, ungrouping, connection points, and many other features.
            Activating user-interface tools is a task commonly performed by applications using this control. 
            A diagram is composed of three objects: the Model, View, Controller. The model-view-controller architecture provides a clear separation between
            data, visualization, and user interface. The model contains the data portion of the diagram, the view is responsible for rendering the diagram, and
            the controller handles user interaction. The model, view, and controller are accessible as properties in this control and can be manipulated
            directly. Some of the methods and properties in this class are just wrappers that call identical methods in the model, view, or controller. 
            For example,
            the following two lines of codes are equivalent:
            <code>
            diagram.Undo();
            Same as
            diagram.Controller.Undo();
            </code>
            This control provides the converter(Diagram Document Converter) returns whether this converter can convert the object to the specified type, using the specified context.
            Graphical objects can be added to a diagram in several ways. One way is
            through drag-and-drop. Symbols can be dragged from a paletteGroup view onto the diagram. Objects can also be added from the clipboard using the paste().
            method. Shapes can be drawn onto the diagram by activating one of several drawing tools such as the rectangle tool. 
            Objects can also be created programmatically and added to the diagram by calling the appendchid method.
            Objects can be displayed and editied in the diagram through property editor control.
            This provides a control(Overview Control) implements an overview window that provides a perspective view of the diagram model.The OverviewControl is initialized with a diagram model and a view, and upon display renders a view 
            of the diagram that is scaled to the control's bounds.The viewport's origin corresponds to the origin of the diagram's view and moving the viewport 
            will shift the view's origin by an equivalent extent.
            This control provides an interactive platform print set up consists of header and footer features and page set up control provides options to modify the page height, width and orientation while printing the document
            The History manager control is used to record the actions performed during diagramming.By calling the HistoryManager.Undo() method removes the command on the top of the undo stack and causes an undo
            to occur. The HistoryManager.Redo() method will redo the last command that was removed from the undo stack. The
            UndoCommand and RedoCommand methods are usually called in response to clicking Undo and Redo on the Edit menu.
            One advantage of the model-view-controller architecture is that the parts are interchangeable . Models, views, and controllers can be swapped in and out independently. 
            For example, the user interface of the diagram can be completely replaced by swapping in a different controller implementation. 
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.DiagramDocumentConverter">
            <summary>
            Type converter for a DiagramDocument.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DiagramDocumentConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DiagramDocumentConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DiagramDocumentConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DiagramDocumentConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DiagramDocumentConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"/> to create a new value, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            true if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)"/> to create a new value; otherwise, false.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.DiagramOpener">
            <summary>
            This class implements a design-time editor for opening a file containing
            a diagram document.
            </summary>
            <remarks>
            Use [Editor(typeof(PaletteOpener), typeof(System.Drawing.Design.UITypeEditor))] attribute.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DiagramOpener.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DiagramOpener.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer">
            <summary>
            This control is used to list all the nodes added the diagram model in a tree fashion.
            Its in-built contextmenu provides options to hide, rename, delete a node from the collection.
            It also provides support to add layers and delete or rename a layer through its context menu.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.m_models">
            <summary>
            Array of Models to display content of.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.AttachModel(Syncfusion.Windows.Forms.Diagram.Model)">
            <summary>
            Adds Model to DocumentExplorer
            </summary>
            <param name="model">Model to add</param>
            <returns>
            true - model successfully added
            false - adding model to document explorer failed
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.DetachModel(Syncfusion.Windows.Forms.Diagram.Model)">
            <summary>
            Removes Model from DocumentExplorerr
            </summary>
            <param name="model">Model to remove</param>
            <returns>
            true - model successfully removed
            false - removing model to document explorer failed
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.AddModel(Syncfusion.Windows.Forms.Diagram.Model)">
            <summary>
            Reflects given model's hierarchy in TreeView
            </summary>
            <param name="model">model to reflect hierarchy of</param>
            <returns>
            true - model successfully added
            false - adding model failed
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.ParseModel(Syncfusion.Windows.Forms.Diagram.Model,System.Windows.Forms.TreeNode)">
            <summary>
            Parses model representation
            </summary>
            <param name="model">model to parse</param>
            <param name="nodeModel">TreeNode representing model ( root node for adding model )</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.ParseLayers(Syncfusion.Windows.Forms.Diagram.Model,System.Windows.Forms.TreeNode)">
            <summary>
            Parses the layers.
            </summary>
            <param name="model">The model.</param>
            <param name="nodeModel">The node model.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.ParseLayers(Syncfusion.Windows.Forms.Diagram.LayerCollection,System.Windows.Forms.TreeNode)">
            <summary>
            Parses the layers.
            </summary>
            <param name="layers">The layers.</param>
            <param name="nodeLayersParent">The node layers parent.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.ParseLayers(System.Collections.ICollection,System.Windows.Forms.TreeNode)">
            <summary>
            Parses the layers.
            </summary>
            <param name="layers">The layers.</param>
            <param name="nodeLayersParent">The node layers parent.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.ParseLayer(Syncfusion.Windows.Forms.Diagram.Layer,System.Windows.Forms.TreeNode)">
            <summary>
            Parses the layer.
            </summary>
            <param name="layer">The layer.</param>
            <param name="nodeLayersParent">The node layers parent.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.ParseChildren(Syncfusion.Windows.Forms.Diagram.Model,System.Windows.Forms.TreeNode)">
            <summary>
            Parses model's node collection
            </summary>
            <param name="model">model to parse node collection of</param>
            <param name="nodeModel">TreeNode to add node collection corresponding TreeNodes into</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.ParseChildren(Syncfusion.Windows.Forms.Diagram.NodeCollection,System.Windows.Forms.TreeNode)">
            <summary>
            Parses the children.
            </summary>
            <param name="nodes">The nodes.</param>
            <param name="nodesParent">The nodes parent.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.ParseChildren(System.Collections.ICollection,System.Windows.Forms.TreeNode)">
            <summary>
            Parses the children.
            </summary>
            <param name="nodes">The nodes.</param>
            <param name="nodesParent">The nodes parent.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.ParseChildren(Syncfusion.Windows.Forms.Diagram.ICompositeNode,System.Windows.Forms.TreeNode)">
            <summary>
            Parses the children.
            </summary>
            <param name="nodeComposite">The node composite.</param>
            <param name="nodesParent">The nodes parent.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.FindTreeNode(Syncfusion.Windows.Forms.Diagram.Model,Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.TreeNodeType,Syncfusion.Windows.Forms.Diagram.INode)">
            <summary>
            Searches for TreeNode corresponding model node.
            </summary>
            <param name="model">The model.</param>
            <param name="nodeType">Type of the node.</param>
            <param name="node">The node.</param>
            <returns>The node found</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.FindTreeNode(System.Windows.Forms.TreeNode,Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.TreeNodeType,System.Object)">
            <summary>
            Finds the tree node.
            </summary>
            <param name="nodeModel">The node model.</param>
            <param name="nodeType">Type of the node.</param>
            <param name="searchSubject">The search subject.</param>
            <returns>The node found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.FindTreeNode(System.Windows.Forms.TreeNode,System.Object)">
            <summary>
            Finds the tree node.
            </summary>
            <param name="nodeSubRoot">The node sub root.</param>
            <param name="searchSubject">The search subject.</param>
            <returns>The node found.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.FindModelCorrespondingTreeNode(Syncfusion.Windows.Forms.Diagram.Model)">
            <summary>
            Looks for given model's corresponding TreeNode.
            </summary>
            <param name="model">model to look for corresponding treenode</param>
            <returns>
            Null - if match not found,
            otherwise - match tree node
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.CreateLayersPopUpMenu">
            <summary>
            Creates the layers pop up menu.
            </summary>
            <returns>The context menu.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.CreateLayerPopUpMenu(Syncfusion.Windows.Forms.Diagram.Layer)">
            <summary>
            Creates the layer pop up menu.
            </summary>
            <param name="forLayer">For layer.</param>
            <returns>The context menu</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.CreateNodePopUpMenu(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Creates the node pop up menu.
            </summary>
            <param name="forNode">For node.</param>
            <returns>The context menu</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.SubscribeForModelEvents(Syncfusion.Windows.Forms.Diagram.Model)">
            <summary>
            Subscribes for model events.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.UnSubscribeForModelEvents(Syncfusion.Windows.Forms.Diagram.Model)">
            <summary>
            Unsubscribe for model events.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.AddToModelsArray(Syncfusion.Windows.Forms.Diagram.Model)">
            <summary>
            Adds to models array.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.TreeNodeType">
            <summary>
            Tree node types.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.TreeNodeType.Node">
            <summary>
            Symbol node
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.TreeNodeType.Layer">
            <summary>
            Single Layer 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.TreeNodeType.NodeCollection">
            <summary>
            Node collection
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.DocumentExplorer.TreeNodeType.LayersCollection">
            <summary>
            Layer collection
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl">
            <summary>
            <para>
            The OverviewControl class implements an overview window that provides a perspective view of the diagram model. 
            The OverviewControl is initialized with a diagram model and a view, and upon display renders a view 
            of the diagram that is scaled to the control's bounds.
            </para>
            <para>
            The control has a Viewport window that is positioned over the diagram display and can be moved and / or resized 
            using the mouse to dynamically change the view transform that maps the diagram's world coordinates onto the 
            view coordinates. The viewport's origin corresponds to the origin of the diagram's view and moving the viewport 
            will shift the view's origin by an equivalent extent. The viewport's size is proportional to the view's 
            magnification and resizing the viewport allows the view to be zoomed in and out.
            </para>
            <seealso cref="P:Syncfusion.Windows.Forms.Diagram.View.Origin"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Diagram.View.Magnification"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.c_strDRAW_PORTS">
            <summary>
            Name of the field used to store DrawPorts property value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.bRedrawBuffer">
            <summary>
            Bitmap Buffer drawing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.ptDragStart">
            <summary>
            Viewport dragging.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.scaleFactor">
            <summary>
            Model to Viewport Scaling factor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.SubscribeDiagramEvents(System.Boolean)">
            <summary>
            Subscribes the diagram events.
            </summary>
            <param name="subscribe">if set to <c>true</c> subscribe events.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.SubscribeModelEvents(System.Boolean)">
            <summary>
            Subscribes the model events.
            </summary>
            <param name="subscribe">if set to <c>true</c> subscribe events.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.SubscribeViewEvents(System.Boolean)">
            <summary>
            Subscribes the view events.
            </summary>
            <param name="subscribe">if set to <c>true</c> subscribe events.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.OnModelChildrenChangeComplete(Syncfusion.Windows.Forms.Diagram.CollectionExEventArgs)">
            <summary>
            Raises the <see cref="E:ModelChildrenChangeComplete"/> event.
            </summary>
            <param name="evtargs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.CollectionExEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.OnModelPropertyChanged(Syncfusion.Windows.Forms.Diagram.PropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ModelPropertyChanged"/> event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.OnModelDisposed(System.Object,System.EventArgs)">
            <summary>
            Called when model is disposed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="evtargs">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.OnViewOriginChanged(Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs)">
            <summary>
            Raises the <see cref="E:ViewOriginChanged"/> event.
            </summary>
            <param name="evtargs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.OnViewMagnificationChanged(Syncfusion.Windows.Forms.Diagram.ViewMagnificationEventArgs)">
            <summary>
            Raises the <see cref="E:ViewMagnificationChanged"/> event.
            </summary>
            <param name="evtargs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ViewMagnificationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.Diagram_SizeChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SizeChanged event of the diagram control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.OnViewportBoundsChanging(System.Drawing.RectangleF@,System.Drawing.RectangleF)">
            <summary>
            Call the Viewport bounds changing event.
            </summary>
            <param name="newRect">New ViewPort bounds</param>
            <param name="oldRect">Old ViewPort bounds</param>
            <returns>true, if bounds changed otherwise false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.DrawToBitmapBuffer(System.Drawing.Graphics)">
            <summary>
            Draws to bitmap buffer.
            </summary>
            <param name="gfx">The graphics.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.DrawDocument(System.Drawing.Graphics)">
            <summary>
            Draws the document.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.DrawViewport(System.Drawing.Graphics)">
            <summary>
            Draws the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl"/>'s viewport rectangle.
            </summary>
            <param name="grfx">A <see cref="T:System.Drawing.Graphics"/> object</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.ApplyViewportOriginToView">
            <summary>
            Applies the viewport origin to view.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.ApplyViewportZoomToView">
            <summary>
            Applies the viewport zoom to view.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.ApplyViewOriginToViewport">
            <summary>
            Applies the view origin to viewport.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.ApplyViewZoomToViewport">
            <summary>
            Applies the view zoom to viewport.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:MouseDown"/> event.
            </summary>
            <param name="meargs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:MouseMove"/> event.
            </summary>
            <param name="meargs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:MouseUp"/> event.
            </summary>
            <param name="meargs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Click"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:Paint"/> event.
            </summary>
            <param name="peargs">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control"/> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.
            </summary>
            <param name="x">The new <see cref="P:System.Windows.Forms.Control.Left"/> property value of the control.</param>
            <param name="y">The new <see cref="P:System.Windows.Forms.Control.Top"/> property value of the control.</param>
            <param name="width">The new <see cref="P:System.Windows.Forms.Control.Width"/> property value of the control.</param>
            <param name="height">The new <see cref="P:System.Windows.Forms.Control.Height"/> property value of the control.</param>
            <param name="specified">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified"/> values.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.RestoreDrawPortsValue(System.Collections.Hashtable,Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Restores the draw ports value.
            </summary>
            <param name="hash">The hash.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.RestoreDrawPortsValue(System.Collections.Hashtable,Syncfusion.Windows.Forms.Diagram.ICompositeNode)">
            <summary>
            Restores the draw ports value.
            </summary>
            <param name="hash">The hash.</param>
            <param name="nodeComposite">The node composite.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.UpdateDrawPortsValue(Syncfusion.Windows.Forms.Diagram.Node,System.Boolean)">
            <summary>
            Updates the draw ports value.
            </summary>
            <param name="node">The node.</param>
            <param name="bValue">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.UpdateDrawPorts(Syncfusion.Windows.Forms.Diagram.Node,System.Collections.Hashtable)">
            <summary>
            Updates the draw ports.
            </summary>
            <param name="node">The node.</param>
            <param name="hash">The hash with port flags where key - node, value - flag value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.UpdateDrawPorts(Syncfusion.Windows.Forms.Diagram.ICompositeNode,System.Collections.Hashtable)">
            <summary>
            Updates the draw ports.
            </summary>
            <param name="nodeComposite">The node composite.</param>
            <param name="hash">The hashtable where key is composite node, value is flag value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.UpdateDrawPorts(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Updates the draw ports.
            </summary>
            <param name="node">The node.</param>
            <returns>true, if update is needed.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.RecalculateOverviewBounds">
            <summary>
            Recalculates the overview bounds.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.DetachDiagram">
            <summary>
            Detaches the diagram.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.CalculateViewZoomToViewport(System.Drawing.RectangleF)">
            <summary>
            Calculate the view zoom to viewport rectangle.
            </summary>
            <param name="rect">The rect.</param>
            <returns>The viewport bounds</returns>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.ViewPortBoundsChanging">
            <summary>
            Occurs when view port bounds is changing.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.ViewPortBoundsChanged">
            <summary>
            Occurs when view port bounds is changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.Diagram">
            <summary>
            Gets or sets the diagram control.
            </summary>
            <value>The diagram.</value>  
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.Model">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Diagram.Model"/> that the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl"/> is initialized with.
            </summary>
            <value>The model.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.View">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Diagram.View"/> that the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl"/> is tied to.
            </summary>
            <value>The view.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl.ViewportBounds">
            <summary>
            Gets or sets the bounds of the OverviewControl's Viewport window.
            </summary>
            <value>The viewport bounds.</value>
            <remarks>
            The Viewport window location and size relative to the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl"/>'s diagram display
            determine the <see cref="P:Syncfusion.Windows.Forms.Diagram.View.Origin"/> and <see cref="P:Syncfusion.Windows.Forms.Diagram.View.Magnification"/> property values
            for the diagram's <see cref="T:Syncfusion.Windows.Forms.Diagram.View"/>.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.RectMarkers">
            <summary>
            Rectangle marker
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.RectMarkers.None">
            <summary>
            No marker.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.RectMarkers.LTCorner">
            <summary>
            Left corner.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.RectMarkers.RTCorner">
            <summary>
            Right corner.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.RectMarkers.RBCorner">
            <summary>
            Right bottom corner.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.RectMarkers.LBCorner">
            <summary>
            Left bottom corner.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.RectMarkers.LeftEdge">
            <summary>
            Left edge.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.RectMarkers.TopEdge">
            <summary>
            Top edge.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.RectMarkers.RightEdge">
            <summary>
            Right edge.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.RectMarkers.BottomEdge">
            <summary>
            Bottom edge.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.RectMarkers.Viewport">
            <summary>
            View port.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.ViewportRenderer">
            <summary>
            Viewport renderer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.ViewportRenderer.hostCtrl">
            <summary>
            Overview control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.ViewportRenderer.#ctor(Syncfusion.Windows.Forms.Diagram.Controls.OverviewControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.ViewportRenderer"/> class.
            </summary>
            <param name="hostctrl">The host control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.ViewportRenderer.DrawViewport(System.Drawing.Graphics,System.Drawing.Color)">
            <summary>
            Draws the viewport to graphics.
            </summary>
            <param name="grfx">Graphics to draw on.</param>
            <param name="brushclr">The brush color.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.ViewportRenderer.ViewportRect">
            <summary>
            Gets or sets the viewport rectangle.
            </summary>
            <value>The viewport rectangle.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.ViewportRenderer.SizingRect">
            <summary>
            Gets or sets the sizing rect.
            </summary>
            <value>The sizing rect.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar">
            <summary>
            Displays a collection of symbol palettes that the symbol models contain
            in a GroupBar control.
            </summary>
            <remarks>
            <para>
            This class is derived from Syncfusion.Windows.Forms.Tools.GroupBar and
            provides an implementation for displaying symbol palettes and the symbol
            models they contain. Each symbol palette corresponds to a single panel
            (i.e. GroupView) inside of the GroupBar. Each entry in a panel corresponds
            to a symbol model inside of a symbol palette.
            </para>
            <para>
            The user interface looks and behaves like an Outlook bar. Each symbol
            palette is a list of symbols that have an icon and a label. If the
            <see cref="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.EditMode"/>
            flag is False, the PaletteGroupBar allows symbols to be dragged from
            this control onto diagrams.
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.Clear">
            <summary>
            Removes all symbol palettes from the GroupBar.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.AddPalette(Syncfusion.Windows.Forms.Diagram.SymbolPalette)">
            <summary>
            Adds an existing symbol palette to the GroupBar.
            </summary>
            <param name="symbolPalette">Symbol palette to add.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.AddPalette(System.String)">
            <summary>
            Adds a new symbol palette to the GroupBar with the given name.
            </summary>
            <param name="paletteName">Name of symbol palette to create.</param>
            <returns>Symbol palette to be added to groupbar.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.AddPalette">
            <summary>
            Adds a new symbol palette to the GroupBar after prompting the user for
            the name of the new symbol palette to create.
            </summary>
            <returns>Symbol palette to be added to groupbar.</returns>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteAddDlg"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.LoadPalette(System.String)">
            <summary>
            Loads a symbol palette from disk and adds it to the group bar.
            </summary>
            <param name="fileName">Name of symbol palette file to load.</param>
            <returns>PaletteGroupView created to hold the symbol palette.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.GetPalette(System.Int32)">
            <summary>
            Returns the symbol palette at the given index.
            </summary>
            <param name="paletteIdx">Zero-based index into the collection of symbol palettes loaded into the GroupBar control.</param>
            <returns>SymbolPalette object or NULL if paletteIdx parameter is out of range.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.SelectNode(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Set the selected symbol model to the one matching the given symbol model name.
            </summary>
            <param name="node">Node to select.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.Diagram">
            <summary>
            Gets or sets the diagram control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.ShowDragNodeCue">
            <summary>
            Gets or sets a value indicating whether dragged node cue is visible or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.DragNodeCueEnabled">
            <summary>
            Gets or sets a value indicating whether dragged node cue is enabled or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.Magnification">
            <summary>
            Gets or sets drag cue's magnification (zoom) values on a scale of 1 to n.
            </summary>        
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.EditMode">
            <summary>
            Gets or sets a value indicating whether or not the symbols can be dragged from the palette
            onto a diagram.
            </summary>
            <remarks>
            <para>
            When this property is set to True, the palette is being edited and symbols
            cannot be dragged onto a diagram. The Symbol Designer sets this flag to True.
            The typical setting for an application is False, which means that the palette
            is not being edited and symbols may be dragged onto a diagram.
            </para>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.CurrentSymbolPalette">
            <summary>
            Gets the currently selected symbol palette.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.PaletteCount">
            <summary>
            Gets the number of symbol palettes loaded in the GroupBar control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.SelectedNode">
            <summary>
            Gets the currently selected symbol model.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.NodeSelected">
            <summary>
            Fired when the user selects a symbol model icon in a PaletteGroupBar component.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar.NodeDoubleClick">
            <summary>
            Fired when the user double clicks a symbol model icon in a PaletteGroupBar component.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView">
            <summary>
            Displays the symbol models belonging to a symbol palette in a GroupView.
            </summary>
            <remarks>
            <para>
            This class is derived from the Syncfusion.Windows.Forms.Tools.GroupView
            class. A GroupView is a control that contains a list of icons and labels
            that can be hosted in a GroupBar (Outlook bar).
            </para>
            <para>
            This class provides an implementation that displays a list of symbol models
            that belong to a given symbol palette. Symbol models can be dragged from
            this control onto diagrams.
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView"/> class.
            </summary>
            <remarks>Added to facilitate opening palettes created using 2.x version.</remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.LoadPalette(System.String)">
            <summary>
            Loads a symbol palette from a file.
            </summary>
            <param name="filename">Name of file to load.</param>
            <returns>True if successful; otherwise False.</returns>
            <remarks>
            Deserializes a symbol palette from disk and loads it into this
            control.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.LoadPalette(Syncfusion.Windows.Forms.Diagram.SymbolPalette)">
            <summary>
            Loads the given symbol palette into this control.
            </summary>
            <param name="symbolPalette">SymbolPalette to load.</param>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.LoadPalette(System.Reflection.Assembly,System.String,System.String)">
            <summary>
            Loads a symbol palette from a resource file.
            </summary>
            <param name="assembly">Assembly containing the symbol palette.</param>
            <param name="baseName">Base name of resource.</param>
            <param name="resName">Name of resource.</param>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.LoadPalette(System.Byte[])">
            <summary>
            Loads a symbol palette from memory.
            </summary>
            <param name="strmData">Array of bytes containing serialized symbol palette.</param>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.SelectNode(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Set the selected symbol model to the one matching the given symbol
            model name.
            </summary>
            <param name="node">Node to select.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="bdispose">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
            <summary>
            Called when a query continue drag event is received.
            </summary>
            <param name="args">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when a mouse down event is received.
            </summary>
            <param name="evtArgs">Event arguments.</param>
            <remarks>
            <para>
            If <see cref="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.EditMode"/>
            is enabled, then this method starts a drag-and-drop operation.
            </para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when a mouse move event is received.
            </summary>
            <param name="evtArgs">Event arguments.</param>
            <remarks>
            <para>
            If a drag-and-drop operation has been started with a mouse down, this
            method calls the System.Windows.Forms.Control.DoDragDrop method.
            </para>
            <seealso cref="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.OnMouseDown(System.Windows.Forms.MouseEventArgs)"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
            <summary>
            Called when a give feedback event is received.
            </summary>
            <param name="evtArgs">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when a mouse up event is received.
            </summary>
            <param name="evtArgs">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.OnGroupViewItemSelected(System.EventArgs)">
            <summary>
            Called when a item selected event is received.
            </summary>
            <param name="arg">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overriden. WndProc.
            </summary>
            <param name="m">The message.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.Diagram">
            <summary>
            Gets or sets the diagram control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.ShowDragNodeCue">
            <summary>
            Gets or sets a value indicating whether dragged node cue is visible or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.DragNodeCueEnabled">
            <summary>
            Gets or sets a value indicating whether dragged node cue is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.Magnification">
            <summary>
            Gets or sets drag cue's magnification (zoom) values on a scale of 1 to n.
            </summary>        
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.LargeImageList">
            <summary>
            Gets or sets the image list containing the large (32x32) images.
            </summary>
            <value>An ImageList type.</value>
            <remarks>
            <seealso cref="P:Syncfusion.Windows.Forms.Tools.GroupView.SmallImageList"/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.SmallImageList">
            <summary>
            Gets or sets the image list containing the small (16x16) images.
            </summary>
            <value>An ImageList type.</value>
            <remarks>
            <seealso cref="P:Syncfusion.Windows.Forms.Tools.GroupView.LargeImageList"/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.EditMode">
            <summary>
            Gets or sets a value indicating whether or not the symbols can be dragged from the palette
            onto a diagram.
            </summary>
            <remarks>
            <para>
            When this property is set to True, the palette is being edited and symbols
            cannot be dragged onto a diagram. The Symbol Designer sets this flag to True.
            The typical setting for an application is False, which means that the palette
            is not being edited and symbols may be dragged onto a diagram.
            </para>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.Palette">
            <summary>
            Gets or sets reference to the symbol palette displayed by this control.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.SelectedNode">
            <summary>
            Gets the selected node.
            </summary>
            <value>The selected node.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.GroupViewItems">
            <summary>
            Gets or sets the collection of <see cref="T:Syncfusion.Windows.Forms.Tools.GroupViewItem"/> objects in the control.
            </summary>
            <value>
            An instance of the <see cref="T:Syncfusion.Windows.Forms.Tools.GroupView.GroupViewItemCollection"/> type.
            </value>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.NodeSelected">
            <summary>
            Fired when the user selects a symbol model icon in a palette groupview component.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.DoubleClick">
            <summary>
            Occurs when the control is double-clicked.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.GroupViewPaletteItem">
            <summary>
            GroupViewItem derived class representing a symbol model in a group view.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.GroupViewPaletteItem.#ctor(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.GroupViewPaletteItem"/> class.
            </summary>
            <param name="symModel">Symbol model to display in the group view.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.GroupViewPaletteItem.#ctor(Syncfusion.Windows.Forms.Diagram.Node,System.Int32,Syncfusion.Windows.Forms.Diagram.SymbolPalette)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.GroupViewPaletteItem"/> class.
            </summary>
            <param name="symModel">Symbol model to display in the group view.</param>
            <param name="imageIdx">The image index.</param>
            <param name="palette">The palette.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.GroupViewPaletteItem.UseDefaultLargeIcon">
            <summary>
            Gets or sets a value indicating whether to use default large icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.GroupViewPaletteItem.UseDefaultSmallIcon">
            <summary>
            Gets or sets a value indicating whether to use default small icon.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.GroupViewPaletteItem.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.GroupViewPaletteItem.LargeIcon">
            <summary>
            Gets or sets the large icon.
            </summary>
            <value>The large icon.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView.GroupViewPaletteItem.SmallIcon">
            <summary>
            Gets or sets the small icon.
            </summary>
            <value>The small icon.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupViewEditor">
            <summary>
            Filter GroupViewPaletteItem properties to display in property grid.
            Show only properties marked with PalettePropertyAttribute.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupViewEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupViewEditor"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupViewEditor.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Determines whether this object supports properties. By default, this is false.
            </summary>
            <param name="context">A type descriptor through which additional context can be provided.</param>
            <returns>This method returns true if the GetProperties object should be called to find the properties of this object; otherwise, false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupViewEditor.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Retrieves the set of properties for this type to filter properties for GroupViewPaletteItem.
            </summary>
            <param name="context">A type descriptor through which additional context can be provided.</param>
            <param name="value">The value of the object to get the properties for.</param>
            <param name="attributes">An array of MemberAttribute objects that specify the attributes of the properties. </param>
            <returns>The set of properties that should be exposed for this data type. If no properties should be exposed, this may return null. The default implementation always returns null.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.PalettePropertyAttribute">
            <summary>
            Specifies whether a property is symbol model's property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PalettePropertyAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PalettePropertyAttribute"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupViewDesigner">
            <summary>
            Palette GroupView designer.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupViewDesigner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupViewDesigner"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupViewDesigner.OnSetComponentDefaults">
            <summary>
            Called when the designer is initialized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupViewDesigner.ActionLists">
            <summary>
            Gets the action lists.
            </summary>
            <value>The action lists.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupViewActionList">
            <summary>
            Using to customize action list.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupViewActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupViewActionList"/> class.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupViewActionList.InitializeActionList">
            <summary>
            Initializes the action list.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupViewActionList.InvalidateComponent(System.ComponentModel.IComponent)">
            <summary>
            Invalidates current component
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteOpener">
            <summary>
            This class implements a design-time editor for opening a file containing
            a symbol palette.
            </summary>
            <remarks>
            <para>
            This class is used by the PaletteGroupView to allow the user to load a
            symbol palette from the disk. This class can be used as the design-time editor
            for any property of type SymbolPalette using the following code:
            <code>
            [Editor(typeof(PaletteOpener), typeof(System.Drawing.Design.UITypeEditor))]
            </code>
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupView"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.SymbolPalette"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteOpener.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteOpener.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/>.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor">
            <summary>
            This control displays and edits properties of objects in a m_diagram.
            </summary>
            <remarks>
            <para>
            This control contains an embedded System.Windows.Forms.PropertyGrid
            that is used to edit objects in a m_diagram. The
            <see cref="F:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.m_diagram"/>
            contains a reference to a
            <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.Diagram"/>
            object that the property editor is attached to. Once it is attached to
            a m_diagram, the property editor automatically displays the currently
            selected object in the m_diagram.
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Controls.Diagram"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.m_diagram">
            <summary>
            m_diagram to show properties from.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.m_bCanRefreshPropertyGrid">
            <summary>
            Indicates whether porperty grid will be refreshed.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
            <override/>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.SetSelectedObjects(Syncfusion.Windows.Forms.Diagram.NodeCollection)">
            <summary>
            Selects the list of nodes in the property grid.
            </summary>
            <param name="nodes">Nodes to display in the property editor.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.SetSelectedObject(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Select the node in the property grid.
            </summary>
            <param name="node">Node to display in the property editor.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.ComboBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the m_comboBox control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.InitializeCombo">
            <summary>
            Initializes the document explorer combo.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.RefreshPropertyGrid(System.Object)">
            <summary>
            Performs property grid refresh.
            </summary>
            <param name="objCausedInvalidation">The object.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.PropertyGrid">
            <summary>
            Gets reference to the PropertyGrid object contained by this property editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.Diagram">
            <summary>
            Gets or sets the Diagram which should be attached to the property editor.
            </summary>
            <remarks>
            <para>
            This property contains a reference to the m_diagram that this property
            editor is attached to. The property editor receives events from the
            m_diagram when the current selection changes and it updates the currently
            displayed object in the property editor.
            </para>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.ShowCombo">
            <summary>
            Gets or sets a value indicating whether combobox is shown.
            </summary>
            <value><c>true</c> if show combo; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.NodeComboItem">
            <summary>
            Helper class to display the node in the combo box.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.PropertyEditor.NodeComboItem.c_DEF_CHILD_SEPARATOR">
            <summary>
            Use double spaces as child separator.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.NodeEventArgs">
            <summary>
            Event argument class for events associated with symbol models loaded
            in a PaletteGroupBar object.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.NodeEventArgs.#ctor(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.NodeEventArgs"/> class.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.NodeEventArgs.Node">
            <summary>
            Gets the node that generated the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.NodeEventHandler">
            <summary>
            Delegate for events associated with symbol models loaded
            in a PaletteGroupBar object.
            </summary>
            <param name="sender">The sender</param>
            <param name="evtArgs">The node event args</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.SymbolPaletteConverter">
            <summary>
            Type converter for a SymbolPalette.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.SymbolPaletteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.SymbolPaletteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.SymbolPaletteConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.SymbolPaletteConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.SymbolPaletteConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)"/> should be called to find the properties of this object; otherwise, false.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.SpacingDirection">
            <summary>
            Used to indicate the direction for a spacing command.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.SpacingDirection.Across">
            <summary>
            Position nodes across the page.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.SpacingDirection.Down">
            <summary>
            Position nodes down the page.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.HeaderFooterDialog">
            <summary>
            The HeaderFooterDialog provides an interactive form-based interface for initializing the Header and Footer settings of 
            a diagram. Initializing the HeaderFooterDialog's <see cref="P:Syncfusion.Windows.Forms.Diagram.HeaderFooterDialog.Header"/> 
            and <see cref="P:Syncfusion.Windows.Forms.Diagram.HeaderFooterDialog.Header"/> properties with the corresponding 
            <see cref="T:Syncfusion.Windows.Forms.Diagram.Header"/> and <see cref="T:Syncfusion.Windows.Forms.Diagram.Footer"/> 
            members of the diagram model's <see cref="P:Syncfusion.Windows.Forms.Diagram.Model.HeaderFooterData"/> object will let users 
            configure the header/footers settings using the dialog controls.
            <p>
            Please refer to the DiagramBuilder sample to see the HeaderFooterDialog in use.
            </p>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.HeaderFooterDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HeaderFooterDialog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.HeaderFooterDialog"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HeaderFooterDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HeaderFooterDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HeaderFooterDialog.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog box key.
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values that represents the key to process.</param>
            <returns>
            true if the keystroke was processed and consumed by the control; otherwise, false to allow further processing.
            </returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.HeaderFooterDialog.Header">
            <summary>
            Gets or sets the dialog's <see cref="T:Syncfusion.Windows.Forms.Diagram.Header"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.HeaderFooterDialog.Footer">
            <summary>
            Gets or sets the dialog's <see cref="T:Syncfusion.Windows.Forms.Diagram.Footer"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.HeaderFooterDialog.MeasurementUnits">
            <summary>
            Gets or sets the measurement units.
            </summary>
            <value>The measurement units.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.HFProperties">
            <summary>
            Header footer properties
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.HFProperties.Text">
            <summary>
            HF Text
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.HFProperties.BackgroundImage">
            <summary>
            Background image.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.HFProperties.Bounds">
            <summary>
            HF bounds
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.HFProperties.BorderStyle">
            <summary>
            Border style
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Bound">
            <summary>
            HF Bounds
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Bound.Left">
            <summary>
            Left position.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Bound.Right">
            <summary>
            Right position.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Bound.Width">
            <summary>
            Width of the bounds.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Bound.Height">
            <summary>
            Height of the bounds.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog">
            <summary>
            LayOutDialog form.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.m_bBackDelete">
            <summary>
            Indicates whether BackSpace or Delete key was pressed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.m_bLock">
            <summary>
            Helper flag.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.m_model">
            <summary>
            Updating document.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.m_lstSelection">
            <summary>
            Updating document selection list.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.m_directions">
            <summary>
            RadioButtons with directions for GraphLayoutManagers RotationAngle.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.#ctor(Syncfusion.Windows.Forms.Diagram.Controls.Diagram)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog"/> class.
            </summary>
            <param name="diagram">The diagram.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.GetValue(System.Windows.Forms.TextBox)">
            <summary>
            Gets the value from text box control.
            </summary>
            <param name="txtBox">The text box.</param>
            <returns>The value from the textbox</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.InitializeDialog">
            <summary>
            Initializes the comboBox layout style.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.RebindLMSettings">
            <summary>
            Updates the layout parameters.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.HideSettingsGroups">
            <summary>
            Hides the parameter groups.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.FillCombo(System.Windows.Forms.ComboBox,System.Type)">
            <summary>
            Fills the combo items list with enum names.
            </summary>
            <param name="combo">The combo.</param>
            <param name="enumType">Type of the enum.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.BindTo(System.Windows.Forms.Control,System.String,System.Object,System.String)">
            <summary>
            Binds specified DataSource property to given control property.
            </summary>
            <param name="ctrlToBindTo">Control to bind to.</param>
            <param name="strControlPropertyName">Binding Control property name.</param>
            <param name="objDataSource">Binding DataSourse.</param>
            <param name="strDataSourcePropertyName">Binding DataSourse property name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.RebindDirectdTreeLMSettings">
            <summary>
            Rebinds directed tree layout settings.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.RebindSymmetricLMSettings">
            <summary>
            Rebinds symmetric layout settings.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.RebindTableLMSettings">
            <summary>
            Rebinds table layout settings.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.RebindHierarchicLMSettings">
            <summary>
            Rebinds hierarchic layout settings.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.RebindRadialLMSettings">
            <summary>
            Rebinds radial layout settings.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.UpdateLayout">
            <summary>
            Layouts the nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.DrawDirections">
            <summary>
            Draws the directions arrows.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.IsHandled(System.Windows.Forms.TextBox,System.Windows.Forms.KeyPressEventArgs,System.Boolean,System.Int32)">
            <summary>
            Determines whether the specified textBox is handled.
            </summary>
            <param name="txtBox">The textBox.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> instance containing the event data.</param>
            <param name="bOnlyNumbers">if set to <c>true</c>check only for numbers.</param>
            <param name="nMaxAllowedDigits">The max allowed digits.</param>
            <returns>
            <c>true</c> if the specified textBox is handled; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.UpdatePreview">
            <summary>
            Updates the preview.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.LayoutDialog.LayoutManager">
            <summary>
            Gets the selected layout manager.
            </summary>
            <value>The layout manager.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.SymmetricLMSettings">
            <summary>
            Symmetric Layout Manager settings.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.GraphLMSettings">
            <summary>
            Graph Layout Manager settings.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.TableLMSettings">
            <summary>
            Table Layout Manager settings.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.PageBorderDialog">
            <summary>
            The PageBorderDialog provides an interactive form-based interface for setting the page borders of a diagram. Initializing the 
            PageBorderDialog's <see cref="P:Syncfusion.Windows.Forms.Diagram.PageBorderDialog.PageBorderStyle"/> property with the corresponding 
            <see cref="P:Syncfusion.Windows.Forms.Diagram.View.PageBorderStyle"/> member of the diagram's view will let users configure the 
            page border settings using the dialog controls.
            <p>
            Please refer to the DiagramBuilder sample to see the PageBorderDialog in use.
            </p>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.PageBorderDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PageBorderDialog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.PageBorderDialog"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PageBorderDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PageBorderDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PageBorderDialog.PageBorderStyle">
            <summary>
            Gets or sets the dialog's <see cref="T:Syncfusion.Windows.Forms.Diagram.PageBorderStyle"/> object.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PageBorderDialog.ShowPageBorder">
            <summary>
            Gets or sets a value indicating whether page border is shown.
            </summary>
            <value><c>true</c> if show page border; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.PageSetupDialog">
            <summary>
            Allow users to setup print, page and drawing setting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.PageSetupDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PageSetupDialog.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.PageSetupDialog"/> class from being created.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PageSetupDialog.#ctor(Syncfusion.Windows.Forms.Diagram.View)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.PageSetupDialog"/> class.
            </summary>
            <param name="view">The diagram <see cref="T:Syncfusion.Windows.Forms.Diagram.View"/>.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PageSetupDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PageSetupDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PageSetupDialog.ChangeOrientation(Syncfusion.Windows.Forms.Diagram.PageSize,System.Boolean)">
            <summary>
            Change the page size orientation.
            </summary>
            <param name="pageSize">Size of the page.</param>
            <param name="bRotate">if set to <c>true</c> flip width and height value.</param>
            <returns>Page size.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PageSetupDialog.PrintSettings">
            <summary>
            Gets or sets the print settings.
            </summary>
            <value>The print settings.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PageSetupDialog.PrintZoom">
            <summary>
            Gets or sets the print zoom factor.
            </summary>
            <value>The print zoom.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PageSetupDialog.PageSize">
            <summary>
            Gets or sets the page size setting.
            </summary>
            <value>The size of the page.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PageSetupDialog.PageScale">
            <summary>
            Gets or sets the page scale setting.
            </summary>
            <value>The page scale.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PageSetupDialog.PageLandscape">
            <summary>
            Gets a value indicating whether page landscape is checked.
            </summary>
            <value><c>true</c> if page landscape is checked; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PageSetupDialog.MeasureUnits">
            <summary>
            Gets or sets the current setting measure units.
            </summary>
            <value>The measure units.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteAddDlg">
            <summary>
            Form used to prompt the user for the name of new symbol palettes.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteGroupBar"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.PaletteAddDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteAddDlg.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Controls.PaletteAddDlg"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteAddDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Controls.PaletteAddDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Controls.PaletteAddDlg.PaletteName">
            <summary>
            Gets the name for the new palette entered by the user.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.PrintSetupDialog">
            <summary>
            The PrintSetupDialog provides a dialog for diagram users to set the page settings, margins and zoom ratios for 
            print and print preview. Initializing the dialog's <see cref="P:Syncfusion.Windows.Forms.Diagram.PrintSetupDialog.PageSettings"/> 
            and <see cref="P:Syncfusion.Windows.Forms.Diagram.PrintSetupDialog.PrintZoom"/> properties with their equivalent members from 
            the diagram's <see cref="T:Syncfusion.Windows.Forms.Diagram.View"/> will configure the dialog for the current print settings, and 
            enables users to modify the data.
            <p>
            Please refer to the DiagramBuilder sample to see the PrintSetupDialog in use.
            </p>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PrintSetupDialog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.PrintSetupDialog"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PrintSetupDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PrintSetupDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PrintSetupDialog.PageSettings">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Printing.PageSettings"/> value that corresponds to the diagram's page settings.
            <see cref="P:Syncfusion.Windows.Forms.Diagram.View.PageSettings"/>
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PrintSetupDialog.PrintZoom">
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Windows.Forms.Diagram.PrintZoom"/> value that corresponds to the diagram's zoom settings.
            <see cref="P:Syncfusion.Windows.Forms.Diagram.View.PrintZoom"/>
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Margin">
            <summary>
            Internal Margins
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Margin.Left">
            <summary>
            Left margin.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Margin.Right">
            <summary>
            Right margin.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Margin.Top">
            <summary>
            Top margin.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Margin.Bottom">
            <summary>
            Bottom margin.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.LayoutStyle">
            <summary>
            Node Layout styles
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.LayoutStyle.Table">
            <summary>
            Arrange in a table like layout with rows and columns.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.LayoutStyle.DirectedTree">
            <summary>
            Layout nodes in directed tree graph fashion.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.LayoutStyle.Hierarchic">
            <summary>
            Layout nodes in hierarchical way.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.LayoutStyle.Radial">
            <summary>
            Layout nodes in radial (circular) fashion.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.LayoutStyle.Symmetric">
            <summary>
            Layout nodes in symmetrical manner.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Controls.TreeDirection">
            <summary>
            Four direction of tree where value 
            indicate angle, and angle start from TopToBottom by clockwise.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.TreeDirection.TopToBottom">
            <summary>
            Top to bottom.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.TreeDirection.TopLeftToBottomRight">
            <summary>
            Top left to bottom right.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.TreeDirection.RightToLeft">
            <summary>
            Right to left.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.TreeDirection.BottomLeftToTopRight">
            <summary>
            Bottom left to top right.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.TreeDirection.BottomToTop">
            <summary>
            Bottom to top.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.TreeDirection.BottomRightToTopLeft">
            <summary>
            Bottom right to top left.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.TreeDirection.LeftToRight">
            <summary>
            Left to right.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Controls.TreeDirection.TopRightToBottomLeft">
            <summary>
            Top right to bottom left.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Localization.SR">
            <summary>
               SR provides localized access to string resources specific 
               from the assembly manifest Syncfusion.Windows.Forms.Diagram.Localization.SR.resources
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Localization.SRCategoryAttribute">
            <summary>
            Specifies the category in which the property or event will be displayed in a visual designer.
            </summary>
            <remarks>
            This is a localized version of CategoryAttribute. The localized string will be loaded from the 
            assembly manifest Syncfusion.Windows.Forms.Diagram.Localization.SR.resources
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Localization.SRDescriptionAttribute">
            <summary>
            Specifies a description for a property or event.
            </summary>
            <remarks>
            This is a localized version of DescriptionAttribute. The localized string will be loaded from the 
            assembly manifest Syncfusion.Windows.Forms.Diagram.Localization.SR.resources
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.DiagramController">
            <summary>
            Implements a generic diagram controller containing a default set of tools.
            </summary>
            <remarks>
            <para>
            The DiagramController class implements a concrete controller with a generic
            diagramming user interface. It overrides the
            <see cref="M:Syncfusion.Windows.Forms.Diagram.DiagramController.Initialize"/>
            method and registers all available tools in the Diagram Windows assembly. 
            A tool is an object that implements a distinct functionality for the 
            controller. Tools can be added to the controller using the 
            <see cref="M:Syncfusion.Windows.Forms.Diagram.DiagramController.RegisterTool(Syncfusion.Windows.Forms.Diagram.Tool)"/> method 
            in order to customize the behavior of the controller.
            </para>
            <para>
            The DiagramController is responsible for coordinating the activation and
            deactivation of tools. The <see cref="M:Syncfusion.Windows.Forms.Diagram.DiagramController.ActivateTool(Syncfusion.Windows.Forms.Diagram.Tool)"/> 
            method activates a specified tool. The 
            <see cref="M:Syncfusion.Windows.Forms.Diagram.DiagramController.DeactivateTool(Syncfusion.Windows.Forms.Diagram.Tool)"/>
            method deactivates a specified tool. Tools can be accessed by name with the
            <see cref="M:Syncfusion.Windows.Forms.Diagram.DiagramController.GetTool(System.String)"/> method.
            </para>
            <para>
            The DiagramController captures all mouse events and performs hit testing on
            the diagram. Nodes, ports, and vertices hit by mouse movements are
            tracked by the controller. Tools can access this hit testing
            information in the controller. In other words, the controller provides
            basic hit testing services to tools so that each tool doesn't need to
            implement (and possible duplicate) that hit testing logic. The following
            properties and methods provide access to the hit testing state information:
            <see cref="P:Syncfusion.Windows.Forms.Diagram.DiagramController.MouseLocation"/>,
            <see cref="P:Syncfusion.Windows.Forms.Diagram.DiagramController.NodesHit"/>,
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Controller"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DiagramController.m_labelText">
            <summary>
            currently hitted label
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.DiagramController"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.#ctor(Syncfusion.Windows.Forms.Diagram.View)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.DiagramController"/> class.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.Uninitialize">
            <summary>
            Uninitializes this instance.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.InitialiizeController">
            <summary>
            Initializes the controller.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.UninitialiizeController">
            <summary>
            Uninitializes the controller.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.OnToolActivated(Syncfusion.Windows.Forms.Diagram.ToolEventArgs)">
            <summary>
            Raise the tool activated event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ToolEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.OnToolDeactivated(Syncfusion.Windows.Forms.Diagram.ToolEventArgs)">
            <summary>
            Raise the tool deactivated event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ToolEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when a mouse down event occurs.
            </summary>
            <param name="evtArgs">Event arguments.</param>
            <remarks>
            This method updates the current mouse location and then performs hit testing
            for handles and nodes.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when a mouse move event occurs.
            </summary>
            <param name="evtArgs">Event arguments.</param>
            <remarks>
            This method updates the current mouse location and then performs hit testing
            for handles and nodes.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when a mouse up event is received.
            </summary>
            <param name="evtArgs">Event arguments.</param>
            <remarks>
            This method updates the current mouse location and then performs hit testing
            for handles and nodes.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.OnMouseLeave(System.EventArgs)">
            <summary>
            Called when a mouse leave event is received.
            </summary>
            <param name="evtArgs">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.OnClick(System.EventArgs)">
            <summary>
            Called when a click event is received.
            </summary>
            <param name="evtArgs">Event arguments.</param>
            <remarks>
            Iterates through the nodes hit by the click event and notifies them
            of the click by calling the 
            <see cref="M:Syncfusion.Windows.Forms.Diagram.IDispatchNodeEvents.Click(System.EventArgs)"/>
            method.
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.IDispatchNodeEvents"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Called when the drag enter event occurs.
            </summary>
            <param name="evtArgs">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.OnDoubleClick(System.EventArgs)">
            <summary>
            Called when a double click event is received.
            </summary>
            <param name="evtArgs">Event arguments.</param>
            <remarks>
            <para>
            Iterates through the nodes hit by the double click event and notifies
            them of the click by calling the 
            <see cref="M:Syncfusion.Windows.Forms.Diagram.IDispatchNodeEvents.DoubleClick(System.EventArgs)"/>
            method.
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.IDispatchNodeEvents"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Called when a key down event is received.
            </summary>
            <param name="evtArgs">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Called when a key up event is received.
            </summary>
            <param name="evtArgs">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Called when a key press event is received.
            </summary>
            <param name="evtArgs">Event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.OnVerticalScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Called when a VerticalScroll event is received.
            </summary>
            <param name="sender">The sender</param>
            <param name="evtArgs">Event arguments.</param>
            <remarks>
            <para>
            Iterates through all tools that implement the
            <see cref="T:Syncfusion.Windows.Forms.Diagram.IScrollEventReceiver"/>
            interface and forwards the event onto them.
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.IScrollEventReceiver"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.OnHorizontalScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Called when a HorizontalScroll event is received.
            </summary>
            <param name="sender">Object sending the event.</param>
            <param name="evtArgs">Event arguments.</param>
            <remarks>
            <para>
            Iterates through all tools that implement the
            <see cref="T:Syncfusion.Windows.Forms.Diagram.IScrollEventReceiver"/>
            interface and forwards the event onto them.
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.IScrollEventReceiver"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.RegisterStandardTools">
            <summary>
            Registers the standard interactive tools used by the diagram.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.RegisterTool(Syncfusion.Windows.Forms.Diagram.Tool)">
            <summary>
            Adds a new tool to the controller.
            </summary>
            <param name="tool">Tool object to register.</param>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.UnRegisterTool(Syncfusion.Windows.Forms.Diagram.Tool)">
            <summary>
            Removes a previously registered tool from the Controller.
            </summary>
            <param name="tool">Tool object to unregister.</param>
            <returns>True if the unregistration is successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.GetTool(System.String)">
            <summary>
            Returns the Tool object matching the given name.
            </summary>
            <param name="toolName">Name of Tool object to return.</param>
            <returns>Tool object matching the given name, or NULL if not found.</returns>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.GetAllTools">
            <summary>
            Returns an array of all Tool objects registered with the controller.
            </summary>
            <returns>Array of registered Tool objects.</returns>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.ActivateTool(System.String)">
            <summary>
            Activates the Tool object matching the given name.
            </summary>
            <param name="toolName">Name of Tool to activate.</param>
            <returns>True if successful; otherwise False.</returns>
            <remarks>
            This method first locates the tool matching the given name and
            then passes it to the
            <see cref="M:Syncfusion.Windows.Forms.Diagram.DiagramController.ActivateTool(Syncfusion.Windows.Forms.Diagram.Tool)"/> 
            method.
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.ActivateTool(Syncfusion.Windows.Forms.Diagram.Tool)">
            <summary>
            Activates the given Tool object.
            </summary>
            <param name="tool">Tool to activate.</param>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.DeactivateTool(Syncfusion.Windows.Forms.Diagram.Tool)">
            <summary>
            Deactivates the given Tool object.
            </summary>
            <param name="tool">The Tool to deactivate.</param>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.Cut">
            <summary>
            Remove the currently selected nodes from the diagram and move them to the clipboard.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.Copy">
            <summary>
            Copy the currently selected nodes to the clipboard.
            </summary>
            <remarks>
            Creates a new
            <see cref="T:Syncfusion.Windows.Forms.Diagram.NodeCollection"/>
            and copies the selected nodes into it. It then copies the new
            NodeCollection to the clipboard.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.Paste">
            <summary>
            Paste the contents of the clipboard to the diagram.
            </summary>
            <remarks>
            If a <see cref="T:Syncfusion.Windows.Forms.Diagram.NodeCollection"/>
            is available on the clipboard, this method gets it and inserts
            it into the diagram.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.GetInsertedNodesOffset(Syncfusion.Windows.Forms.Diagram.NodeCollection,System.Drawing.PointF)">
            <summary>
            Gets the inserted nodes locations.
            </summary>
            <param name="nodes">The nodes.</param>
            <param name="locationDrop">The location drop.</param>
            <returns>The inserted nodes locations.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.Paste(System.String,System.Drawing.PointF)">
            <summary>
            Paste the contents of the clipboard to the diagram.
            </summary>
            <param name="layername">Name of the layer in which to insert the nodes.</param>
            <param name="location">The location at which to insert the nodes.</param>
            <remarks>
            If a <see cref="T:Syncfusion.Windows.Forms.Diagram.NodeCollection"/>
            is available on the clipboard, this method gets it and inserts
            it into the diagram.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.Paste(System.Drawing.PointF)">
            <summary>
            Paste the contents of the clipboard to the diagram.
            </summary>       
            <param name="location">The location at which to insert the nodes.</param>
            <remarks>
            If a <see cref="T:Syncfusion.Windows.Forms.Diagram.NodeCollection"/>
            is available on the clipboard, this method gets it and inserts
            it into the diagram.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.GetNodeAtPoint(System.Drawing.PointF)">
            <summary>
            Gets the node at point in model coordinates.
            </summary>
            <param name="ptMouseLocation">The given point in model coordinates.</param>
            <returns>The node at the given point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.GetAllNodesAtPoint(Syncfusion.Windows.Forms.Diagram.ICompositeNode,System.Drawing.PointF)">
            <summary>
            Gets all nodes include composite node children at point in model coordinates.
            </summary>
            <param name="compositeNode">The composite node.</param>
            <param name="ptPoint">The given point in model coordinates.</param>
            <returns>The nodes at the given point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.GetAllNodesAtPoint(Syncfusion.Windows.Forms.Diagram.ICompositeNode,System.Drawing.PointF,System.Boolean)">
            <summary>
            Gets all nodes include composite node children at point in model coordinates.
            </summary>
            <param name="compositeNode">The composite node.</param>
            <param name="ptPoint">The given point in model coordinates.</param>
            <param name="bOnlyCanSelected">if set to <c>true</c> nodes filtered by allow selection.</param>
            <returns>The nodes at the given point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.GetNodesAtPoint(System.Drawing.Point)">
            <summary>
            Gets the nodes at point in client coordinates.
            </summary>
            <param name="ptMouseLocation">The given point in client coordinates.</param>
            <returns>The nodes at the given point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.CloneNode(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Clone node or group with all children.
            </summary>
            <param name="curNode">Node to clone.</param>
            <returns>Clone instance.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.CanSelectNode(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Check if node can be selected.
            </summary>
            <param name="node">Node to check.</param>
            <returns><b>True</b> if node can be select, otherwise - <b>false</b>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.SetCursor(Syncfusion.Windows.Forms.Diagram.BoxPosition,Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Sets the cursor.
            </summary>
            <param name="handlePos">The handle pos.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.ChangeCursor(System.Windows.Forms.Cursor)">
            <summary>
            Changes the mouse cursor.
            </summary>
            <param name="newCursor">The new cursor.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.RestoreCursor">
            <summary>
            Restores the saved cursor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.ProcessToolMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Process mouse move of active tool.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.GetNodeUnderMouse(System.Drawing.Point)">
            <summary>
            Gets the top node under mouse cursor.
            </summary>
            <param name="ptMouse">The mouse cursor position.</param>
            <returns>Top node under mouse cursor.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.MoveNodes(Syncfusion.Windows.Forms.Diagram.NodeCollection,System.Drawing.SizeF)">
            <summary>
            Move the nodes by given offset.
            </summary>
            <param name="nodesToMove">The nodes to move.</param>
            <param name="moveOffset">The move offset.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.BeginQuiteMode(System.Boolean@)">
            <summary>
            Enable quite mode.
            </summary>
            <param name="bBringinEnable">Briging enable flag.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.EndQuiteMode(System.Boolean)">
            <summary>
            Disable quite mode.
            </summary>
            <param name="bBringinEnable">Bridging enable flag.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.DrawGuides(Syncfusion.Windows.Forms.Diagram.Node,System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Draws the Guides
            </summary>
            <param name="renderHelper">Node</param>
            <param name="gfx">Graphics</param>
            <param name="curNodeBounds">Node bounds</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.DrawMarginGuide(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Draws the margin for node.
            </summary>
            <param name="gfx">Graphics</param>
            <param name="pen">Pen</param>
            <param name="curNodeBounds">Render helper bounds</param>
            <param name="ndBounds">Node bounds</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.CheckCompleteNodeBounds">
            <summary>
            Get Node's bounds including label(if label placed outside the Node)
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.CheckPointInRect(System.Drawing.RectangleF,System.Single,System.Drawing.PointF)">
            <summary>
            Checking the label position to update the cursor with rotated angle
            </summary>
            <param name="rect">current label bounds</param>
            <param name="rotate">rotated angle of the node</param>
            <param name="point">mouselocation</param>
            <returns>return true, if the label is hitted</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.Document_NodeCollectionChanged(Syncfusion.Windows.Forms.Diagram.CollectionExEventArgs)">
            <summary>
            Documents the node collection changed.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.CollectionExEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.View_OriginChanged(Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs)">
            <summary>
            Handles the view origin changed event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.HistoryManager_CommandStarted(System.Object,System.EventArgs)">
            <summary>
            Handles the CommandStarted event of the HistoryManager control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.EventSink_PropertyChanging(Syncfusion.Windows.Forms.Diagram.PropertyChangingEventArgs)">
            <summary>
            Events the sink property changing.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.PropertyChangingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramController.Document_PropertyChanging(Syncfusion.Windows.Forms.Diagram.PropertyChangingEventArgs)">
            <summary>
            Documents the property changing.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.PropertyChangingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DiagramController.m_previousSelected">
            <summary>
            Collection of selected nodes before tool processing.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DiagramController.m_bUpdateCursor">
            <summary>
            Flag indicating if the cursor will set from active tool.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DiagramController.m_szPasteOffset">
            <summary>
            Paste Offset.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DiagramController.m_textEditor">
            <summary>
            Text editor registered to this controller.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DiagramController.m_inPlaceEditor">
            <summary>
            InPlaceEditor for label registered to this controller.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DiagramController.tools">
            <summary>
            List of tools registered with this controller.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DiagramController.toolTable">
            <summary>
            Hashtable that maps tool names onto tool objects.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DiagramController.accctiveTool">
            <summary>
            References the currently active Tool.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DiagramController.guid">
            <summary>
            Unique ID used to identify the source of copy and paste operations.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DiagramController.pasteIndex">
            <summary>
            Number of consecutive paste operations - used to offset nodes pasted.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DiagramController.mouseLocation">
            <summary>
            Last known position of the mouse pointer.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DiagramController.mouseTrackingEnabled">
            <summary>
            Flag indicating if the controller should track mouse movements in the view.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DiagramController.m_ctrlNodeActive">
            <summary>
            Active control node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.NeedDocumentRefresh">
            <summary>
            Gets or sets a value indicating whether the document needs refresh.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.IsPaletteNodeClicked">
            <summary>
            Gets or sets a value indicating whether the palette node is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.NodeToInsert">
            <summary>
            Gets or sets a node to insert the model through InsertNodeTool
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.PasteOffset">
            <summary>
            Gets or sets the paste offset that indicate offset of next paste object.
            </summary>
            <value>The paste offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.TextEditor">
            <summary>
            Gets the text editor instance.
            </summary>
            <value>The text editor.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.InPlaceEditor">
            <summary>
            Gets the in place editor instance.
            </summary>
            <value>The text editor.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.InPlaceEditing">
            <summary>
            Gets or sets a value indicating whether in place editing is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.Guides">
            <summary>
            Gets the diagram Guides.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.NodesHit">
            <summary>
            Gets the list of nodes that were hit during the last received mouse event.
            </summary>
            <remarks>
            <seealso cref="P:Syncfusion.Windows.Forms.Diagram.DiagramController.MouseLocation"/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.ActiveTool">
            <summary>
            Gets or sets the diagram active tool.
            </summary>
            <value>The active tool.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.ParentControl">
            <summary>
            Gets the System.Windows.Forms.Control that owns the view that this
            controller is attached to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.Cursor">
            <summary>
            Gets or sets cursor to use inside the view.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.MouseLocation">
            <summary>
            Gets the last known location of the mouse pointer.
            </summary>
            <remarks>
            This property is updated each time the controller receives a mouse event:
            <seealso cref="P:Syncfusion.Windows.Forms.Diagram.DiagramController.NodesHit"/>
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.MouseTrackingEnabled">
            <summary>
            Gets or sets a value indicating whether mouse tracking is enabled.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.ResizingStyle">
            <summary>
            Gets or sets resizing style of rendering helper
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.DraggingStyle">
            <summary>
            Gets or sets dragging style of rendering helper
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.RotatingStyle">
            <summary>
            Gets or sets rotating style of rendering helper
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.AllowCopyAtCtrlDrag">
            <summary>
            Gets or sets a value indicating whether the controller allows copying a node while pressing Ctrl+drag or Ctrl+Shift+drag.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.CanCut">
            <summary>
            Gets a value indicating whether if there are any selected nodes that can be removed from the
            the model.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.CanCopy">
            <summary>
            Gets a value indicating whether there are any selected nodes that can be copied to the clipboard.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.CanPaste">
            <summary>
            Gets a value indicating whether there is any data in the clipboard that can be pasted
            into the model.
            </summary>
            <remarks>
            This method checks the clipboard to see if a
            <see cref="T:Syncfusion.Windows.Forms.Diagram.NodeCollection"/>
            is available.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.Syncfusion#Windows#Forms#IMouseController#Cursor">
            <summary>
            Gets the cursor currently assigned to the controller.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DiagramController.Syncfusion#Windows#Forms#IMouseController#Name">
            <summary>
            Gets the name of the mouse controller.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.ToolEventArgs">
            <summary>
            This class encapsulates event arguments for events fired by the
            controller that are caused by
            <see cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/> objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ToolEventArgs.#ctor(Syncfusion.Windows.Forms.Diagram.Tool)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.ToolEventArgs"/> class.
            </summary>
            <param name="tool">The UI Tool.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ToolEventArgs.Tool">
            <summary>
            Gets the tool object that generated the event.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.ToolEventHandler">
            <summary>
            Delegate used for tool events.
            </summary>
            <param name="evtArgs">Event args</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RenderingHelperStyle">
            <summary>
            Specifies Rendering helper style.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.RenderingHelperStyle.GhostCopy">
            <summary>
            Ghost copy style.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.RenderingHelperStyle.DashedOutline">
            <summary>
            Dashed outline style
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.RenderingHelperStyle.SolidOutline">
            <summary>
            Solid outline style
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.RenderingHelperStyle.FilledRectangle">
            <summary>
            Filled rectangle style
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.NameSpaceDoc">
            <summary>
            Implements a generic diagram controller containing a default set of tools. The DiagramController class implements a concrete controller with a generic diagramming user interface. 
            It overrides the initialize method and registers all available tools in the Diagram Windows assembly. 
            A tool is an object that implements a distinct functionality for the controller. Tools can be added to the controller using the register tool
            method in order to customize the behavior of the controller.The DiagramController is responsible for coordinating the activation and
            deactivation of tools.Tools can be accessed by name with the GetTool method.It provide control to many tools such as move tool used to move any kind of object in the diagram, select tool to select an object,
            resizing tool, pan tool, insert node tool for inserting node in diagram. Zoom control is responsible for percentage of zooming of diagram. Line based tool to draw connectors between nodes, it also provides conrol to draw curved lines and connectors in the diagram.
            Connection point tool, each node can have a connection to connect from one node to another node
            This provides control to edit text and label in three ways InPlaceEditor, TextEditor, RichTextEditor. InPlaceEditor used to edit text in nodes. TextEditor and RichTextEditor are used to edit text in textboxes.
            This provides an additional control DiagramViewerEventSink control which inherits from ViewerEventSink and contains additional tool events handles.
            The DiagramController captures all mouse events and performs hit testing on the diagram. Nodes, ports, and vertices hit by mouse movements are
            tracked by the controller. Tools can access this hit testing information in the controller. In other words, the controller provides
            basic hit testing services to tools so that each tool doesn't need to implement (and possible duplicate) that hit testing logic.
            The DiagramController makes all focus to the related action through FocusManager control.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.DiagramViewerEventSink">
            <summary>
            Inherits from ViewerEventSink and contains additional tool events handles.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramViewerEventSink.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Forms.Diagram.DiagramViewerEventSink"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramViewerEventSink.RaiseToolActivated(Syncfusion.Windows.Forms.Diagram.ToolEventArgs)">
            <summary>
            Raises the tool activated.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ToolEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DiagramViewerEventSink.RaiseToolDeactivated(Syncfusion.Windows.Forms.Diagram.ToolEventArgs)">
            <summary>
            Raises the tool deactivated.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ToolEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.DiagramViewerEventSink.ToolActivated">
            <summary>
            Occurs when tool is activated.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.DiagramViewerEventSink.ToolDeactivated">
            <summary>
            Occurs when tool is deactivated.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.DropPosition">
            <summary>
            Specifies how the nodes are positioned when dropped onto the diagram.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DropPosition.RelativeOffset">
            <summary>
            Nodes are positioned related to the location of the drop.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.DropPosition.AbsolutePosition">
            <summary>
            Positions each node at the location of the drop.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.DragDropData">
            <summary>
            Encapsulates data needed to drag-and-drop a collection of nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DragDropData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.DragDropData"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DragDropData.#ctor(Syncfusion.Windows.Forms.Diagram.Node,Syncfusion.Windows.Forms.Diagram.DiagramDragHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.DragDropData"/> class.
            </summary>
            <param name="node">Node to drag-and-drop.</param>
            <param name="dragHelper">Drag helper</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DragDropData.#ctor(Syncfusion.Windows.Forms.Diagram.Node,Syncfusion.Windows.Forms.Diagram.DropPosition,Syncfusion.Windows.Forms.Diagram.DiagramDragHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.DragDropData"/> class.
            </summary>
            <param name="node">Node to drag-and-drop.</param>
            <param name="dropPos">Determines how the node is dropped onto the diagram.</param>
            <param name="dragHelper">Drag helper </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DragDropData.#ctor(Syncfusion.Windows.Forms.Diagram.NodeCollection,Syncfusion.Windows.Forms.Diagram.DiagramDragHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.DragDropData"/> class.
            </summary>
            <param name="nodes">Nodes to drag-and-drop.</param>
            <param name="dragHelper">Drag helper </param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DragDropData.#ctor(Syncfusion.Windows.Forms.Diagram.NodeCollection,Syncfusion.Windows.Forms.Diagram.DropPosition,Syncfusion.Windows.Forms.Diagram.DiagramDragHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.DragDropData"/> class.
            </summary>
            <param name="nodes">Nodes to drag-and-drop.</param>
            <param name="dropPos">Determines how the node is dropped onto the diagram.</param>
            <param name="dragHelper">Drag helper</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DragDropData.DragHelper">
            <summary>
            Gets the drag helper.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DragDropData.DragNodeCueEnabled">
            <summary>
            Gets or sets a value indicating whether dragged node cue is enabled or not
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DragDropData.Nodes">
            <summary>
            Gets the collection of nodes to drag-and-drop.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.DragDropData.DropPosition">
            <summary>
            Gets or sets how the nodes are positioned on the diagram.
            </summary>
        </member>
        <member name="T:Syncfusion.Runtime.InteropServices.WinAPI.CallBack">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Runtime.InteropServices.WinAPI.BrowserFolderCallback">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Runtime.InteropServices.WinAPI.Macros.HIWORD(System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Runtime.InteropServices.WinAPI.Macros.LOWORD(System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Runtime.InteropServices.WinAPI.Macros.LOWORD(System.IntPtr)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Runtime.InteropServices.WinAPI.Macros.HIWORD(System.IntPtr)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Runtime.InteropServices.WinAPI.Macros.MAKELONG(System.Int32,System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Runtime.InteropServices.WinAPI.Macros.MAKELPARAM(System.Int32,System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Runtime.InteropServices.WinAPI.Macros.RGBToCOLORREF(System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Runtime.InteropServices.WinAPI.Macros.COLORREFToRGB(System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Runtime.InteropServices.WinAPI.Macros.GetRValue(System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Runtime.InteropServices.WinAPI.Macros.GetGValue(System.Int32)">
            <internalonly/>
        </member>
        <member name="M:Syncfusion.Runtime.InteropServices.WinAPI.Macros.GetBValue(System.Int32)">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Runtime.InteropServices.WinAPI.POINT">
            <internalonly/>	
        </member>
        <member name="T:Syncfusion.Runtime.InteropServices.WinAPI.SIZE">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Runtime.InteropServices.WinAPI.RECT">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Runtime.InteropServices.WinAPI.COMRECT">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Runtime.InteropServices.WinAPI.Window.HookProc">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Runtime.InteropServices.WinAPI.Window.DrawStateProc">
            <internalonly/>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.InPlaceEditor">
            <summary>
            In place editor form
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.InPlaceEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.InPlaceEditor.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.InPlaceEditor"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.InPlaceEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.InPlaceEditor.InitializeComponent">
            <summary>
            Required method for Designer support 
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.InPlaceEditor.IsEditable(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Determines whether the specified node to edit is editable.
            </summary>
            <param name="nodeToEdit">The node to edit.</param>
            <returns>
            <c>true</c> if the specified node to edit is editable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.InPlaceEditor.IsEditable(Syncfusion.Windows.Forms.Diagram.Node,Syncfusion.Windows.Forms.Diagram.Label)">
            <summary>
            Determines whether the specified node to edit is editable.
            </summary>
            <param name="nodeToEdit">Current node</param>
            <param name="label">Hitted label to edit</param>
            <returns><c>true</c> if the specified node to edit is editable; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.InPlaceEditor.BeginEdit">
            <summary>
            Begins the edit.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.InPlaceEditor.EndEdit">
            <summary>
            Ends the edit.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.InPlaceEditor.InitializeColorPickers">
            <summary>
            Initializes the color picker controls
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.InPlaceEditor.InitializeComboBoxes">
            <summary>
            Initializes the combo boxes
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.InPlaceEditor.UpdateAlignment(System.Windows.Forms.ToolStripButton)">
            <summary>
            Updates the label alignment
            </summary>
            <param name="btnAlign">The ToolStripButton</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.InPlaceEditor.LabelTextChanged">
            <summary>
            Occurs when the label text changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.InPlaceEditor.LabelEditingCompleted">
            <summary>
            Label Editing completed event
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.BorderPanel">
            <summary>
            Custom panel class
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.BorderPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when the control needs to paint the window.
            </summary>
            <param name="e">The paint event argument.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.ITextEditor">
            <summary>
            Interface to text editing components.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ITextEditor.BeginEdit(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Starts editing node.
            </summary>
            <param name="nodeEditing">node to edit</param>
            <returns>success operation value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ITextEditor.EndEdit(System.Boolean)">
            <summary>
            Ends node editing.
            </summary>
            <param name="bSaveChanges">if set to <c>true</c> save changes.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ITextEditor.CurrentText">
            <summary>
            Gets or sets the current text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ITextEditor.Bold">
            <summary>
            Gets or sets a value indicating whether the selected text is bold.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ITextEditor.Italic">
            <summary>
            Gets or sets a value indicating whether the selected text is in italics.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ITextEditor.Underline">
            <summary>
            Gets or sets a value indicating whether the selected text is underlined.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ITextEditor.Strikeout">
            <summary>
            Gets or sets a value indicating whether the selected text has strikeout property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ITextEditor.FontFamily">
            <summary>
            Gets or sets name of font family.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ITextEditor.PointSize">
            <summary>
            Gets or sets size of font in points.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ITextEditor.HorizontalAlignment">
            <summary>
            Gets or sets horizontal alignment of text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ITextEditor.TextColor">
            <summary>
            Gets or sets a value indicating whether color of text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ITextEditor.Superscript">
            <summary>
            Gets or sets a value indicating whether text is Superscript.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ITextEditor.Subscript">
            <summary>
            Gets or sets a value indicating whether text is subscript.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ITextEditor.CharOffset">
            <summary>
            Gets or sets no of Characters to Offset
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ITextEditor.Lower">
            <summary>
            Gets or sets a value indicating whether text is Lower.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ITextEditor.Upper">
            <summary>
            Gets or sets a value indicating whether text is Upper.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.ITextEdit">
            <summary>
            Helper interface used with Clipboard Cut/Paste.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ITextEdit.Cut">
            <summary>
            Performs Clipboard text Cut.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ITextEdit.Paste(System.String)">
            <summary>
            Performs paste text from clipboard.
            </summary>
            <param name="strText">Text to be pasted.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RichTextEdit">
            <summary>
            RichTextBox control for editing text objects.
            </summary>
            <remarks>
            <para>
            This class implements a text box control that is used for editing
            text nodes derived from
            <see cref="T:Syncfusion.Windows.Forms.Diagram.RichTextNode"/>.
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.RichTextNode"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.RichTextEdit.m_nSelectionStart">
            <summary>
            Helper fields for determining corrent action type.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.RichTextEdit.m_strFrontSelectedText">
            <summary>
            Front rtf text on current selection position.
            Used for delete command by Del key where need know about front symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.RichTextEdit.m_bDelete">
            <summary>
            This flag indicate Delete key pressed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.RichTextEdit.m_bShiftCut">
            <summary>
            This flag is used for cut by using Shift+Delete keys shortcut
            </summary>
            <remarks>
            Internal usage only
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.RichTextEdit.m_bShiftPaste">
            <summary>
            This flag is used for paste by using Shift+Insert keys shortcut
            </summary>
            <remarks>
            Internal usage only
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.RichTextEdit.m_bCtrlCopy">
            <summary>
            This flag is used for copy by using Ctrl+Insert keys shortcut
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.RichTextEdit.m_strInTimeClipboard">
            <summary>
            Clipboard container for paste by using Shift+Insert keys shortcut
            </summary>        
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RichTextEdit.#ctor(Syncfusion.Windows.Forms.Diagram.IViewer)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RichTextEdit"/> class.
            </summary>
            <param name="view">View that is hosting the text edit control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RichTextEdit.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RichTextEdit.BeginEdit(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Loads and positions the text edit control and goes into edit mode.
            </summary>
            <param name="node">Node to edit.</param>
            <returns>True if editing started; otherwise False.</returns>
            <remarks>
            <para>
            This method loads the control with the text value and properties of the
            attached text node. It also positions the control to correspond to
            bounds of the text node. Then it hides the text node and makes the
            control visible.
            </para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RichTextEdit.EndEdit(System.Boolean)">
            <summary>
            Saves the changes made in the control to the attached text node and
            ends edit mode.
            </summary>
            <param name="bSaveChanges">if set to <c>true</c> save changes.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RichTextEdit.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Gets a value indicating the state of the <see cref="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled"/> property.
            </summary>
            <param name="msg">A <see cref="T:System.Windows.Forms.Message"/>, passed by reference that represents the window message to process.</param>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values that represents the shortcut key to process.</param>
            <returns>
            true if the shortcut key was processed by the control; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RichTextEdit.OnEditorTextChanged(Syncfusion.Windows.Forms.Diagram.EditorTextChangedEventArgs)">
            <summary>
            Raises the <see cref="E:EditorTextChanged"/> event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.EditorTextChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RichTextEdit.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RichTextEdit.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.RichTextEdit.EditorTextChanged">
            <summary>
            Occurs when text changed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RichTextEdit.Upper">
            <summary>
            Gets or sets a value indicating whether text is upper.        
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RichTextEdit.Lower">
            <summary>
            Gets or sets a value indicating whether text is lower.        
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RichTextEdit.CurrentText">
            <summary>
            Gets or sets the current contents of the text editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RichTextEdit.Bold">
            <summary>
            Gets or sets a value indicating whether text is bold.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RichTextEdit.Italic">
            <summary>
            Gets or sets a value indicating whether text is in italics.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RichTextEdit.Underline">
            <summary>
            Gets or sets a value indicating whether text is underlined.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RichTextEdit.Strikeout">
            <summary>
            Gets or sets a value indicating whether the selected text has strikeout property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RichTextEdit.Superscript">
            <summary>
            Gets or sets a value indicating whether the selected text has superscript property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RichTextEdit.Subscript">
            <summary>
            Gets or sets a value indicating whether the selected text has subscript property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RichTextEdit.FontFamily">
            <summary>
            Gets or sets name of font family.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RichTextEdit.PointSize">
            <summary>
            Gets or sets size of font in points.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RichTextEdit.HorizontalAlignment">
            <summary>
            Gets or sets horizontal alignment of text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RichTextEdit.TextColor">
            <summary>
            Gets or sets color of text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RichTextEdit.CharOffset">
            <summary>
            Gets or sets the selection char offset.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RTFFormatCmd">
            <summary>
            Base class for all of the RTF releated commands.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFFormatCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.RichTextNode,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RTFFormatCmd"/> class.
            </summary>
            <param name="textEditor">The text editor.</param>
            <param name="nodeFormatting">The node formatting.</param>
            <param name="nSelectionStart">The n selection start.</param>
            <param name="nSelectionLength">Length of the n selection.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFFormatCmd.FormatText">
            <summary>
            Formats the text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFFormatCmd.UndoFormatText">
            <summary>
            Undoes the format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFFormatCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Determines whether this instance can merge the specified command to previous recorded command.
            </summary>
            <param name="cmd">The command to merge.</param>
            <returns>
            <c>true</c> if this instance can merge the specified command to last recorded command; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFFormatCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merges the specified command with last recorded user operation.
            </summary>
            <param name="cmd">The command to merge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFFormatCmd.Undo">
            <summary>
            Reverses the command.
            </summary>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFFormatCmd.Do(System.Object)">
            <summary>
            Performs the action.
            </summary>
            <param name="target">Object that is acted upon.</param>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RTFFormatCmd.NodeEditing">
            <summary>
            Gets the editing node.
            </summary>
            <value>The node editing.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RTFFormatCmd.NewFormatValue">
            <summary>
            Gets the new format value.
            </summary>
            <value>The new format value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RTFFormatCmd.OldFormatValue">
            <summary>
            Gets the old format value.
            </summary>
            <value>The old format value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RTFFormatCmd.Description">
            <summary>
            Gets short, user-friendly description of the command.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RTFFormatCmd.CanUndo">
            <summary>
            Gets a value indicating whether or not the command supports undo.
            </summary>
            <value></value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RTFBoldCmd">
            <summary>
            Command used to format text bold
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFBoldCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.RichTextNode,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RTFBoldCmd"/> class.
            </summary>
            <param name="textEditor">current text editor</param>
            <param name="nodeFormatting">RichText node</param>
            <param name="nSelectionStart">selection start position</param>
            <param name="nSelectionLength">selection length</param>
            <param name="bBold">bold value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFBoldCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Checks whether text can be merged.
            </summary>
            <param name="cmd">Merging command</param>
            <returns>true - can be merged; false - not</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFBoldCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merge text with command.
            </summary>
            <param name="cmd">Merging command</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFBoldCmd.FormatText">
            <summary>
            Execute format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFBoldCmd.UndoFormatText">
            <summary>
            Undo format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFBoldCmd.FormatBold(System.Boolean)">
            <summary>
            Format selected text with bold.
            </summary>
            <param name="bBold">formatting value</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RTFItalicCmd">
            <summary>
            Command used to format text italic
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFItalicCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.RichTextNode,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RTFItalicCmd"/> class.
            </summary>
            <param name="textEditor">current text editor</param>
            <param name="nodeFormatting">RichText node</param>
            <param name="nSelectionStart">selection start position</param>
            <param name="nSelectionLength">selection length</param>
            <param name="bItalic">italic value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFItalicCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Checks whether text can be merged.
            </summary>
            <param name="cmd">Merging command</param>
            <returns>true - can be merged; false - not</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFItalicCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merge text with command.
            </summary>
            <param name="cmd">Merging command</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFItalicCmd.FormatText">
            <summary>
            Execute format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFItalicCmd.UndoFormatText">
            <summary>
            Undo format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFItalicCmd.FormatItalic(System.Boolean)">
            <summary>
            Format selected text with italic.
            </summary>
            <param name="bItalic">formatting value</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RTFUnderlineCmd">
            <summary>
            Command used to underline text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFUnderlineCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.RichTextNode,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RTFUnderlineCmd"/> class.
            </summary>
            <param name="textEditor">current text editor</param>
            <param name="nodeFormatting">RichText node</param>
            <param name="nSelectionStart">selection start position</param>
            <param name="nSelectionLength">selection length</param>
            <param name="bUnderline">underline value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFUnderlineCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Checks whether text can be merged.
            </summary>
            <param name="cmd">Merging command</param>
            <returns>true - can be merged; false - not</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFUnderlineCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merge text with command.
            </summary>
            <param name="cmd">Merging command</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFUnderlineCmd.FormatText">
            <summary>
            Execute format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFUnderlineCmd.UndoFormatText">
            <summary>
            Undo format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFUnderlineCmd.FormatUnderline(System.Boolean)">
            <summary>
            Format selected text with underline.
            </summary>
            <param name="bUnderline">formatting value</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RTFSubscriptCmd">
            <summary>
            RFT Subscript commands.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFSubscriptCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.RichTextNode,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RTFSubscriptCmd"/> class.
            </summary>
            <param name="textEditor">current text editor</param>
            <param name="nodeFormatting">RichText node</param>
            <param name="nSelectionStart">selection start position</param>
            <param name="nSelectionLength">selection length</param>
            <param name="bSuperscript">Previous superscript value</param>
            <param name="bSubscript">Subscript value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFSubscriptCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Checks whether text can be merged.
            </summary>
            <param name="cmd">Merging command</param>
            <returns>true - can be merged; false - not</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFSubscriptCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merge text with command.
            </summary>
            <param name="cmd">Merging command</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFSubscriptCmd.FormatText">
            <summary>
            Execute format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFSubscriptCmd.UndoFormatText">
            <summary>
            Undo format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFSubscriptCmd.FormatSuperscript(System.Boolean)">
            <summary>
            Format selected text with superscript.
            </summary>
            <param name="bSuperscript">formatting value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFSubscriptCmd.FormatSubscript(System.Boolean)">
            <summary>
            Format selected text with subscript.
            </summary>
            <param name="bSubscript">formatting value</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RTFSuperscriptCmd">
            <summary>
            RTF Superscript commands.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFSuperscriptCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.RichTextNode,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RTFSuperscriptCmd"/> class.
            </summary>
            <param name="textEditor">current text editor</param>
            <param name="nodeFormatting">RichText node</param>
            <param name="nSelectionStart">selection start position</param>
            <param name="nSelectionLength">selection length</param>
            <param name="bSubscript">previous subscript value</param>
            <param name="bSuperscript">Superscript value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFSuperscriptCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Checks whether text can be merged.
            </summary>
            <param name="cmd">Merging command</param>
            <returns>true - can be merged; false - not</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFSuperscriptCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merge text with command.
            </summary>
            <param name="cmd">Merging command</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFSuperscriptCmd.FormatText">
            <summary>
            Execute format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFSuperscriptCmd.UndoFormatText">
            <summary>
            Undo format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFSuperscriptCmd.FormatSuperscript(System.Boolean)">
            <summary>
            Format selected text with superscript.
            </summary>
            <param name="bSuperscript">formatting value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFSuperscriptCmd.FormatSubscript(System.Boolean)">
            <summary>
            Format selected text with subscript.
            </summary>
            <param name="bSubscript">formatting value</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RTFColorCmd">
            <summary>
            Command used to set color for text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFColorCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.RichTextNode,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RTFColorCmd"/> class.
            </summary>
            <param name="textEditor">current text editor</param>
            <param name="nodeFormatting">RichText node</param>
            <param name="nSelectionStart">selection start position</param>
            <param name="nSelectionLength">selection length</param>
            <param name="previous">previous color value</param>
            <param name="color">color value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFColorCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Checks whether text can be merged.
            </summary>
            <param name="cmd">Merging command</param>
            <returns>true - can be merged; false - not</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFColorCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merge text with command.
            </summary>
            <param name="cmd">Merging command</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFColorCmd.FormatText">
            <summary>
            Execute format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFColorCmd.UndoFormatText">
            <summary>
            Undo format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFColorCmd.FormatTextColor(System.Drawing.Color)">
            <summary>
            Format selected text with color.
            </summary>
            <param name="color">formatting value</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RTFStrikeoutCmd">
            <summary>
            Command used to strikeout the text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFStrikeoutCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.RichTextNode,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RTFStrikeoutCmd"/> class.
            </summary>
            <param name="textEditor">current text editor</param>
            <param name="nodeFormatting">RichText node</param>
            <param name="nSelectionStart">selection start position</param>
            <param name="nSelectionLength">selection length</param>
            <param name="bStrikeout">Strikeout value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFStrikeoutCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Checks whether text can be merged.
            </summary>
            <param name="cmd">Merging command</param>
            <returns>true - can be merged; false - not</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFStrikeoutCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merge text with command.
            </summary>
            <param name="cmd">Merging command</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFStrikeoutCmd.FormatText">
            <summary>
            Execute format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFStrikeoutCmd.UndoFormatText">
            <summary>
            Undo format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFStrikeoutCmd.FormatStrikeout(System.Boolean)">
            <summary>
            Format selected text with strikeout.
            </summary>
            <param name="bStrikeout">formatting value</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RTFFamilyNameCmd">
            <summary>
            Command used to set font family for text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFFamilyNameCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.RichTextNode,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RTFFamilyNameCmd"/> class.
            </summary>
            <param name="textEditor">current text editor</param>
            <param name="nodeFormatting">RichText node</param>
            <param name="nSelectionStart">selection start position</param>
            <param name="nSelectionLength">selection length</param>
            <param name="previusName">previous family name value</param>
            <param name="familyName">family name value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFFamilyNameCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Checks whether text can be merged.
            </summary>
            <param name="cmd">Merging command</param>
            <returns>true - can be merged; false - not</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFFamilyNameCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merge text with command.
            </summary>
            <param name="cmd">Merging command</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFFamilyNameCmd.FormatText">
            <summary>
            Execute format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFFamilyNameCmd.UndoFormatText">
            <summary>
            Undo format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFFamilyNameCmd.FormatFamily(System.String)">
            <summary>
            Format selected text with familyName.
            </summary>
            <param name="familyName">formatting value</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RTFPointSizeCmd">
            <summary>
            Command used to set the font size for the text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFPointSizeCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.RichTextNode,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RTFPointSizeCmd"/> class.
            </summary>
            <param name="textEditor">current text editor</param>
            <param name="nodeFormatting">RichText node</param>
            <param name="nSelectionStart">selection start position</param>
            <param name="nSelectionLength">selection length</param>
            <param name="previous">previous size value</param>
            <param name="size">font size value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFPointSizeCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Checks whether text can be merged.
            </summary>
            <param name="cmd">Merging command</param>
            <returns>true - can be merged; false - not</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFPointSizeCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merge text with command.
            </summary>
            <param name="cmd">Merging command</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFPointSizeCmd.FormatText">
            <summary>
            Execute format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFPointSizeCmd.UndoFormatText">
            <summary>
            Undo format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFPointSizeCmd.FormatPointSize(System.Single)">
            <summary>
            Format selected text with pointSize.
            </summary>
            <param name="pointSize">formatting value</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RTFHorizontalAlignmentCmd">
            <summary>
            Command used to set horizontal alignment of text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFHorizontalAlignmentCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.RichTextNode,System.Int32,System.Int32,System.Drawing.StringAlignment,System.Drawing.StringAlignment)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RTFHorizontalAlignmentCmd"/> class.
            </summary>
            <param name="textEditor">current text editor</param>
            <param name="nodeFormatting">RichText node</param>
            <param name="nSelectionStart">selection start position</param>
            <param name="nSelectionLength">selection length</param>
            <param name="previous">previous alignment value</param>
            <param name="alignment">alignment enum value</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFHorizontalAlignmentCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Checks whether text can be merged.
            </summary>
            <param name="cmd">Merging command</param>
            <returns>true - can be merged; false - not</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFHorizontalAlignmentCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merge text with command.
            </summary>
            <param name="cmd">Merging command</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFHorizontalAlignmentCmd.FormatText">
            <summary>
            Execute format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFHorizontalAlignmentCmd.UndoFormatText">
            <summary>
            Undo format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFHorizontalAlignmentCmd.FormatAligment(System.Drawing.StringAlignment)">
            <summary>
            Format selected text with alignment.
            </summary>
            <param name="alignment">formatting value</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RTFCharOffsetCmd">
            <summary>
            Command used to set character offset for text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFCharOffsetCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.RichTextNode,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RTFCharOffsetCmd"/> class.
            </summary>
            <param name="textEditor">current text editor</param>
            <param name="nodeFormatting">RichText node</param>
            <param name="nSelectionStart">selection start position</param>
            <param name="nSelectionLength">selection length</param>
            <param name="previous">previous value offset</param>
            <param name="newValue">new value offset</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFCharOffsetCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Checks whether text can be merged.
            </summary>
            <param name="cmd">Merging command</param>
            <returns>true - can be merged; false - not</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFCharOffsetCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merge text with command.
            </summary>
            <param name="cmdMerging">Merging command</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFCharOffsetCmd.FormatText">
            <summary>
            Execute format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFCharOffsetCmd.UndoFormatText">
            <summary>
            Undo format text.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RTFCharOffsetCmd.FormatOffset(System.Int32)">
            <summary>
            Format selected text with char offset.
            </summary>
            <param name="charOffset">formatting value</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.DeleteTextCmd">
            <summary>
            Command used to delete text.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.CutTextCmd">
            <summary>
            Cut text commands.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.SetTextCmd">
            <summary>
            Set text commands
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SetTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.Node,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.SetTextCmd"/> class.
            </summary>
            <param name="textEditor">The text editor.</param>
            <param name="nodeEditing">The node editing.</param>
            <param name="nInsertionLocation">The n insertion location.</param>
            <param name="strDeletedText">The deleted text.</param>
            <param name="strTextToInsert">The text to insert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SetTextCmd.Undo">
            <summary>
            Reverses the command.
            </summary>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SetTextCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Determines whether this instance can merge the specified command to previous recorded command.
            </summary>
            <param name="cmd">The command to merge.</param>
            <returns>
            <c>true</c> if this instance can merge the specified command to last recorded command; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SetTextCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merges the specified merging command.
            </summary>
            <param name="cmdMerging">The merging command.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SetTextCmd.Do(System.Object)">
            <summary>
            Performs the action.
            </summary>
            <param name="target">Object that is acted upon.</param>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SetTextCmd.ComposeRtfString(System.String[])">
            <summary>
            Composes the RTF string.
            </summary>
            <param name="arrString">The string array.</param>
            <returns>The RTF string.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SetTextCmd.ComposeString(System.String[])">
            <summary>
            Composes the string.
            </summary>
            <param name="arrString">The string array.</param>
            <returns>The string</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SetTextCmd.NodeEditing">
            <summary>
            Gets the node editing.
            </summary>
            <value>The node editing.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SetTextCmd.InsertionLocation">
            <summary>
            Gets the insertion location.
            </summary>
            <value>The insertion location.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SetTextCmd.TextInserting">
            <summary>
            Gets the text inserting.
            </summary>
            <value>The text inserting.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SetTextCmd.TextDeleted">
            <summary>
            Gets the text deleted.
            </summary>
            <value>The text deleted.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SetTextCmd.RTFTextInserting">
            <summary>
            Gets the RTF text inserting.
            </summary>
            <value>The RTF text inserting.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SetTextCmd.RTFTextDeleted">
            <summary>
            Gets the RTF text deleted.
            </summary>
            <value>The RTF text deleted.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SetTextCmd.Description">
            <summary>
            Gets short, user-friendly description of the command.
            </summary>
            <value></value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SetTextCmd.CanUndo">
            <summary>
            Gets a value indicating whether or not the command supports undo.
            </summary>
            <value></value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.CutTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.Node,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.CutTextCmd"/> class.
            </summary>
            <param name="textEditor">The text editor.</param>
            <param name="nodeEditing">The node editing.</param>
            <param name="nInsertionLocation">The n insertion location.</param>
            <param name="strDeletedText">The deleted text.</param>
            <param name="strTextToInsert">The text to insert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.CutTextCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Determines whether this instance can merge the specified command to previous recorded command.
            </summary>
            <param name="cmd">The command to merge.</param>
            <returns>
            <c>true</c> if this instance can merge the specified command to last recorded command; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.CutTextCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merges the specified merging command.
            </summary>
            <param name="cmdMerging">The merging command.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.CutTextCmd.Do(System.Object)">
            <summary>
            Performs the action.
            </summary>
            <param name="target">Object that is acted upon.</param>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DeleteTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.Node,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.DeleteTextCmd"/> class.
            </summary>
            <param name="textEditor">The text editor.</param>
            <param name="nodeEditing">The node editing.</param>
            <param name="nInsertionLocation">The n insertion location.</param>
            <param name="strDeletedText">The deleted text.</param>
            <param name="strTextToInsert">The text to insert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DeleteTextCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Determines whether this instance can merge the specified command.
            </summary>
            <param name="cmd">The command.</param>
            <returns>
            <c>true</c> if this instance can merge the specified command; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DeleteTextCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merges the specified CMD merging.
            </summary>
            <param name="cmdMerging">The CMD merging.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DeleteTextCmd.Do(System.Object)">
            <summary>
            Does the specified target.
            </summary>
            <param name="target">The target.</param>
            <returns>true, if do the specified target.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DeleteTextCmd.Undo">
            <summary>
            Reverses the command.
            </summary>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.PasteTextCmd">
            <summary>
            Paste text commands.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PasteTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.Node,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.PasteTextCmd"/> class.
            </summary>
            <param name="textEditor">The text editor.</param>
            <param name="nodeEditing">The node editing.</param>
            <param name="nInsertionLocation">The n insertion location.</param>
            <param name="strDeletedText">The deleted text.</param>
            <param name="strTextToInsert">The text to insert.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PasteTextCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Determines whether this instance can merge the specified command to previous recorded command.
            </summary>
            <param name="cmd">The command to merge.</param>
            <returns>
            <c>true</c> if this instance can merge the specified command to last recorded command; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PasteTextCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merges the specified merging command.
            </summary>
            <param name="cmdMerging">The merging command.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.TextEdit">
            <summary>
            Text Box control for editing text objects.
            </summary>
            <remarks>
            <para>
            This class implements a text box control that is used for editing
            text nodes derived from the
            <see cref="T:Syncfusion.Windows.Forms.Diagram.TextNode"/>.
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.TextNode"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextEdit.m_strFrontSelectedText">
            <summary>
            Front char on current selection position.
            Used for delete command by Del key where need know about front symbol.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextEdit.view">
            <summary>
            TextEditor parent.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEdit.#ctor(Syncfusion.Windows.Forms.Diagram.IViewer)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.TextEdit"/> class.
            </summary>
            <param name="view">View that is hosting the text edit control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEdit.#ctor(Syncfusion.Windows.Forms.Diagram.IViewer,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.TextEdit"/> class.
            </summary>
            <param name="view">View that is hosting the text edit control.</param>
            <param name="autoResize">Flag indicating if text box should be automatically resized.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEdit.#ctor(Syncfusion.Windows.Forms.Diagram.IViewer,System.Drawing.SizeF,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.TextEdit"/> class.
            </summary>
            <param name="view">View that is hosting the text edit control.</param>
            <param name="maxSize">Maximum size the text can grow to.</param>
            <param name="autoResize">Flag indicating if text box should be automatically resized.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEdit.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEdit.BeginEdit(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Starts editing node.
            </summary>
            <param name="nodeEditing">node to edit</param>
            <returns>success operation value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEdit.EndEdit(System.Boolean)">
            <summary>
            Saves the changes made in the control to the attached text node and
            ends edit mode.
            </summary>
            <param name="bSaveChanges">Save the changes made in the control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEdit.OnTextChanged(System.EventArgs)">
            <summary>
            Called when the text in the control changes.
            </summary>
            <param name="e">Event arguments.</param>
            <remarks>
            <para>
            If the auto-resize option is turned on, this method resizes the control
            so that the text fits.
            </para>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEdit.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Gets a value indicating the state of the <see cref="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled"/> property.
            </summary>
            <param name="msg">A <see cref="T:System.Windows.Forms.Message"/>, passed by reference that represents the window message to process.</param>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values that represents the shortcut key to process.</param>
            <returns>
            true if the shortcut key was processed by the control; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEdit.UpdateSelection">
            <summary>
            Update selection change in text.
            </summary>
            <remarks>
            There sets pevius and current selection position and length.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEdit.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEdit.OnEditorTextChanged(Syncfusion.Windows.Forms.Diagram.EditorTextChangedEventArgs)">
            <summary>
            Raises the <see cref="E:EditorTextChanged"/> event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.EditorTextChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEdit.PasteClipboardText">
            <summary>
            Paste parsed text from clipboard.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEdit.ParseRtfText(System.String)">
            <summary>
            Converting rtf to easy text.
            </summary>
            <param name="rtfText">The RTF text.</param>
            <returns>Easy text.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.AutoResize">
            <summary>
            Gets or sets a value indicating whether text box should be automatically resized.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.MinSize">
            <summary>
            Gets or sets the minimum size the text box can be.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.MaxSize">
            <summary>
            Gets or sets the maximum size that the text box can grow to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.CurrentText">
            <summary>
            Gets or sets the current contents of the text editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.Superscript">
            <summary>
            Gets or sets a value indicating whether text is superscript.
            Not used in TextNode
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.Subscript">
            <summary>
            Gets or sets a value indicating whether text is subscript.
            Not used in TextNode
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.Upper">
            <summary>
            Gets or sets a value indicating whether text is upper.        
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.Lower">
            <summary>
            Gets or sets a value indicating whether text is lower.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.CharOffset">
            <summary>
            Gets or sets char offset.
            Not used in TextNode.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.Bold">
            <summary>
            Gets or sets a value indicating whether text is bold.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.Italic">
            <summary>
            Gets or sets a value indicating whether text is in italics.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.Underline">
            <summary>
            Gets or sets a value indicating whether text is underlined.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.Strikeout">
            <summary>
            Gets or sets a value indicating whether the selected text has strikeout property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.FontFamily">
            <summary>
            Gets or sets name of font family.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.PointSize">
            <summary>
            Gets or sets size of font in points.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.HorizontalAlignment">
            <summary>
            Gets or sets horizontal alignment of text.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEdit.TextColor">
            <summary>
            Gets or sets color of text.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.TextEdit.EditorTextChanged">
            <summary>
            Occurs when text changed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.TextEditor">
            <summary>
            Text Editor used in Text Node for text editing purposes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextEditor.m_controller">
            <summary>
            Diagram Controller.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextEditor.m_txtEditor">
            <summary>
            TextEditor used to edit text.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextEditor.m_nodeEditing">
            <summary>
            Node being edited.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEditor.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.TextEditor"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEditor.GetSelectionFormat(System.Boolean)">
            <summary>
            Gets selected nodes text formatting values.
            </summary>
            <remarks>
            Iterates through controller.SelectionList NodeCollection but only text nodes
            formatting values are taken into account.
            </remarks>
            <param name="bFirstTexBaseInSelected">Text in the selection base.</param>
            <returns>SelectionFormat structure containing text formatting values</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEditor.SetSelection(System.Int32,System.Int32)">
            <summary>
            Sets the selection.
            </summary>
            <param name="nSelectionStart">The n selection start.</param>
            <param name="nSelectionLength">Length of the selection.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEditor.IsEditable(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Determines whether the specified node to edit is editable.
            </summary>
            <param name="nodeToEdit">The node to edit.</param>
            <returns>
            <c>true</c> if the specified node to edit is editable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEditor.BeginEdit(Syncfusion.Windows.Forms.Diagram.Node,System.Boolean)">
            <summary>
            Begins the edit.
            </summary>
            <param name="nodeToEdit">The node to edit.</param>
            <param name="bAutoResize">if set to <c>true</c> automatic resize field.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEditor.EndEdit(System.Boolean)">
            <summary>
            Ends the edit.
            </summary>
            <param name="bSaveChanges">if set to <c>true</c> save changes.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEditor.StartEditing(Syncfusion.Windows.Forms.Diagram.Node,System.Boolean)">
            <summary>
            Starts the editing.
            </summary>
            <param name="nodeToEdit">The node to edit.</param>
            <param name="bAutoResize">if set to <c>true</c> automatic resize text field.</param>
            <returns>The text editor to edit.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEditor.StartRTFNodeEdit(Syncfusion.Windows.Forms.Diagram.RichTextNode)">
            <summary>
            Starts the RTF node edit.
            </summary>
            <param name="nodeRTF">The RTF node.</param>
            <returns>The text editor to edit RTF.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEditor.StartTextNodEdit(Syncfusion.Windows.Forms.Diagram.TextNode,System.Boolean)">
            <summary>
            Starts the text node edit.
            </summary>
            <param name="nodeText">The node text.</param>
            <param name="bAutoResize">if set to <c>true</c> automatic resize text field.</param>
            <returns>The text editor to edit text node.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEditor.CheckForBelongingNode(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Checks for belonging node.
            </summary>
            <param name="nodeToEdit">The node to edit.</param>
            <returns>Node to edit.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextEditor.OnFormatChanged">
            <summary>
            Called when format changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.TextEditor.FormatChanged">
            <summary>
            Occurs when format changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.TextEditor.TextChanged">
            <summary>
            Occurs when text changed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.TextEditor.KeyDown">
            <summary>
            Occurs when key down.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Forms.Diagram.TextEditor.TextEditingCompleted">
            <summary>
            Occurs when text editing completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.CurrentText">
            <summary>
            Gets or sets the current text.
            </summary>
            <value>The current text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.IsEditing">
            <summary>
            Gets a value indicating whether this instance is editing.
            </summary>
            <value>
            <c>true</c> if this instance is editing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.Upper">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Diagram.TextEditor"/> is upper.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.Lower">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Diagram.TextEditor"/> is lower.
            </summary>        
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.Bold">
            <summary>
             Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Diagram.TextEditor"/> is bold.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.Underline">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Diagram.TextEditor"/> is underline.
            </summary>
            <value><c>true</c> if underline; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.Italic">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Diagram.TextEditor"/> is italic.
            </summary>
            <value><c>true</c> if italic; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.Strikeout">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Diagram.TextEditor"/> is strikeout.
            </summary>
            <value><c>true</c> if strikeout; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.Subscript">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Diagram.TextEditor"/> is subscript.
            </summary>
            <value><c>true</c> if subscript; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.Superscript">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Diagram.TextEditor"/> is superscript.
            </summary>
            <value><c>true</c> if superscript; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.TextColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.FamilyName">
            <summary>
            Gets or sets the name of the family.
            </summary>
            <value>The name of the family.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.CharOffset">
            <summary>
            Gets or sets the char offset.
            </summary>
            <value>The char offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.PointSize">
            <summary>
            Gets or sets the size of the point.
            </summary>
            <value>The size of the point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
            <value>The horizontal alignment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextEditor.Controller">
            <summary>
            Gets the reference to diagram controller.
            </summary>
            <value>The controller.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.SelectionFormat">
            <summary>
            Helper class used primarily when obtaining 
            TextFormatting for SelectedNodes
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SelectionFormat.#ctor(System.Drawing.FontStyle,System.String,System.Single,System.Drawing.Color,System.Drawing.StringAlignment,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.SelectionFormat"/> class.
            </summary>
            <param name="fntStyle">The font style.</param>
            <param name="strFontFamily">The font family name.</param>
            <param name="fHeightInPoints">The font height in points.</param>
            <param name="clrText">The text color.</param>
            <param name="alignment">The text alignment.</param>
            <param name="bValid">if set to <c>true</c> text format is valid.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SelectionFormat.Valid">
            <summary>
            Gets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Diagram.SelectionFormat"/> is valid.
            </summary>
            <value><c>true</c> if valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SelectionFormat.FontStyle">
            <summary>
            Gets the font style.
            </summary>
            <value>The font style.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SelectionFormat.FontFamily">
            <summary>
            Gets the font family name.
            </summary>
            <value>The font family.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SelectionFormat.TextColol">
            <summary>
            Gets the text color.
            </summary>
            <value>The text color.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SelectionFormat.FontHeight">
            <summary>
            Gets the height of the font.
            </summary>
            <value>The height of the font.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SelectionFormat.Alignment">
            <summary>
            Gets the text alignment.
            </summary>
            <value>The alignment.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.TextFormatCmd">
            <summary>
            Base class for text formatting commands.
            </summary>
            <remarks>
            This is the base class for a series of text formatting commands that
            modify the font style and alignment of text objects.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.m_fNewFormatValue">
            <summary>
            New format value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.m_fOldFormatValue">
            <summary>
            Old format value.
            </summary>
            <remarks>
            Valid only when new formatting is applied to one node
            or when formatting is applied using textEditor.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.m_hashOldFormatValues">
            <summary>
            Helper Hashtable containing old format values.
            </summary>
            <remarks>
            Valid only when new formatting is applied to multiple nodes.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.m_nodesAffected">
            <summary>
            Nodes Affected with new format.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.m_txtEditor">
            <summary>
            TextEditor used to format text.
            </summary>
            <remarks>
            Valid only when one formatting is applied to one node using textEditor.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.m_strDescription">
            <summary>
            Short, user-friendly description of the command.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.#ctor(Syncfusion.Windows.Forms.Diagram.NodeCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.TextFormatCmd"/> class.
            </summary>
            <param name="nodesAffected">The nodes affected.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.TextFormatCmd"/> class.
            </summary>
            <param name="nodeAffected">The node affected.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.TextNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.TextFormatCmd"/> class.
            </summary>
            <param name="txtEditor">The text editor.</param>
            <param name="nodeEditing">The node editing.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.Do(System.Object)">
            <summary>
            Applies the text formatting value to the text nodes attached to the command.
            </summary>
            <param name="cmdTarget">Command target.</param>
            <returns>True if formatting applied to at least one node; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.Undo">
            <summary>
            Restores the original text formatting to each node attached to the command.
            </summary>
            <returns>True if successful; otherwise False.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.CanMerge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Determines whether this instance can merge the specified command to previous recorded command.
            </summary>
            <param name="cmd">The command to merge.</param>
            <returns>
            <c>true</c> if this instance can merge the specified command to last recorded command; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.Merge(Syncfusion.Windows.Forms.Diagram.ICommand)">
            <summary>
            Merges the specified command to merge.
            </summary>
            <param name="cmdMerging">The command to merge.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.Format(Syncfusion.Windows.Forms.Diagram.TextNode)">
            <summary>
            Formats the specified node to format.
            </summary>
            <param name="nodeToFormat">The node to format.</param>
            <returns>The object</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.UndoFormat(Syncfusion.Windows.Forms.Diagram.TextNode,System.Object)">
            <summary>
            Undoes the format changes.
            </summary>
            <param name="nodeToFormat">The node to format.</param>
            <param name="fmtValue">The format style.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.FormatTextEditor">
            <summary>
            Formats the text editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.UndoFormatTextEditor">
            <summary>
            Undoes the format text editor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.NewFormatValue">
            <summary>
            Gets the new format value.
            </summary>
            <value>The new format value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.NodeAffected">
            <summary>
            Gets the node affected.
            </summary>
            <value>The node affected.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.OldValues">
            <summary>
            Gets the hash of old values where key is textnode, value is format style.
            </summary>
            <value>The old values.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.Description">
            <summary>
            Gets short, user-friendly description of the command.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextFormatCmd.CanUndo">
            <summary>
            Gets a value indicating whether or not the command supports Undo.
            </summary>
            <remarks>
            <para>
            All text formatting commands support Undo.
            </para>
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.BoldTextCmd">
            <summary>
            Sets the value of the Bold text property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.BoldTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.TextNode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.BoldTextCmd"/> class.
            Format text node with textEdit.
            </summary>
            <param name="txtEditor">Current text editor.</param>
            <param name="nodeEditing">Editable node.</param>
            <param name="bNewBoldFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.BoldTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.NodeCollection,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.BoldTextCmd"/> class.
            Format selection nodes text without textEditor.
            </summary>
            <param name="nodesAffected">Collection of selection nodes.</param>
            <param name="bNewBoldFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.BoldTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextNode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.BoldTextCmd"/> class.
            Format selection node text without textEditor.
            </summary>
            <param name="nodeAffected">Selection node.</param>
            <param name="bNewBoldFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.BoldTextCmd.Format(Syncfusion.Windows.Forms.Diagram.TextNode)">
            <summary>
            Applies formatting value to the given node without TextEditor.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <returns>Previous value of formatting property.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.BoldTextCmd.UndoFormat(Syncfusion.Windows.Forms.Diagram.TextNode,System.Object)">
            <summary>
            Undo format text to given node without TextEditor.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <param name="fmtValue">Formatting value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.BoldTextCmd.FormatTextEditor">
            <summary>
            Applies formatting value to text in TextEditor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.BoldTextCmd.UndoFormatTextEditor">
            <summary>
            Undo format text in TextEditor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.ItalicTextCmd">
            <summary>
            Sets the value of the Italic text property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ItalicTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.TextNode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.ItalicTextCmd"/> class.
            Format text node with textEdit.
            </summary>
            <param name="txtEditor">Current text editor.</param>
            <param name="nodeEditing">Editable node.</param>
            <param name="bNewItalicFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ItalicTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.NodeCollection,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.ItalicTextCmd"/> class.
            Format selection nodes text without textEditor.
            </summary>
            <param name="nodesAffected">Collection of selection nodes.</param>
            <param name="bNewItalicFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ItalicTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextNode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.ItalicTextCmd"/> class.
            Format selection node text without textEditor.
            </summary>
            <param name="nodeAffected">Selection node.</param>
            <param name="bNewItalicFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ItalicTextCmd.Format(Syncfusion.Windows.Forms.Diagram.TextNode)">
            <summary>
            Applies formatting value to the given node.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <returns>Previous value of formatting property.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ItalicTextCmd.UndoFormat(Syncfusion.Windows.Forms.Diagram.TextNode,System.Object)">
            <summary>
            Undo format text to given node without TextEditor.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <param name="fmtValue">Formatting value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ItalicTextCmd.FormatTextEditor">
            <summary>
            Applies formatting value to text in TextEditor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ItalicTextCmd.UndoFormatTextEditor">
            <summary>
            Undo format text in TextEditor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.UnderlineTextCmd">
            <summary>
            Sets the value of the Underline text property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UnderlineTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.TextNode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.UnderlineTextCmd"/> class.
            </summary>
            <param name="txtEditor">The text editor.</param>
            <param name="nodeEditing">The node editing.</param>
            <param name="bNewUnderlineFormatValue">if set to <c>true</c> new underline format value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UnderlineTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.NodeCollection,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.UnderlineTextCmd"/> class.
            </summary>
            <param name="nodesAffected">Collection of selection nodes.</param>
            <param name="bNewUnderlineFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UnderlineTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextNode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.UnderlineTextCmd"/> class.
            </summary>
            <param name="nodeAffected">Selection node.</param>
            <param name="bNewUnderlineFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UnderlineTextCmd.Format(Syncfusion.Windows.Forms.Diagram.TextNode)">
            <summary>
            Applies formatting value to the given node.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <returns>Previous value of formatting property.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UnderlineTextCmd.UndoFormat(Syncfusion.Windows.Forms.Diagram.TextNode,System.Object)">
            <summary>
            Undo format text to given node without TextEditor.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <param name="fmtValue">Formatting value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UnderlineTextCmd.FormatTextEditor">
            <summary>
            Applies formatting value to text in TextEditor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UnderlineTextCmd.UndoFormatTextEditor">
            <summary>
            Undo format text in TextEditor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.StrikeoutTextCmd">
            <summary>
            Sets the value of the Strikeout text property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.StrikeoutTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.TextNode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.StrikeoutTextCmd"/> class.
            </summary>
            <param name="txtEditor">Current text editor.</param>
            <param name="nodeEditing">Editable node.</param>
            <param name="bNewStrikeoutFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.StrikeoutTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.NodeCollection,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.StrikeoutTextCmd"/> class.
            </summary>
            <param name="nodesAffected">Collection of selection nodes.</param>
            <param name="bNewStrikeoutFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.StrikeoutTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextNode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.StrikeoutTextCmd"/> class.
            </summary>
            <param name="nodeAffected">Selection node.</param>
            <param name="bNewStrikeoutFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.StrikeoutTextCmd.Format(Syncfusion.Windows.Forms.Diagram.TextNode)">
            <summary>
            Applies formatting value to the given node.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <returns>Previous value of formatting property.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.StrikeoutTextCmd.UndoFormat(Syncfusion.Windows.Forms.Diagram.TextNode,System.Object)">
            <summary>
            Undo format text to given node without TextEditor.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <param name="fmtValue">Formatting value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.StrikeoutTextCmd.FormatTextEditor">
            <summary>
            Applies formatting value to text in TextEditor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.StrikeoutTextCmd.UndoFormatTextEditor">
            <summary>
            Undo format text in TextEditor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.HorizontalAlignmentTextCmd">
            <summary>
            Sets the value of the Strikeout text property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HorizontalAlignmentTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.TextNode,System.Drawing.StringAlignment)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.HorizontalAlignmentTextCmd"/> class.
            </summary>
            <param name="txtEditor">Current text editor.</param>
            <param name="nodeEditing">Editable node.</param>
            <param name="bNewAligmentFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HorizontalAlignmentTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.NodeCollection,System.Drawing.StringAlignment)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.HorizontalAlignmentTextCmd"/> class.
            </summary>
            <param name="nodesAffected">Collection of selection nodes.</param>
            <param name="bNewAligmentFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HorizontalAlignmentTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextNode,System.Drawing.StringAlignment)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.HorizontalAlignmentTextCmd"/> class.
            </summary>
            <param name="nodeAffected">Selection node.</param>
            <param name="bNewAligmentFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HorizontalAlignmentTextCmd.Format(Syncfusion.Windows.Forms.Diagram.TextNode)">
            <summary>
            Applies formatting value to the given node.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <returns>Previous value of formatting property.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HorizontalAlignmentTextCmd.UndoFormat(Syncfusion.Windows.Forms.Diagram.TextNode,System.Object)">
            <summary>
            Undo format text to given node without TextEditor.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <param name="fmtValue">Formatting value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HorizontalAlignmentTextCmd.FormatTextEditor">
            <summary>
            Applies formatting value to text in TextEditor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HorizontalAlignmentTextCmd.UndoFormatTextEditor">
            <summary>
            Undo format text in TextEditor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.FontFamilyTextCmd">
            <summary>
            Sets the value of the FontFamily property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FontFamilyTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.TextNode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.FontFamilyTextCmd"/> class.
            </summary>
            <param name="txtEditor">Current text editor.</param>
            <param name="nodeEditing">Editable node.</param>
            <param name="bNewFontFamilyValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FontFamilyTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.NodeCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.FontFamilyTextCmd"/> class.
            </summary>
            <param name="nodesAffected">Collection of selection nodes.</param>
            <param name="bNewFontFamilyValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FontFamilyTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextNode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.FontFamilyTextCmd"/> class.
            </summary>
            <param name="nodeAffected">Selection node.</param>
            <param name="bNewFontFamilyValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FontFamilyTextCmd.Format(Syncfusion.Windows.Forms.Diagram.TextNode)">
            <summary>
            Applies formatting value to the given node.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <returns>Previous value of formatting property.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FontFamilyTextCmd.UndoFormat(Syncfusion.Windows.Forms.Diagram.TextNode,System.Object)">
            <summary>
            Undo format text to given node without TextEditor.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <param name="fmtValue">Formatting value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FontFamilyTextCmd.FormatTextEditor">
            <summary>
            Applies formatting value to text in TextEditor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FontFamilyTextCmd.UndoFormatTextEditor">
            <summary>
            Undo format text in TextEditor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.FontHeightTextCmd">
            <summary>
            Sets the value of the FontFamily property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FontHeightTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.TextNode,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.FontHeightTextCmd"/> class.
            </summary>
            <param name="txtEditor">Current text editor.</param>
            <param name="nodeEditing">Editable node.</param>
            <param name="bNewFontHeightFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FontHeightTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.NodeCollection,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.FontHeightTextCmd"/> class.
            </summary>
            <param name="nodesAffected">Collection of selection nodes.</param>
            <param name="bNewFontHeightFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FontHeightTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextNode,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.FontHeightTextCmd"/> class.
            </summary>
            <param name="nodeAffected">Selection node.</param>
            <param name="bNewFontHeightFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FontHeightTextCmd.Format(Syncfusion.Windows.Forms.Diagram.TextNode)">
            <summary>
            Applies formatting value to the given node.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <returns>Previous value of formatting property.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FontHeightTextCmd.UndoFormat(Syncfusion.Windows.Forms.Diagram.TextNode,System.Object)">
            <summary>
            Undo format text to given node without TextEditor.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <param name="fmtValue">Formatting value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FontHeightTextCmd.FormatTextEditor">
            <summary>
            Applies formatting value to text in TextEditor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FontHeightTextCmd.UndoFormatTextEditor">
            <summary>
            Undo format text in TextEditor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.ColorTextCmd">
            <summary>
            Sets the value of the Bold text property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ColorTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextEditor,Syncfusion.Windows.Forms.Diagram.TextNode,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.ColorTextCmd"/> class.
            </summary>
            <param name="txtEditor">Current text editor.</param>
            <param name="nodeEditing">Editable node.</param>
            <param name="bNewColorFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ColorTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.NodeCollection,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.ColorTextCmd"/> class.
            </summary>
            <param name="nodesAffected">Collection of selection nodes.</param>
            <param name="bNewColorFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ColorTextCmd.#ctor(Syncfusion.Windows.Forms.Diagram.TextNode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.ColorTextCmd"/> class.
            </summary>
            <param name="nodeAffected">Selection node.</param>
            <param name="bNewColorFormatValue">Formatted value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ColorTextCmd.Format(Syncfusion.Windows.Forms.Diagram.TextNode)">
            <summary>
            Applies formatting value to the given node without TextEditor.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <returns>Previous value of formatting property.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ColorTextCmd.UndoFormat(Syncfusion.Windows.Forms.Diagram.TextNode,System.Object)">
            <summary>
            Undo format text to given node without TextEditor.
            </summary>
            <param name="nodeToFormat">Node to format.</param>
            <param name="fmtValue">Formatting value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ColorTextCmd.FormatTextEditor">
            <summary>
            Applies formatting value to text in TextEditor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ColorTextCmd.UndoFormatTextEditor">
            <summary>
            Undo format text in TextEditor.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.EditorTextChangedEventHandler">
            <summary>
            Editor text changed event handler.
            </summary>
            <param name="sender">The sender</param>
            <param name="evtArgs">Event args</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.LabelEditingCompletedEventHandler">
            <summary>
            Label Text Editing completed Event handler
            </summary>
            <param name="sender">The sender</param>
            <param name="evtArgs">Event args</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.LabelEditingCompletedEventArgs">
            <summary>
             Label Text Editing completed Event handler
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.LabelEditingCompletedEventArgs.NodeAffected">
            <summary>
            Gets the node affected.
            </summary>
            <value>The node affected.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.LabelEditingCompletedEventArgs.Value">
            <summary>
            Gets the Text value
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.EditorTextChangedEventArgs">
            <summary>
            Editor text changed event args
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.EditorTextChangedEventArgs.#ctor(Syncfusion.Windows.Forms.Diagram.TextFormatting,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.EditorTextChangedEventArgs"/> class.
            </summary>
            <param name="fmtType">Type of the text formatting.</param>
            <param name="nSelectionPosition">The selection position.</param>
            <param name="strDeletedText">The deleted text.</param>
            <param name="strInsertedText">The inserted text.</param>
            <param name="bMerge">if set to <c>true</c> to merger text changing command merge.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.EditorTextChangedEventArgs.TextFormatting">
            <summary>
            Gets the text formatting.
            </summary>
            <value>The text formatting.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.EditorTextChangedEventArgs.SelectionStart">
            <summary>
            Gets the selection start.
            </summary>
            <value>The selection start.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.EditorTextChangedEventArgs.DeletedText">
            <summary>
            Gets the deleted text.
            </summary>
            <value>The deleted text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.EditorTextChangedEventArgs.InsertedText">
            <summary>
            Gets the inserted text.
            </summary>
            <value>The inserted text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.EditorTextChangedEventArgs.Merge">
            <summary>
            Gets a value indicating whether this <see cref="T:Syncfusion.Windows.Forms.Diagram.EditorTextChangedEventArgs"/> is merge.
            </summary>
            <value><c>true</c> if merge; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.TextFormatting">
            <summary>
            Text change types
            formatting and text changing
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.Bold">
            <summary>
            Bold Text Formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.Italic">
            <summary>
            Italic Text Formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.Underline">
            <summary>
            Underline Text Formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.Strikeout">
            <summary>
            Strikeout Text Formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.Superscript">
            <summary>
            Superscript Text Formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.Lower">
            <summary>
            Lower Text Formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.Upper">
            <summary>
            Upper Text Formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.Subscript">
            <summary>
            Subscript Text Formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.FontHeight">
            <summary>
            FontHeight Text Formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.FamilyName">
            <summary>
            FamilyName Text Formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.TextColor">
            <summary>
            TextColor Text Formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.CharOffset">
            <summary>
            CharOffset Text Formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.PointSize">
            <summary>
            Font Height Text Formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.HorizontalAlignment">
            <summary>
            Horizontal Alignment Formatting.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.InsertText">
            <summary>
            Text inserted.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.PasteText">
            <summary>
            Text inserted from clipboard.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.CutText">
            <summary>
            Cut text to Clipboard.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextFormatting.DeleteText">
            <summary>
            Text Deleted.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.DirectedLineLinkTool">
            <summary>
            Directed Link Tool.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.DirectedLineConnectorTool">
            <summary>
            Interactive tool for drawing lines.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.LineBaseTool">
            <summary>
            Implement base actions to create line shape.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.UITool">
            <summary>
            UI Tool
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.Tool">
            <summary>
            Base class for user interface tools.
            </summary>
            <remarks>
            <para>
            A tool is an object that receives input from a controller and
            implements a piece of functionality or feature. Tools are helper
            objects that plug into a controller. Tools are attached to a
            controller using the
            <see cref="M:Syncfusion.Windows.Forms.Diagram.DiagramController.RegisterTool(Syncfusion.Windows.Forms.Diagram.Tool)"/>
            method. Each tool has a
            <see cref="P:Syncfusion.Windows.Forms.Diagram.Tool.Name"/> which
            must be unique within a controller. The
            <see cref="M:Syncfusion.Windows.Forms.Diagram.DiagramController.GetTool(System.String)"/>
            method in the controller can be used to look up a tool by
            name.
            </para>
            <para>
            Activation and deactivation of tools is coordinated by the controller.
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Controller"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.View"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Tool.m_rulerDisplayRect">
            <summary>
            Store rectangle to display on rulers.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Tool.m_toolPreceding">
            <summary>
            Preceding tool.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.Tool.m_ptStartOrigin">
            <summary>
            Start origin position to calc origin offset.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.Abort">
            <summary>
            Aborts tool actions.
            </summary>
            <returns>The tool to abort.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.ActivateTool">
            <summary>
            Activates the tool.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.DeactivateTool">
            <summary>
            Deactivates the tool.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse down.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse up.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.ProcessKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Processes the key up.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.ProcessKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Processes the key press.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.ProcessKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Processes the key down.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.ProcessClick">
            <summary>
            Processes the click.
            </summary>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.ProcessDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the double click.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.GetSelectionList">
            <summary>
            Get selection list using model EnableSelectionListSubstitute property value.
            </summary>
            <returns>Selection list.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.OnOriginChanged(Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs)">
            <summary>
            Raise the origin changed event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.GetLocalPoint(Syncfusion.Windows.Forms.Diagram.Node,System.Drawing.PointF)">
            <summary>
            Gets the local point without node parents transformations.
            </summary>
            <param name="parent">The parent.</param>
            <param name="ptLocation">The given point.</param>
            <returns>The local point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.GetPortBounds(Syncfusion.Windows.Forms.Diagram.ConnectionPoint,System.Single)">
            <summary>
            Get the port bounds.
            </summary>
            <param name="port">The port.</param>
            <param name="fZoomFactor">Graphics zoom factor.</param>
            <returns>Bounds of given port.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.CanInsert(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Checks whether node could be inserted into document.
            </summary>
            <param name="nodeToInsert">Node to insert</param>
            <returns>true, if can insert.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.UpdateCursor(System.Boolean)">
            <summary>
            Updates the cursor to current tool state.
            </summary>
            <param name="bCanDo">if set to <c>true</c> cursor change to current tool cursor, else to NoCursor.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.IsImageCursor(System.Windows.Forms.Cursor)">
            <summary>
            Check whether the given cursor is image cursor or not.
            </summary>
            <param name="cursor">Cursor</param>
            <returns>true, if the given cursor is image cursor</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.AppendParentTransformations(System.Drawing.PointF,Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Get point without parent transformations.
            </summary>
            <param name="ptCur">The given point.</param>
            <param name="node">The node.</param>
            <returns>The transformation points.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.GetFullRotationAngle(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Gets the rotation angle.
            </summary>
            <param name="node">The node.</param>
            <returns>The rotation angle.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.QuiteBoundarySet(System.Boolean)">
            <summary>
            Quites set boundary value without record in history and calling sink events.
            </summary>
            <param name="bBoundaryConstraintsEnabled">if set to <c>true</c> boundary constraints enabled.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.QuiteBridgingSet(System.Boolean)">
            <summary>
            Quites set line bridging flag without record in history and calling sink events.
            </summary>
            <param name="bLineBridgingEnabled">if set to <c>true</c> line bridging enabled.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.GetPointOffset(System.Drawing.PointF,Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Gets the point offset.
            </summary>
            <param name="ptPoint">The pt point.</param>
            <param name="node">The node.</param>
            <returns>The point offset.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.SmartSnap(System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Snaps and updates snapped point.
            </summary>
            <param name="ptSnapping">snapping point</param>
            <param name="szOffset">moving entity bounding rectangle left-top point offset</param>
            <returns>snapped point</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.AlterStyle(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Append alters the style to node.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.CheckBoundaryConstraints(Syncfusion.Windows.Forms.Diagram.Node,System.Drawing.Drawing2D.Matrix)">
            <summary>
            Check if node is contained in model.
            </summary>
            <param name="node">Node to check.</param>
            <param name="mtxParentTransformations">The matrix of parent transformations.</param>
            <returns>true, if node inside model</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.CanAddNode(System.Drawing.Rectangle)">
            <summary>
            Check if node can be added to diagram.
            </summary>
            <param name="renderingHelper">The rendering helper node.</param>
            <returns>true, if can add node.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.MakeControlNodeSnapshot(Syncfusion.Windows.Forms.Diagram.ControlNode)">
            <summary>
            Make the control node snapshot.
            </summary>
            <param name="nodeCtrl">The control node .</param>
            <returns>Snapshot of given control node.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.GetInsideNodeAt(System.Drawing.PointF)">
            <summary>
            Get the inside node composite node.
            </summary>
            <param name="ptLocation">The point to check.</param>
            <returns>Node inside composite node what contain given point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.GetOriginOffset">
            <summary>
            Get the origin offset from mouse down in model coordinates.
            </summary>
            <returns>Origin offset.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.GetStartPoint(System.Boolean)">
            <summary>
            Get start mouse position in client coordinates with append origin offset.
            </summary>
            <param name="bSnapToGrid">if set to <c>true</c> point will snap to grid before return.</param>
            <returns>Start mouse position in client coordinates with origin offset.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.GetCurrentPoint(System.Boolean)">
            <summary>
            Get current mouse position in client coordinates with origin offset.
            </summary>
            <param name="bSnapToGrid">if set to <c>true</c> point will snap to grid before return.</param>
            <returns>Current mouse position in client coordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.GetFrameRectangle(System.Boolean)">
            <summary>
            Get rectangle created from start and current point with
            append origin offset.
            </summary>
            <param name="bSnapToGrid">if set to <c>true</c> start and current point will snap before generate frame rectangle.</param>
            <returns>The frame rect</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.RestorePreviousTool(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Restore the previous Tool
            </summary>
            <param name="evtArgs"></param>
            <returns>the tool</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.GetSnapStartPoint">
            <summary>
            Get snap start mouse position in client coordinates with append origin offset.
            </summary>
            <returns>Start mouse position in client coordinates with origin offset.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.GetSnapCurrentPoint">
            <summary>
            Get snap current mouse position in client coordinates with origin offset.
            </summary>
            <returns>Current mouse position in client coordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.GetInsideNodeAt(Syncfusion.Windows.Forms.Diagram.ICompositeNode,System.Drawing.PointF)">
            <summary>
            Get the node inside composite node.
            </summary>
            <param name="container">The container.</param>
            <param name="ptLocation">The point to check.</param>
            <returns>Node inside composite node what contain given point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.AlterFillStyle(Syncfusion.Windows.Forms.Diagram.FillStyle)">
            <summary>
            Alters the fill style to node.
            </summary>
            <param name="styleFill">The style fill.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.AlterLineStyle(Syncfusion.Windows.Forms.Diagram.LineStyle)">
            <summary>
            Alters the line style to node.
            </summary>
            <param name="styleLine">The style line.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.DrawRenderHelper(Syncfusion.Windows.Forms.Diagram.Node,System.Drawing.Graphics)">
            <summary>
            Draws render helper
            </summary>
            <param name="renderHelper">The render helper.</param>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.DrawRenderHelper(Syncfusion.Windows.Forms.Diagram.Node,System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws render helper
            </summary>
            <param name="renderHelper">The render helper.</param>
            <param name="gfx">Graphics to draw on.</param>
            <param name="bounds">The bounds of render helper.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.UpdatePortRefreshRect(Syncfusion.Windows.Forms.Diagram.ConnectionPoint,System.Drawing.Rectangle@)">
            <summary>
            Updates the port refresh rectangle.
            </summary>
            <param name="port">The port.</param>
            <param name="rectPortFrame">The port frame.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.GetEndPointLocation(Syncfusion.Windows.Forms.Diagram.ConnectionPoint,System.Drawing.PointF)">
            <summary>
            Gets the end point location.
            </summary>
            <param name="port">The port.</param>
            <param name="ptLocation">The location.</param>
            <returns>The end point location.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.CheckConnectionPossibility(System.Drawing.PointF)">
            <summary>
            Checks for connection possibility.
            </summary>
            <param name="ptTest">The point.</param>
            <returns>The connection point</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.CheckConnectionCenterPort(System.Drawing.PointF)">
            <summary>
            Checks the for possibility connect to center port.
            </summary>
            <param name="ptPoint">The point.</param>
            <returns>The connection point</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.ApplyDecorator(Syncfusion.Windows.Forms.Diagram.Decorator,Syncfusion.Windows.Forms.Diagram.Decorator)">
            <summary>
            Applies the decorator to node.
            </summary>
            <param name="decorTool">The decorator tool.</param>
            <param name="decorNode">The decorator node.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.OutlineConnectionPoint(System.Drawing.Graphics,Syncfusion.Windows.Forms.Diagram.ConnectionPoint)">
            <summary>
            Outlines possible connection point.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
            <param name="port">ConnectionPoint to outline.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.SnapToPort(System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Snaps to port.
            </summary>
            <param name="ptPoint">The given point in client coordinates.</param>
            <param name="szOffset">The size offset.</param>
            <returns>The point that snapped to port.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.SnapToPort(System.Drawing.PointF,System.Drawing.SizeF,Syncfusion.Windows.Forms.Diagram.Node@)">
            <summary>
            Snaps to nearest port.
            </summary>
            <param name="ptPoint">The snapping point in client coordinates.</param>
            <param name="szOffset">moving entity bounding rectangle left-top point offset</param>
            <param name="nodeHit">The node hit.</param>
            <returns>Port position.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.DrawFrameAroundPort(System.Drawing.Graphics,Syncfusion.Windows.Forms.Diagram.ConnectionPoint)">
            <summary>
            Draws the frame around port.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.HighlightCenterPortContainer(System.Drawing.Graphics,Syncfusion.Windows.Forms.Diagram.ConnectionPoint)">
            <summary>
            Highlights the center port container.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
            <param name="port">The end point.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.Tool.GetNodeUnderEndPoint(System.Drawing.PointF)">
            <summary>
            Gets the node under end point.
            </summary>
            <param name="endPointLocation">The end point container.</param>
            <returns>The node under end point.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.CanRender">
            <summary>
            Gets or sets a value indicating whether this instance can render.
            </summary>
            <value>
            <c>true</c> if this instance can render; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.ToolWorkRect">
            <summary>
            Gets current work refresh rectangle.
            </summary>
            <remarks>
            Used primarily by controller for updating viewer.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.WorkRectPrev">
            <summary>
            Gets or sets the previous work refresh rectangle.
            </summary>
            <value>The previous work rectangle.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.WorkRect">
            <summary>
            Gets or sets the work refresh rectangle.
            </summary>
            <value>The work rectangle.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.RulerHeight">
            <summary>
            Gets the height of the ruler.
            </summary>
            <value>The height of the ruler.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.PrecedingTool">
            <summary>
            Gets the preceding tool.
            </summary>
            <value>The preceding tool.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.InAction">
            <summary>
            Gets or sets a value indicating whether Tool is currently in action.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.StartPoint">
            <summary>
            Gets or sets Tool Action start point in client coordinates.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.CurrentPoint">
            <summary>
            Gets or sets the current point in client coordinates.
            </summary>
            <value>The current point.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.Controller">
            <summary>
            Gets the Tool Controller.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.SingleActionTool">
            <summary>
            Gets or sets a value indicating whether tool lifetime should be single action.
            SingleActionTool restores preceding tool
            after performing its action.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.ToolCursor">
            <summary>
            Gets or sets Tool Cursor
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.ActionCursor">
            <summary>
            Gets or setsTool Action cursor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.CurrentToolCursor">
            <summary>
            Gets the property is used by controller to update current viewer cursor.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.Tool.CurrentCursor">
            <summary>
            Gets or sets helper property holding current cursor.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.UITool"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse down.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.Check(System.Drawing.Point)">
            <summary>
            Checks for possibility tool activate.
            </summary>
            <param name="ptCurrent">The pt current.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.Check(System.Drawing.PointF)">
            <summary>
            Checks for possibility tool activate.
            </summary>
            <param name="ptCurrent">The pt current.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivateControlPointMoveTools(System.Drawing.PointF)">
            <summary>
            Determines whether this control point move tool can be activate on specified point.
            </summary>
            <param name="ptCurrent">The current point.</param>
            <returns>
            <c>true</c> if this tool can be activate on specified current point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivateEndPointMoveTools(System.Drawing.PointF)">
            <summary>
            Determines whether this end point tool can be activate on specified point.
            </summary>
            <param name="ptCurrent">The current point.</param>
            <returns>
            <c>true</c> if this tool can be activate on specified current point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivateSegmentRelatingTools(System.Drawing.Point)">
            <summary>
            Determines whether this segments relative tool can be activate on given point.
            </summary>
            <param name="ptCurrent">The current point.</param>
            <returns>
            <c>true</c> if this segment relative tool can be activate on specified point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivateSegmentRelatingTools(System.Drawing.PointF)">
            <summary>
            Determines whether this segments relative tool can be activate on given point.
            </summary>
            <param name="ptCurrent">The current point.</param>
            <returns>
            <c>true</c> if this segment relative tool can be activate on specified point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivateVertexRelatingTools(System.Drawing.Point)">
            <summary>
            Determines whether this vertex add/remove tool can be activate on given point.
            </summary>
            <param name="ptCurrent">The current point.</param>
            <returns>
            <c>true</c> if this vertex add/remove tool can be activate on specified point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivateVertexRelatingTools(System.Drawing.PointF)">
            <summary>
            Determines whether this vertex add/remove tool can be activate on given point.
            </summary>
            <param name="ptCurrent">The current point.</param>
            <returns>
            <c>true</c> if this vertex add/remove tool can be activate on specified point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivateRotateTool(System.Drawing.Point)">
            <summary>
            Determines whether this rotate tool can be activate on given point.
            </summary>
            <param name="ptCurrent">The current point.</param>
            <returns>
            <c>true</c> if this rotate tool can be activate on specified point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivateRotateTool(System.Drawing.PointF)">
            <summary>
            Determines whether this rotate tool can be activate on given point.
            </summary>
            <param name="ptCurrent">The current point.</param>
            <returns>
            <c>true</c> if this rotate tool can be activate on specified point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivatePinMoveTool(System.Drawing.Point)">
            <summary>
            Determines whether this pin move tool can be activate on given point.
            </summary>
            <param name="ptCurrent">The current point.</param>
            <returns>
            <c>true</c> if this pin move tool can be activate on specified point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivatePinMoveTool(System.Drawing.PointF)">
            <summary>
            Determines whether this pin move tool can be activate on given point.
            </summary>
            <param name="ptCurrent">The current point.</param>
            <returns>
            <c>true</c> if this pin move tool can be activate on specified point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivateLineSegmentTool(Syncfusion.Windows.Forms.Diagram.PathNode,System.Drawing.PointF)">
            <summary>
            Determines whether this line segment tool can be activate on given point.
            </summary>
            <param name="nodeHit">The node under mouse.</param>
            <param name="ptLocation">The current point.</param>
            <returns>
            <c>true</c> if this segment tool can be activate on specified point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivateVertexInsertCommand(Syncfusion.Windows.Forms.Diagram.PathNode,System.Drawing.PointF)">
            <summary>
            Determines whether this vertex insert command can be activated with specified node hit.
            </summary>
            <param name="nodeHit">The node hit.</param>
            <param name="ptTesting">The point testing.</param>
            <returns>
            <c>true</c> if this vertex insert command can activate with specified node hit; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivateVertexDeleteCommand(Syncfusion.Windows.Forms.Diagram.PathNode)">
            <summary>
            Determines whether this vertex delete command can be activated with specified node hit.
            </summary>
            <param name="nodeHit">The node hit.</param>
            <returns>
            <c>true</c> if this vertex delete command can activate with specified node hit; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivateVertexMoveTool(Syncfusion.Windows.Forms.Diagram.PathNode,System.Drawing.PointF)">
            <summary>
            Determines whether this vertex move tool can be activate on on specified nodeHit.
            </summary>
            <param name="nodeHit">The node hit.</param>
            <returns>
            <c>true</c> if this vertex move tool tool can be activate on specified nodeHit; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivateMoveTool(System.Drawing.PointF)">
            <summary>
            Determines whether this move tool can be activate on on specified nodeHit.
            </summary>
            <param name="ptMouseLocation">The current mouse location.</param>
            <returns>
            <c>true</c> if this move tool tool can be activate on specified nodeHit; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivateResizeTool(System.Drawing.Point)">
            <summary>
            Determines whether this resize tool can be activate on on specified nodeHit.
            </summary>
            <param name="ptCurrent">The current mouse location.</param>
            <returns>
            <c>true</c> if this resize tool tool can be activate on specified nodeHit; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CanActivateResizeTool(System.Drawing.PointF)">
            <summary>
            Determines whether this resize tool can be activate on on specified nodeHit.
            </summary>
            <param name="ptCurrent">The current mouse location.</param>
            <returns>
            <c>true</c> if this resize tool tool can be activate on specified nodeHit; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.IsVertexEditMode(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Determines whether this node in vertex edit mode.
            </summary>
            <param name="node">The node.</param>
            <returns>
            <c>true</c> if return true node in vertex edit mode; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.PerformHandleMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Performs the pin move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.PerformLineSegmentMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Performs the line segment move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.PerformResize(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Activate ResizeTool and process its MouseDown.
            </summary>
            <param name="evtArgs">Event args</param>
            <returns>The tool to resize.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.PerformMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Activate MoveTool and process its MouseDown.
            </summary>
            <param name="evtArgs">Event args</param>
            <returns>true, if move.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.PerformRotate(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Performs the rotate.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The rotate tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.PerformPinMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Performs the pin move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.PerformVertexMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Performs the vertex move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.GetCursor(Syncfusion.Windows.Forms.Diagram.BoxPosition,Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Gets the cursor.
            </summary>
            <param name="handlePos">The handle position.</param>
            <param name="node">The node.</param>
            <returns>The cursor.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.CleanUp">
            <summary>
            Deactivate tools and reset all tool changes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.InsertVertex(System.Drawing.Point)">
            <summary>
            Inserts the vertex.
            </summary>
            <param name="ptCurrent">The pt current.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.UITool.DeleteVertex">
            <summary>
            Deletes the vertex.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.UITool.ToolToActivate">
            <summary>
            Gets or sets the tool to activate.
            </summary>
            <value>The tool to activate.</value>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.LineBaseTool.m_portHeadPossConn">
            <summary>
            ConnectionPoint to which Head EndPoint could be connected.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.LineBaseTool.m_portTailPossConn">
            <summary>
            ConnectionPoint to which Tail EndPoint could be connected.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.LineBaseTool.m_decorHead">
            <summary>
            Head Decorator applied to created node.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.LineBaseTool.m_decorTail">
            <summary>
            Tail Decorator applied to created node.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.LineBaseTool.m_rectHeadPC">
            <summary>
            Head endpoint possible connection port bounding frame.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.LineBaseTool.m_rectTailPC">
            <summary>
            Tail endpoint possible connection port bounding frame.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineBaseTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.LineBaseTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineBaseTool.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the line shape to specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineBaseTool.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse down event.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineBaseTool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move event.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineBaseTool.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse up event.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineBaseTool.CheckConnectionPossibility(System.Drawing.PointF,System.Boolean@,System.Boolean)">
            <summary>
            Checks for connection possibility.
            </summary>
            <param name="ptTest">The point.</param>
            <param name="canConnectWithPort">true, if the port can accept connection</param>
            <returns>The connection point</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineBaseTool.CreateNode(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Creates the line shape node.
            </summary>
            <param name="ptStart">The start point.</param>
            <param name="ptEnd">The end point.</param>
            <returns>The node.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineBaseTool.SetDecorator(Syncfusion.Windows.Forms.Diagram.LineBase)">
            <summary>
            Sets the decorator for given line node.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.LineBaseTool.HeadPossibleConnection">
            <summary>
            Gets or sets the head possible connection.
            </summary>
            <value>The head possible connection.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.LineBaseTool.TailPossibleConnection">
            <summary>
            Gets or sets the tail possible connection.
            </summary>
            <value>The tail possible connection.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.LineBaseTool.RenderringHelper">
            <summary>
            Gets the rendering  helper.
            </summary>
            <value>The rendering  helper.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.LineBaseTool.HeadDecorator">
            <summary>
            Gets or sets Head Decorator applied to created node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.LineBaseTool.TailDecorator">
            <summary>
            Gets or sets Tail Decorator applied to created node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DirectedLineConnectorTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.DirectedLineConnectorTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DirectedLineConnectorTool.CreateNode(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Creates the line shape node.
            </summary>
            <param name="ptStart">The start point.</param>
            <param name="ptEnd">The end point.</param>
            <returns>The node.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.DirectedLineLinkTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.DirectedLineLinkTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.LinkTool">
            <summary>
            Link Tool.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.LineConnectorTool">
            <summary>
            Line Connector Tool is used to connect nodes in a straight line.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineConnectorTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.LineConnectorTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineConnectorTool.CreateNode(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Creates the line shape node.
            </summary>
            <param name="ptStart">The start point.</param>
            <param name="ptEnd">The end point.</param>
            <returns>The node.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LinkTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.LinkTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.LineLinkTool">
            <summary>
            Line link tool.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineLinkTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.LineLinkTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.OrthogonalLinkTool">
            <summary>
            Orthogonal link tool.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.OrthogonalConnectorTool">
            <summary>
            Orthogonal Connector Tool is used to connect nodes in an orthogonal manner 
            by providing its start point and end point.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.OrthogonalConnectorTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.OrthogonalConnectorTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.OrthogonalConnectorTool.CreateNode(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Creates the line shape node.
            </summary>
            <param name="ptStart">The start point.</param>
            <param name="ptEnd">The end point.</param>
            <returns>The orthogonal line connector</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.OrthogonalLinkTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.OrthogonalLinkTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.ArcTool">
            <summary>
            Arc Tool
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.SplineTool">
            <summary>
            Interactive tool for drawing arcs.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.PolyLineBase">
            <summary>
            Poly line base class
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.PolyLineBase.c_nMIN_NODE_POINTS">
            <summary>
            Defines minimum points length 
            needed to successfully create Polyline derived node.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.PolyLineBase.m_pts">
            <summary>
            Array of Points whisch defines 
            polyline derived node's shape
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.PolyLineBase.m_decorHead">
            <summary>
            Head Decorator applied to created node.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.PolyLineBase.m_decorTail">
            <summary>
            Tail Decorator applied to created node.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.PolyLineBase"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse up.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The poly line tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.ProcessDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the double click.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.Abort">
            <summary>
            Aborts tool actions.
            </summary>
            <returns>The tool to abort.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.OnOriginChanged(Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs)">
            <summary>
            Raise the origin changed event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.UpdateHelperNode">
            <summary>
            Update the move action.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.GetLastPathPointPosition">
            <summary>
            Get the last path point position in model coordinates.
            </summary>
            <returns>Point in model coordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.CreatePath(System.Drawing.PointF[])">
            <summary>
            Creates Node's GraphicsPath from given points.
            </summary>
            <param name="pts">points to create path from</param>
            <returns>path created from given points</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.CreateNode(System.Drawing.PointF[])">
            <summary>
            Creates Polyline derived node.
            </summary>
            <param name="pts">points to create polyline derived node from.</param>
            <returns>The node</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.CanCompleteAction(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Determines whether this can complete action.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>
            <c>true</c> if this tool can complete action the specified arguments; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.CompleteAction(System.Drawing.PointF[])">
            <summary>
            Completes Tool Action.
            Creates specific node and inserts it into document.
            </summary>
            <param name="ptsShape">points to create polyline derived node from</param>
            <returns>The node.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.ApplyDecorator(Syncfusion.Windows.Forms.Diagram.Decorator,Syncfusion.Windows.Forms.Diagram.Decorator)">
            <summary>
            Copy Tool Decorator settings to created node's Decorator.
            </summary>
            <param name="decorTool">Decorator to copy settings from</param>
            <param name="decorNode">Decorator to copy settings to</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.SetDecorator(Syncfusion.Windows.Forms.Diagram.LineBase)">
            <summary>
            Copies Tool Decorators settings to created node's decorators.
            </summary>
            <param name="lineBase">Poly line base</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.UpdateWorkRect">
            <summary>
            Updates the work rect.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.AddPoint">
            <summary>
            Adds CurrentPoint to array of points
            defining polyline derived node's shape.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineBase.CheckConnectionPossibility(System.Drawing.PointF,System.Boolean@,System.Boolean)">
            <summary>
            Checks for connection possibility.
            </summary>
            <param name="ptTest">The point.</param>
            <param name="canConnectWithPort">true, if the port can accept connection</param>
            <returns>The connection point</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PolyLineBase.HeadDecorator">
            <summary>
            Gets or sets Head Decorator applied to created node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PolyLineBase.TailDecorator">
            <summary>
            Gets or sets Tail Decorator applied to created node.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PolyLineBase.RenderingHelper">
            <summary>
            Gets helper node used to render tool state.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PolyLineBase.Points">
            <summary>
            Gets or sets the points.
            </summary>
            <value>The points.</value>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SplineTool.m_portHeadPossConn">
            <summary>
            ConnectionPoint to which Head EndPoint could be connected.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SplineTool.m_portTailPossConn">
            <summary>
            ConnectionPoint to which Tail EndPoint could be connected.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SplineTool.m_rectHeadPC">
            <summary>
            Head endpoint possible connection port bounding frame.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SplineTool.m_rectTailPC">
            <summary>
            Tail endpoint possible connection port bounding frame.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SplineTool.m_headPossConn">
            <summary>
            ConnectionPoint to which Head EndPoint could be connected.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SplineTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.SplineTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SplineTool.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse down event.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SplineTool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SplineTool.GetLastPathPointPosition">
            <summary>
            Get the last path point position in model coordinates.
            </summary>
            <returns>Point in model coordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SplineTool.CanCompleteAction(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Determines whether this can complete action.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>
            <c>true</c> if this tool can complete action the specified arguments; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SplineTool.CompleteAction(System.Drawing.PointF[])">
            <summary>
            Completes Tool Action.
            Creates specific node and inserts it into document.
            </summary>
            <param name="ptsShape">points to create polyline derived node from</param>
            <returns>The node.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SplineTool.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SplineTool.CreateNode(System.Drawing.PointF[])">
            <summary>
            Creates Polyline derived node.
            </summary>
            <param name="pts">points to create polyline derived node from.</param>
            <returns>The arc node</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SplineTool.CreatePath(System.Drawing.PointF[])">
            <summary>
            Creates Node's GraphicsPath from given points.
            </summary>
            <param name="pts">points to create path from</param>
            <returns>path created from given points</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SplineTool.HeadPossibleConnection">
            <summary>
            Gets or sets the head possible connection.
            </summary>
            <value>The head possible connection.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SplineTool.TailPossibleConnection">
            <summary>
            Gets or sets the tail possible connection.
            </summary>
            <value>The tail possible connection.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ArcTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.ArcTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.ConnectionPointTool">
            <summary>
            Interactive tool for inserting and deleting Connection Point(Port) on a node.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.ConnectionPoint"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ConnectionPointTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.ConnectionPointTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ConnectionPointTool.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse down.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The connection point tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ConnectionPointTool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The connection point tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ConnectionPointTool.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse up.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The connection point tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ConnectionPointTool.UpdatePortCursor(System.Drawing.PointF)">
            <summary>
            Updates the tool cursor
            </summary>
            <param name="ptCur">Current mouse postion</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ConnectionPointTool.ConnectionPoint">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.Windows.Forms.Diagram.ConnectionPointTool.ConnectionPoint"/> to be added on a node.
            </summary>
            <value>The connection point.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.InsertNodeTool">
            <summary>
            Interactive tool for inserting nodes into a diagram.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.InsertNodeTool"/>
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RectangleToolBase">
            <summary>
            Base class for tools that draw tracking rectangles.
            </summary>
            <remarks>
            <para>
            This class provides a base implementation for tools that require the
            user to draw a rectangle. When a mouse down event is received, the
            point at which the event occurred becomes the first point in the
            rectangle. As the mouse moves, the rectangle is tracked.
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RectangleToolBase.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RectangleToolBase"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RectangleToolBase.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse down.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The rectangle tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RectangleToolBase.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The rectangle tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RectangleToolBase.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse up.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The rectangle tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RectangleToolBase.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RectangleToolBase.CreateNode(System.Drawing.RectangleF)">
            <summary>
            Creates the node from given rectangle base.
            </summary>
            <param name="rectBounding">The bounding rectangle.</param>
            <returns>The rectangle node.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RectangleToolBase.ActionComplete(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Method used to perform additional actions after node is inserted into document
            ( start TextEditor after Text node is inserted into document for example )
            </summary>
            <param name="nodeInserted">node inserted into document</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RectangleToolBase.CreateNodeBoundingRect">
            <summary>
            Get node boundiong rectangle in model coordinates.
            </summary>
            <returns>Bounding rectangle for new node.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RectangleToolBase.RenderingHelper">
            <summary>
            Gets the rendering helper node created from original.
            </summary>
            <value>The rendering helper.</value>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.InsertNodeTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.InsertNodeTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.InsertNodeTool.CreateNode(System.Drawing.RectangleF)">
            <summary>
            Creates the node from given rectangle base.
            </summary>
            <param name="rectBounding">The bounding rectangle.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.InsertNodeTool.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse up.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The rectangle tool.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.LineTool">
            <summary>
            Line Tool is used to draw straight line with start and end point.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.LineTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineTool.CreateNode(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Creates the line shape node.
            </summary>
            <param name="ptStart">The start point.</param>
            <param name="ptEnd">The end point.</param>
            <returns>The node.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.OrthogonalLineTool">
            <summary>
            Interactive tool for drawing orthogonal lines.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.OrthogonalLineTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.OrthogonalLineTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.OrthogonalLineTool.CreateNode(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Creates the line shape node.
            </summary>
            <param name="ptStart">The start point.</param>
            <param name="ptEnd">The end point.</param>
            <returns>The line shape node.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.OrgLineConnectorTool">
            <summary>
            OrgLineConnector tool is used to connect nodes in an org line shaped manner 
            by providing its start point and end point.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.OrgLineConnectorTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.OrgLineConnectorTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.OrgLineConnectorTool.CreateNode(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Creates the line shape node.
            </summary>
            <param name="ptStart">The start point.</param>
            <param name="ptEnd">The end point.</param>
            <returns>The z shaped connector</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.PencilBase">
            <summary>
            Base class for free-hand drawing.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PencilBase.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            when mouse move draw points.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The pencil tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PencilBase.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            When mouse up stop draw.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The pencil tool</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PencilBase.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            when mouse down start drawing.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The pencil tool</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PencilBase.CompleteAction(System.Drawing.PointF[])">
            <summary>
            Called when the paint is completed.
            </summary>
            <param name="ptsShape">points to create polyline derived node from</param>
            <returns>The pencil tool</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PencilBase.CreateNode(System.Drawing.PointF[])">
            <summary>
            Create the Node for painted line.
            </summary>
            <param name="pts">points to create polyline derived node from.</param>
            <returns>The line base.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PencilBase.CreatePath(System.Drawing.PointF[])">
            <summary>
            Draw the graphics path for particular points.
            </summary>
            <param name="pts">points to create path from</param>
            <returns>path created from given points</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PencilBase.UpdateHelperNodeValue">
            <summary>
            Updates the painted points into diagram
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PencilBase.OnOriginChanged(Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs)">
            <summary>
            When called origin Changed.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PencilBase.AddPoint(System.Drawing.PointF)">
            <summary>
            When mouse move points added.
            </summary>
            <param name="newPoint">The new point.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.PencilTool">
            <summary>
            Interactive tool for free-hand drawing.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PencilTool.Draw(System.Drawing.Graphics)">
            <summary>
            Draw the Specified range of Points into Line.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool">
            <summary>
            Interactive tool for drawing polyline connector.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.PolyLineConnector"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool.m_portHeadPossConn">
            <summary>
            ConnectionPoint to which Head EndPoint could be connected.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool.m_portTailPossConn">
            <summary>
            ConnectionPoint to which Tail EndPoint could be connected.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool.m_rectHeadPC">
            <summary>
            Head endpoint possible connection port bounding frame.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool.m_rectTailPC">
            <summary>
            Tail endpoint possible connection port bounding frame.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse down event.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool.GetLastPathPointPosition">
            <summary>
            Get the last path point position in model coordinates.
            </summary>
            <returns>Point in model coordinates.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool.CanCompleteAction(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Determines whether this can complete action.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>
            <c>true</c> if this tool can complete action the specified arguments; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool.CompleteAction(System.Drawing.PointF[])">
            <summary>
            Completes Tool Action.
            Creates specific node and inserts it into document.
            </summary>
            <param name="ptsShape">points to create polyline derived node from</param>
            <returns>The node.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool.CreatePath(System.Drawing.PointF[])">
            <summary>
            Creates Node's GraphicsPath from given points.
            </summary>
            <param name="pts">points to create path from</param>
            <returns>path created from given points</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool.CreateNode(System.Drawing.PointF[])">
            <summary>
            Creates Polyline derived node.
            </summary>
            <param name="pts">points to create polyline derived node from.</param>
            <returns>The node</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool.HeadPossibleConnection">
            <summary>
            Gets or sets the head possible connection.
            </summary>
            <value>The head possible connection.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PolyLineConnectorTool.TailPossibleConnection">
            <summary>
            Gets or sets the tail possible connection.
            </summary>
            <value>The tail possible connection.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.LineSegmentTool">
            <summary>
            Interactive tool for moving the segments of a line.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.LineSegmentTool.m_szMouseOffset">
            <summary>
            Offset from UpperLeftPoint to mouse.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.LineSegmentTool.m_nodePath">
            <summary>
            Path node which line segment is being moved.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.LineSegmentTool.m_renderingHelper">
            <summary>
            Cloned path node used to render tool state.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.LineSegmentTool.m_nLineSegIdx">
            <summary>
            index of segment in current moveble line member.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.LineSegmentTool.m_ptPrevious">
            <summary>
            offset moveble segment in line member.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineSegmentTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController,Syncfusion.Windows.Forms.Diagram.Tool,Syncfusion.Windows.Forms.Diagram.PathNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.LineSegmentTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="toolPreceding">The tool preceding.</param>
            <param name="nodePath">The node path.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineSegmentTool.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineSegmentTool.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Start segment move action
            </summary>
            <param name="evtArgs">mouse event arg</param>
            <returns>base tools</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineSegmentTool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            On Move segment
            </summary>
            <param name="evtArgs">mouse event arg</param>
            <returns>base tools</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineSegmentTool.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            End segment move action
            </summary>
            <param name="evtArgs">mouse event arg</param>
            <returns>previous tool</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineSegmentTool.OnOriginChanged(Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs)">
            <summary>
            Raise the origin changed event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineSegmentTool.CanMove">
            <summary>
            Determines whether this segment  can move.
            </summary>
            <returns>
            <c>true</c> if this segment can move; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineSegmentTool.GetMoveOffset(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Get the move offset.
            </summary>
            <param name="ptEnd">The end point position.</param>
            <param name="ptStart">The start point position.</param>
            <returns>Size of the offset.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineSegmentTool.DisconnectEndPoint(Syncfusion.Windows.Forms.Diagram.PathNode,System.Int32)">
            <summary>
            Disconnect the Line segment end point
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.LineSegmentTool.UpdateHelperNode">
            <summary>
            Update helper node state.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.HandleMoveTool">
            <summary>
            Inherits from Tool class. Used for moving node handles: Control point, EndPoint etc.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController,Syncfusion.Windows.Forms.Diagram.Tool,Syncfusion.Windows.Forms.Diagram.PathNode,Syncfusion.Windows.Forms.Diagram.IHandle)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.HandleMoveTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="toolPrevious">The tool previous.</param>
            <param name="nodeHandleOwner">The node handle owner.</param>
            <param name="handleMoving">The handle moving.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse down.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The move tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The move tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse up.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The move tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.OnOriginChanged(Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs)">
            <summary>
            Raise the origin changed event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.UpdateHelperNode">
            <summary>
            Update helper node state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.CanMoveHandle">
            <summary>
            Determines whether this instance can move the specified offset.
            </summary>
            <returns>
            <c>true</c> if this instance can move the specified offset; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.CheckConnectionPossibility">
            <summary>
            Checks for connection possibility.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.CheckConnectionPossibility(System.Drawing.PointF,System.Boolean@)">
            <summary>
            Checks for connection possibility.
            </summary>
            <param name="ptTest">The point.</param>
            <param name="canConnectWithPort">true, if the port can accept connection</param>
            <returns>The connection point</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.GetPortUnderEndPoint(Syncfusion.Windows.Forms.Diagram.EndPoint)">
            <summary>
            Gets the port under end point.
            </summary>
            <param name="endPoint">The end point.</param>
            <returns>The connection point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.CheckConnectionCenterPortInternal(System.Drawing.PointF)">
            <summary>
            Checks the for possibility connect to center port.
            </summary>
            <param name="ptPoint">Point to check.</param>
            <returns>The connection point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.DisconectEndPoints">
            <summary>
            Disconects the end points.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.ReconnectEndPoint">
            <summary>
            Reconnects the end points.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.GetCurrentPoint(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Gets the current mouse point.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The point.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.RenderHelper">
            <summary>
            Gets the rendering helper node.
            </summary>
            <value>The rendering helper.</value>
            <remarks>
            Node clone of current node moving for tracking.
            </remarks>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.LastMousePosition">
            <summary>
            Gets or sets the last mouse position.
            </summary>
            <value>The last mouse position.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.HandleMoveTool.MovingHandle">
            <summary>
            Gets or sets the moving handle.
            </summary>
            <value>The moving handle.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.MoveTool">
            <summary>
            Interactive tool for moving nodes on a diagram.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.MoveTool.c_fSCROLL_MARGIN">
            <summary>
            Determine mouse scroll area.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.MoveTool.c_fSCROLL_SPEED">
            <summary>
            Determine speed of scrolling.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.MoveTool.c_bSELECTION_CIRCLE">
            <summary>
            Indicate way of selection in update selection on mouse up.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.MoveTool.c_fDRAG_COPY_OFFSET">
            <summary>
            Defaut offset to clone moved nodes with Ctrl key.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.MoveTool.m_hashCtrl">
            <summary>
            Storage for control node hosting control's snapshots.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.MoveTool.m_rectHeadPC">
            <summary>
            Head endpoint possible connection port bounding frame.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.MoveTool.m_rectTailPC">
            <summary>
            Tail endpoint possible connection port bounding frame.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.MoveTool.m_currentOffset">
            <summary>
            Offset of current mouse position from the original 
            mouse position in client coordinates.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.MoveTool.m_szMouseOffset">
            <summary>
            Offset from upper left position to mouse position.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController,Syncfusion.Windows.Forms.Diagram.Tool,Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.MoveTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="toolPrevious">The tool previous.</param>
            <param name="nodeAdded">The node added.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.DeactivateTool">
            <summary>
            Deactivates the tool.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.Abort">
            <summary>
            Aborts tool actions.
            </summary>
            <returns>The tool to abort.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse down.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse up.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.ProcessDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the double click.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.OnOriginChanged(Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs)">
            <summary>
            Raise the origin changed event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.HighlightPorts(System.Drawing.Graphics)">
            <summary>
            Highlight the ports if end point are over.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.TryEnhanceRendering">
            <summary>
            If there are more than 7 nodes to render during MoveTool rendering
            render moveing nodes to bitmap in order to enhance MoveTool rendering
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.UpdatePortRefreshRect(Syncfusion.Windows.Forms.Diagram.ConnectionPoint,System.Drawing.Rectangle@)">
            <summary>
            Update the port refresh rect.
            </summary>
            <param name="port">The port.</param>
            <param name="rectPortFrame">The rect port frame.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.UpdateWorkRect">
            <summary>
            Update the work rect.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.UpdateRendererLocation(System.Drawing.SizeF)">
            <summary>
            Updates the render helper's location
            </summary>
            <param name="offset">offset to update the renderer</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.CanMove">
            <summary>
            Checks whether move command can be performed.
            </summary>
            <returns>true, if can move.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.MoveNodes">
            <summary>
            Move the nodes to current offset.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.MoveNodes(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Move the selected nodes
            </summary>         
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.CloneMoveNodes(Syncfusion.Windows.Forms.Diagram.NodeCollection)">
            <summary>
            Clones the move nodes.
            </summary>
            <param name="nodesMoving">Nodes collection to clone.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.UpdateMoveOffset(Syncfusion.Windows.Forms.Diagram.Node,System.Drawing.SizeF)">
            <summary>
            Updates the move offset.
            </summary>
            <param name="nodeMoving">The moving node.</param>
            <param name="szMovingOffset">The offset.</param>
            <returns>The size of the offset.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.GetCurrentOffset">
            <summary>
            Get move offset with origin offsets in client coordinates.
            </summary>
            <returns>Current move offset with origin offsets.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.UpdateMouseOffset(System.Drawing.PointF)">
            <summary>
            Updates the mouse offset.
            </summary>
            <param name="ptCur">The current mouse position.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.GetGroupChildren(Syncfusion.Windows.Forms.Diagram.ICompositeNode)">
            <summary>
            Get the group children collection.
            </summary>
            <param name="nodeComposite">The node composite.</param>
            <returns>Gtoup children.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.UpdateSelection(System.Boolean)">
            <summary>
            Updates the selection list on mouse down.
            </summary>
            <param name="bOverway">if set to <c>true</c> node selected 
            from start to end and back, <b>false</b> node seleted only from start to end.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.GetSelectedNode(Syncfusion.Windows.Forms.Diagram.Node,System.Boolean)">
            <summary>
            Get node to select from founded alternative selections.
            </summary>
            <param name="selectNode">The select node.</param>
            <param name="bOverway">if set to <c>true</c> overway.</param>
            <returns>The selected node</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.CheckParentContains(Syncfusion.Windows.Forms.Diagram.NodeCollection,Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Check if node parents contains in list.
            </summary>
            <param name="lstSelected">The list to check contains.</param>
            <param name="selected">The node to check.</param>
            <returns>true, if node is contained in the parent.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.CheckChildContains(Syncfusion.Windows.Forms.Diagram.NodeCollection,Syncfusion.Windows.Forms.Diagram.ICompositeNode)">
            <summary>
            Check if composite node contains any child in collection.
            </summary>
            <param name="lstSelected">The collection to check.</param>
            <param name="composite">The composite node.</param>
            <returns><b>True</b> if any child in collection conatin composite node.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.CalcMoveOffset(System.Drawing.Drawing2D.Matrix,Syncfusion.Windows.Forms.Diagram.Node,System.Drawing.SizeF)">
            <summary>
            Moves the nodes.
            </summary>
            <param name="mtxTemp">The matrix.</param>
            <param name="nodeMoving">The moving node.</param>
            <param name="szOffsetCur">The offset size.</param>
            <returns>The size of the offset</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.GetAllowedNodes(Syncfusion.Windows.Forms.Diagram.NodeCollection)">
            <summary>
            Returns a collection of nodes that are allowed to move.
            </summary>
            <param name="nodesIn">Nodes to test.</param>
            <returns>Collection of nodes that can move.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.CheckConnectionPossibility(System.Drawing.SizeF)">
            <summary>
            Checks for connection possibility.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.GetPortUnderEndPoint(Syncfusion.Windows.Forms.Diagram.EndPoint)">
            <summary>
            Gets the port under end point.
            </summary>
            <param name="endPoint">The end point.</param>
            <returns>The port at the end point.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.CheckConnectionCenterPort(System.Drawing.SizeF)">
            <summary>
            Checks the for possibility connect to center port.
            </summary>
            <returns>true, if connection can be made to center port.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.Connect">
            <summary>
            If Moving node is only one and it is IEndPointContainer-> connect its endpoints.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.Disconnect">
            <summary>
            If Moving node is only one and it is IEndPointContainer-> disconnect its endpoints.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.RestoreConnections(Syncfusion.Windows.Forms.Diagram.Node,Syncfusion.Windows.Forms.Diagram.NodeCollection)">
            <summary>
            Restores the connections as original node.
            </summary>
            <param name="originalNode">The original node.</param>
            <param name="clonedNodes">The cloned node.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.MoveTool.FindNodeByFullName(Syncfusion.Windows.Forms.Diagram.Node,Syncfusion.Windows.Forms.Diagram.NodeCollection)">
            <summary>
            Find node by unique full name in cloned collection.
            </summary>
            <param name="node">The original node.</param>
            <param name="nodes">The cloned nodes collection.</param>
            <returns>The node having the given full name.</returns>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.MoveTool.NodesToMove">
            <summary>
            Gets node collection to move on mouse up.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.MoveTool.Snapshots">
            <summary>
            Gets the snapshots hashtable where key is control node and value - image cache.
            </summary>
            <value>The snapshots.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.MoveTool.Moved">
            <summary>
            Gets a value indicating whether move tool
            has moved nodes it is operating with.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.MoveTool.WorkSize">
            <summary>
            Gets the cache size of the work area.
            !! Getting from viewer control only one's.
            </summary>
            <value>The size of the work.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.MoveTool.DragCopyOffset">
            <summary>
            Gets or sets offset to clone moved node with using Ctrl key.
            </summary>
            <value>The drag copy offset.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.PinPointMoveTool">
            <summary>
            The Tool used to move the Pinpoint.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.PinPointMoveTool.m_nodePinOwner">
            <summary>
            Node which PinPoint is being moved.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PinPointMoveTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController,Syncfusion.Windows.Forms.Diagram.Tool,Syncfusion.Windows.Forms.Diagram.INode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.PinPointMoveTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="toolPrevious">The previous tool.</param>
            <param name="node">The node.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PinPointMoveTool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The move tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PinPointMoveTool.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse up.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The move tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PinPointMoveTool.CanMove">
            <summary>
            Checks whether pin point move can be performed.
            </summary>
            <returns>value indicating whether pin point can be moved</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PinPointMoveTool.UpdatePinOffset">
            <summary>
            Updates moving pin point container node's pin point offset.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PinPointMoveTool.UpdatePinPoint">
            <summary>
            Updates moving pin point container node's pin point location.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.VertexMoveTool">
            <summary>
            Vertext Move Tool.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.VertexMoveTool.m_renderingHelper">
            <summary>
            Helper node used to render current tool state.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.VertexMoveTool.m_nodeVertexContainer">
            <summary>
            Original node whose vertex is being moved.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.VertexMoveTool.m_nMovingVertexIndex">
            <summary>
            Moving vertex index.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.VertexMoveTool.m_ptLastMousePosition">
            <summary>
            Previous mouse position.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.VertexMoveTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController,Syncfusion.Windows.Forms.Diagram.Tool,Syncfusion.Windows.Forms.Diagram.PathNode,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.VertexMoveTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="toolPreceding">The tool preceding.</param>
            <param name="nodeVertexContainer">The node vertex container.</param>
            <param name="movingVertexIndex">Index of the moving vertex.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.VertexMoveTool.EventSink_OriginChanged(Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs)">
            <summary>
            Events the sink origin changed.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.VertexMoveTool.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.VertexMoveTool.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse down.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The vertext move tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.VertexMoveTool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The vertext move tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.VertexMoveTool.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse up.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The vertext move tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.VertexMoveTool.CanMoveVertex">
            <summary>
            Determines whether this active node vertex can move vertex.
            </summary>
            <returns>
            <c>true</c> if this active node vertex  can move vertex; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.VertexMoveTool.UpdateHelperNode">
            <summary>
            Update node state to mouse offset.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.VertexMoveTool.RenderHelper">
            <summary>
            Gets the render helper created from original node.
            </summary>
            <value>The render helper.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.VertexMoveTool.LastMousePosition">
            <summary>
            Gets or sets the last mouse position.
            </summary>
            <value>The last mouse position.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.PanTool">
            <summary>
            Interactive tool for panning (scrolling) the view of a diagram.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Diagram.View.Origin"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PanTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.PanTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PanTool.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse down.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The pan tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PanTool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The pan tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PanTool.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse up.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The pan tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PanTool.ProcessDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the double click.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The pan tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PanTool.ActivateTool">
            <summary>
            Activates the tool.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PanTool.UpdateOrigin(System.Double,System.Double)">
            <summary>
            Update origin offset.
            </summary>
            <param name="dMouseX">The mouse position by X axis.</param>
            <param name="dMouseY">The mouse position by Y axis.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.PanTool.ViewOrigin">
            <summary>
            Gets or sets the view origin.
            </summary>
            <value>The view origin.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.BezierTool">
            <summary>
            Bezier Tool.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.BezierTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.BezierTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.BezierTool.CreateNode(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Creates the line shape node.
            </summary>
            <param name="ptStart">The start point.</param>
            <param name="ptEnd">The end point.</param>
            <returns>The arc node</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.ClosedCurveTool">
            <summary>
            Interactive tool for drawing closed curves.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.ClosedCurveNode"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ClosedCurveTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.ClosedCurveTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ClosedCurveTool.CreatePath(System.Drawing.PointF[])">
            <summary>
            Creates Node's GraphicsPath from given points.
            </summary>
            <param name="pts">points to create path from</param>
            <returns>path created from given points</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ClosedCurveTool.CreateNode(System.Drawing.PointF[])">
            <summary>
            Creates Polyline derived node.
            </summary>
            <param name="pts">points to create polyline derived node from.</param>
            <returns>The closed curve node.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.CurveTool">
            <summary>
            Interactive tool for drawing curves.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.CurveNode"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.CurveTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.CurveTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.CurveTool.CreateNode(System.Drawing.PointF[])">
            <summary>
            Creates Polyline derived node.
            </summary>
            <param name="pts">points to create polyline derived node from.</param>
            <returns>The curve tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.CurveTool.CreatePath(System.Drawing.PointF[])">
            <summary>
            Creates Node's GraphicsPath from given points.
            </summary>
            <param name="pts">points to create path from</param>
            <returns>path created from given points</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.PolygonTool">
            <summary>
            Interactive tool for drawing polygons.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Polygon"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolygonTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.PolygonTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolygonTool.CreateNode(System.Drawing.PointF[])">
            <summary>
            Creates Polyline derived node.
            </summary>
            <param name="pts">points to create polyline derived node from.</param>
            <returns>The polygon node.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolygonTool.CreatePath(System.Drawing.PointF[])">
            <summary>
            Creates Node's GraphicsPath from given points.
            </summary>
            <param name="pts">points to create path from</param>
            <returns>path created from given points</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.PolyLineTool">
            <summary>
            Interactive tool for drawing polylines.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.PolyLineTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineTool.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineTool.CreateNode(System.Drawing.PointF[])">
            <summary>
            Creates Polyline derived node.
            </summary>
            <param name="pts">points to create polyline derived node from.</param>
            <returns>The node</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.PolyLineTool.CreatePath(System.Drawing.PointF[])">
            <summary>
            Creates Node's GraphicsPath from given points.
            </summary>
            <param name="pts">points to create path from</param>
            <returns>path created from given points</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.BitmapTool">
            <summary>
            Interactive tool for inserting bitmaps into a diagram.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.BitmapNode"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.BitmapTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.BitmapTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.BitmapTool.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.BitmapTool.CreateNode(System.Drawing.RectangleF)">
            <summary>
            Creates the node from given rectangle base.
            </summary>
            <param name="rectBounding">The bounding rectangle.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.BitmapTool.CreateNode(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Creates the node from image.
            </summary>
            <param name="imgToInsert">The image to insert.</param>
            <param name="rectNodeBounds">The node bounds.</param>
            <returns>The node.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.EllipseTool">
            <summary>
            Interactive tool for drawing ellipses.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.RectangleToolBase"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Ellipse"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.EllipseTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.EllipseTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.EllipseTool.CreateNode(System.Drawing.RectangleF)">
            <summary>
            Complete the action.
            </summary>
            <param name="rectBounding">The rectangle bounding.</param>
            <returns>The node.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.SemiCircleTool">
            <summary>
            Interactive tool for drawing semi-circles.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.RectangleToolBase"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.SemiCircle"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SemiCircleTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.SemiCircleTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SemiCircleTool.CreateNode(System.Drawing.RectangleF)">
            <summary>
            Complete the action.
            </summary>
            <param name="rectBounding">The rectangle bounding.</param>
            <returns>The node.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SemiCircleTool.SetFillStyle(Syncfusion.Windows.Forms.Diagram.FilledPath)">
            <summary>
            Set the fill style to the new node.
            </summary>      
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SemiCircleTool.SemiCircleType">
            <summary>
            Gets or sets a value to specifies the semi-circle type.
            </summary>     
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SemiCircleTool.FillStyle">
            <summary>
            Gets the properties used to fill the interior of regions.
            </summary>
            <value>The fill style.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RectangleTool">
            <summary>
            Interactive tool for drawing rectangles.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.RectangleToolBase"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Rectangle"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RectangleTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RectangleTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RectangleTool.CreateNode(System.Drawing.RectangleF)">
            <summary>
            Creates the node from given rectangle base.
            </summary>
            <param name="rectBounding">The bounding rectangle.</param>
            <returns>The rectangle node.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RichTextTool">
            <summary>
            Interactive tool for inserting and editing rich text objects.
            </summary>
            <remarks>
            <para>
            This tool manages the insertion of new rich text nodes into a diagram
            and editing of existing rich text nodes. Activating this tool causes it
            to track mouse down, mouse move, and mouse up events and draw a
            tracking rectangle. The rectangle drawn is used as the bounds of
            a new rich text node, which is inserted into the diagram using an
            InsertNodesCmd.
            </para>
            <para>
            This tool also listens for double-click events. If the user double
            clicks on a rich text node, this tool opens a text editor allowing the
            user to edit the text.
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.RectangleToolBase"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.RichTextNode"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.RichTextTool.m_strDefaultText">
            <summary>
            Default text value assigned to new rich text nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RichTextTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RichTextTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RichTextTool.CreateNode(System.Drawing.RectangleF)">
            <summary>
            Creates the node from given rectangle base.
            </summary>
            <param name="rectBounding">The bounding rectangle.</param>
            <returns>The rich text node.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RichTextTool.ActionComplete(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Method used to perform additional actions after node is inserted into document
            ( start TextEditor after Text node is inserted into document for example )
            </summary>
            <param name="nodeInserted">node inserted into document</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RichTextTool.DefaultText">
            <summary>
            Gets or sets default text value assigned to new text nodes created by this tool.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RoundRectTool">
            <summary>
            Round Rectangle Tool.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RoundRectTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RoundRectTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RoundRectTool.CreateNode(System.Drawing.RectangleF)">
            <summary>
            Creates the node from given rectangle base.
            </summary>
            <param name="rectBounding">The bounding rectangle.</param>
            <returns>The round rectangle node.</returns>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.TextTool">
            <summary>
            Interactive tool for inserting text nodes into a diagram and editing
            existing text nodes.
            </summary>
            <remarks>
            <para>
            This tool manages the insertion of new text nodes into a diagram
            and editing of existing text nodes. Activating this tool causes it
            to track mouse down, mouse move, and mouse up events and draw a
            tracking rectangle. The rectangle drawn is used as the bounds of
            a new text node, which is inserted into the diagram using an
            InsertNodesCmd.
            </para>
            <para>
            This tool also listens for double-click events. If the user double
            clicks on a text node, this tool opens a text editor allowing the
            user to edit the text.
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.TextNode"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.TextTool.m_strDefaultText">
            <summary>
            Default text value assigned to new rich text nodes.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.TextTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextTool.CreateNode(System.Drawing.RectangleF)">
            <summary>
            Creates the node from given rectangle base.
            </summary>
            <param name="rectBounding">The bounding rectangle.</param>
            <returns>The rectangle node.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.TextTool.ActionComplete(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Method used to perform additional actions after node is inserted into document
            </summary>
            <param name="nodeInserted">node inserted into document</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.TextTool.DefaultText">
            <summary>
            Gets or sets default text value assigned to new text nodes created by this tool.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.ResizeTool">
            <summary>
            Interactive tool for resizing nodes.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.ResizeTool.m_hashCtrl">
            <summary>
            Storage for control node hosting control's snapshots.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.ResizeTool.m_fSizeFactor">
            <summary>
            Size factor as width/height.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.ResizeTool.m_nodeRenderingHelper">
            <summary>
            Resizing node clone used while rendering.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController,Syncfusion.Windows.Forms.Diagram.Node,Syncfusion.Windows.Forms.Diagram.BoxPosition,Syncfusion.Windows.Forms.Diagram.Tool)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.ResizeTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="nodeResizing">The node resizing.</param>
            <param name="handleHit">The handle hit.</param>
            <param name="toolPrevious">The tool previous.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.ActivateTool">
            <summary>
            Activate resize tool.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.DeactivateTool">
            <summary>
            Deactivates the tool.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.Abort">
            <summary>
            Deactivate tool.
            </summary>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.Draw(System.Drawing.Graphics)">
            <summary>
            Draw resizing helper node.
            </summary>
            <param name="gfx">The graphics.</param>
            <remarks>
            Draw clone of resizing node with applying alter style.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse down.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse up.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.DrawRenderHelper(Syncfusion.Windows.Forms.Diagram.Node,System.Drawing.Graphics)">
            <summary>
            Draws render helper
            </summary>
            <param name="renderHelper">The render helper.</param>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.OnOriginChanged(Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs)">
            <summary>
            Raise the origin changed event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.AppendHandleFlip(Syncfusion.Windows.Forms.Diagram.BoxPosition@,Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Appends node flip to handle.
            </summary>
            <param name="handle">Box position</param>
            <param name="node">The node</param>
            <remarks>
            Flip BoxPosition handle horizontally and/or vertically using node property flip.
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.GetResizeCursors(Syncfusion.Windows.Forms.Diagram.BoxPosition,Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Get Cursor for resize with node rotate.
            </summary>
            <param name="handlePos">Get current position</param>
            <param name="node">The node.</param>
            <returns>Box position</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.GetIndexHandle(Syncfusion.Windows.Forms.Diagram.BoxPosition,Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Gets the index handle.
            </summary>
            <param name="handle">The handle.</param>
            <param name="node">The node.</param>
            <returns>The index handle.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.FlipValue(Syncfusion.Windows.Forms.Diagram.Node,System.Int32@)">
            <summary>
            Flips the value by node flip flags.
            </summary>
            <param name="node">The node.</param>
            <param name="valueToUpdate">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.FlipValue(Syncfusion.Windows.Forms.Diagram.Node,System.Single@)">
            <summary>
            Flips the value by node flip flags.
            </summary>
            <param name="node">The node.</param>
            <param name="valueToUpdate">The value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.UpdateSizeAndPinPosition(Syncfusion.Windows.Forms.Diagram.Node,Syncfusion.Windows.Forms.Diagram.BoxPosition,System.Drawing.SizeF)">
            <summary>
            Updates size and pin point position.
            </summary>
            <param name="node">The node.</param>
            <param name="posHandle">The position handle.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.CanResize">
            <summary>
            Determines whether this instance can resize the specified node hit.
            </summary>
            <returns>
            <c>true</c> if this instance can resize the specified node hit; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.CanResize(System.Drawing.SizeF)">
            <summary>
            Determines whether this instance can resize the specified node hit.
            </summary>
            <param name="szOffset">The size offset.</param>
            <returns>
            <c>true</c> if this instance can resize the specified node hit; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.GetMouseOffset(System.Drawing.PointF,Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Gets the mouse point offset.
            </summary>
            <param name="ptPoint">The pt point.</param>
            <param name="node">The node.</param>
            <returns>The point offset.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.UpdateHelperNode">
            <summary>
            Update helper node state.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.UpdateWorkRect">
            <summary>
            Update workRect bounds.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.AssignAspectRatio(System.Drawing.SizeF@)">
            <summary>
            Assigns the aspect ratio.
            </summary>
            <param name="szOffset">The size offset.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.ClipResize(System.Drawing.SizeF)">
            <summary>
            Clips the resize.
            </summary>
            <param name="szOffset">The offset.</param>
            <returns>The size.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.TransformMousePoint(System.Drawing.PointF)">
            <summary>
            Transforms the mouse point to node coordinate.
            </summary>
            <param name="ptPoint">The point.</param>
            <returns>The point to node coordinate</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.UpdateSize(Syncfusion.Windows.Forms.Diagram.Node,System.Drawing.SizeF,System.Drawing.SizeF)">
            <summary>
            Updates node's size.
            </summary>
            <param name="node">The node.</param>
            <param name="offset">The offset.</param>
            <param name="szUnitIndependentSize">Size in unit independent.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.CalculateSizeOffset(System.Drawing.PointF)">
            <summary>
            Calculate size change and new rectangle.
            </summary>
            <param name="ptCurrentPoint">The current point.</param>
            <returns>The size of the offset.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.CalculateMouseOffset(System.Drawing.PointF)">
            <summary>
            Calculate the mouse offset
            </summary>
            <param name="ptCurrentPoint">The current point.</param>
            <returns>The size of the mouse offset.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.GetRotationAngle(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Gets the rotation angle.
            </summary>
            <param name="node">The node.</param>
            <returns>The rotation angle.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.GetNodeAspectRatio(Syncfusion.Windows.Forms.Diagram.Node)">
            <summary>
            Gets the node aspect ratio.
            </summary>
            <param name="node">The node.</param>
            <returns>true, if get node aspect ratio</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.ConsiderHandleHit(System.Drawing.PointF@,System.Drawing.SizeF@)">
            <summary>
            Considers the handle hit.
            </summary>
            <param name="ptLocation">The point location.</param>
            <param name="szChange">The size change.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.ResizeOnTopCenterHandle(System.Drawing.PointF@,System.Drawing.SizeF@)">
            <summary>
            Resizes the on top center handle.
            </summary>
            <param name="ptLocation">The location.</param>
            <param name="szChange">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.ResizeOnTopRightHandle(System.Drawing.PointF@,System.Drawing.SizeF@)">
            <summary>
            Resizes the on top right handle.
            </summary>
            <param name="ptLocation">The location.</param>
            <param name="szChange">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.ResizeOnMiddleRightHandle(System.Drawing.SizeF@)">
            <summary>
            Resizes the on middle right handle.
            </summary>
            <param name="szChange">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.ResizeOnBottomCenterHandle(System.Drawing.SizeF@)">
            <summary>
            Resizes the on bottom center handle.
            </summary>
            <param name="szChange">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.ResizeOnBottomLeftHandle(System.Drawing.PointF@,System.Drawing.SizeF@)">
            <summary>
            Resizes the on bottom left handle.
            </summary>
            <param name="ptLocation">The location.</param>
            <param name="szChange">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.ResizeOnMiddleLeftHandle(System.Drawing.PointF@,System.Drawing.SizeF@)">
            <summary>
            Resizes the on middle left handle.
            </summary>
            <param name="ptLocation">The location.</param>
            <param name="szChange">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.ResizeOnTopLeftHandle(System.Drawing.PointF@,System.Drawing.SizeF@)">
            <summary>
            Resizes the on top left handle.
            </summary>
            <param name="ptLocation">The location.</param>
            <param name="szChange">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.ResizeOnBottomRightHandle(System.Drawing.SizeF@)">
            <summary>
            Resizes the on bottom right handle.
            </summary>
            <param name="szChange">The size.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ResizeTool.CompleteAction">
            <summary>
            Completes the tool action.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ResizeTool.Snapshots">
            <summary>
            Gets the snapshots hash where key is node and value - caches image.
            </summary>
            <value>The snapshots.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ResizeTool.RenderHelper">
            <summary>
            Gets the rendering helper node.
            </summary>
            <value>The rendering helper.</value>
            <remarks>
            Node clone of current node resizing for tracking.
            </remarks>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.RotateTool">
            <summary>
            Interactive tool for rotating nodes.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.RotateTool.m_hashCtrl">
            <summary>
            Storage for control node hosting control's snapshots.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.RotateTool.m_ptNodePinLocation">
            <summary>
            Node pin position in model coordinates.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RotateTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RotateTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RotateTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController,Syncfusion.Windows.Forms.Diagram.Node,Syncfusion.Windows.Forms.Diagram.Tool)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.RotateTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="nodeRotating">The rotating node.</param>
            <param name="toolPreceding">The preceding tool.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RotateTool.Abort">
            <summary>
            Aborts tool actions.
            </summary>
            <returns>The tool to abort.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RotateTool.DeactivateTool">
            <summary>
            Deactivates the tool.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RotateTool.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RotateTool.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse down.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RotateTool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RotateTool.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse up.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RotateTool.OnOriginChanged(Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs)">
            <summary>
            Raise the origin changed event.
            </summary>
            <param name="evtArgs">The <see cref="T:Syncfusion.Windows.Forms.Diagram.ViewOriginEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RotateTool.CanRotate">
            <summary>
            Determines whether this active can rotate.
            </summary>
            <returns>
            <c>true</c> if this active node can rotate; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.RotateTool.UpdateHelperNode">
            <summary>
            Update helper node state.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RotateTool.Snapshots">
            <summary>
            Gets the snapshots hash where key is node and value - caches image.
            </summary>
            <value>The snapshots.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RotateTool.RenderHelper">
            <summary>
            Gets the render helper created from original node.
            </summary>
            <value>The render helper.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.RotateTool.CurrentAngle">
            <summary>
            Gets the rotated current angle.
            </summary>
            <value>The current angle.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.IScrollEventReceiver">
            <summary>
            Interface implemented by tools that want to receive scroll events.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            </remarks>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.IScrollEventReceiver.VerticalScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Called when a vertical scroll event occurs.
            </summary>
            <param name="e">Scroll event arguments.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.IScrollEventReceiver.HorizontalScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Called when a horizontal scroll event occurs.
            </summary>
            <param name="e">Scroll event arguments.</param>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.SelectMode">
            <summary>
            Specifies the selection mode used by the <see cref="T:Syncfusion.Windows.Forms.Diagram.SelectTool"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SelectMode.Containing">
            <summary>
            Specifies that objects fully enveloped by the tracking rectangle will be selected by the tool.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SelectMode.Intersecting">
            <summary>
            Specifies that objects intersecting the tracking rectangle will be selected by the tool.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.SelectTool">
            <summary>
            Interactive tool for changing the current selected nodes in a diagram.
            </summary>
            <remarks>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Diagram.Controller.SelectionList"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SelectTool.m_selectionMode">
            <summary>
            Defines selection mode.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SelectTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.SelectTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SelectTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController,Syncfusion.Windows.Forms.Diagram.SelectMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.SelectTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
            <param name="selectMode">The select mode.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SelectTool.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SelectTool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SelectTool.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse up.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.SelectTool.ExcludeNonSelectableNodes(Syncfusion.Windows.Forms.Diagram.NodeCollection)">
            <summary>
            Excludes non selectable nodes
            </summary>
            <param name="nodesHit">NodeCollection to filter for non selelctable nodes</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SelectTool.SelectMode">
            <summary>
            Gets or sets the selection mode for the tool.
            </summary>
            <value>A <see cref="T:Syncfusion.Windows.Forms.Diagram.SelectMode"/> value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.SelectTool.TrackingStyle">
            <summary>
            Gets or sets the tracking style.
            </summary>
            <value>The tracking style.</value>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.SingleActionTools">
            <summary>
            Single action tools.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SingleActionTools.None">
            <summary>
            No tool.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SingleActionTools.MoveTool">
            <summary>
            Move tool
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SingleActionTools.ResizeTool">
            <summary>
            Resize tool
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SingleActionTools.RotateTool">
            <summary>
            Rotate tool
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SingleActionTools.MoveLinkPortTool">
            <summary>
            Move link port tool.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SingleActionTools.VertexMoveTool">
            <summary>
            Vertex move tool
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SingleActionTools.PinPointMoveTool">
            <summary>
            Pinpoint move tool.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SingleActionTools.ControlPointMoveTool">
            <summary>
            Control point move tool.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SingleActionTools.VertexDeleteAction">
            <summary>
            Vertex delete action
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SingleActionTools.VertexInsertAction">
            <summary>
            Vertex insert action
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.SingleActionTools.LineSegmentTool">
            <summary>
            Line segment tool
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.ZoomTool">
            <summary>
            Interactive tool for zooming in and out of a diagram's view.
            </summary>
            <remarks>
            <para>
            Left click increases magnification by 25%. Right click decreases
            magnification by 25%.
            </para>
            <seealso cref="T:Syncfusion.Windows.Forms.Diagram.Tool"/>
            <seealso cref="P:Syncfusion.Windows.Forms.Diagram.View.Magnification"/>
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.ZoomTool.c_fZOOM_TEXT_HEIGHT">
            <summary>
            Magnification text size near cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.ZoomTool.c_strZOOM_TEXT_FAMILY">
            <summary>
            Magnification font family near cursor.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.ZoomTool.c_fDEF_MAGNIFICATION">
            <summary>
            Default magnification value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ZoomTool.#ctor(Syncfusion.Windows.Forms.Diagram.DiagramController)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Forms.Diagram.ZoomTool"/> class.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ZoomTool.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ZoomTool.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse down.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ZoomTool.ProcessMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse move.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ZoomTool.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Processes the mouse up.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ZoomTool.ProcessKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Processes the key down.
            </summary>
            <param name="evtArgs">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
            <returns>The tool.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ZoomTool.ZoomFrame(System.Drawing.Rectangle)">
            <summary>
            Fit viewport to given frame.
            </summary>
            <param name="rcZoom">The zoom frame.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ZoomTool.GetZoomCursor(System.Single)">
            <summary>
            Gets the cursor with magnification value.
            </summary>
            <param name="magnification">The magnification.</param>
            <returns>The zoom cursor.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.ZoomTool.SetCenterMagnification(System.Single)">
            <summary>
            Set magnification with align.
            </summary>
            <param name="magnification">The new magnification value.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ZoomTool.ZoomIncrement">
            <summary>
            Gets or sets the amount to zoom each time the mouse is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ZoomTool.MinimumMagnification">
            <summary>
            Gets or sets minimum magnification value the tool will zoom to.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.ZoomTool.MaximumMagnification">
            <summary>
            Gets or sets maximum magnification value the tool will zoom to.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.ZoomParameters">
            <summary>
             Get/Set The Zoom parameters such as zoom increment, focus point used in the diagram.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Forms.Diagram.FocusManager">
            <summary>
            Class who's goal is to manage focus related actions.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.FocusManager.m_view">
            <summary>
            Parent to draw on.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.FocusManager.m_nFocusedNode">
            <summary>
            Focused node.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Forms.Diagram.FocusManager.m_rectWorkRect">
            <summary>
            Focus manager work rect.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FocusManager.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the specified graphics.
            </summary>
            <param name="gfx">Graphics to draw on.</param>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FocusManager.MoveFocusBackward">
            <summary>
            Moves focus forward.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FocusManager.MoveFocusForward">
            <summary>
            Moves focus backward.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Forms.Diagram.FocusManager.UpdateServiceReferences(Syncfusion.Windows.Forms.Diagram.IServiceReferenceProvider)">
            <summary>
            Updates the service references.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.FocusManager.WorkRect">
            <summary>
            Gets the working area.
            </summary>
            <value>The working area.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.FocusManager.SortedNodes">
            <summary>
            Gets the sorted nodes.
            </summary>
            <value>The sorted nodes.</value>
        </member>
        <member name="P:Syncfusion.Windows.Forms.Diagram.FocusManager.FocusedNode">
            <summary>
            Gets or sets the focused node.
            </summary>
            <value>The focused node.</value>
        </member>
    </members>
</doc>
